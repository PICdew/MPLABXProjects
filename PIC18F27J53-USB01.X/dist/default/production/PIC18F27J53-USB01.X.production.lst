

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Jan 11 10:54:29 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    17                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   116                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   117                           	dabs	1,0xD00,48,_BDT
   118                           	dabs	1,0xD38,8,_CtrlTrfData
   119                           	dabs	1,0xD30,8,_SetupPkt
   120  0000                     
   121                           	psect	idataBANK0
   122  01398E                     __pidataBANK0:
   123                           	opt stack 0
   124                           
   125                           ;initializer for I2C_LCD_SetCursor@F8685
   126  01398E  00                 	db	0
   127  01398F  40                 	db	64
   128                           
   129                           ;initializer for ST7032_cursor@F8640
   130  013990  00                 	db	0
   131  013991  40                 	db	64
   132                           
   133                           ;initializer for epoch_to_caltime@month_cache
   134  013992  01                 	db	1
   135                           
   136                           	psect	mediumconst
   137  00FE6C                     __pmediumconst:
   138                           	opt stack 0
   139  00FE6C  00                 	db	0
   140  00FE6D                     _dpowers:
   141                           	opt stack 0
   142  00FE6D  0001               	dw	1
   143  00FE6F  000A               	dw	10
   144  00FE71  0064               	dw	100
   145  00FE73  03E8               	dw	1000
   146  00FE75  2710               	dw	10000
   147  00FE77                     __end_of_dpowers:
   148                           	opt stack 0
   149  00FE77                     _USB_SD_Ptr:
   150                           	opt stack 0
   151  00FE77  58                 	db	low _sd000
   152  00FE78  FF                 	db	high _sd000
   153  00FE79  C2                 	db	low _sd001
   154  00FE7A  FE                 	db	high _sd001
   155  00FE7B  F6                 	db	low _sd002
   156  00FE7C  FE                 	db	high _sd002
   157  00FE7D                     __end_of_USB_SD_Ptr:
   158                           	opt stack 0
   159  00FE7D                     _USB_CD_Ptr:
   160                           	opt stack 0
   161  00FE7D  7F                 	db	low _configDescriptor1
   162  00FE7E  FE                 	db	high _configDescriptor1
   163  00FE7F                     __end_of_USB_CD_Ptr:
   164                           	opt stack 0
   165  00FE7F                     _configDescriptor1:
   166                           	opt stack 0
   167  00FE7F  09                 	db	9
   168  00FE80  02                 	db	2
   169  00FE81  43                 	db	67
   170  00FE82  00                 	db	0
   171  00FE83  02                 	db	2
   172  00FE84  01                 	db	1
   173  00FE85  00                 	db	0
   174  00FE86  C0                 	db	192
   175  00FE87  32                 	db	50
   176  00FE88  09                 	db	9
   177  00FE89  04                 	db	4
   178  00FE8A  00                 	db	0
   179  00FE8B  00                 	db	0
   180  00FE8C  01                 	db	1
   181  00FE8D  02                 	db	2
   182  00FE8E  02                 	db	2
   183  00FE8F  01                 	db	1
   184  00FE90  00                 	db	0
   185  00FE91  05                 	db	5
   186  00FE92  24                 	db	36
   187  00FE93  00                 	db	0
   188  00FE94  10                 	db	16
   189  00FE95  01                 	db	1
   190  00FE96  04                 	db	4
   191  00FE97  24                 	db	36
   192  00FE98  02                 	db	2
   193  00FE99  02                 	db	2
   194  00FE9A  05                 	db	5
   195  00FE9B  24                 	db	36
   196  00FE9C  06                 	db	6
   197  00FE9D  00                 	db	0
   198  00FE9E  01                 	db	1
   199  00FE9F  05                 	db	5
   200  00FEA0  24                 	db	36
   201  00FEA1  01                 	db	1
   202  00FEA2  00                 	db	0
   203  00FEA3  01                 	db	1
   204  00FEA4  07                 	db	7
   205  00FEA5  05                 	db	5
   206  00FEA6  81                 	db	129
   207  00FEA7  03                 	db	3
   208  00FEA8  08                 	db	8
   209  00FEA9  00                 	db	0
   210  00FEAA  02                 	db	2
   211  00FEAB  09                 	db	9
   212  00FEAC  04                 	db	4
   213  00FEAD  01                 	db	1
   214  00FEAE  00                 	db	0
   215  00FEAF  02                 	db	2
   216  00FEB0  0A                 	db	10
   217  00FEB1  00                 	db	0
   218  00FEB2  00                 	db	0
   219  00FEB3  00                 	db	0
   220  00FEB4  07                 	db	7
   221  00FEB5  05                 	db	5
   222  00FEB6  02                 	db	2
   223  00FEB7  02                 	db	2
   224  00FEB8  40                 	db	64
   225  00FEB9  00                 	db	0
   226  00FEBA  00                 	db	0
   227  00FEBB  07                 	db	7
   228  00FEBC  05                 	db	5
   229  00FEBD  82                 	db	130
   230  00FEBE  02                 	db	2
   231  00FEBF  40                 	db	64
   232  00FEC0  00                 	db	0
   233  00FEC1  00                 	db	0
   234  00FEC2                     __end_of_configDescriptor1:
   235                           	opt stack 0
   236  00FEC2                     _sd001:
   237                           	opt stack 0
   238  00FEC2  34                 	db	52
   239  00FEC3  03                 	db	3
   240  00FEC4  004D               	dw	77
   241  00FEC6  0069               	dw	105
   242  00FEC8  0063               	dw	99
   243  00FECA  0072               	dw	114
   244  00FECC  006F               	dw	111
   245  00FECE  0063               	dw	99
   246  00FED0  0068               	dw	104
   247  00FED2  0069               	dw	105
   248  00FED4  0070               	dw	112
   249  00FED6  0020               	dw	32
   250  00FED8  0054               	dw	84
   251  00FEDA  0065               	dw	101
   252  00FEDC  0063               	dw	99
   253  00FEDE  0068               	dw	104
   254  00FEE0  006E               	dw	110
   255  00FEE2  006F               	dw	111
   256  00FEE4  006C               	dw	108
   257  00FEE6  006F               	dw	111
   258  00FEE8  0067               	dw	103
   259  00FEEA  0079               	dw	121
   260  00FEEC  0020               	dw	32
   261  00FEEE  0049               	dw	73
   262  00FEF0  006E               	dw	110
   263  00FEF2  0063               	dw	99
   264  00FEF4  002E               	dw	46
   265  00FEF6                     __end_of_sd001:
   266                           	opt stack 0
   267  00FEF6                     _sd002:
   268                           	opt stack 0
   269  00FEF6  34                 	db	52
   270  00FEF7  03                 	db	3
   271  00FEF8  0043               	dw	67
   272  00FEFA  0044               	dw	68
   273  00FEFC  0043               	dw	67
   274  00FEFE  0020               	dw	32
   275  00FF00  0052               	dw	82
   276  00FF02  0053               	dw	83
   277  00FF04  002D               	dw	45
   278  00FF06  0032               	dw	50
   279  00FF08  0033               	dw	51
   280  00FF0A  0032               	dw	50
   281  00FF0C  0020               	dw	32
   282  00FF0E  0045               	dw	69
   283  00FF10  006D               	dw	109
   284  00FF12  0075               	dw	117
   285  00FF14  006C               	dw	108
   286  00FF16  0061               	dw	97
   287  00FF18  0074               	dw	116
   288  00FF1A  0069               	dw	105
   289  00FF1C  006F               	dw	111
   290  00FF1E  006E               	dw	110
   291  00FF20  0020               	dw	32
   292  00FF22  0044               	dw	68
   293  00FF24  0065               	dw	101
   294  00FF26  006D               	dw	109
   295  00FF28  006F               	dw	111
   296  00FF2A                     __end_of_sd002:
   297                           	opt stack 0
   298  00FF2A                     _weekday_3char:
   299                           	opt stack 0
   300  00FF2A  53                 	db	83
   301  00FF2B  55                 	db	85
   302  00FF2C  4E                 	db	78
   303  00FF2D  00                 	db	0
   304  00FF2E  4D                 	db	77
   305  00FF2F  4F                 	db	79
   306  00FF30  4E                 	db	78
   307  00FF31  00                 	db	0
   308  00FF32  54                 	db	84
   309  00FF33  55                 	db	85
   310  00FF34  45                 	db	69
   311  00FF35  00                 	db	0
   312  00FF36  57                 	db	87
   313  00FF37  45                 	db	69
   314  00FF38  44                 	db	68
   315  00FF39  00                 	db	0
   316  00FF3A  54                 	db	84
   317  00FF3B  48                 	db	72
   318  00FF3C  55                 	db	85
   319  00FF3D  00                 	db	0
   320  00FF3E  46                 	db	70
   321  00FF3F  52                 	db	82
   322  00FF40  49                 	db	73
   323  00FF41  00                 	db	0
   324  00FF42  53                 	db	83
   325  00FF43  41                 	db	65
   326  00FF44  54                 	db	84
   327  00FF45  00                 	db	0
   328  00FF46                     __end_of_weekday_3char:
   329                           	opt stack 0
   330  00FF46                     _device_dsc:
   331                           	opt stack 0
   332  00FF46  12                 	db	18
   333  00FF47  01                 	db	1
   334  00FF48  0200               	dw	512
   335  00FF4A  02                 	db	2
   336  00FF4B  00                 	db	0
   337  00FF4C  00                 	db	0
   338  00FF4D  08                 	db	8
   339  00FF4E  04D8               	dw	1240
   340  00FF50  000A               	dw	10
   341  00FF52  0100               	dw	256
   342  00FF54  01                 	db	1
   343  00FF55  02                 	db	2
   344  00FF56  00                 	db	0
   345  00FF57  01                 	db	1
   346  00FF58                     __end_of_device_dsc:
   347                           	opt stack 0
   348  00FF58                     _sd000:
   349                           	opt stack 0
   350  00FF58  04                 	db	4
   351  00FF59  03                 	db	3
   352  00FF5A  0409               	dw	1033
   353  00FF5C                     __end_of_sd000:
   354                           	opt stack 0
   355  0000                     _ANCON0	set	3912
   356  0000                     _ANCON1	set	3913
   357  0000                     _PADCFG1bits	set	3900
   358  0000                     _RTCCAL	set	3902
   359  0000                     _RTCCFGbits	set	3903
   360  0000                     _RTCVALH	set	3899
   361  0000                     _RTCVALL	set	3898
   362  0000                     _T5CONbits	set	3874
   363  0000                     _UADDR	set	3896
   364  0000                     _UCFG	set	3897
   365  0000                     _UEIE	set	3895
   366  0000                     _UEP0bits	set	3878
   367  0000                     _UIE	set	3894
   368  0000                     _UIEbits	set	3894
   369  0000                     _UEP0	set	3878
   370  0000                     _UEP1	set	3879
   371  0000                     _ADRES	set	4035
   372  0000                     _ADCON0bits	set	4034
   373  0000                     _ADCON1bits	set	4033
   374  0000                     _BAUDCON1bits	set	3966
   375  0000                     _CTMUCONH	set	4019
   376  0000                     _CTMUCONHbits	set	4019
   377  0000                     _CTMUCONL	set	4018
   378  0000                     _CTMUCONLbits	set	4018
   379  0000                     _CTMUICON	set	4017
   380  0000                     _EECON2	set	4007
   381  0000                     _INTCON2bits	set	4081
   382  0000                     _INTCONbits	set	4082
   383  0000                     _IPR1bits	set	3999
   384  0000                     _IPR2bits	set	4002
   385  0000                     _IPR5bits	set	3993
   386  0000                     _LATAbits	set	3977
   387  0000                     _LATBbits	set	3978
   388  0000                     _OSCCONbits	set	4051
   389  0000                     _OSCTUNEbits	set	3995
   390  0000                     _PIE1bits	set	3997
   391  0000                     _PIE2bits	set	4000
   392  0000                     _PIE5bits	set	3985
   393  0000                     _PIR1bits	set	3998
   394  0000                     _PIR2bits	set	4001
   395  0000                     _PIR5bits	set	3992
   396  0000                     _RCONbits	set	4048
   397  0000                     _RCREG1	set	4015
   398  0000                     _RCSTA1bits	set	4012
   399  0000                     _SPBRG1	set	4016
   400  0000                     _SPBRGH1	set	3967
   401  0000                     _SSP1ADD	set	4040
   402  0000                     _SSP1BUF	set	4041
   403  0000                     _SSP1CON1	set	4038
   404  0000                     _SSP1CON1bits	set	4038
   405  0000                     _SSP1CON2	set	4037
   406  0000                     _SSP1CON2bits	set	4037
   407  0000                     _SSP1STAT	set	4039
   408  0000                     _SSP1STATbits	set	4039
   409  0000                     _SSPBUF	set	4041
   410  0000                     _T0CONbits	set	4053
   411  0000                     _T1CONbits	set	4045
   412  0000                     _T3CONbits	set	3961
   413  0000                     _TMR1H	set	4047
   414  0000                     _TRISA	set	3986
   415  0000                     _TRISB	set	3987
   416  0000                     _TRISC	set	3988
   417  0000                     _TXREG1	set	4014
   418  0000                     _TXSTA1bits	set	4013
   419  0000                     _UCON	set	3941
   420  0000                     _UCONbits	set	3941
   421  0000                     _UEIR	set	3939
   422  0000                     _UIR	set	3938
   423  0000                     _UIRbits	set	3938
   424  0000                     _USTAT	set	3940
   425  0000                     _BCL1IF	set	32011
   426  0000                     _LATB2	set	31826
   427  0000                     _SSP1IF	set	31987
   428  00FF5C  09                 	db	9
   429  00FF5D  32                 	db	50	;'2'
   430  00FF5E  30                 	db	48	;'0'
   431  00FF5F  25                 	db	37
   432  00FF60  30                 	db	48	;'0'
   433  00FF61  32                 	db	50	;'2'
   434  00FF62  64                 	db	100	;'d'
   435  00FF63  2F                 	db	47
   436  00FF64  25                 	db	37
   437  00FF65  30                 	db	48	;'0'
   438  00FF66  32                 	db	50	;'2'
   439  00FF67  64                 	db	100	;'d'
   440  00FF68  2F                 	db	47
   441  00FF69  25                 	db	37
   442  00FF6A  30                 	db	48	;'0'
   443  00FF6B  32                 	db	50	;'2'
   444  00FF6C  64                 	db	100	;'d'
   445  00FF6D  28                 	db	40
   446  00FF6E  25                 	db	37
   447  00FF6F  73                 	db	115	;'s'
   448  00FF70  29                 	db	41
   449  00FF71  25                 	db	37
   450  00FF72  30                 	db	48	;'0'
   451  00FF73  32                 	db	50	;'2'
   452  00FF74  64                 	db	100	;'d'
   453  00FF75  3A                 	db	58	;':'
   454  00FF76  25                 	db	37
   455  00FF77  30                 	db	48	;'0'
   456  00FF78  32                 	db	50	;'2'
   457  00FF79  64                 	db	100	;'d'
   458  00FF7A  2D                 	db	45
   459  00FF7B  25                 	db	37
   460  00FF7C  30                 	db	48	;'0'
   461  00FF7D  32                 	db	50	;'2'
   462  00FF7E  64                 	db	100	;'d'
   463  00FF7F  0A                 	db	10
   464  00FF80  00                 	db	0
   465  00FF81  61                 	db	97	;'a'
   466  00FF82  64                 	db	100	;'d'
   467  00FF83  6A                 	db	106	;'j'
   468  00FF84  75                 	db	117	;'u'
   469  00FF85  73                 	db	115	;'s'
   470  00FF86  74                 	db	116	;'t'
   471  00FF87  5F                 	db	95	;'_'
   472  00FF88  74                 	db	116	;'t'
   473  00FF89  69                 	db	105	;'i'
   474  00FF8A  6D                 	db	109	;'m'
   475  00FF8B  65                 	db	101	;'e'
   476  00FF8C  00                 	db	0
   477  00FF8D  70                 	db	112	;'p'
   478  00FF8E  72                 	db	114	;'r'
   479  00FF8F  69                 	db	105	;'i'
   480  00FF90  6E                 	db	110	;'n'
   481  00FF91  74                 	db	116	;'t'
   482  00FF92  5F                 	db	95	;'_'
   483  00FF93  74                 	db	116	;'t'
   484  00FF94  69                 	db	105	;'i'
   485  00FF95  6D                 	db	109	;'m'
   486  00FF96  65                 	db	101	;'e'
   487  00FF97  00                 	db	0
   488  00FF98                     STR_41:
   489  00FF98  31                 	db	49	;'1'
   490  00FF99  38                 	db	56	;'8'
   491  00FF9A  46                 	db	70	;'F'
   492  00FF9B  32                 	db	50	;'2'
   493  00FF9C  37                 	db	55	;'7'
   494  00FF9D  4A                 	db	74	;'J'
   495  00FF9E  35                 	db	53	;'5'
   496  00FF9F  33                 	db	51	;'3'
   497  00FFA0  00                 	db	0
   498  00FFA1                     STR_42:
   499  00FFA1  55                 	db	85	;'U'
   500  00FFA2  53                 	db	83	;'S'
   501  00FFA3  42                 	db	66	;'B'
   502  00FFA4  20                 	db	32
   503  00FFA5  55                 	db	85	;'U'
   504  00FFA6  41                 	db	65	;'A'
   505  00FFA7  52                 	db	82	;'R'
   506  00FFA8  54                 	db	84	;'T'
   507  00FFA9  00                 	db	0
   508  00FFAA                     STR_15:
   509  00FFAA  20                 	db	32
   510  00FFAB  20                 	db	32
   511  00FFAC  20                 	db	32
   512  00FFAD  20                 	db	32
   513  00FFAE  20                 	db	32
   514  00FFAF  20                 	db	32
   515  00FFB0  20                 	db	32
   516  00FFB1  20                 	db	32
   517  00FFB2  00                 	db	0
   518  00FFB3  09                 	db	9
   519  00FFB4  65                 	db	101	;'e'
   520  00FFB5  72                 	db	114	;'r'
   521  00FFB6  72                 	db	114	;'r'
   522  00FFB7  6F                 	db	111	;'o'
   523  00FFB8  72                 	db	114	;'r'
   524  00FFB9  0A                 	db	10
   525  00FFBA  00                 	db	0
   526  00FFBB                     STR_43:
   527  00FFBB  28                 	db	40
   528  00FFBC  6E                 	db	110	;'n'
   529  00FFBD  75                 	db	117	;'u'
   530  00FFBE  6C                 	db	108	;'l'
   531  00FFBF  6C                 	db	108	;'l'
   532  00FFC0  29                 	db	41
   533  00FFC1  00                 	db	0
   534  00FFC2  73                 	db	115	;'s'
   535  00FFC3  65                 	db	101	;'e'
   536  00FFC4  63                 	db	99	;'c'
   537  00FFC5  6F                 	db	111	;'o'
   538  00FFC6  6E                 	db	110	;'n'
   539  00FFC7  64                 	db	100	;'d'
   540  00FFC8  00                 	db	0
   541  00FFC9  6D                 	db	109	;'m'
   542  00FFCA  69                 	db	105	;'i'
   543  00FFCB  6E                 	db	110	;'n'
   544  00FFCC  75                 	db	117	;'u'
   545  00FFCD  74                 	db	116	;'t'
   546  00FFCE  65                 	db	101	;'e'
   547  00FFCF  00                 	db	0
   548  00FFD0                     STR_32:
   549  00FFD0  6D                 	db	109	;'m'
   550  00FFD1  6F                 	db	111	;'o'
   551  00FFD2  6E                 	db	110	;'n'
   552  00FFD3  74                 	db	116	;'t'
   553  00FFD4  68                 	db	104	;'h'
   554  00FFD5  00                 	db	0
   555  00FFD6  79                 	db	121	;'y'
   556  00FFD7  65                 	db	101	;'e'
   557  00FFD8  61                 	db	97	;'a'
   558  00FFD9  72                 	db	114	;'r'
   559  00FFDA  00                 	db	0
   560  00FFDB  68                 	db	104	;'h'
   561  00FFDC  6F                 	db	111	;'o'
   562  00FFDD  75                 	db	117	;'u'
   563  00FFDE  72                 	db	114	;'r'
   564  00FFDF  00                 	db	0
   565  00FFE0                     STR_1:
   566  00FFE0  25                 	db	37
   567  00FFE1  30                 	db	48	;'0'
   568  00FFE2  32                 	db	50	;'2'
   569  00FFE3  64                 	db	100	;'d'
   570  00FFE4  00                 	db	0
   571  00FFE5                     STR_19:
   572  00FFE5  08                 	db	8
   573  00FFE6  20                 	db	32
   574  00FFE7  08                 	db	8
   575  00FFE8  00                 	db	0
   576  00FFE9                     STR_34:
   577  00FFE9  64                 	db	100	;'d'
   578  00FFEA  61                 	db	97	;'a'
   579  00FFEB  79                 	db	121	;'y'
   580  00FFEC  00                 	db	0
   581  00FFED                     STR_27:
   582  00FFED  61                 	db	97	;'a'
   583  00FFEE  74                 	db	116	;'t'
   584  00FFEF  00                 	db	0
   585  00FFF0  4D                 	db	77	;'M'
   586  00FFF1  00                 	db	0
   587  00FFF2  6D                 	db	109	;'m'
   588  00FFF3  00                 	db	0
   589  00FFF4  73                 	db	115	;'s'
   590  00FFF5  00                 	db	0
   591  00FFF6  28                 	db	40
   592  00FFF7  00                 	db	0
   593  00FFF8                     STR_9:
   594  00FFF8  2D                 	db	45
   595  00FFF9  00                 	db	0
   596  00FFFA                     STR_4:
   597  00FFFA  2F                 	db	47
   598  00FFFB  00                 	db	0
   599  00FFFC                     STR_7:
   600  00FFFC  3A                 	db	58	;':'
   601  00FFFD  00                 	db	0
   602  0000                     
   603                           ; #config settings
   604  00FFFE  00                 	db	0	; dummy byte at the end
   605  0000                     
   606                           	psect	cinit
   607  012BF2                     __pcinit:
   608                           	opt stack 0
   609  012BF2                     start_initialization:
   610                           	opt stack 0
   611  012BF2                     __initialization:
   612                           	opt stack 0
   613                           
   614                           ; Clear objects allocated to BIGRAMl (1000 bytes)
   615  012BF2  EE06  F0FA         	lfsr	0,__pbssBIGRAMl
   616  012BF6  EE13 F0E8          	lfsr	1,1000
   617  012BFA                     clear_0:
   618  012BFA  6AEE               	clrf	postinc0,c
   619  012BFC  50E5               	movf	postdec1,w,c
   620  012BFE  50E1               	movf	fsr1l,w,c
   621  012C00  E1FC               	bnz	clear_0
   622  012C02  50E2               	movf	fsr1h,w,c
   623  012C04  E1FA               	bnz	clear_0
   624                           
   625                           ; Clear objects allocated to BANK6 (250 bytes)
   626  012C06  EE06  F000         	lfsr	0,__pbssBANK6
   627  012C0A  0EFA               	movlw	250
   628  012C0C                     clear_1:
   629  012C0C  6AEE               	clrf	postinc0,c
   630  012C0E  06E8               	decf	wreg,f,c
   631  012C10  E1FD               	bnz	clear_1
   632                           
   633                           ; Clear objects allocated to BANK5 (250 bytes)
   634  012C12  EE05  F000         	lfsr	0,__pbssBANK5
   635  012C16  0EFA               	movlw	250
   636  012C18                     clear_2:
   637  012C18  6AEE               	clrf	postinc0,c
   638  012C1A  06E8               	decf	wreg,f,c
   639  012C1C  E1FD               	bnz	clear_2
   640                           
   641                           ; Clear objects allocated to BANK4 (200 bytes)
   642  012C1E  EE04  F000         	lfsr	0,__pbssBANK4
   643  012C22  0EC8               	movlw	200
   644  012C24                     clear_3:
   645  012C24  6AEE               	clrf	postinc0,c
   646  012C26  06E8               	decf	wreg,f,c
   647  012C28  E1FD               	bnz	clear_3
   648                           
   649                           ; Clear objects allocated to BANK3 (100 bytes)
   650  012C2A  EE03  F000         	lfsr	0,__pbssBANK3
   651  012C2E  0E64               	movlw	100
   652  012C30                     clear_4:
   653  012C30  6AEE               	clrf	postinc0,c
   654  012C32  06E8               	decf	wreg,f,c
   655  012C34  E1FD               	bnz	clear_4
   656                           
   657                           ; Clear objects allocated to BANK2 (192 bytes)
   658  012C36  EE02  F000         	lfsr	0,__pbssBANK2
   659  012C3A  0EC0               	movlw	192
   660  012C3C                     clear_5:
   661  012C3C  6AEE               	clrf	postinc0,c
   662  012C3E  06E8               	decf	wreg,f,c
   663  012C40  E1FD               	bnz	clear_5
   664                           
   665                           ; Clear objects allocated to BANK1 (245 bytes)
   666  012C42  EE01  F000         	lfsr	0,__pbssBANK1
   667  012C46  0EF5               	movlw	245
   668  012C48                     clear_6:
   669  012C48  6AEE               	clrf	postinc0,c
   670  012C4A  06E8               	decf	wreg,f,c
   671  012C4C  E1FD               	bnz	clear_6
   672                           
   673                           ; Clear objects allocated to BANK0 (55 bytes)
   674  012C4E  EE00  F09F         	lfsr	0,__pbssBANK0
   675  012C52  0E37               	movlw	55
   676  012C54                     clear_7:
   677  012C54  6AEE               	clrf	postinc0,c
   678  012C56  06E8               	decf	wreg,f,c
   679  012C58  E1FD               	bnz	clear_7
   680                           
   681                           ; Clear objects allocated to COMRAM (45 bytes)
   682  012C5A  EE00  F001         	lfsr	0,__pbssCOMRAM
   683  012C5E  0E2D               	movlw	45
   684  012C60                     clear_8:
   685  012C60  6AEE               	clrf	postinc0,c
   686  012C62  06E8               	decf	wreg,f,c
   687  012C64  E1FD               	bnz	clear_8
   688                           
   689                           ; Initialize objects allocated to BANK0 (5 bytes)
   690                           ; load TBLPTR registers with __pidataBANK0
   691  012C66  0E8E               	movlw	low __pidataBANK0
   692  012C68  6EF6               	movwf	tblptrl,c
   693  012C6A  0E39               	movlw	high __pidataBANK0
   694  012C6C  6EF7               	movwf	tblptrh,c
   695  012C6E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   696  012C70  6EF8               	movwf	tblptru,c
   697  012C72  EE00  F0D6         	lfsr	0,__pdataBANK0
   698  012C76  EE10 F005          	lfsr	1,5
   699  012C7A                     copy_data0:
   700  012C7A  0009               	tblrd		*+
   701  012C7C  CFF5 FFEE          	movff	tablat,postinc0
   702  012C80  50E5               	movf	postdec1,w,c
   703  012C82  50E1               	movf	fsr1l,w,c
   704  012C84  E1FA               	bnz	copy_data0
   705  012C86                     end_of_initialization:
   706                           	opt stack 0
   707  012C86                     __end_of__initialization:
   708                           	opt stack 0
   709  012C86  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   710  012C88  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   711  012C8A  0100               	movlb	0
   712  012C8C  EF02  F09C         	goto	_main	;jump to C main() function
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           postdec1	equ	0xFE5
   720                           fsr1h	equ	0xFE2
   721                           fsr1l	equ	0xFE1
   722                           
   723                           	psect	bssCOMRAM
   724  000001                     __pbssCOMRAM:
   725                           	opt stack 0
   726  000001                     _outPipes:
   727                           	opt stack 0
   728  000001                     	ds	9
   729  00000A                     _inPipes:
   730                           	opt stack 0
   731  00000A                     	ds	6
   732  000010                     _pBDTEntryIn:
   733                           	opt stack 0
   734  000010                     	ds	6
   735  000016                     _ep_data_in:
   736                           	opt stack 0
   737  000016                     	ds	3
   738  000019                     _pBDTEntryEP0OutCurrent:
   739                           	opt stack 0
   740  000019                     	ds	2
   741  00001B                     _pBDTEntryEP0OutNext:
   742                           	opt stack 0
   743  00001B                     	ds	2
   744  00001D                     ST7032_task@st7032_state:
   745                           	opt stack 0
   746  00001D                     	ds	1
   747  00001E                     _BothEP0OutUOWNsSet:
   748                           	opt stack 0
   749  00001E                     	ds	1
   750  00001F                     _I2C_sent_flag:
   751                           	opt stack 0
   752  00001F                     	ds	1
   753  000020                     _RemoteWakeup:
   754                           	opt stack 0
   755  000020                     	ds	1
   756  000021                     _USBDeferINDataStagePackets:
   757                           	opt stack 0
   758  000021                     	ds	1
   759  000022                     _USBDeferOUTDataStagePackets:
   760                           	opt stack 0
   761  000022                     	ds	1
   762  000023                     _USBDeferStatusStagePacket:
   763                           	opt stack 0
   764  000023                     	ds	1
   765  000024                     _USBDeviceState:
   766                           	opt stack 0
   767  000024                     	ds	1
   768  000025                     _USBStatusStageEnabledFlag1:
   769                           	opt stack 0
   770  000025                     	ds	1
   771  000026                     _USBStatusStageEnabledFlag2:
   772                           	opt stack 0
   773  000026                     	ds	1
   774  000027                     _USBStatusStageTimeoutCounter:
   775                           	opt stack 0
   776  000027                     	ds	1
   777  000028                     _cdc_trf_state:
   778                           	opt stack 0
   779  000028                     	ds	1
   780  000029                     _controlTransferState:
   781                           	opt stack 0
   782  000029                     	ds	1
   783  00002A                     _endpoint_number:
   784                           	opt stack 0
   785  00002A                     	ds	1
   786  00002B                     _shortPacketStatus:
   787                           	opt stack 0
   788  00002B                     	ds	1
   789  00002C                     _USBActiveConfiguration:
   790                           	opt stack 0
   791  00002C                     	ds	1
   792  00002D                     _USTATcopy:
   793                           	opt stack 0
   794  00002D                     	ds	1
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           postdec1	equ	0xFE5
   802                           fsr1h	equ	0xFE2
   803                           fsr1l	equ	0xFE1
   804                           
   805                           	psect	bssBANK0
   806  00009F                     __pbssBANK0:
   807                           	opt stack 0
   808  00009F                     _pBDTEntryOut:
   809                           	opt stack 0
   810  00009F                     	ds	6
   811  0000A5                     _ep_data_out:
   812                           	opt stack 0
   813  0000A5                     	ds	3
   814  0000A8                     _pCDCDst:
   815                           	opt stack 0
   816  0000A8                     	ds	3
   817  0000AB                     _pCDCSrc:
   818                           	opt stack 0
   819  0000AB                     	ds	3
   820  0000AE                     ST7032_task@wait:
   821                           	opt stack 0
   822  0000AE                     	ds	2
   823  0000B0                     _CDCDataInHandle:
   824                           	opt stack 0
   825  0000B0                     	ds	2
   826  0000B2                     _CDCDataOutHandle:
   827                           	opt stack 0
   828  0000B2                     	ds	2
   829  0000B4                     _pDst:
   830                           	opt stack 0
   831  0000B4                     	ds	2
   832  0000B6                     millis_timer@cnt:
   833                           	opt stack 0
   834  0000B6                     	ds	2
   835  0000B8                     RTCC_task@prev_halfsec:
   836                           	opt stack 0
   837  0000B8                     	ds	1
   838  0000B9                     _I2C_busy:
   839                           	opt stack 0
   840  0000B9                     	ds	1
   841  0000BA                     _I2C_cfct_flag:
   842                           	opt stack 0
   843  0000BA                     	ds	1
   844  0000BB                     _USBBusIsSuspended:
   845                           	opt stack 0
   846  0000BB                     	ds	1
   847  0000BC                     _cdc_mem_type:
   848                           	opt stack 0
   849  0000BC                     	ds	1
   850  0000BD                     _cdc_rx_len:
   851                           	opt stack 0
   852  0000BD                     	ds	1
   853  0000BE                     _cdc_tx_len:
   854                           	opt stack 0
   855  0000BE                     	ds	1
   856  0000BF                     _control_signal_bitmap:
   857                           	opt stack 0
   858  0000BF                     	ds	1
   859  0000C0                     _st7032_state:
   860                           	opt stack 0
   861  0000C0                     	ds	1
   862  0000C1                     _time_change_flag:
   863                           	opt stack 0
   864  0000C1                     	ds	1
   865  0000C2                     epoch_to_caltime@year_cache:
   866                           	opt stack 0
   867  0000C2                     	ds	1
   868  0000C3                     terminal_task@command_init:
   869                           	opt stack 0
   870  0000C3                     	ds	1
   871  0000C4                     _lcd_tx:
   872                           	opt stack 0
   873  0000C4                     	ds	8
   874  0000CC                     terminal_task@command:
   875                           	opt stack 0
   876  0000CC                     	ds	8
   877  0000D4                     _USBAlternateInterface:
   878                           	opt stack 0
   879  0000D4                     	ds	2
   880                           tblptru	equ	0xFF8
   881                           tblptrh	equ	0xFF7
   882                           tblptrl	equ	0xFF6
   883                           tablat	equ	0xFF5
   884                           postinc0	equ	0xFEE
   885                           wreg	equ	0xFE8
   886                           postdec1	equ	0xFE5
   887                           fsr1h	equ	0xFE2
   888                           fsr1l	equ	0xFE1
   889                           
   890                           	psect	dataBANK0
   891  0000D6                     __pdataBANK0:
   892                           	opt stack 0
   893  0000D6                     I2C_LCD_SetCursor@F8685:
   894                           	opt stack 0
   895  0000D6                     	ds	2
   896  0000D8                     ST7032_cursor@F8640:
   897                           	opt stack 0
   898  0000D8                     	ds	2
   899  0000DA                     epoch_to_caltime@month_cache:
   900                           	opt stack 0
   901  0000DA                     	ds	1
   902                           tblptru	equ	0xFF8
   903                           tblptrh	equ	0xFF7
   904                           tblptrl	equ	0xFF6
   905                           tablat	equ	0xFF5
   906                           postinc0	equ	0xFEE
   907                           wreg	equ	0xFE8
   908                           postdec1	equ	0xFE5
   909                           fsr1h	equ	0xFE2
   910                           fsr1l	equ	0xFE1
   911                           
   912                           	psect	bssBANK1
   913  000100                     __pbssBANK1:
   914                           	opt stack 0
   915  000100                     _cdc_notice:
   916                           	opt stack 0
   917  000100                     	ds	10
   918  00010A                     _BaudRateGen:
   919                           	opt stack 0
   920  00010A                     	ds	4
   921  00010E                     _ms:
   922                           	opt stack 0
   923  00010E                     	ds	4
   924  000112                     epoch_to_caltime@day_cache:
   925                           	opt stack 0
   926  000112                     	ds	2
   927  000114                     _cdc_data_rx:
   928                           	opt stack 0
   929  000114                     	ds	64
   930  000154                     terminal_task@op0:
   931                           	opt stack 0
   932  000154                     	ds	25
   933  00016D                     terminal_task@op1:
   934                           	opt stack 0
   935  00016D                     	ds	25
   936  000186                     terminal_task@op2:
   937                           	opt stack 0
   938  000186                     	ds	25
   939  00019F                     terminal_task@op3:
   940                           	opt stack 0
   941  00019F                     	ds	25
   942  0001B8                     _now:
   943                           	opt stack 0
   944  0001B8                     	ds	14
   945  0001C6                     _dummy_encapsulated_cmd_response:
   946                           	opt stack 0
   947  0001C6                     	ds	8
   948  0001CE                     _uart_rx:
   949                           	opt stack 0
   950  0001CE                     	ds	8
   951  0001D6                     _uart_tx:
   952                           	opt stack 0
   953  0001D6                     	ds	8
   954  0001DE                     _usb_rx:
   955                           	opt stack 0
   956  0001DE                     	ds	8
   957  0001E6                     _usb_tx:
   958                           	opt stack 0
   959  0001E6                     	ds	8
   960  0001EE                     _line_coding:
   961                           	opt stack 0
   962  0001EE                     	ds	7
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           postdec1	equ	0xFE5
   970                           fsr1h	equ	0xFE2
   971                           fsr1l	equ	0xFE1
   972                           
   973                           	psect	bssBANK2
   974  000200                     __pbssBANK2:
   975                           	opt stack 0
   976  000200                     _cdc_data_tx:
   977                           	opt stack 0
   978  000200                     	ds	64
   979  000240                     _readBuffer:
   980                           	opt stack 0
   981  000240                     	ds	64
   982  000280                     _writeBuffer:
   983                           	opt stack 0
   984  000280                     	ds	64
   985                           tblptru	equ	0xFF8
   986                           tblptrh	equ	0xFF7
   987                           tblptrl	equ	0xFF6
   988                           tablat	equ	0xFF5
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           postdec1	equ	0xFE5
   992                           fsr1h	equ	0xFE2
   993                           fsr1l	equ	0xFE1
   994                           
   995                           	psect	bssBANK3
   996  000300                     __pbssBANK3:
   997                           	opt stack 0
   998  000300                     setup@uartrx:
   999                           	opt stack 0
  1000  000300                     	ds	100
  1001                           tblptru	equ	0xFF8
  1002                           tblptrh	equ	0xFF7
  1003                           tblptrl	equ	0xFF6
  1004                           tablat	equ	0xFF5
  1005                           postinc0	equ	0xFEE
  1006                           wreg	equ	0xFE8
  1007                           postdec1	equ	0xFE5
  1008                           fsr1h	equ	0xFE2
  1009                           fsr1l	equ	0xFE1
  1010                           
  1011                           	psect	bssBANK4
  1012  000400                     __pbssBANK4:
  1013                           	opt stack 0
  1014  000400                     ST7032_init@buf:
  1015                           	opt stack 0
  1016  000400                     	ds	200
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           postinc0	equ	0xFEE
  1022                           wreg	equ	0xFE8
  1023                           postdec1	equ	0xFE5
  1024                           fsr1h	equ	0xFE2
  1025                           fsr1l	equ	0xFE1
  1026                           
  1027                           	psect	bssBANK5
  1028  000500                     __pbssBANK5:
  1029                           	opt stack 0
  1030  000500                     USB_CDC_buffer_init@rxbuf:
  1031                           	opt stack 0
  1032  000500                     	ds	250
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           postinc0	equ	0xFEE
  1038                           wreg	equ	0xFE8
  1039                           postdec1	equ	0xFE5
  1040                           fsr1h	equ	0xFE2
  1041                           fsr1l	equ	0xFE1
  1042                           
  1043                           	psect	bssBANK6
  1044  000600                     __pbssBANK6:
  1045                           	opt stack 0
  1046  000600                     USB_CDC_buffer_init@txbuf:
  1047                           	opt stack 0
  1048  000600                     	ds	250
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           postinc0	equ	0xFEE
  1054                           wreg	equ	0xFE8
  1055                           postdec1	equ	0xFE5
  1056                           fsr1h	equ	0xFE2
  1057                           fsr1l	equ	0xFE1
  1058                           
  1059                           	psect	bssBIGRAMl
  1060  0006FA                     __pbssBIGRAMl:
  1061                           	opt stack 0
  1062  0006FA                     setup@uarttx:
  1063                           	opt stack 0
  1064  0006FA                     	ds	1000
  1065                           tblptru	equ	0xFF8
  1066                           tblptrh	equ	0xFF7
  1067                           tblptrl	equ	0xFF6
  1068                           tablat	equ	0xFF5
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           postdec1	equ	0xFE5
  1072                           fsr1h	equ	0xFE2
  1073                           fsr1l	equ	0xFE1
  1074                           
  1075                           	psect	cstackBANK2
  1076  0002C0                     __pcstackBANK2:
  1077                           	opt stack 0
  1078  0002C0                     loop@s:
  1079                           	opt stack 0
  1080                           
  1081                           ; 40 bytes @ 0x0
  1082  0002C0                     	ds	40
  1083                           tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           tblptrl	equ	0xFF6
  1086                           tablat	equ	0xFF5
  1087                           postinc0	equ	0xFEE
  1088                           wreg	equ	0xFE8
  1089                           postdec1	equ	0xFE5
  1090                           fsr1h	equ	0xFE2
  1091                           fsr1l	equ	0xFE1
  1092                           
  1093                           	psect	cstackBANK0
  1094  000060                     __pcstackBANK0:
  1095                           	opt stack 0
  1096  000060                     ??_isdigit:
  1097  000060                     ??_I2C_IdleCheck:
  1098  000060                     ??_timer0_init:
  1099  000060                     ??_timer3_init:
  1100  000060                     ??_x_to_d:
  1101  000060                     ?_ringbuf_num:
  1102                           	opt stack 0
  1103  000060                     ?_USBTransferOnePacket:
  1104                           	opt stack 0
  1105  000060                     ?___wmul:
  1106                           	opt stack 0
  1107  000060                     ?___awdiv:
  1108                           	opt stack 0
  1109  000060                     ?___awmod:
  1110                           	opt stack 0
  1111  000060                     ?___lwdiv:
  1112                           	opt stack 0
  1113  000060                     ?___lldiv:
  1114                           	opt stack 0
  1115  000060                     USBTransferOnePacket@dir:
  1116                           	opt stack 0
  1117  000060                     timer1_init@clock_select:
  1118                           	opt stack 0
  1119  000060                     putUSBUSART@data:
  1120                           	opt stack 0
  1121  000060                     ringbuf_init@rb:
  1122                           	opt stack 0
  1123  000060                     ringbuf_num@rb:
  1124                           	opt stack 0
  1125  000060                     ___wmul@multiplier:
  1126                           	opt stack 0
  1127  000060                     ___awdiv@dividend:
  1128                           	opt stack 0
  1129  000060                     ___awmod@dividend:
  1130                           	opt stack 0
  1131  000060                     ___lwdiv@dividend:
  1132                           	opt stack 0
  1133  000060                     memset@p1:
  1134                           	opt stack 0
  1135  000060                     strcat@to:
  1136                           	opt stack 0
  1137  000060                     strcpy@to:
  1138                           	opt stack 0
  1139  000060                     ___lldiv@dividend:
  1140                           	opt stack 0
  1141                           
  1142                           ; 4 bytes @ 0x0
  1143  000060                     	ds	1
  1144  000061                     ??_timer1_init:
  1145  000061                     I2C_IdleCheck@mask:
  1146                           	opt stack 0
  1147  000061                     timer0_init@prescaler:
  1148                           	opt stack 0
  1149  000061                     timer3_init@prescaler:
  1150                           	opt stack 0
  1151  000061                     x_to_d@hex:
  1152                           	opt stack 0
  1153  000061                     _isdigit$5905:
  1154                           	opt stack 0
  1155  000061                     USBTransferOnePacket@data:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0x1
  1159  000061                     	ds	1
  1160  000062                     ??_ringbuf_num:
  1161  000062                     putUSBUSART@length:
  1162                           	opt stack 0
  1163  000062                     I2C_Start@rw:
  1164                           	opt stack 0
  1165  000062                     I2C_Send@data:
  1166                           	opt stack 0
  1167  000062                     timer1_init@prescaler:
  1168                           	opt stack 0
  1169  000062                     isdigit@c:
  1170                           	opt stack 0
  1171  000062                     ringbuf_init@internal_buf:
  1172                           	opt stack 0
  1173  000062                     RTCC_to_caltime@tm:
  1174                           	opt stack 0
  1175  000062                     ___wmul@multiplicand:
  1176                           	opt stack 0
  1177  000062                     ___awdiv@divisor:
  1178                           	opt stack 0
  1179  000062                     ___awmod@divisor:
  1180                           	opt stack 0
  1181  000062                     ___lwdiv@divisor:
  1182                           	opt stack 0
  1183  000062                     memset@c:
  1184                           	opt stack 0
  1185  000062                     strcat@from:
  1186                           	opt stack 0
  1187  000062                     strcpy@from:
  1188                           	opt stack 0
  1189                           
  1190                           ; 2 bytes @ 0x2
  1191  000062                     	ds	1
  1192  000063                     USBTransferOnePacket@len:
  1193                           	opt stack 0
  1194  000063                     I2C_Start@adrs:
  1195                           	opt stack 0
  1196                           
  1197                           ; 1 bytes @ 0x3
  1198  000063                     	ds	1
  1199  000064                     USBTransferOnePacket@ep:
  1200                           	opt stack 0
  1201  000064                     RTCC_to_caltime@dumy:
  1202                           	opt stack 0
  1203  000064                     I2C_LCD_Command@c:
  1204                           	opt stack 0
  1205  000064                     ___awdiv@counter:
  1206                           	opt stack 0
  1207  000064                     ___awmod@counter:
  1208                           	opt stack 0
  1209  000064                     ___lwdiv@counter:
  1210                           	opt stack 0
  1211  000064                     ringbuf_init@bufsize:
  1212                           	opt stack 0
  1213  000064                     I2C_LCD_Puts@s:
  1214                           	opt stack 0
  1215  000064                     ___wmul@product:
  1216                           	opt stack 0
  1217  000064                     memset@n:
  1218                           	opt stack 0
  1219  000064                     strcat@cp:
  1220                           	opt stack 0
  1221  000064                     strcpy@cp:
  1222                           	opt stack 0
  1223  000064                     ___lldiv@divisor:
  1224                           	opt stack 0
  1225                           
  1226                           ; 4 bytes @ 0x4
  1227  000064                     	ds	1
  1228  000065                     I2C_LCD_Command@ans:
  1229                           	opt stack 0
  1230  000065                     ___awdiv@sign:
  1231                           	opt stack 0
  1232  000065                     ___awmod@sign:
  1233                           	opt stack 0
  1234  000065                     USBTransferOnePacket@handle:
  1235                           	opt stack 0
  1236  000065                     ___lwdiv@quotient:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0x5
  1240  000065                     	ds	1
  1241  000066                     ??_I2C_LCD_Clear:
  1242  000066                     ??_I2C_LCD_Puts:
  1243  000066                     month_length@month:
  1244                           	opt stack 0
  1245  000066                     I2C_LCD_SetCursor@row:
  1246                           	opt stack 0
  1247  000066                     ___awdiv@quotient:
  1248                           	opt stack 0
  1249  000066                     memset@p:
  1250                           	opt stack 0
  1251                           
  1252                           ; 2 bytes @ 0x6
  1253  000066                     	ds	1
  1254  000067                     ??_CDCTxService:
  1255  000067                     ??_month_length:
  1256  000067                     ??_I2C_LCD_init:
  1257  000067                     ?___lwmod:
  1258                           	opt stack 0
  1259  000067                     getsUSBUSART@buffer:
  1260                           	opt stack 0
  1261  000067                     I2C_LCD_SetCursor@row_offsets:
  1262                           	opt stack 0
  1263  000067                     I2C_LCD_Puts@ans:
  1264                           	opt stack 0
  1265  000067                     ___lwmod@dividend:
  1266                           	opt stack 0
  1267                           
  1268                           ; 2 bytes @ 0x7
  1269  000067                     	ds	1
  1270  000068                     USBDeviceInit@i:
  1271                           	opt stack 0
  1272  000068                     d_to_x@dec:
  1273                           	opt stack 0
  1274  000068                     I2C_LCD_init@i:
  1275                           	opt stack 0
  1276  000068                     _CDCTxService$1934:
  1277                           	opt stack 0
  1278  000068                     ringbuf_pop@rb:
  1279                           	opt stack 0
  1280  000068                     ___lldiv@quotient:
  1281                           	opt stack 0
  1282                           
  1283                           ; 4 bytes @ 0x8
  1284  000068                     	ds	1
  1285  000069                     getsUSBUSART@len:
  1286                           	opt stack 0
  1287  000069                     I2C_LCD_SetCursor@col:
  1288                           	opt stack 0
  1289  000069                     I2C_LCD_init@i_4689:
  1290                           	opt stack 0
  1291  000069                     caltime_to_RTCC@tm:
  1292                           	opt stack 0
  1293  000069                     ___lwmod@divisor:
  1294                           	opt stack 0
  1295                           
  1296                           ; 2 bytes @ 0x9
  1297  000069                     	ds	1
  1298  00006A                     ??_ringbuf_pop:
  1299  00006A                     ??_getsUSBUSART:
  1300  00006A                     CDCTxService@i:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0xA
  1304  00006A                     	ds	1
  1305  00006B                     CDCTxService@byte_to_send:
  1306                           	opt stack 0
  1307  00006B                     month_length@year:
  1308                           	opt stack 0
  1309  00006B                     ___lwmod@counter:
  1310                           	opt stack 0
  1311  00006B                     _getsUSBUSART$1886:
  1312                           	opt stack 0
  1313                           
  1314                           ; 2 bytes @ 0xB
  1315  00006B                     	ds	1
  1316  00006C                     ?_sprintf:
  1317                           	opt stack 0
  1318  00006C                     ___lldiv@counter:
  1319                           	opt stack 0
  1320  00006C                     USB_CDC_send@length:
  1321                           	opt stack 0
  1322  00006C                     sprintf@sp:
  1323                           	opt stack 0
  1324                           
  1325                           ; 2 bytes @ 0xC
  1326  00006C                     	ds	1
  1327  00006D                     ?___lmul:
  1328                           	opt stack 0
  1329  00006D                     USB_CDC_get@numBytesRead:
  1330                           	opt stack 0
  1331  00006D                     ___lmul@multiplier:
  1332                           	opt stack 0
  1333                           
  1334                           ; 4 bytes @ 0xD
  1335  00006D                     	ds	1
  1336  00006E                     ringbuf_pop@ret:
  1337                           	opt stack 0
  1338  00006E                     sprintf@f:
  1339                           	opt stack 0
  1340                           
  1341                           ; 2 bytes @ 0xE
  1342  00006E                     	ds	1
  1343  00006F                     ringbuf_put@rb:
  1344                           	opt stack 0
  1345                           
  1346                           ; 2 bytes @ 0xF
  1347  00006F                     	ds	2
  1348  000071                     ringbuf_put@data:
  1349                           	opt stack 0
  1350  000071                     ___lmul@multiplicand:
  1351                           	opt stack 0
  1352                           
  1353                           ; 4 bytes @ 0x11
  1354  000071                     	ds	1
  1355  000072                     ??_ringbuf_put:
  1356                           
  1357                           ; 0 bytes @ 0x12
  1358  000072                     	ds	3
  1359  000075                     ___lmul@product:
  1360                           	opt stack 0
  1361                           
  1362                           ; 4 bytes @ 0x15
  1363  000075                     	ds	1
  1364  000076                     ??_USB_CDC_task:
  1365                           
  1366                           ; 0 bytes @ 0x16
  1367  000076                     	ds	1
  1368  000077                     USB_CDC_task@i:
  1369                           	opt stack 0
  1370                           
  1371                           ; 2 bytes @ 0x17
  1372  000077                     	ds	2
  1373  000079                     ?_get_quot_rem:
  1374                           	opt stack 0
  1375  000079                     USB_CDC_task@length:
  1376                           	opt stack 0
  1377  000079                     get_quot_rem@quot:
  1378                           	opt stack 0
  1379  000079                     caltime_to_epoch@tm:
  1380                           	opt stack 0
  1381                           
  1382                           ; 2 bytes @ 0x19
  1383  000079                     	ds	2
  1384  00007B                     ??_caltime_to_epoch:
  1385  00007B                     get_quot_rem@div:
  1386                           	opt stack 0
  1387                           
  1388                           ; 1 bytes @ 0x1B
  1389  00007B                     	ds	2
  1390  00007D                     get_quot_rem@num:
  1391                           	opt stack 0
  1392                           
  1393                           ; 4 bytes @ 0x1D
  1394  00007D                     	ds	1
  1395  00007E                     ??_sprintf:
  1396                           
  1397                           ; 0 bytes @ 0x1E
  1398  00007E                     	ds	1
  1399  00007F                     caltime_to_epoch@year:
  1400                           	opt stack 0
  1401                           
  1402                           ; 1 bytes @ 0x1F
  1403  00007F                     	ds	1
  1404  000080                     caltime_to_epoch@month_3879:
  1405                           	opt stack 0
  1406                           
  1407                           ; 1 bytes @ 0x20
  1408  000080                     	ds	1
  1409  000081                     epoch_to_caltime@tm:
  1410                           	opt stack 0
  1411  000081                     caltime_to_epoch@epoch:
  1412                           	opt stack 0
  1413                           
  1414                           ; 4 bytes @ 0x21
  1415  000081                     	ds	1
  1416  000082                     sprintf@prec:
  1417                           	opt stack 0
  1418                           
  1419                           ; 1 bytes @ 0x22
  1420  000082                     	ds	1
  1421  000083                     ??_epoch_to_caltime:
  1422  000083                     sprintf@ap:
  1423                           	opt stack 0
  1424                           
  1425                           ; 2 bytes @ 0x23
  1426  000083                     	ds	2
  1427  000085                     caltime_to_epoch@month:
  1428                           	opt stack 0
  1429  000085                     epoch_to_caltime@day_since_epoch:
  1430                           	opt stack 0
  1431  000085                     sprintf@cp:
  1432                           	opt stack 0
  1433                           
  1434                           ; 2 bytes @ 0x25
  1435  000085                     	ds	1
  1436  000086                     RTCC_from_RTCC@tm:
  1437                           	opt stack 0
  1438                           
  1439                           ; 2 bytes @ 0x26
  1440  000086                     	ds	1
  1441  000087                     epoch_to_caltime@day:
  1442                           	opt stack 0
  1443  000087                     sprintf@val:
  1444                           	opt stack 0
  1445                           
  1446                           ; 2 bytes @ 0x27
  1447  000087                     	ds	1
  1448  000088                     
  1449                           ; 0 bytes @ 0x28
  1450  000088                     	ds	1
  1451  000089                     epoch_to_caltime@year:
  1452                           	opt stack 0
  1453  000089                     sprintf@len:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x29
  1457  000089                     	ds	1
  1458  00008A                     epoch_to_caltime@month:
  1459                           	opt stack 0
  1460                           
  1461                           ; 1 bytes @ 0x2A
  1462  00008A                     	ds	1
  1463  00008B                     sprintf@flag:
  1464                           	opt stack 0
  1465  00008B                     epoch_to_caltime@num:
  1466                           	opt stack 0
  1467                           
  1468                           ; 4 bytes @ 0x2B
  1469  00008B                     	ds	1
  1470  00008C                     sprintf@c:
  1471                           	opt stack 0
  1472                           
  1473                           ; 1 bytes @ 0x2C
  1474  00008C                     	ds	1
  1475  00008D                     sprintf@width:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x2D
  1479  00008D                     	ds	2
  1480  00008F                     RTCC_from_epoch@tm:
  1481                           	opt stack 0
  1482  00008F                     display_dec@str:
  1483                           	opt stack 0
  1484                           
  1485                           ; 2 bytes @ 0x2F
  1486  00008F                     	ds	2
  1487  000091                     display_dec@dec:
  1488                           	opt stack 0
  1489                           
  1490                           ; 1 bytes @ 0x31
  1491  000091                     	ds	1
  1492  000092                     display_dec@edit:
  1493                           	opt stack 0
  1494                           
  1495                           ; 1 bytes @ 0x32
  1496  000092                     	ds	1
  1497  000093                     display_dec@s:
  1498                           	opt stack 0
  1499                           
  1500                           ; 4 bytes @ 0x33
  1501  000093                     	ds	4
  1502  000097                     display_time_0802@tm:
  1503                           	opt stack 0
  1504                           
  1505                           ; 2 bytes @ 0x37
  1506  000097                     	ds	2
  1507  000099                     display_time_0802@line0:
  1508                           	opt stack 0
  1509                           
  1510                           ; 2 bytes @ 0x39
  1511  000099                     	ds	2
  1512  00009B                     display_time_0802@line1:
  1513                           	opt stack 0
  1514                           
  1515                           ; 2 bytes @ 0x3B
  1516  00009B                     	ds	2
  1517  00009D                     ??_loop:
  1518                           
  1519                           ; 0 bytes @ 0x3D
  1520  00009D                     	ds	1
  1521  00009E                     main@GIE_cache:
  1522                           	opt stack 0
  1523                           
  1524                           ; 1 bytes @ 0x3E
  1525  00009E                     	ds	1
  1526                           tblptru	equ	0xFF8
  1527                           tblptrh	equ	0xFF7
  1528                           tblptrl	equ	0xFF6
  1529                           tablat	equ	0xFF5
  1530                           postinc0	equ	0xFEE
  1531                           wreg	equ	0xFE8
  1532                           postdec1	equ	0xFE5
  1533                           fsr1h	equ	0xFE2
  1534                           fsr1l	equ	0xFE1
  1535                           
  1536                           	psect	cstackCOMRAM
  1537  00002E                     __pcstackCOMRAM:
  1538                           	opt stack 0
  1539  00002E                     ??_USBStdGetDscHandler:
  1540  00002E                     ??_USBStdGetStatusHandler:
  1541  00002E                     ?i2_USBTransferOnePacket:
  1542                           	opt stack 0
  1543  00002E                     ?i2_ringbuf_num:
  1544                           	opt stack 0
  1545  00002E                     USBConfigureEndpoint@direction:
  1546                           	opt stack 0
  1547  00002E                     USBCtrlTrfTxService@byteToSend:
  1548                           	opt stack 0
  1549  00002E                     USBCtrlTrfRxService@i:
  1550                           	opt stack 0
  1551  00002E                     i2USBTransferOnePacket@dir:
  1552                           	opt stack 0
  1553  00002E                     i2ringbuf_num@rb:
  1554                           	opt stack 0
  1555  00002E                     i2memset@p1:
  1556                           	opt stack 0
  1557                           
  1558                           ; 2 bytes @ 0x0
  1559  00002E                     	ds	1
  1560  00002F                     ??_USBConfigureEndpoint:
  1561  00002F                     USBCtrlTrfRxService@byteToRead:
  1562                           	opt stack 0
  1563  00002F                     USBCtrlTrfInHandler@lastDTS:
  1564                           	opt stack 0
  1565  00002F                     USBStdGetStatusHandler@p:
  1566                           	opt stack 0
  1567  00002F                     i2USBTransferOnePacket@data:
  1568                           	opt stack 0
  1569                           
  1570                           ; 2 bytes @ 0x1
  1571  00002F                     	ds	1
  1572  000030                     ??i2_ringbuf_num:
  1573  000030                     i2memset@c:
  1574                           	opt stack 0
  1575                           
  1576                           ; 2 bytes @ 0x2
  1577  000030                     	ds	1
  1578  000031                     i2USBTransferOnePacket@len:
  1579                           	opt stack 0
  1580                           
  1581                           ; 1 bytes @ 0x3
  1582  000031                     	ds	1
  1583  000032                     i2USBTransferOnePacket@ep:
  1584                           	opt stack 0
  1585  000032                     i2memset@n:
  1586                           	opt stack 0
  1587                           
  1588                           ; 2 bytes @ 0x4
  1589  000032                     	ds	1
  1590  000033                     USBConfigureEndpoint@EPNum:
  1591                           	opt stack 0
  1592  000033                     i2USBTransferOnePacket@handle:
  1593                           	opt stack 0
  1594                           
  1595                           ; 2 bytes @ 0x5
  1596  000033                     	ds	1
  1597  000034                     USBConfigureEndpoint@handle:
  1598                           	opt stack 0
  1599  000034                     i2memset@p:
  1600                           	opt stack 0
  1601                           
  1602                           ; 2 bytes @ 0x6
  1603  000034                     	ds	2
  1604  000036                     USBEnableEndpoint@options:
  1605                           	opt stack 0
  1606  000036                     i2USBDeviceInit@i:
  1607                           	opt stack 0
  1608  000036                     i2ringbuf_put@rb:
  1609                           	opt stack 0
  1610  000036                     i2ringbuf_pop@rb:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0x8
  1614  000036                     	ds	1
  1615  000037                     USBEnableEndpoint@p:
  1616                           	opt stack 0
  1617                           
  1618                           ; 2 bytes @ 0x9
  1619  000037                     	ds	1
  1620  000038                     ??i2_ringbuf_pop:
  1621  000038                     i2ringbuf_put@data:
  1622                           	opt stack 0
  1623                           
  1624                           ; 1 bytes @ 0xA
  1625  000038                     	ds	1
  1626  000039                     ??i2_ringbuf_put:
  1627  000039                     USBEnableEndpoint@ep:
  1628                           	opt stack 0
  1629                           
  1630                           ; 1 bytes @ 0xB
  1631  000039                     	ds	1
  1632  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1633                           	opt stack 0
  1634                           
  1635                           ; 2 bytes @ 0xC
  1636  00003A                     	ds	2
  1637  00003C                     i2ringbuf_pop@ret:
  1638                           	opt stack 0
  1639  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1640                           	opt stack 0
  1641                           
  1642                           ; 2 bytes @ 0xE
  1643  00003C                     	ds	1
  1644  00003D                     UART_ISR@ascii:
  1645                           	opt stack 0
  1646                           
  1647                           ; 1 bytes @ 0xF
  1648  00003D                     	ds	1
  1649  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1650                           	opt stack 0
  1651                           
  1652                           ; 2 bytes @ 0x10
  1653  00003E                     	ds	2
  1654  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1655                           
  1656                           ; 0 bytes @ 0x12
  1657  000040                     	ds	2
  1658  000042                     ??_USBStdFeatureReqHandler:
  1659  000042                     USBStdSetCfgHandler@i:
  1660                           	opt stack 0
  1661                           
  1662                           ; 1 bytes @ 0x14
  1663  000042                     	ds	1
  1664  000043                     USBStdFeatureReqHandler@pUEP:
  1665                           	opt stack 0
  1666                           
  1667                           ; 2 bytes @ 0x15
  1668  000043                     	ds	2
  1669  000045                     USBStdFeatureReqHandler@current_ep_data:
  1670                           	opt stack 0
  1671                           
  1672                           ; 1 bytes @ 0x17
  1673  000045                     	ds	1
  1674  000046                     USBStdFeatureReqHandler@p:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x18
  1678  000046                     	ds	2
  1679  000048                     ??_USBCtrlEPService:
  1680  000048                     
  1681                           ; 0 bytes @ 0x1A
  1682  000048                     	ds	2
  1683  00004A                     USBCtrlEPService@setup_cnt:
  1684                           	opt stack 0
  1685                           
  1686                           ; 1 bytes @ 0x1C
  1687  00004A                     	ds	1
  1688  00004B                     USBDeviceTasks@i:
  1689                           	opt stack 0
  1690                           
  1691                           ; 1 bytes @ 0x1D
  1692  00004B                     	ds	1
  1693  00004C                     ??_ISR:
  1694                           
  1695                           ; 0 bytes @ 0x1E
  1696  00004C                     	ds	15
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           postinc0	equ	0xFEE
  1702                           wreg	equ	0xFE8
  1703                           postdec1	equ	0xFE5
  1704                           fsr1h	equ	0xFE2
  1705                           fsr1l	equ	0xFE1
  1706                           
  1707 ;;
  1708 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1709 ;;
  1710 ;; *************** function _main *****************
  1711 ;; Defined at:
  1712 ;;		line 119 in file "main.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  GIE_cache       1   62[BANK0 ] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2  1578[None  ] int 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;Total ram usage:        1 bytes
  1731 ;; Hardware stack levels required when called:   18
  1732 ;; This function calls:
  1733 ;;		_loop
  1734 ;;		_setup
  1735 ;; This function is called by:
  1736 ;;		Startup code after reset
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text0
  1741  013804                     __ptext0:
  1742                           	opt stack 0
  1743  013804                     _main:
  1744                           	opt stack 13
  1745                           
  1746                           ;main.c: 120: setup();
  1747                           
  1748                           ;incstack = 0
  1749  013804  EC28  F08B         	call	_setup	;wreg free
  1750  013808  D00D               	goto	u10335
  1751  01380A                     l10311:
  1752                           
  1753                           ;main.c: 123: uint8_t GIE_cache = INTCONbits.GIE;
  1754  01380A  0E00               	movlw	0
  1755  01380C  BEF2               	btfsc	intcon,7,c	;volatile
  1756  01380E  0E01               	movlw	1
  1757  013810  0100               	movlb	0	; () banked
  1758  013812  6F9E               	movwf	main@GIE_cache& (0+255),b
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;main.c: 124: INTCONbits.GIE = 0;
  1762  013814  9EF2               	bcf	intcon,7,c	;volatile
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;main.c: 125: loop();
  1766  013816  ECC9  F088         	call	_loop	;wreg free
  1767                           
  1768                           ;main.c: 126: INTCONbits.GIE = GIE_cache;
  1769  01381A  0100               	movlb	0	; () banked
  1770  01381C  B19E               	btfsc	main@GIE_cache& (0+255),0,b
  1771  01381E  D002               	bra	u10335
  1772  013820  9EF2               	bcf	intcon,7,c	;volatile
  1773  013822  D001               	bra	u10336
  1774  013824                     u10335:
  1775  013824  8EF2               	bsf	intcon,7,c	;volatile
  1776  013826                     u10336:
  1777  013826  D7F1               	goto	l10311
  1778  013828                     __end_of_main:
  1779                           	opt stack 0
  1780                           tblptru	equ	0xFF8
  1781                           tblptrh	equ	0xFF7
  1782                           tblptrl	equ	0xFF6
  1783                           tablat	equ	0xFF5
  1784                           intcon	equ	0xFF2
  1785                           postinc0	equ	0xFEE
  1786                           wreg	equ	0xFE8
  1787                           postdec1	equ	0xFE5
  1788                           fsr1h	equ	0xFE2
  1789                           fsr1l	equ	0xFE1
  1790                           
  1791 ;; *************** function _setup *****************
  1792 ;; Defined at:
  1793 ;;		line 60 in file "main.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;		None               void
  1800 ;; Registers used:
  1801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:   17
  1814 ;; This function calls:
  1815 ;;		_I2C_LCD_Clear
  1816 ;;		_I2C_LCD_Puts
  1817 ;;		_I2C_LCD_SetCursor
  1818 ;;		_I2C_LCD_init
  1819 ;;		_OSC_init
  1820 ;;		_RTCC_from_RTCC
  1821 ;;		_RTCC_from_epoch
  1822 ;;		_RTCC_init
  1823 ;;		_UART_init
  1824 ;;		_USB_CDC_init
  1825 ;;		_ringbuf_init
  1826 ;;		_timer0_init
  1827 ;;		_timer1_init
  1828 ;;		_timer3_init
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text1
  1835  011650                     __ptext1:
  1836                           	opt stack 0
  1837  011650                     _setup:
  1838                           	opt stack 13
  1839                           
  1840                           ;main.c: 61: OSC_init();
  1841                           
  1842                           ;incstack = 0
  1843  011650  ECB8  F09C         	call	_OSC_init	;wreg free
  1844                           
  1845                           ;main.c: 62: TRISA = 0b00010000;
  1846  011654  0E10               	movlw	16
  1847  011656  6E92               	movwf	3986,c	;volatile
  1848                           
  1849                           ;main.c: 63: TRISB = 0b00111111;
  1850  011658  0E3F               	movlw	63
  1851  01165A  6E93               	movwf	3987,c	;volatile
  1852                           
  1853                           ;main.c: 64: TRISC = 0b10111010;
  1854  01165C  0EBA               	movlw	186
  1855  01165E  6E94               	movwf	3988,c	;volatile
  1856                           
  1857                           ;main.c: 65: ANCON0 = 0b11111111;
  1858  011660  010F               	movlb	15	; () banked
  1859  011662  6948               	setf	72,b	;volatile
  1860                           
  1861                           ; BSR set to: 15
  1862                           ;main.c: 66: ANCON1 = 0b00011111;
  1863  011664  0E1F               	movlw	31
  1864  011666  010F               	movlb	15	; () banked
  1865  011668  6F49               	movwf	73,b	;volatile
  1866                           
  1867                           ; BSR set to: 15
  1868                           ;main.c: 67: INTCON2bits.RBPU = 0;
  1869  01166A  9EF1               	bcf	intcon2,7,c	;volatile
  1870                           
  1871                           ; BSR set to: 15
  1872                           ;main.c: 69: timer0_init(6);
  1873  01166C  0E06               	movlw	6
  1874  01166E  EC80  F09A         	call	_timer0_init
  1875                           
  1876                           ;main.c: 70: timer1_init(0, 2);
  1877  011672  0E02               	movlw	2
  1878  011674  0100               	movlb	0	; () banked
  1879  011676  6F60               	movwf	timer1_init@clock_select& (0+255),b
  1880  011678  0E00               	movlw	0
  1881  01167A  ECAD  F099         	call	_timer1_init
  1882                           
  1883                           ;main.c: 71: timer3_init(2);
  1884  01167E  0E02               	movlw	2
  1885  011680  EC57  F09B         	call	_timer3_init
  1886                           
  1887                           ;main.c: 72: I2C_LCD_init();
  1888  011684  ECDE  F096         	call	_I2C_LCD_init	;wreg free
  1889                           
  1890                           ;main.c: 73: RTCC_init();
  1891  011688  EC5C  F098         	call	_RTCC_init	;wreg free
  1892                           
  1893                           ;main.c: 74: USB_CDC_init();
  1894  01168C  ECB1  F09C         	call	_USB_CDC_init	;wreg free
  1895                           
  1896                           ;main.c: 76: UART_init();
  1897  011690  EC14  F09C         	call	_UART_init	;wreg free
  1898                           
  1899                           ;main.c: 77: static uint8_t uarttx[1000];
  1900                           ;main.c: 78: ringbuf_init(&uart_tx, uarttx, sizeof (uarttx));
  1901  011694  0ED6               	movlw	low _uart_tx
  1902  011696  0100               	movlb	0	; () banked
  1903  011698  6F60               	movwf	ringbuf_init@rb& (0+255),b
  1904  01169A  0E01               	movlw	high _uart_tx
  1905  01169C  0100               	movlb	0	; () banked
  1906  01169E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1907  0116A0  0EFA               	movlw	low setup@uarttx
  1908  0116A2  0100               	movlb	0	; () banked
  1909  0116A4  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  1910  0116A6  0E06               	movlw	high setup@uarttx
  1911  0116A8  0100               	movlb	0	; () banked
  1912  0116AA  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1913  0116AC  0E03               	movlw	3
  1914  0116AE  0100               	movlb	0	; () banked
  1915  0116B0  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1916  0116B2  0EE8               	movlw	232
  1917  0116B4  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  1918  0116B6  EC83  F099         	call	_ringbuf_init	;wreg free
  1919                           
  1920                           ;main.c: 79: static uint8_t uartrx[100];
  1921                           ;main.c: 80: ringbuf_init(&uart_rx, uartrx, sizeof (uartrx));
  1922  0116BA  0ECE               	movlw	low _uart_rx
  1923  0116BC  0100               	movlb	0	; () banked
  1924  0116BE  6F60               	movwf	ringbuf_init@rb& (0+255),b
  1925  0116C0  0E01               	movlw	high _uart_rx
  1926  0116C2  0100               	movlb	0	; () banked
  1927  0116C4  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1928  0116C6  0E00               	movlw	low setup@uartrx
  1929  0116C8  0100               	movlb	0	; () banked
  1930  0116CA  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  1931  0116CC  0E03               	movlw	high setup@uartrx
  1932  0116CE  0100               	movlb	0	; () banked
  1933  0116D0  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1934  0116D2  0E00               	movlw	0
  1935  0116D4  0100               	movlb	0	; () banked
  1936  0116D6  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1937  0116D8  0E64               	movlw	100
  1938  0116DA  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  1939  0116DC  EC83  F099         	call	_ringbuf_init	;wreg free
  1940                           
  1941                           ;main.c: 82: RTCC_from_RTCC(&now);
  1942  0116E0  0EB8               	movlw	low _now
  1943  0116E2  0100               	movlb	0	; () banked
  1944  0116E4  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  1945  0116E6  0E01               	movlw	high _now
  1946  0116E8  0100               	movlb	0	; () banked
  1947  0116EA  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  1948  0116EC  EC82  F09C         	call	_RTCC_from_RTCC	;wreg free
  1949                           
  1950                           ;main.c: 83: if (now.DD == 0) {
  1951  0116F0  0101               	movlb	1	; () banked
  1952  0116F2  51C0               	movf	(_now+8)& (0+255),w,b
  1953  0116F4  A4D8               	btfss	status,2,c
  1954  0116F6  D011               	goto	l9727
  1955                           
  1956                           ; BSR set to: 1
  1957                           ;main.c: 84: now.epoch = 0;
  1958  0116F8  0E00               	movlw	0
  1959  0116FA  0101               	movlb	1	; () banked
  1960  0116FC  6FB8               	movwf	_now& (0+255),b
  1961  0116FE  0E00               	movlw	0
  1962  011700  6FB9               	movwf	(_now+1)& (0+255),b
  1963  011702  0E00               	movlw	0
  1964  011704  6FBA               	movwf	(_now+2)& (0+255),b
  1965  011706  0E00               	movlw	0
  1966  011708  6FBB               	movwf	(_now+3)& (0+255),b
  1967                           
  1968                           ; BSR set to: 1
  1969                           ;main.c: 85: RTCC_from_epoch(&now);
  1970  01170A  0EB8               	movlw	low _now
  1971  01170C  0100               	movlb	0	; () banked
  1972  01170E  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  1973  011710  0E01               	movlw	high _now
  1974  011712  0100               	movlb	0	; () banked
  1975  011714  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  1976  011716  EC75  F09C         	call	_RTCC_from_epoch	;wreg free
  1977  01171A                     l9727:
  1978                           
  1979                           ;main.c: 86: }
  1980                           ;main.c: 88: I2C_LCD_Clear();
  1981  01171A  EC8F  F09C         	call	_I2C_LCD_Clear	;wreg free
  1982                           
  1983                           ;main.c: 89: I2C_LCD_SetCursor(0, 0);
  1984  01171E  0E00               	movlw	0
  1985  011720  0100               	movlb	0	; () banked
  1986  011722  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1987  011724  0E00               	movlw	0
  1988  011726  EC6D  F09B         	call	_I2C_LCD_SetCursor
  1989                           
  1990                           ;main.c: 90: I2C_LCD_Puts("18F27J53");
  1991  01172A  0E98               	movlw	low STR_41
  1992  01172C  0100               	movlb	0	; () banked
  1993  01172E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  1994  011730  0EFF               	movlw	high STR_41
  1995  011732  0100               	movlb	0	; () banked
  1996  011734  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1997  011736  EC26  F097         	call	_I2C_LCD_Puts	;wreg free
  1998                           
  1999                           ;main.c: 91: I2C_LCD_SetCursor(0, 1);
  2000  01173A  0E01               	movlw	1
  2001  01173C  0100               	movlb	0	; () banked
  2002  01173E  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2003  011740  0E00               	movlw	0
  2004  011742  EC6D  F09B         	call	_I2C_LCD_SetCursor
  2005                           
  2006                           ;main.c: 92: I2C_LCD_Puts("USB UART");
  2007  011746  0EA1               	movlw	low STR_42
  2008  011748  0100               	movlb	0	; () banked
  2009  01174A  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2010  01174C  0EFF               	movlw	high STR_42
  2011  01174E  0100               	movlb	0	; () banked
  2012  011750  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2013  011752  EC26  F097         	call	_I2C_LCD_Puts	;wreg free
  2014  011756  0012               	return		;funcret
  2015  011758                     __end_of_setup:
  2016                           	opt stack 0
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           intcon	equ	0xFF2
  2022                           intcon2	equ	0xFF1
  2023                           postinc0	equ	0xFEE
  2024                           wreg	equ	0xFE8
  2025                           postdec1	equ	0xFE5
  2026                           fsr1h	equ	0xFE2
  2027                           fsr1l	equ	0xFE1
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function _timer3_init *****************
  2031 ;; Defined at:
  2032 ;;		line 101 in file "../My_library/My_PIC.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  prescaler       1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;		None               void
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2047 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2049 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2050 ;;Total ram usage:        2 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:   12
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_setup
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text2
  2061  0136AE                     __ptext2:
  2062                           	opt stack 0
  2063  0136AE                     _timer3_init:
  2064                           	opt stack 17
  2065                           
  2066                           ;incstack = 0
  2067                           ;timer3_init@prescaler stored from wreg
  2068  0136AE  0100               	movlb	0	; () banked
  2069  0136B0  6F61               	movwf	timer3_init@prescaler& (0+255),b
  2070                           
  2071                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  2072  0136B2  0E3F               	movlw	-193
  2073  0136B4  1679               	andwf	3961,f,c	;volatile
  2074                           
  2075                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  2076  0136B6  9679               	bcf	3961,3,c	;volatile
  2077                           
  2078                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  2079  0136B8  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  2080  0136BC  0100               	movlb	0	; () banked
  2081  0136BE  3B60               	swapf	??_timer3_init& (0+255),f,b
  2082  0136C0  5079               	movf	3961,w,c	;volatile
  2083  0136C2  0100               	movlb	0	; () banked
  2084  0136C4  1960               	xorwf	??_timer3_init& (0+255),w,b
  2085  0136C6  0BCF               	andlw	-49
  2086  0136C8  1960               	xorwf	??_timer3_init& (0+255),w,b
  2087  0136CA  6E79               	movwf	3961,c	;volatile
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  2091  0136CC  9E79               	bcf	3961,7,c	;volatile
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  2095  0136CE  8079               	bsf	3961,0,c	;volatile
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  2099  0136D0  92A2               	bcf	4002,1,c	;volatile
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  2103  0136D2  92A1               	bcf	4001,1,c	;volatile
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  2107  0136D4  82A0               	bsf	4000,1,c	;volatile
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  2111  0136D6  8CF2               	bsf	intcon,6,c	;volatile
  2112                           
  2113                           ; BSR set to: 0
  2114  0136D8  0012               	return		;funcret
  2115  0136DA                     __end_of_timer3_init:
  2116                           	opt stack 0
  2117                           tblptru	equ	0xFF8
  2118                           tblptrh	equ	0xFF7
  2119                           tblptrl	equ	0xFF6
  2120                           tablat	equ	0xFF5
  2121                           intcon	equ	0xFF2
  2122                           intcon2	equ	0xFF1
  2123                           postinc0	equ	0xFEE
  2124                           wreg	equ	0xFE8
  2125                           postdec1	equ	0xFE5
  2126                           fsr1h	equ	0xFE2
  2127                           fsr1l	equ	0xFE1
  2128                           status	equ	0xFD8
  2129                           
  2130 ;; *************** function _timer1_init *****************
  2131 ;; Defined at:
  2132 ;;		line 70 in file "../My_library/My_PIC.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  prescaler       1    wreg     unsigned char 
  2135 ;;  clock_select    1    0[BANK0 ] unsigned char 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  prescaler       1    2[BANK0 ] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;		None               void
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2147 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2149 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2150 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2151 ;;Total ram usage:        3 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:   12
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_setup
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text3
  2162  01335A                     __ptext3:
  2163                           	opt stack 0
  2164  01335A                     _timer1_init:
  2165                           	opt stack 17
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;incstack = 0
  2169                           ;timer1_init@prescaler stored from wreg
  2170  01335A  0100               	movlb	0	; () banked
  2171  01335C  6F62               	movwf	timer1_init@prescaler& (0+255),b
  2172                           
  2173                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  2174  01335E  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  2175  013362  0100               	movlb	0	; () banked
  2176  013364  3B61               	swapf	??_timer1_init& (0+255),f,b
  2177  013366  4761               	rlncf	??_timer1_init& (0+255),f,b
  2178  013368  4761               	rlncf	??_timer1_init& (0+255),f,b
  2179  01336A  50CD               	movf	4045,w,c	;volatile
  2180  01336C  0100               	movlb	0	; () banked
  2181  01336E  1961               	xorwf	??_timer1_init& (0+255),w,b
  2182  013370  0B3F               	andlw	-193
  2183  013372  1961               	xorwf	??_timer1_init& (0+255),w,b
  2184  013374  6ECD               	movwf	4045,c	;volatile
  2185                           
  2186                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  2187  013376  0E02               	movlw	2
  2188  013378  0100               	movlb	0	; () banked
  2189  01337A  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  2190  01337C  A4D8               	btfss	status,2,c
  2191  01337E  D002               	goto	l886
  2192                           
  2193                           ; BSR set to: 0
  2194  013380  86CD               	bsf	4045,3,c	;volatile
  2195  013382  D001               	goto	l9363
  2196  013384                     l886:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  2200  013384  96CD               	bcf	4045,3,c	;volatile
  2201  013386                     l9363:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  2205  013386  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  2206  01338A  0100               	movlb	0	; () banked
  2207  01338C  3B61               	swapf	??_timer1_init& (0+255),f,b
  2208  01338E  50CD               	movf	4045,w,c	;volatile
  2209  013390  0100               	movlb	0	; () banked
  2210  013392  1961               	xorwf	??_timer1_init& (0+255),w,b
  2211  013394  0BCF               	andlw	-49
  2212  013396  1961               	xorwf	??_timer1_init& (0+255),w,b
  2213  013398  6ECD               	movwf	4045,c	;volatile
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  2217  01339A  84CD               	bsf	4045,2,c	;volatile
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  2221  01339C  92CD               	bcf	4045,1,c	;volatile
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  2225  01339E  80CD               	bsf	4045,0,c	;volatile
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  2229  0133A0  909F               	bcf	3999,0,c	;volatile
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  2233  0133A2  909E               	bcf	3998,0,c	;volatile
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  2237  0133A4  809D               	bsf	3997,0,c	;volatile
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  2241  0133A6  8CF2               	bsf	intcon,6,c	;volatile
  2242                           
  2243                           ; BSR set to: 0
  2244  0133A8  0012               	return		;funcret
  2245  0133AA                     __end_of_timer1_init:
  2246                           	opt stack 0
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           intcon	equ	0xFF2
  2252                           intcon2	equ	0xFF1
  2253                           postinc0	equ	0xFEE
  2254                           wreg	equ	0xFE8
  2255                           postdec1	equ	0xFE5
  2256                           fsr1h	equ	0xFE2
  2257                           fsr1l	equ	0xFE1
  2258                           status	equ	0xFD8
  2259                           
  2260 ;; *************** function _timer0_init *****************
  2261 ;; Defined at:
  2262 ;;		line 34 in file "../My_library/My_PIC.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  prescaler       1    wreg     unsigned char 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;		None               void
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2280 ;;Total ram usage:        2 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:   12
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_setup
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text4
  2291  013500                     __ptext4:
  2292                           	opt stack 0
  2293  013500                     _timer0_init:
  2294                           	opt stack 17
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;incstack = 0
  2298                           ;timer0_init@prescaler stored from wreg
  2299  013500  0100               	movlb	0	; () banked
  2300  013502  6F61               	movwf	timer0_init@prescaler& (0+255),b
  2301                           
  2302                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  2303  013504  8ED5               	bsf	4053,7,c	;volatile
  2304                           
  2305                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  2306  013506  8CD5               	bsf	4053,6,c	;volatile
  2307                           
  2308                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  2309  013508  9AD5               	bcf	4053,5,c	;volatile
  2310                           
  2311                           ;My_PIC.c: 38: if (prescaler == 0) {
  2312  01350A  0100               	movlb	0	; () banked
  2313  01350C  5161               	movf	timer0_init@prescaler& (0+255),w,b
  2314  01350E  0100               	movlb	0	; () banked
  2315  013510  A4D8               	btfss	status,2,c
  2316  013512  D002               	goto	l881
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  2320  013514  86D5               	bsf	4053,3,c	;volatile
  2321                           
  2322                           ;My_PIC.c: 40: } else {
  2323  013516  D00C               	goto	l9351
  2324  013518                     l881:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  2328  013518  96D5               	bcf	4053,3,c	;volatile
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  2332  01351A  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  2333  01351E  0EFF               	movlw	255
  2334  013520  0100               	movlb	0	; () banked
  2335  013522  2760               	addwf	??_timer0_init& (0+255),f,b
  2336  013524  50D5               	movf	4053,w,c	;volatile
  2337  013526  0100               	movlb	0	; () banked
  2338  013528  1960               	xorwf	??_timer0_init& (0+255),w,b
  2339  01352A  0BF8               	andlw	-8
  2340  01352C  1960               	xorwf	??_timer0_init& (0+255),w,b
  2341  01352E  6ED5               	movwf	4053,c	;volatile
  2342  013530                     l9351:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;My_PIC.c: 43: }
  2346                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  2347  013530  8AF2               	bsf	intcon,5,c	;volatile
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  2351  013532  94F2               	bcf	intcon,2,c	;volatile
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  2355  013534  94F1               	bcf	intcon2,2,c	;volatile
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  2359  013536  8CF2               	bsf	intcon,6,c	;volatile
  2360                           
  2361                           ; BSR set to: 0
  2362  013538  0012               	return		;funcret
  2363  01353A                     __end_of_timer0_init:
  2364                           	opt stack 0
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           intcon	equ	0xFF2
  2370                           intcon2	equ	0xFF1
  2371                           postinc0	equ	0xFEE
  2372                           wreg	equ	0xFE8
  2373                           postdec1	equ	0xFE5
  2374                           fsr1h	equ	0xFE2
  2375                           fsr1l	equ	0xFE1
  2376                           status	equ	0xFD8
  2377                           
  2378 ;; *************** function _USB_CDC_init *****************
  2379 ;; Defined at:
  2380 ;;		line 20 in file "../My_library/USB_CDC/My_USB_CDC.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:   14
  2401 ;; This function calls:
  2402 ;;		_USBDeviceAttach
  2403 ;;		_USBDeviceInit
  2404 ;;		_USB_CDC_buffer_init
  2405 ;; This function is called by:
  2406 ;;		_setup
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text5
  2411  013962                     __ptext5:
  2412                           	opt stack 0
  2413  013962                     _USB_CDC_init:
  2414                           	opt stack 15
  2415                           
  2416                           ;My_USB_CDC.c: 21: USBDeviceInit();
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;incstack = 0
  2420  013962  EC78  F087         	call	_USBDeviceInit	;wreg free
  2421                           
  2422                           ;My_USB_CDC.c: 22: USBDeviceAttach();
  2423  013966  EC9D  F09A         	call	_USBDeviceAttach	;wreg free
  2424                           
  2425                           ;My_USB_CDC.c: 23: USB_CDC_buffer_init();
  2426  01396A  ECD5  F099         	call	_USB_CDC_buffer_init	;wreg free
  2427  01396E  0012               	return		;funcret
  2428  013970                     __end_of_USB_CDC_init:
  2429                           	opt stack 0
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           intcon	equ	0xFF2
  2435                           intcon2	equ	0xFF1
  2436                           postinc0	equ	0xFEE
  2437                           wreg	equ	0xFE8
  2438                           postdec1	equ	0xFE5
  2439                           fsr1h	equ	0xFE2
  2440                           fsr1l	equ	0xFE1
  2441                           status	equ	0xFD8
  2442                           
  2443 ;; *************** function _USB_CDC_buffer_init *****************
  2444 ;; Defined at:
  2445 ;;		line 26 in file "../My_library/USB_CDC/My_USB_CDC.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;		None               void
  2452 ;; Registers used:
  2453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:   13
  2466 ;; This function calls:
  2467 ;;		_ringbuf_init
  2468 ;; This function is called by:
  2469 ;;		_USB_CDC_init
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text6
  2474  0133AA                     __ptext6:
  2475                           	opt stack 0
  2476  0133AA                     _USB_CDC_buffer_init:
  2477                           	opt stack 15
  2478                           
  2479                           ;My_USB_CDC.c: 27: static uint8_t rxbuf[250];
  2480                           ;My_USB_CDC.c: 28: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
  2481                           
  2482                           ;incstack = 0
  2483  0133AA  0EDE               	movlw	low _usb_rx
  2484  0133AC  0100               	movlb	0	; () banked
  2485  0133AE  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2486  0133B0  0E01               	movlw	high _usb_rx
  2487  0133B2  0100               	movlb	0	; () banked
  2488  0133B4  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2489  0133B6  0E00               	movlw	low USB_CDC_buffer_init@rxbuf
  2490  0133B8  0100               	movlb	0	; () banked
  2491  0133BA  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2492  0133BC  0E05               	movlw	high USB_CDC_buffer_init@rxbuf
  2493  0133BE  0100               	movlb	0	; () banked
  2494  0133C0  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2495  0133C2  0E00               	movlw	0
  2496  0133C4  0100               	movlb	0	; () banked
  2497  0133C6  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2498  0133C8  0EFA               	movlw	250
  2499  0133CA  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2500  0133CC  EC83  F099         	call	_ringbuf_init	;wreg free
  2501                           
  2502                           ;My_USB_CDC.c: 29: static uint8_t txbuf[250];
  2503                           ;My_USB_CDC.c: 30: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
  2504  0133D0  0EE6               	movlw	low _usb_tx
  2505  0133D2  0100               	movlb	0	; () banked
  2506  0133D4  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2507  0133D6  0E01               	movlw	high _usb_tx
  2508  0133D8  0100               	movlb	0	; () banked
  2509  0133DA  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2510  0133DC  0E00               	movlw	low USB_CDC_buffer_init@txbuf
  2511  0133DE  0100               	movlb	0	; () banked
  2512  0133E0  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2513  0133E2  0E06               	movlw	high USB_CDC_buffer_init@txbuf
  2514  0133E4  0100               	movlb	0	; () banked
  2515  0133E6  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2516  0133E8  0E00               	movlw	0
  2517  0133EA  0100               	movlb	0	; () banked
  2518  0133EC  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2519  0133EE  0EFA               	movlw	250
  2520  0133F0  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2521  0133F2  EC83  F099         	call	_ringbuf_init	;wreg free
  2522  0133F6  0012               	return		;funcret
  2523  0133F8                     __end_of_USB_CDC_buffer_init:
  2524                           	opt stack 0
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           intcon	equ	0xFF2
  2530                           intcon2	equ	0xFF1
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           postdec1	equ	0xFE5
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _ringbuf_init *****************
  2539 ;; Defined at:
  2540 ;;		line 5 in file "../My_library/My_ringbuf.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  2543 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
  2544 ;;		 -> usb_tx(8), usb_rx(8), 
  2545 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  2546 ;;		 -> setup@uartrx(100), setup@uarttx(1000), terminal_task@buf(100), ST7032_init@buf(200), 
  2547 ;;		 -> USB_CDC_buffer_init@txbuf(250), USB_CDC_buffer_init@rxbuf(250), 
  2548 ;;  bufsize         2    4[BANK0 ] unsigned int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;		None               void
  2553 ;; Registers used:
  2554 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2560 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;Total ram usage:        6 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:   12
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_USB_CDC_buffer_init
  2571 ;;		_setup
  2572 ;;		_ST7032_init
  2573 ;;		_terminal_task
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text7
  2578  013306                     __ptext7:
  2579                           	opt stack 0
  2580  013306                     _ringbuf_init:
  2581                           	opt stack 17
  2582                           
  2583                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  2584                           
  2585                           ;incstack = 0
  2586  013306  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  2587  01330A  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  2588  01330E  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  2589  013312  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  2590                           
  2591                           ;My_ringbuf.c: 7: rb->size = bufsize;
  2592  013316  0100               	movlb	0	; () banked
  2593  013318  EE20 F002          	lfsr	2,2
  2594  01331C  5160               	movf	ringbuf_init@rb& (0+255),w,b
  2595  01331E  26D9               	addwf	fsr2l,f,c
  2596  013320  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2597  013322  22DA               	addwfc	fsr2h,f,c
  2598  013324  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  2599  013328  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;My_ringbuf.c: 8: rb->head = 0;
  2603  01332C  0100               	movlb	0	; () banked
  2604  01332E  EE20 F004          	lfsr	2,4
  2605  013332  5160               	movf	ringbuf_init@rb& (0+255),w,b
  2606  013334  26D9               	addwf	fsr2l,f,c
  2607  013336  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2608  013338  22DA               	addwfc	fsr2h,f,c
  2609  01333A  0E00               	movlw	0
  2610  01333C  6EDE               	movwf	postinc2,c
  2611  01333E  0E00               	movlw	0
  2612  013340  6EDD               	movwf	postdec2,c
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;My_ringbuf.c: 9: rb->tail = 0;
  2616  013342  0100               	movlb	0	; () banked
  2617  013344  EE20 F006          	lfsr	2,6
  2618  013348  5160               	movf	ringbuf_init@rb& (0+255),w,b
  2619  01334A  26D9               	addwf	fsr2l,f,c
  2620  01334C  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2621  01334E  22DA               	addwfc	fsr2h,f,c
  2622  013350  0E00               	movlw	0
  2623  013352  6EDE               	movwf	postinc2,c
  2624  013354  0E00               	movlw	0
  2625  013356  6EDD               	movwf	postdec2,c
  2626                           
  2627                           ; BSR set to: 0
  2628  013358  0012               	return		;funcret
  2629  01335A                     __end_of_ringbuf_init:
  2630                           	opt stack 0
  2631                           tblptru	equ	0xFF8
  2632                           tblptrh	equ	0xFF7
  2633                           tblptrl	equ	0xFF6
  2634                           tablat	equ	0xFF5
  2635                           intcon	equ	0xFF2
  2636                           intcon2	equ	0xFF1
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           postdec1	equ	0xFE5
  2640                           fsr1h	equ	0xFE2
  2641                           fsr1l	equ	0xFE1
  2642                           postinc2	equ	0xFDE
  2643                           postdec2	equ	0xFDD
  2644                           fsr2h	equ	0xFDA
  2645                           fsr2l	equ	0xFD9
  2646                           status	equ	0xFD8
  2647                           
  2648 ;; *************** function _USBDeviceInit *****************
  2649 ;; Defined at:
  2650 ;;		line 299 in file "../My_library/USB_CDC/usb/usb_device.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  i               1    8[BANK0 ] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;		None               void
  2657 ;; Registers used:
  2658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;Total ram usage:        1 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:   13
  2671 ;; This function calls:
  2672 ;;		_memset
  2673 ;; This function is called by:
  2674 ;;		_USB_CDC_init
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text8
  2679  010EF0                     __ptext8:
  2680                           	opt stack 0
  2681  010EF0                     _USBDeviceInit:
  2682                           	opt stack 15
  2683                           
  2684                           ;usb_device.c: 301: uint8_t i;
  2685                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;incstack = 0
  2689  010EF0  98A0               	bcf	4000,4,c	;volatile
  2690                           
  2691                           ;usb_device.c: 306: {UEIR = 0;};
  2692  010EF2  0E00               	movlw	0
  2693  010EF4  6E63               	movwf	3939,c	;volatile
  2694                           
  2695                           ;usb_device.c: 309: {UIR = 0;};
  2696  010EF6  0E00               	movlw	0
  2697  010EF8  6E62               	movwf	3938,c	;volatile
  2698                           
  2699                           ;usb_device.c: 312: UEP0 = 0;
  2700  010EFA  0E00               	movlw	0
  2701  010EFC  010F               	movlb	15	; () banked
  2702  010EFE  6F26               	movwf	38,b	;volatile
  2703                           
  2704                           ; BSR set to: 15
  2705                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  2706  010F00  0E27               	movlw	39
  2707  010F02  0100               	movlb	0	; () banked
  2708  010F04  6F60               	movwf	memset@p1& (0+255),b
  2709  010F06  0E0F               	movlw	15
  2710  010F08  0100               	movlb	0	; () banked
  2711  010F0A  6F61               	movwf	(memset@p1+1)& (0+255),b
  2712  010F0C  0E00               	movlw	0
  2713  010F0E  0100               	movlb	0	; () banked
  2714  010F10  6F63               	movwf	(memset@c+1)& (0+255),b
  2715  010F12  0E00               	movlw	0
  2716  010F14  6F62               	movwf	memset@c& (0+255),b
  2717  010F16  0E00               	movlw	0
  2718  010F18  0100               	movlb	0	; () banked
  2719  010F1A  6F65               	movwf	(memset@n+1)& (0+255),b
  2720  010F1C  0E02               	movlw	2
  2721  010F1E  6F64               	movwf	memset@n& (0+255),b
  2722  010F20  EC0C  F09B         	call	_memset	;wreg free
  2723                           
  2724                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2725  010F24  0E16               	movlw	22
  2726  010F26  010F               	movlb	15	; () banked
  2727  010F28  6F39               	movwf	57,b	;volatile
  2728                           
  2729                           ; BSR set to: 15
  2730  010F2A  0E9F               	movlw	159
  2731  010F2C  010F               	movlb	15	; () banked
  2732  010F2E  6F37               	movwf	55,b	;volatile
  2733                           
  2734                           ; BSR set to: 15
  2735  010F30  0E7B               	movlw	123
  2736  010F32  010F               	movlb	15	; () banked
  2737  010F34  6F36               	movwf	54,b	;volatile
  2738                           
  2739                           ; BSR set to: 15
  2740                           ;usb_device.c: 319: ;
  2741                           ;usb_device.c: 322: ;
  2742                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  2743  010F36  0E00               	movlw	0
  2744  010F38  0100               	movlb	0	; () banked
  2745  010F3A  6F68               	movwf	USBDeviceInit@i& (0+255),b
  2746  010F3C                     l9145:
  2747                           
  2748                           ; BSR set to: 0
  2749  010F3C  0E0B               	movlw	11
  2750  010F3E  0100               	movlb	0	; () banked
  2751  010F40  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  2752  010F42  D001               	goto	l9149
  2753  010F44  D010               	goto	l132
  2754  010F46                     l9149:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;usb_device.c: 326: {
  2758                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  2759  010F46  0100               	movlb	0	; () banked
  2760  010F48  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2761  010F4A  0D04               	mullw	4
  2762  010F4C  0E00               	movlw	0
  2763  010F4E  24F3               	addwf	prodl,w,c
  2764  010F50  6ED9               	movwf	fsr2l,c
  2765  010F52  0E0D               	movlw	13
  2766  010F54  20F4               	addwfc	prodh,w,c
  2767  010F56  6EDA               	movwf	fsr2h,c
  2768  010F58  6ADE               	clrf	postinc2,c
  2769  010F5A  6ADE               	clrf	postinc2,c
  2770  010F5C  6ADE               	clrf	postinc2,c
  2771  010F5E  6ADD               	clrf	postdec2,c
  2772                           
  2773                           ; BSR set to: 0
  2774  010F60  0100               	movlb	0	; () banked
  2775  010F62  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  2776  010F64  D7EB               	goto	l9145
  2777  010F66                     l132:
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;usb_device.c: 328: }
  2781                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  2782  010F66  8C65               	bsf	3941,6,c	;volatile
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;usb_device.c: 334: UADDR = 0x00;
  2786  010F68  0E00               	movlw	0
  2787  010F6A  010F               	movlb	15	; () banked
  2788  010F6C  6F38               	movwf	56,b	;volatile
  2789                           
  2790                           ; BSR set to: 15
  2791                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  2792  010F6E  9865               	bcf	3941,4,c	;volatile
  2793                           
  2794                           ; BSR set to: 15
  2795                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  2796  010F70  9C65               	bcf	3941,6,c	;volatile
  2797                           
  2798                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
  2799  010F72  D009               	goto	l9169
  2800  010F74                     l9161:
  2801                           
  2802                           ;usb_device.c: 344: {
  2803                           ;usb_device.c: 345: (UIR &= 0xF7);
  2804  010F74  9662               	bcf	3938,3,c	;volatile
  2805                           
  2806                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  2807  010F76  0E00               	movlw	0
  2808  010F78  6E0D               	movwf	_inPipes+3,c	;volatile
  2809                           
  2810                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  2811  010F7A  0E00               	movlw	0
  2812  010F7C  6E04               	movwf	_outPipes+3,c	;volatile
  2813                           
  2814                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  2815  010F7E  0E00               	movlw	0
  2816  010F80  6E06               	movwf	_outPipes+5,c	;volatile
  2817  010F82  0E00               	movlw	0
  2818  010F84  6E05               	movwf	_outPipes+4,c	;volatile
  2819  010F86                     l9169:
  2820  010F86  B662               	btfsc	3938,3,c	;volatile
  2821  010F88  D7F5               	goto	l9161
  2822                           
  2823                           ;usb_device.c: 350: }
  2824                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  2825  010F8A  0E01               	movlw	1
  2826  010F8C  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  2827                           
  2828                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  2829  010F8E  0E01               	movlw	1
  2830  010F90  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  2831                           
  2832                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  2833  010F92  0E00               	movlw	0
  2834  010F94  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
  2835                           
  2836                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  2837  010F96  0E00               	movlw	0
  2838  010F98  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  2839                           
  2840                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  2841  010F9A  0E00               	movlw	0
  2842  010F9C  0100               	movlb	0	; () banked
  2843  010F9E  6FBB               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  2844                           
  2845                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  2846  010FA0  0E00               	movlw	0
  2847  010FA2  0100               	movlb	0	; () banked
  2848  010FA4  6F68               	movwf	USBDeviceInit@i& (0+255),b
  2849  010FA6                     l9173:
  2850                           
  2851                           ; BSR set to: 0
  2852  010FA6  0E02               	movlw	2
  2853  010FA8  0100               	movlb	0	; () banked
  2854  010FAA  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  2855  010FAC  D001               	goto	l9177
  2856  010FAE  D033               	goto	l9183
  2857  010FB0                     l9177:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;usb_device.c: 364: {
  2861                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  2862  010FB0  0100               	movlb	0	; () banked
  2863  010FB2  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2864  010FB4  0D02               	mullw	2
  2865  010FB6  0E10               	movlw	low _pBDTEntryIn
  2866  010FB8  24F3               	addwf	prodl,w,c
  2867  010FBA  6ED9               	movwf	fsr2l,c
  2868  010FBC  0E00               	movlw	high _pBDTEntryIn
  2869  010FBE  20F4               	addwfc	prodh,w,c
  2870  010FC0  6EDA               	movwf	fsr2h,c
  2871  010FC2  0E00               	movlw	0
  2872  010FC4  6EDE               	movwf	postinc2,c
  2873  010FC6  0E00               	movlw	0
  2874  010FC8  6EDD               	movwf	postdec2,c
  2875                           
  2876                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  2877  010FCA  0100               	movlb	0	; () banked
  2878  010FCC  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2879  010FCE  0D02               	mullw	2
  2880  010FD0  0E9F               	movlw	low _pBDTEntryOut
  2881  010FD2  24F3               	addwf	prodl,w,c
  2882  010FD4  6ED9               	movwf	fsr2l,c
  2883  010FD6  0E00               	movlw	high _pBDTEntryOut
  2884  010FD8  20F4               	addwfc	prodh,w,c
  2885  010FDA  6EDA               	movwf	fsr2h,c
  2886  010FDC  0E00               	movlw	0
  2887  010FDE  6EDE               	movwf	postinc2,c
  2888  010FE0  0E00               	movlw	0
  2889  010FE2  6EDD               	movwf	postdec2,c
  2890                           
  2891                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  2892  010FE4  0100               	movlb	0	; () banked
  2893  010FE6  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2894  010FE8  0D01               	mullw	1
  2895  010FEA  0E16               	movlw	low _ep_data_in
  2896  010FEC  24F3               	addwf	prodl,w,c
  2897  010FEE  6ED9               	movwf	fsr2l,c
  2898  010FF0  0E00               	movlw	high _ep_data_in
  2899  010FF2  20F4               	addwfc	prodh,w,c
  2900  010FF4  6EDA               	movwf	fsr2h,c
  2901  010FF6  0E00               	movlw	0
  2902  010FF8  6EDF               	movwf	indf2,c
  2903                           
  2904                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  2905  010FFA  0100               	movlb	0	; () banked
  2906  010FFC  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2907  010FFE  0D01               	mullw	1
  2908  011000  0EA5               	movlw	low _ep_data_out
  2909  011002  24F3               	addwf	prodl,w,c
  2910  011004  6ED9               	movwf	fsr2l,c
  2911  011006  0E00               	movlw	high _ep_data_out
  2912  011008  20F4               	addwfc	prodh,w,c
  2913  01100A  6EDA               	movwf	fsr2h,c
  2914  01100C  0E00               	movlw	0
  2915  01100E  6EDF               	movwf	indf2,c
  2916                           
  2917                           ; BSR set to: 0
  2918  011010  0100               	movlb	0	; () banked
  2919  011012  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  2920  011014  D7C8               	goto	l9173
  2921  011016                     l9183:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;usb_device.c: 369: }
  2925                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2926  011016  0E08               	movlw	8
  2927  011018  6E10               	movwf	_pBDTEntryIn,c
  2928  01101A  0E0D               	movlw	13
  2929  01101C  6E11               	movwf	_pBDTEntryIn+1,c
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  2933  01101E  0E16               	movlw	22
  2934  011020  010F               	movlb	15	; () banked
  2935  011022  6F26               	movwf	38,b	;volatile
  2936                           
  2937                           ; BSR set to: 15
  2938                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  2939  011024  0E0D               	movlw	13
  2940  011026  010D               	movlb	13	; () banked
  2941  011028  6F03               	movwf	3,b	;volatile
  2942  01102A  0E30               	movlw	48
  2943  01102C  6F02               	movwf	2,b	;volatile
  2944                           
  2945                           ; BSR set to: 13
  2946                           ;usb_device.c: 377: BDT[0].CNT = 8;
  2947  01102E  0E08               	movlw	8
  2948  011030  010D               	movlb	13	; () banked
  2949  011032  6F01               	movwf	1,b	;volatile
  2950                           
  2951                           ; BSR set to: 13
  2952                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  2953  011034  0E04               	movlw	4
  2954  011036  010D               	movlb	13	; () banked
  2955  011038  6F00               	movwf	0,b	;volatile
  2956                           
  2957                           ; BSR set to: 13
  2958                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  2959  01103A  010D               	movlb	13	; () banked
  2960  01103C  8F00               	bsf	0,7,b	;volatile
  2961                           
  2962                           ; BSR set to: 13
  2963                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  2964  01103E  0E00               	movlw	0
  2965  011040  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  2966                           
  2967                           ; BSR set to: 13
  2968                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
  2969  011042  0E00               	movlw	0
  2970  011044  6E24               	movwf	_USBDeviceState,c	;volatile
  2971                           
  2972                           ; BSR set to: 13
  2973  011046  0012               	return		;funcret
  2974  011048                     __end_of_USBDeviceInit:
  2975                           	opt stack 0
  2976                           tblptru	equ	0xFF8
  2977                           tblptrh	equ	0xFF7
  2978                           tblptrl	equ	0xFF6
  2979                           tablat	equ	0xFF5
  2980                           prodh	equ	0xFF4
  2981                           prodl	equ	0xFF3
  2982                           intcon	equ	0xFF2
  2983                           intcon2	equ	0xFF1
  2984                           postinc0	equ	0xFEE
  2985                           wreg	equ	0xFE8
  2986                           postdec1	equ	0xFE5
  2987                           fsr1h	equ	0xFE2
  2988                           fsr1l	equ	0xFE1
  2989                           indf2	equ	0xFDF
  2990                           postinc2	equ	0xFDE
  2991                           postdec2	equ	0xFDD
  2992                           fsr2h	equ	0xFDA
  2993                           fsr2l	equ	0xFD9
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _memset *****************
  2997 ;; Defined at:
  2998 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  p1              2    0[BANK0 ] PTR void 
  3001 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  3002 ;;  c               2    2[BANK0 ] int 
  3003 ;;  n               2    4[BANK0 ] unsigned int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  p               2    6[BANK0 ] PTR unsigned char 
  3006 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  2    0[BANK0 ] PTR void 
  3009 ;; Registers used:
  3010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3016 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3019 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3020 ;;Total ram usage:        8 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:   12
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_USBDeviceInit
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text9
  3031  013618                     __ptext9:
  3032                           	opt stack 0
  3033  013618                     _memset:
  3034                           	opt stack 15
  3035                           
  3036                           ; BSR set to: 13
  3037                           ;incstack = 0
  3038  013618  C060  F066         	movff	memset@p1,memset@p
  3039  01361C  C061  F067         	movff	memset@p1+1,memset@p+1
  3040  013620  D009               	goto	l8713
  3041  013622                     l8709:
  3042  013622  C066  FFD9         	movff	memset@p,fsr2l
  3043  013626  C067  FFDA         	movff	memset@p+1,fsr2h
  3044  01362A  C062  FFDF         	movff	memset@c,indf2
  3045  01362E  0100               	movlb	0	; () banked
  3046  013630  4B66               	infsnz	memset@p& (0+255),f,b
  3047  013632  2B67               	incf	(memset@p+1)& (0+255),f,b
  3048  013634                     l8713:
  3049  013634  0100               	movlb	0	; () banked
  3050  013636  0764               	decf	memset@n& (0+255),f,b
  3051  013638  A0D8               	btfss	status,0,c
  3052  01363A  0765               	decf	(memset@n+1)& (0+255),f,b
  3053  01363C  0100               	movlb	0	; () banked
  3054  01363E  2964               	incf	memset@n& (0+255),w,b
  3055  013640  E1F0               	bnz	l8709
  3056  013642  0100               	movlb	0	; () banked
  3057  013644  2965               	incf	(memset@n+1)& (0+255),w,b
  3058  013646  B4D8               	btfsc	status,2,c
  3059  013648  0012               	return	
  3060  01364A  D7EB               	goto	l8709
  3061  01364C                     __end_of_memset:
  3062                           	opt stack 0
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           prodh	equ	0xFF4
  3068                           prodl	equ	0xFF3
  3069                           intcon	equ	0xFF2
  3070                           intcon2	equ	0xFF1
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           postdec1	equ	0xFE5
  3074                           fsr1h	equ	0xFE2
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           postinc2	equ	0xFDE
  3078                           postdec2	equ	0xFDD
  3079                           fsr2h	equ	0xFDA
  3080                           fsr2l	equ	0xFD9
  3081                           status	equ	0xFD8
  3082                           
  3083 ;; *************** function _USBDeviceAttach *****************
  3084 ;; Defined at:
  3085 ;;		line 1353 in file "../My_library/USB_CDC/usb/usb_device.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;		None               void
  3092 ;; Registers used:
  3093 ;;		wreg, status,2
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:   12
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_USB_CDC_init
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text10
  3114  01353A                     __ptext10:
  3115                           	opt stack 0
  3116  01353A                     _USBDeviceAttach:
  3117                           	opt stack 16
  3118                           
  3119                           ;usb_device.c: 1357: {
  3120                           ;usb_device.c: 1358: if(1 == 1)
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;incstack = 0
  3124  01353A  5024               	movf	_USBDeviceState,w,c	;volatile
  3125  01353C  A4D8               	btfss	status,2,c
  3126  01353E  0012               	return	
  3127                           
  3128                           ;usb_device.c: 1359: {
  3129                           ;usb_device.c: 1361: UCON = 0;
  3130  013540  0E00               	movlw	0
  3131  013542  6E65               	movwf	3941,c	;volatile
  3132                           
  3133                           ;usb_device.c: 1364: UIE = 0;
  3134  013544  0E00               	movlw	0
  3135  013546  010F               	movlb	15	; () banked
  3136  013548  6F36               	movwf	54,b	;volatile
  3137                           
  3138                           ;usb_device.c: 1368: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  3139  01354A  0E16               	movlw	22
  3140  01354C  010F               	movlb	15	; () banked
  3141  01354E  6F39               	movwf	57,b	;volatile
  3142  013550  0E9F               	movlw	159
  3143  013552  010F               	movlb	15	; () banked
  3144  013554  6F37               	movwf	55,b	;volatile
  3145  013556  0E7B               	movlw	123
  3146  013558  010F               	movlb	15	; () banked
  3147  01355A  6F36               	movwf	54,b	;volatile
  3148                           
  3149                           ; BSR set to: 15
  3150                           ;usb_device.c: 1370: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  3151  01355C  8ED0               	bsf	4048,7,c	;volatile
  3152                           
  3153                           ; BSR set to: 15
  3154  01355E  88A2               	bsf	4002,4,c	;volatile
  3155                           
  3156                           ; BSR set to: 15
  3157  013560  88A0               	bsf	4000,4,c	;volatile
  3158                           
  3159                           ; BSR set to: 15
  3160  013562  8EF2               	bsf	intcon,7,c	;volatile
  3161                           
  3162                           ;usb_device.c: 1373: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3163  013564  D001               	goto	l193
  3164  013566                     l194:
  3165  013566  8665               	bsf	3941,3,c	;volatile
  3166  013568                     l193:
  3167  013568  A665               	btfss	3941,3,c	;volatile
  3168  01356A  D7FD               	goto	l194
  3169                           
  3170                           ;usb_device.c: 1376: USBDeviceState = ATTACHED_STATE;
  3171  01356C  0E01               	movlw	1
  3172  01356E  6E24               	movwf	_USBDeviceState,c	;volatile
  3173  013570  0012               	return	
  3174  013572                     __end_of_USBDeviceAttach:
  3175                           	opt stack 0
  3176                           tblptru	equ	0xFF8
  3177                           tblptrh	equ	0xFF7
  3178                           tblptrl	equ	0xFF6
  3179                           tablat	equ	0xFF5
  3180                           prodh	equ	0xFF4
  3181                           prodl	equ	0xFF3
  3182                           intcon	equ	0xFF2
  3183                           intcon2	equ	0xFF1
  3184                           postinc0	equ	0xFEE
  3185                           wreg	equ	0xFE8
  3186                           postdec1	equ	0xFE5
  3187                           fsr1h	equ	0xFE2
  3188                           fsr1l	equ	0xFE1
  3189                           indf2	equ	0xFDF
  3190                           postinc2	equ	0xFDE
  3191                           postdec2	equ	0xFDD
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           status	equ	0xFD8
  3195                           
  3196 ;; *************** function _UART_init *****************
  3197 ;; Defined at:
  3198 ;;		line 10 in file "../My_library/My_UART.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;		None               void
  3205 ;; Registers used:
  3206 ;;		wreg, status,2
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:   12
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_setup
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text11
  3227  013828                     __ptext11:
  3228                           	opt stack 0
  3229  013828                     _UART_init:
  3230                           	opt stack 17
  3231                           
  3232                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  3233                           
  3234                           ;incstack = 0
  3235  013828  9CAD               	bcf	4013,6,c	;volatile
  3236                           
  3237                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  3238  01382A  8AAD               	bsf	4013,5,c	;volatile
  3239                           
  3240                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  3241  01382C  98AD               	bcf	4013,4,c	;volatile
  3242                           
  3243                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  3244  01382E  94AD               	bcf	4013,2,c	;volatile
  3245                           
  3246                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  3247  013830  8EAC               	bsf	4012,7,c	;volatile
  3248                           
  3249                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  3250  013832  9CAC               	bcf	4012,6,c	;volatile
  3251                           
  3252                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  3253  013834  88AC               	bsf	4012,4,c	;volatile
  3254                           
  3255                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  3256  013836  867E               	bsf	3966,3,c	;volatile
  3257                           
  3258                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  3259  013838  0E19               	movlw	25
  3260  01383A  6EB0               	movwf	4016,c	;volatile
  3261                           
  3262                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  3263  01383C  0E00               	movlw	0
  3264  01383E  6E7F               	movwf	3967,c	;volatile
  3265                           
  3266                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  3267  013840  9A9F               	bcf	3999,5,c	;volatile
  3268                           
  3269                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  3270  013842  989F               	bcf	3999,4,c	;volatile
  3271                           
  3272                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  3273  013844  8A9D               	bsf	3997,5,c	;volatile
  3274                           
  3275                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  3276  013846  8CF2               	bsf	intcon,6,c	;volatile
  3277  013848  0012               	return		;funcret
  3278  01384A                     __end_of_UART_init:
  3279                           	opt stack 0
  3280                           tblptru	equ	0xFF8
  3281                           tblptrh	equ	0xFF7
  3282                           tblptrl	equ	0xFF6
  3283                           tablat	equ	0xFF5
  3284                           prodh	equ	0xFF4
  3285                           prodl	equ	0xFF3
  3286                           intcon	equ	0xFF2
  3287                           intcon2	equ	0xFF1
  3288                           postinc0	equ	0xFEE
  3289                           wreg	equ	0xFE8
  3290                           postdec1	equ	0xFE5
  3291                           fsr1h	equ	0xFE2
  3292                           fsr1l	equ	0xFE1
  3293                           indf2	equ	0xFDF
  3294                           postinc2	equ	0xFDE
  3295                           postdec2	equ	0xFDD
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8
  3299                           
  3300 ;; *************** function _RTCC_init *****************
  3301 ;; Defined at:
  3302 ;;		line 22 in file "../My_library/My_RTCC.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;		None               void
  3309 ;; Registers used:
  3310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3320 ;;Total ram usage:        0 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:   16
  3323 ;; This function calls:
  3324 ;;		_RTCC_from_RTCC
  3325 ;;		_RTCC_from_epoch
  3326 ;; This function is called by:
  3327 ;;		_setup
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text12
  3332  0130B8                     __ptext12:
  3333                           	opt stack 0
  3334  0130B8                     _RTCC_init:
  3335                           	opt stack 13
  3336                           
  3337                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  3338                           
  3339                           ;incstack = 0
  3340  0130B8  010F               	movlb	15	; () banked
  3341  0130BA  8B3F               	bsf	63,5,b	;volatile
  3342                           
  3343                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  3344  0130BC  010F               	movlb	15	; () banked
  3345  0130BE  BB3F               	btfsc	63,5,b	;volatile
  3346  0130C0  D006               	goto	l9403
  3347                           
  3348                           ; BSR set to: 15
  3349                           ;My_RTCC.c: 25: EECON2 = 0x55;
  3350  0130C2  0E55               	movlw	85
  3351  0130C4  6EA7               	movwf	4007,c	;volatile
  3352                           
  3353                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  3354  0130C6  0EAA               	movlw	170
  3355  0130C8  6EA7               	movwf	4007,c	;volatile
  3356                           
  3357                           ; BSR set to: 15
  3358                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  3359  0130CA  010F               	movlb	15	; () banked
  3360  0130CC  8B3F               	bsf	63,5,b	;volatile
  3361  0130CE                     l9403:
  3362                           
  3363                           ; BSR set to: 15
  3364                           ;My_RTCC.c: 28: }
  3365                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  3366  0130CE  010F               	movlb	15	; () banked
  3367  0130D0  8F3F               	bsf	63,7,b	;volatile
  3368                           
  3369                           ; BSR set to: 15
  3370                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  3371  0130D2  010F               	movlb	15	; () banked
  3372  0130D4  953F               	bcf	63,2,b	;volatile
  3373                           
  3374                           ; BSR set to: 15
  3375                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  3376  0130D6  010F               	movlb	15	; () banked
  3377  0130D8  833C               	bsf	60,1,b	;volatile
  3378                           
  3379                           ; BSR set to: 15
  3380                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  3381  0130DA  010F               	movlb	15	; () banked
  3382  0130DC  853C               	bsf	60,2,b	;volatile
  3383                           
  3384                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  3385  0130DE  0E00               	movlw	0
  3386  0130E0  010F               	movlb	15	; () banked
  3387  0130E2  6F3E               	movwf	62,b	;volatile
  3388                           
  3389                           ; BSR set to: 15
  3390                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  3391  0130E4  86CD               	bsf	4045,3,c	;volatile
  3392                           
  3393                           ; BSR set to: 15
  3394                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
  3395  0130E6  0EB8               	movlw	low _now
  3396  0130E8  0100               	movlb	0	; () banked
  3397  0130EA  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3398  0130EC  0E01               	movlw	high _now
  3399  0130EE  0100               	movlb	0	; () banked
  3400  0130F0  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3401  0130F2  EC82  F09C         	call	_RTCC_from_RTCC	;wreg free
  3402                           
  3403                           ;My_RTCC.c: 37: if (now.DD == 0) {
  3404  0130F6  0101               	movlb	1	; () banked
  3405  0130F8  51C0               	movf	(_now+8)& (0+255),w,b
  3406  0130FA  A4D8               	btfss	status,2,c
  3407  0130FC  0012               	return	
  3408                           
  3409                           ; BSR set to: 1
  3410                           ;My_RTCC.c: 38: now.epoch = 0;
  3411  0130FE  0E00               	movlw	0
  3412  013100  0101               	movlb	1	; () banked
  3413  013102  6FB8               	movwf	_now& (0+255),b
  3414  013104  0E00               	movlw	0
  3415  013106  6FB9               	movwf	(_now+1)& (0+255),b
  3416  013108  0E00               	movlw	0
  3417  01310A  6FBA               	movwf	(_now+2)& (0+255),b
  3418  01310C  0E00               	movlw	0
  3419  01310E  6FBB               	movwf	(_now+3)& (0+255),b
  3420                           
  3421                           ; BSR set to: 1
  3422                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
  3423  013110  0EB8               	movlw	low _now
  3424  013112  0100               	movlb	0	; () banked
  3425  013114  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  3426  013116  0E01               	movlw	high _now
  3427  013118  0100               	movlb	0	; () banked
  3428  01311A  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  3429  01311C  EC75  F09C         	call	_RTCC_from_epoch	;wreg free
  3430  013120  0012               	return	
  3431  013122                     __end_of_RTCC_init:
  3432                           	opt stack 0
  3433                           tblptru	equ	0xFF8
  3434                           tblptrh	equ	0xFF7
  3435                           tblptrl	equ	0xFF6
  3436                           tablat	equ	0xFF5
  3437                           prodh	equ	0xFF4
  3438                           prodl	equ	0xFF3
  3439                           intcon	equ	0xFF2
  3440                           intcon2	equ	0xFF1
  3441                           postinc0	equ	0xFEE
  3442                           wreg	equ	0xFE8
  3443                           postdec1	equ	0xFE5
  3444                           fsr1h	equ	0xFE2
  3445                           fsr1l	equ	0xFE1
  3446                           indf2	equ	0xFDF
  3447                           postinc2	equ	0xFDE
  3448                           postdec2	equ	0xFDD
  3449                           fsr2h	equ	0xFDA
  3450                           fsr2l	equ	0xFD9
  3451                           status	equ	0xFD8
  3452                           
  3453 ;; *************** function _RTCC_from_epoch *****************
  3454 ;; Defined at:
  3455 ;;		line 210 in file "../My_library/My_RTCC.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  tm              2   47[BANK0 ] PTR struct .
  3458 ;;		 -> now(14), 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;		None               void
  3463 ;; Registers used:
  3464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;Total ram usage:        2 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:   15
  3477 ;; This function calls:
  3478 ;;		_caltime_to_RTCC
  3479 ;;		_epoch_to_caltime
  3480 ;; This function is called by:
  3481 ;;		_RTCC_init
  3482 ;;		_setup
  3483 ;;		_RTCC_adjust_time_inc
  3484 ;;		_RTCC_adjust_time_dec
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text13
  3489  0138EA                     __ptext13:
  3490                           	opt stack 0
  3491  0138EA                     _RTCC_from_epoch:
  3492                           	opt stack 13
  3493                           
  3494                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
  3495                           
  3496                           ;incstack = 0
  3497  0138EA  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  3498  0138EE  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  3499  0138F2  ECC2  F085         	call	_epoch_to_caltime	;wreg free
  3500                           
  3501                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
  3502  0138F6  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  3503  0138FA  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  3504  0138FE  EC41  F08F         	call	_caltime_to_RTCC	;wreg free
  3505  013902  0012               	return		;funcret
  3506  013904                     __end_of_RTCC_from_epoch:
  3507                           	opt stack 0
  3508                           tblptru	equ	0xFF8
  3509                           tblptrh	equ	0xFF7
  3510                           tblptrl	equ	0xFF6
  3511                           tablat	equ	0xFF5
  3512                           prodh	equ	0xFF4
  3513                           prodl	equ	0xFF3
  3514                           intcon	equ	0xFF2
  3515                           intcon2	equ	0xFF1
  3516                           postinc0	equ	0xFEE
  3517                           wreg	equ	0xFE8
  3518                           postdec1	equ	0xFE5
  3519                           fsr1h	equ	0xFE2
  3520                           fsr1l	equ	0xFE1
  3521                           indf2	equ	0xFDF
  3522                           postinc2	equ	0xFDE
  3523                           postdec2	equ	0xFDD
  3524                           fsr2h	equ	0xFDA
  3525                           fsr2l	equ	0xFD9
  3526                           status	equ	0xFD8
  3527                           
  3528 ;; *************** function _epoch_to_caltime *****************
  3529 ;; Defined at:
  3530 ;;		line 125 in file "../My_library/My_RTCC.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  tm              2   33[BANK0 ] PTR struct .
  3533 ;;		 -> now(14), 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  num             4   43[BANK0 ] unsigned long 
  3536 ;;  day             2   39[BANK0 ] unsigned int 
  3537 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  3538 ;;  month           1   42[BANK0 ] unsigned char 
  3539 ;;  year            1   41[BANK0 ] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;		None               void
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3550 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;Total ram usage:       14 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:   14
  3556 ;; This function calls:
  3557 ;;		_get_quot_rem
  3558 ;;		_month_length
  3559 ;; This function is called by:
  3560 ;;		_RTCC_from_epoch
  3561 ;;		_RTCC_from_caltime
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text14
  3566  010B84                     __ptext14:
  3567                           	opt stack 0
  3568  010B84                     _epoch_to_caltime:
  3569                           	opt stack 13
  3570                           
  3571                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
  3572                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
  3573                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
  3574                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
  3575                           ;My_RTCC.c: 132: uint16_t day;
  3576                           ;My_RTCC.c: 133: uint8_t year = 0;
  3577                           
  3578                           ;incstack = 0
  3579  010B84  0E00               	movlw	0
  3580  010B86  0100               	movlb	0	; () banked
  3581  010B88  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  3582                           
  3583                           ;My_RTCC.c: 134: uint8_t month = 1;
  3584  010B8A  0E01               	movlw	1
  3585  010B8C  0100               	movlb	0	; () banked
  3586  010B8E  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;My_RTCC.c: 135: epoch_t num;
  3590                           ;My_RTCC.c: 137: num = tm->epoch;
  3591  010B90  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  3592  010B94  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  3593  010B98  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  3594  010B9C  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  3595  010BA0  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  3596  010BA4  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
  3600  010BA8  0E8B               	movlw	low epoch_to_caltime@num
  3601  010BAA  0100               	movlb	0	; () banked
  3602  010BAC  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3603  010BAE  0E00               	movlw	high epoch_to_caltime@num
  3604  010BB0  0100               	movlb	0	; () banked
  3605  010BB2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3606  010BB4  0E3C               	movlw	60
  3607  010BB6  0100               	movlb	0	; () banked
  3608  010BB8  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3609  010BBA  ECAC  F08F         	call	_get_quot_rem	;wreg free
  3610  010BBE  0100               	movlb	0	; () banked
  3611  010BC0  EE20 F004          	lfsr	2,4
  3612  010BC4  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3613  010BC6  26D9               	addwf	fsr2l,f,c
  3614  010BC8  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3615  010BCA  22DA               	addwfc	fsr2h,f,c
  3616  010BCC  0100               	movlb	0	; () banked
  3617  010BCE  C079  FFDF         	movff	?_get_quot_rem,indf2
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
  3621  010BD2  0E8B               	movlw	low epoch_to_caltime@num
  3622  010BD4  0100               	movlb	0	; () banked
  3623  010BD6  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3624  010BD8  0E00               	movlw	high epoch_to_caltime@num
  3625  010BDA  0100               	movlb	0	; () banked
  3626  010BDC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3627  010BDE  0E3C               	movlw	60
  3628  010BE0  0100               	movlb	0	; () banked
  3629  010BE2  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3630  010BE4  ECAC  F08F         	call	_get_quot_rem	;wreg free
  3631  010BE8  0100               	movlb	0	; () banked
  3632  010BEA  EE20 F005          	lfsr	2,5
  3633  010BEE  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3634  010BF0  26D9               	addwf	fsr2l,f,c
  3635  010BF2  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3636  010BF4  22DA               	addwfc	fsr2h,f,c
  3637  010BF6  0100               	movlb	0	; () banked
  3638  010BF8  C079  FFDF         	movff	?_get_quot_rem,indf2
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
  3642  010BFC  0E8B               	movlw	low epoch_to_caltime@num
  3643  010BFE  0100               	movlb	0	; () banked
  3644  010C00  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3645  010C02  0E00               	movlw	high epoch_to_caltime@num
  3646  010C04  0100               	movlb	0	; () banked
  3647  010C06  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3648  010C08  0E18               	movlw	24
  3649  010C0A  0100               	movlb	0	; () banked
  3650  010C0C  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3651  010C0E  ECAC  F08F         	call	_get_quot_rem	;wreg free
  3652  010C12  0100               	movlb	0	; () banked
  3653  010C14  EE20 F006          	lfsr	2,6
  3654  010C18  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3655  010C1A  26D9               	addwf	fsr2l,f,c
  3656  010C1C  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3657  010C1E  22DA               	addwfc	fsr2h,f,c
  3658  010C20  0100               	movlb	0	; () banked
  3659  010C22  C079  FFDF         	movff	?_get_quot_rem,indf2
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;My_RTCC.c: 141: day = num;
  3663  010C26  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  3664  010C2A  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;My_RTCC.c: 142: day_since_epoch = day;
  3668  010C2E  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  3669  010C32  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;My_RTCC.c: 144: num += 6;
  3673  010C36  0E06               	movlw	6
  3674  010C38  0100               	movlb	0	; () banked
  3675  010C3A  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  3676  010C3C  0E00               	movlw	0
  3677  010C3E  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  3678  010C40  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  3679  010C42  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
  3683  010C44  0E8B               	movlw	low epoch_to_caltime@num
  3684  010C46  0100               	movlb	0	; () banked
  3685  010C48  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3686  010C4A  0E00               	movlw	high epoch_to_caltime@num
  3687  010C4C  0100               	movlb	0	; () banked
  3688  010C4E  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3689  010C50  0E07               	movlw	7
  3690  010C52  0100               	movlb	0	; () banked
  3691  010C54  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3692  010C56  ECAC  F08F         	call	_get_quot_rem	;wreg free
  3693  010C5A  0100               	movlb	0	; () banked
  3694  010C5C  EE20 F007          	lfsr	2,7
  3695  010C60  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3696  010C62  26D9               	addwf	fsr2l,f,c
  3697  010C64  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3698  010C66  22DA               	addwfc	fsr2h,f,c
  3699  010C68  0100               	movlb	0	; () banked
  3700  010C6A  C079  FFDF         	movff	?_get_quot_rem,indf2
  3701                           
  3702                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
  3703  010C6E  D03F               	goto	l8921
  3704  010C70                     l1050:
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;My_RTCC.c: 155: LATB2 = 1;
  3708  010C70  848A               	bsf	3978,2,c	;volatile
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;My_RTCC.c: 156: day = day - month_length(year, month);
  3712  010C72  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  3713  010C76  0100               	movlb	0	; () banked
  3714  010C78  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  3715  010C7A  EC8B  F08D         	call	_month_length
  3716  010C7E  0100               	movlb	0	; () banked
  3717  010C80  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  3718  010C82  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  3719  010C84  0100               	movlb	0	; () banked
  3720  010C86  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  3721  010C88  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3722  010C8A  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3723  010C8C  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3724  010C8E  0100               	movlb	0	; () banked
  3725  010C90  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  3726  010C92  0100               	movlb	0	; () banked
  3727  010C94  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  3728  010C96  0100               	movlb	0	; () banked
  3729  010C98  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  3730  010C9A  0100               	movlb	0	; () banked
  3731  010C9C  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  3732  010C9E  0100               	movlb	0	; () banked
  3733  010CA0  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3734  010CA2  0100               	movlb	0	; () banked
  3735  010CA4  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;My_RTCC.c: 157: if (month == 12) {
  3739  010CA6  0E0C               	movlw	12
  3740  010CA8  0100               	movlb	0	; () banked
  3741  010CAA  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  3742  010CAC  A4D8               	btfss	status,2,c
  3743  010CAE  D019               	goto	l8915
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;My_RTCC.c: 158: month = 1;
  3747  010CB0  0E01               	movlw	1
  3748  010CB2  0100               	movlb	0	; () banked
  3749  010CB4  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;My_RTCC.c: 159: year++;
  3753  010CB6  0100               	movlb	0	; () banked
  3754  010CB8  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;My_RTCC.c: 161: if (year >= 100) {
  3758  010CBA  0E63               	movlw	99
  3759  010CBC  0100               	movlb	0	; () banked
  3760  010CBE  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  3761  010CC0  D012               	goto	l8917
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
  3765  010CC2  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  3766  010CC6  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  3767  010CCA  0E80               	movlw	128
  3768  010CCC  5EDE               	subwf	postinc2,f,c
  3769  010CCE  0E13               	movlw	19
  3770  010CD0  5ADE               	subwfb	postinc2,f,c
  3771  010CD2  0E19               	movlw	25
  3772  010CD4  5ADE               	subwfb	postinc2,f,c
  3773  010CD6  0EBC               	movlw	188
  3774  010CD8  5ADE               	subwfb	postinc2,f,c
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;My_RTCC.c: 163: year = 0;
  3778  010CDA  0E00               	movlw	0
  3779  010CDC  0100               	movlb	0	; () banked
  3780  010CDE  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;My_RTCC.c: 164: }
  3784                           ;My_RTCC.c: 165: } else {
  3785  010CE0  D002               	goto	l8917
  3786  010CE2                     l8915:
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;My_RTCC.c: 166: month++;
  3790  010CE2  0100               	movlb	0	; () banked
  3791  010CE4  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  3792  010CE6                     l8917:
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;My_RTCC.c: 167: }
  3796                           ;My_RTCC.c: 168: month_cache = month;
  3797  010CE6  C08A  F0DA         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;My_RTCC.c: 169: year_cache = year;
  3801  010CEA  C089  F0C2         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  3802  010CEE                     l8921:
  3803                           
  3804                           ; BSR set to: 0
  3805  010CEE  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  3806  010CF2  0100               	movlb	0	; () banked
  3807  010CF4  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  3808  010CF6  EC8B  F08D         	call	_month_length
  3809  010CFA  0100               	movlb	0	; () banked
  3810  010CFC  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  3811  010CFE  0100               	movlb	0	; () banked
  3812  010D00  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  3813  010D02  0100               	movlb	0	; () banked
  3814  010D04  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  3815  010D06  0E00               	movlw	0
  3816  010D08  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  3817  010D0A  B0D8               	btfsc	status,0,c
  3818  010D0C  D7B1               	goto	l1050
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;My_RTCC.c: 170: }
  3822                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
  3823                           
  3824                           ; BSR set to: 0
  3825  010D0E  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  3826  010D12  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  3827  010D16  0100               	movlb	0	; () banked
  3828  010D18  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  3829  010D1A  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3830  010D1C  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3831  010D1E  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3832  010D20  0100               	movlb	0	; () banked
  3833  010D22  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  3834  010D24  0100               	movlb	0	; () banked
  3835  010D26  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  3836  010D28  0101               	movlb	1	; () banked
  3837  010D2A  6F12               	movwf	epoch_to_caltime@day_cache& (0+255),b
  3838  010D2C  0100               	movlb	0	; () banked
  3839  010D2E  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  3840  010D30  0100               	movlb	0	; () banked
  3841  010D32  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3842  010D34  0101               	movlb	1	; () banked
  3843  010D36  6F13               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  3844                           
  3845                           ; BSR set to: 1
  3846                           ;My_RTCC.c: 172: day++;
  3847  010D38  0100               	movlb	0	; () banked
  3848  010D3A  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  3849  010D3C  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;My_RTCC.c: 174: tm->YY = year;
  3853  010D3E  0100               	movlb	0	; () banked
  3854  010D40  EE20 F00A          	lfsr	2,10
  3855  010D44  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3856  010D46  26D9               	addwf	fsr2l,f,c
  3857  010D48  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3858  010D4A  22DA               	addwfc	fsr2h,f,c
  3859  010D4C  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;My_RTCC.c: 175: tm->MM = month;
  3863  010D50  0100               	movlb	0	; () banked
  3864  010D52  EE20 F009          	lfsr	2,9
  3865  010D56  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3866  010D58  26D9               	addwf	fsr2l,f,c
  3867  010D5A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3868  010D5C  22DA               	addwfc	fsr2h,f,c
  3869  010D5E  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;My_RTCC.c: 176: tm->DD = day;
  3873  010D62  0100               	movlb	0	; () banked
  3874  010D64  EE20 F008          	lfsr	2,8
  3875  010D68  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3876  010D6A  26D9               	addwf	fsr2l,f,c
  3877  010D6C  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3878  010D6E  22DA               	addwfc	fsr2h,f,c
  3879  010D70  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  3880                           
  3881                           ; BSR set to: 0
  3882  010D74  0012               	return		;funcret
  3883  010D76                     __end_of_epoch_to_caltime:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           prodh	equ	0xFF4
  3890                           prodl	equ	0xFF3
  3891                           intcon	equ	0xFF2
  3892                           intcon2	equ	0xFF1
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           postdec1	equ	0xFE5
  3896                           fsr1h	equ	0xFE2
  3897                           fsr1l	equ	0xFE1
  3898                           indf2	equ	0xFDF
  3899                           postinc2	equ	0xFDE
  3900                           postdec2	equ	0xFDD
  3901                           fsr2h	equ	0xFDA
  3902                           fsr2l	equ	0xFD9
  3903                           status	equ	0xFD8
  3904                           
  3905 ;; *************** function _get_quot_rem *****************
  3906 ;; Defined at:
  3907 ;;		line 80 in file "../My_library/My_RTCC.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  3910 ;;		 -> epoch_to_caltime@num(4), 
  3911 ;;  div             1   27[BANK0 ] unsigned char 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  num             4   29[BANK0 ] unsigned long 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  4   25[BANK0 ] unsigned long 
  3916 ;; Registers used:
  3917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3923 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;Total ram usage:        8 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:   13
  3930 ;; This function calls:
  3931 ;;		___lldiv
  3932 ;;		___lmul
  3933 ;; This function is called by:
  3934 ;;		_epoch_to_caltime
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text15
  3939  011F58                     __ptext15:
  3940                           	opt stack 0
  3941  011F58                     _get_quot_rem:
  3942                           	opt stack 13
  3943                           
  3944                           ;My_RTCC.c: 83: epoch_t num = *quot;
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;incstack = 0
  3948  011F58  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  3949  011F5C  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  3950  011F60  CFDE F07D          	movff	postinc2,get_quot_rem@num
  3951  011F64  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  3952  011F68  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  3953  011F6C  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  3954                           
  3955                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
  3956  011F70  0100               	movlb	0	; () banked
  3957  011F72  517B               	movf	get_quot_rem@div& (0+255),w,b
  3958  011F74  0100               	movlb	0	; () banked
  3959  011F76  6F64               	movwf	___lldiv@divisor& (0+255),b
  3960  011F78  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  3961  011F7A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  3962  011F7C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  3963  011F7E  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  3964  011F82  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  3965  011F86  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  3966  011F8A  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  3967  011F8E  EC76  F092         	call	___lldiv	;wreg free
  3968  011F92  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  3969  011F96  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  3970  011F9A  0100               	movlb	0	; () banked
  3971  011F9C  C060  FFDE         	movff	?___lldiv,postinc2
  3972  011FA0  0100               	movlb	0	; () banked
  3973  011FA2  C061  FFDE         	movff	?___lldiv+1,postinc2
  3974  011FA6  0100               	movlb	0	; () banked
  3975  011FA8  C062  FFDE         	movff	?___lldiv+2,postinc2
  3976  011FAC  0100               	movlb	0	; () banked
  3977  011FAE  C063  FFDD         	movff	?___lldiv+3,postdec2
  3978  011FB2  52DD               	movf	postdec2,f,c
  3979  011FB4  52DD               	movf	postdec2,f,c
  3980  011FB6  CFDE F06D          	movff	postinc2,___lmul@multiplier
  3981  011FBA  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  3982  011FBE  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  3983  011FC2  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  3984  011FC6  0100               	movlb	0	; () banked
  3985  011FC8  517B               	movf	get_quot_rem@div& (0+255),w,b
  3986  011FCA  0100               	movlb	0	; () banked
  3987  011FCC  6F71               	movwf	___lmul@multiplicand& (0+255),b
  3988  011FCE  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  3989  011FD0  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  3990  011FD2  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  3991  011FD4  ECEA  F097         	call	___lmul	;wreg free
  3992  011FD8  0100               	movlb	0	; () banked
  3993  011FDA  1F6D               	comf	?___lmul& (0+255),f,b
  3994  011FDC  0100               	movlb	0	; () banked
  3995  011FDE  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  3996  011FE0  0100               	movlb	0	; () banked
  3997  011FE2  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  3998  011FE4  0100               	movlb	0	; () banked
  3999  011FE6  1F70               	comf	(?___lmul+3)& (0+255),f,b
  4000  011FE8  0100               	movlb	0	; () banked
  4001  011FEA  2B6D               	incf	?___lmul& (0+255),f,b
  4002  011FEC  0E00               	movlw	0
  4003  011FEE  0100               	movlb	0	; () banked
  4004  011FF0  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  4005  011FF2  0100               	movlb	0	; () banked
  4006  011FF4  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  4007  011FF6  0100               	movlb	0	; () banked
  4008  011FF8  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  4009  011FFA  0100               	movlb	0	; () banked
  4010  011FFC  517D               	movf	get_quot_rem@num& (0+255),w,b
  4011  011FFE  0100               	movlb	0	; () banked
  4012  012000  256D               	addwf	?___lmul& (0+255),w,b
  4013  012002  0100               	movlb	0	; () banked
  4014  012004  6F79               	movwf	?_get_quot_rem& (0+255),b
  4015  012006  0100               	movlb	0	; () banked
  4016  012008  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  4017  01200A  0100               	movlb	0	; () banked
  4018  01200C  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  4019  01200E  0100               	movlb	0	; () banked
  4020  012010  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  4021  012012  0100               	movlb	0	; () banked
  4022  012014  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  4023  012016  0100               	movlb	0	; () banked
  4024  012018  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  4025  01201A  0100               	movlb	0	; () banked
  4026  01201C  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  4027  01201E  0100               	movlb	0	; () banked
  4028  012020  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  4029  012022  0100               	movlb	0	; () banked
  4030  012024  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  4031  012026  0100               	movlb	0	; () banked
  4032  012028  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  4033  01202A  0012               	return	
  4034  01202C                     __end_of_get_quot_rem:
  4035                           	opt stack 0
  4036                           tblptru	equ	0xFF8
  4037                           tblptrh	equ	0xFF7
  4038                           tblptrl	equ	0xFF6
  4039                           tablat	equ	0xFF5
  4040                           prodh	equ	0xFF4
  4041                           prodl	equ	0xFF3
  4042                           intcon	equ	0xFF2
  4043                           intcon2	equ	0xFF1
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           postdec1	equ	0xFE5
  4047                           fsr1h	equ	0xFE2
  4048                           fsr1l	equ	0xFE1
  4049                           indf2	equ	0xFDF
  4050                           postinc2	equ	0xFDE
  4051                           postdec2	equ	0xFDD
  4052                           fsr2h	equ	0xFDA
  4053                           fsr2l	equ	0xFD9
  4054                           status	equ	0xFD8
  4055                           
  4056 ;; *************** function ___lldiv *****************
  4057 ;; Defined at:
  4058 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  dividend        4    0[BANK0 ] unsigned long 
  4061 ;;  divisor         4    4[BANK0 ] unsigned long 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  quotient        4    8[BANK0 ] unsigned long 
  4064 ;;  counter         1   12[BANK0 ] unsigned char 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  4    0[BANK0 ] unsigned long 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4074 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4075 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4077 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;Total ram usage:       13 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:   12
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_get_quot_rem
  4085 ;;		_CTMU_read
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text16
  4090  0124EC                     __ptext16:
  4091                           	opt stack 0
  4092  0124EC                     ___lldiv:
  4093                           	opt stack 13
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;incstack = 0
  4097  0124EC  0E00               	movlw	0
  4098  0124EE  0100               	movlb	0	; () banked
  4099  0124F0  6F68               	movwf	___lldiv@quotient& (0+255),b
  4100  0124F2  0E00               	movlw	0
  4101  0124F4  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  4102  0124F6  0E00               	movlw	0
  4103  0124F8  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  4104  0124FA  0E00               	movlw	0
  4105  0124FC  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  4106                           
  4107                           ; BSR set to: 0
  4108  0124FE  0100               	movlb	0	; () banked
  4109  012500  5164               	movf	___lldiv@divisor& (0+255),w,b
  4110  012502  0100               	movlb	0	; () banked
  4111  012504  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4112  012506  0100               	movlb	0	; () banked
  4113  012508  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4114  01250A  0100               	movlb	0	; () banked
  4115  01250C  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  4116  01250E  B4D8               	btfsc	status,2,c
  4117  012510  D042               	goto	l2016
  4118                           
  4119                           ; BSR set to: 0
  4120  012512  0E01               	movlw	1
  4121  012514  0100               	movlb	0	; () banked
  4122  012516  6F6C               	movwf	___lldiv@counter& (0+255),b
  4123  012518  D008               	goto	l8555
  4124  01251A                     l8553:
  4125                           
  4126                           ; BSR set to: 0
  4127  01251A  0100               	movlb	0	; () banked
  4128  01251C  90D8               	bcf	status,0,c
  4129  01251E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  4130  012520  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4131  012522  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4132  012524  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4133  012526  0100               	movlb	0	; () banked
  4134  012528  2B6C               	incf	___lldiv@counter& (0+255),f,b
  4135  01252A                     l8555:
  4136                           
  4137                           ; BSR set to: 0
  4138  01252A  0100               	movlb	0	; () banked
  4139  01252C  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4140  01252E  D7F5               	goto	l8553
  4141  012530                     l8557:
  4142                           
  4143                           ; BSR set to: 0
  4144  012530  0100               	movlb	0	; () banked
  4145  012532  90D8               	bcf	status,0,c
  4146  012534  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  4147  012536  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4148  012538  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4149  01253A  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4150                           
  4151                           ; BSR set to: 0
  4152  01253C  0100               	movlb	0	; () banked
  4153  01253E  5164               	movf	___lldiv@divisor& (0+255),w,b
  4154  012540  0100               	movlb	0	; () banked
  4155  012542  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  4156  012544  0100               	movlb	0	; () banked
  4157  012546  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4158  012548  0100               	movlb	0	; () banked
  4159  01254A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4160  01254C  0100               	movlb	0	; () banked
  4161  01254E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4162  012550  0100               	movlb	0	; () banked
  4163  012552  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4164  012554  0100               	movlb	0	; () banked
  4165  012556  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4166  012558  0100               	movlb	0	; () banked
  4167  01255A  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4168  01255C  A0D8               	btfss	status,0,c
  4169  01255E  D012               	goto	l8565
  4170                           
  4171                           ; BSR set to: 0
  4172  012560  0100               	movlb	0	; () banked
  4173  012562  5164               	movf	___lldiv@divisor& (0+255),w,b
  4174  012564  0100               	movlb	0	; () banked
  4175  012566  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  4176  012568  0100               	movlb	0	; () banked
  4177  01256A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4178  01256C  0100               	movlb	0	; () banked
  4179  01256E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4180  012570  0100               	movlb	0	; () banked
  4181  012572  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4182  012574  0100               	movlb	0	; () banked
  4183  012576  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4184  012578  0100               	movlb	0	; () banked
  4185  01257A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4186  01257C  0100               	movlb	0	; () banked
  4187  01257E  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4188                           
  4189                           ; BSR set to: 0
  4190  012580  0100               	movlb	0	; () banked
  4191  012582  8168               	bsf	___lldiv@quotient& (0+255),0,b
  4192  012584                     l8565:
  4193                           
  4194                           ; BSR set to: 0
  4195  012584  0100               	movlb	0	; () banked
  4196  012586  90D8               	bcf	status,0,c
  4197  012588  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4198  01258A  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4199  01258C  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4200  01258E  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  4201                           
  4202                           ; BSR set to: 0
  4203  012590  0100               	movlb	0	; () banked
  4204  012592  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  4205  012594  D7CD               	goto	l8557
  4206  012596                     l2016:
  4207                           
  4208                           ; BSR set to: 0
  4209  012596  C068  F060         	movff	___lldiv@quotient,?___lldiv
  4210  01259A  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  4211  01259E  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  4212  0125A2  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  4213                           
  4214                           ; BSR set to: 0
  4215  0125A6  0012               	return		;funcret
  4216  0125A8                     __end_of___lldiv:
  4217                           	opt stack 0
  4218                           tblptru	equ	0xFF8
  4219                           tblptrh	equ	0xFF7
  4220                           tblptrl	equ	0xFF6
  4221                           tablat	equ	0xFF5
  4222                           prodh	equ	0xFF4
  4223                           prodl	equ	0xFF3
  4224                           intcon	equ	0xFF2
  4225                           intcon2	equ	0xFF1
  4226                           postinc0	equ	0xFEE
  4227                           wreg	equ	0xFE8
  4228                           postdec1	equ	0xFE5
  4229                           fsr1h	equ	0xFE2
  4230                           fsr1l	equ	0xFE1
  4231                           indf2	equ	0xFDF
  4232                           postinc2	equ	0xFDE
  4233                           postdec2	equ	0xFDD
  4234                           fsr2h	equ	0xFDA
  4235                           fsr2l	equ	0xFD9
  4236                           status	equ	0xFD8
  4237                           
  4238 ;; *************** function _caltime_to_RTCC *****************
  4239 ;; Defined at:
  4240 ;;		line 105 in file "../My_library/My_RTCC.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  tm              2    9[BANK0 ] PTR struct .
  4243 ;;		 -> now(14), 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;		None               void
  4248 ;; Registers used:
  4249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4258 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4259 ;;Total ram usage:        2 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:   14
  4262 ;; This function calls:
  4263 ;;		_d_to_x
  4264 ;; This function is called by:
  4265 ;;		_RTCC_from_epoch
  4266 ;;		_RTCC_from_caltime
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text17
  4271  011E82                     __ptext17:
  4272                           	opt stack 0
  4273  011E82                     _caltime_to_RTCC:
  4274                           	opt stack 13
  4275  011E82                     l1037:
  4276  011E82  010F               	movlb	15	; () banked
  4277  011E84  B93F               	btfsc	63,4,b	;volatile
  4278  011E86  D7FD               	goto	l1037
  4279                           
  4280                           ; BSR set to: 15
  4281                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
  4282  011E88  010F               	movlb	15	; () banked
  4283  011E8A  813F               	bsf	63,0,b	;volatile
  4284                           
  4285                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
  4286  011E8C  010F               	movlb	15	; () banked
  4287  011E8E  833F               	bsf	63,1,b	;volatile
  4288                           
  4289                           ; BSR set to: 15
  4290                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
  4291  011E90  0100               	movlb	0	; () banked
  4292  011E92  EE20 F00A          	lfsr	2,10
  4293  011E96  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4294  011E98  26D9               	addwf	fsr2l,f,c
  4295  011E9A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4296  011E9C  22DA               	addwfc	fsr2h,f,c
  4297  011E9E  50DF               	movf	indf2,w,c
  4298  011EA0  ECEE  F09B         	call	_d_to_x
  4299  011EA4  010F               	movlb	15	; () banked
  4300  011EA6  6F3A               	movwf	58,b	;volatile
  4301                           
  4302                           ; BSR set to: 15
  4303                           ;My_RTCC.c: 110: RTCVALH = 0x00;
  4304  011EA8  0E00               	movlw	0
  4305  011EAA  010F               	movlb	15	; () banked
  4306  011EAC  6F3B               	movwf	59,b	;volatile
  4307                           
  4308                           ; BSR set to: 15
  4309                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
  4310  011EAE  010F               	movlb	15	; () banked
  4311  011EB0  913F               	bcf	63,0,b	;volatile
  4312                           
  4313                           ; BSR set to: 15
  4314                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
  4315  011EB2  010F               	movlb	15	; () banked
  4316  011EB4  833F               	bsf	63,1,b	;volatile
  4317                           
  4318                           ; BSR set to: 15
  4319                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
  4320  011EB6  0100               	movlb	0	; () banked
  4321  011EB8  EE20 F008          	lfsr	2,8
  4322  011EBC  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4323  011EBE  26D9               	addwf	fsr2l,f,c
  4324  011EC0  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4325  011EC2  22DA               	addwfc	fsr2h,f,c
  4326  011EC4  50DF               	movf	indf2,w,c
  4327  011EC6  ECEE  F09B         	call	_d_to_x
  4328  011ECA  010F               	movlb	15	; () banked
  4329  011ECC  6F3A               	movwf	58,b	;volatile
  4330                           
  4331                           ; BSR set to: 15
  4332                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
  4333  011ECE  0100               	movlb	0	; () banked
  4334  011ED0  EE20 F009          	lfsr	2,9
  4335  011ED4  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4336  011ED6  26D9               	addwf	fsr2l,f,c
  4337  011ED8  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4338  011EDA  22DA               	addwfc	fsr2h,f,c
  4339  011EDC  50DF               	movf	indf2,w,c
  4340  011EDE  ECEE  F09B         	call	_d_to_x
  4341  011EE2  010F               	movlb	15	; () banked
  4342  011EE4  6F3B               	movwf	59,b	;volatile
  4343                           
  4344                           ; BSR set to: 15
  4345                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
  4346  011EE6  010F               	movlb	15	; () banked
  4347  011EE8  813F               	bsf	63,0,b	;volatile
  4348                           
  4349                           ; BSR set to: 15
  4350                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
  4351  011EEA  010F               	movlb	15	; () banked
  4352  011EEC  933F               	bcf	63,1,b	;volatile
  4353                           
  4354                           ; BSR set to: 15
  4355                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
  4356  011EEE  0100               	movlb	0	; () banked
  4357  011EF0  EE20 F006          	lfsr	2,6
  4358  011EF4  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4359  011EF6  26D9               	addwf	fsr2l,f,c
  4360  011EF8  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4361  011EFA  22DA               	addwfc	fsr2h,f,c
  4362  011EFC  50DF               	movf	indf2,w,c
  4363  011EFE  ECEE  F09B         	call	_d_to_x
  4364  011F02  010F               	movlb	15	; () banked
  4365  011F04  6F3A               	movwf	58,b	;volatile
  4366                           
  4367                           ; BSR set to: 15
  4368                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
  4369  011F06  0100               	movlb	0	; () banked
  4370  011F08  EE20 F007          	lfsr	2,7
  4371  011F0C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4372  011F0E  26D9               	addwf	fsr2l,f,c
  4373  011F10  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4374  011F12  22DA               	addwfc	fsr2h,f,c
  4375  011F14  50DF               	movf	indf2,w,c
  4376  011F16  ECEE  F09B         	call	_d_to_x
  4377  011F1A  010F               	movlb	15	; () banked
  4378  011F1C  6F3B               	movwf	59,b	;volatile
  4379                           
  4380                           ; BSR set to: 15
  4381                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
  4382  011F1E  010F               	movlb	15	; () banked
  4383  011F20  913F               	bcf	63,0,b	;volatile
  4384                           
  4385                           ; BSR set to: 15
  4386                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
  4387  011F22  010F               	movlb	15	; () banked
  4388  011F24  933F               	bcf	63,1,b	;volatile
  4389                           
  4390                           ; BSR set to: 15
  4391                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
  4392  011F26  0100               	movlb	0	; () banked
  4393  011F28  EE20 F004          	lfsr	2,4
  4394  011F2C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4395  011F2E  26D9               	addwf	fsr2l,f,c
  4396  011F30  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4397  011F32  22DA               	addwfc	fsr2h,f,c
  4398  011F34  50DF               	movf	indf2,w,c
  4399  011F36  ECEE  F09B         	call	_d_to_x
  4400  011F3A  010F               	movlb	15	; () banked
  4401  011F3C  6F3A               	movwf	58,b	;volatile
  4402                           
  4403                           ; BSR set to: 15
  4404                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
  4405  011F3E  0100               	movlb	0	; () banked
  4406  011F40  EE20 F005          	lfsr	2,5
  4407  011F44  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4408  011F46  26D9               	addwf	fsr2l,f,c
  4409  011F48  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4410  011F4A  22DA               	addwfc	fsr2h,f,c
  4411  011F4C  50DF               	movf	indf2,w,c
  4412  011F4E  ECEE  F09B         	call	_d_to_x
  4413  011F52  010F               	movlb	15	; () banked
  4414  011F54  6F3B               	movwf	59,b	;volatile
  4415                           
  4416                           ; BSR set to: 15
  4417  011F56  0012               	return		;funcret
  4418  011F58                     __end_of_caltime_to_RTCC:
  4419                           	opt stack 0
  4420                           tblptru	equ	0xFF8
  4421                           tblptrh	equ	0xFF7
  4422                           tblptrl	equ	0xFF6
  4423                           tablat	equ	0xFF5
  4424                           prodh	equ	0xFF4
  4425                           prodl	equ	0xFF3
  4426                           intcon	equ	0xFF2
  4427                           intcon2	equ	0xFF1
  4428                           postinc0	equ	0xFEE
  4429                           wreg	equ	0xFE8
  4430                           postdec1	equ	0xFE5
  4431                           fsr1h	equ	0xFE2
  4432                           fsr1l	equ	0xFE1
  4433                           indf2	equ	0xFDF
  4434                           postinc2	equ	0xFDE
  4435                           postdec2	equ	0xFDD
  4436                           fsr2h	equ	0xFDA
  4437                           fsr2l	equ	0xFD9
  4438                           status	equ	0xFD8
  4439                           
  4440 ;; *************** function _d_to_x *****************
  4441 ;; Defined at:
  4442 ;;		line 45 in file "../My_library/My_RTCC.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  dec             1    wreg     unsigned char 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  dec             1    8[BANK0 ] unsigned char 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      unsigned char 
  4449 ;; Registers used:
  4450 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4457 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4459 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4460 ;;Total ram usage:        1 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:   13
  4463 ;; This function calls:
  4464 ;;		___awdiv
  4465 ;; This function is called by:
  4466 ;;		_caltime_to_RTCC
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text18
  4471  0137DC                     __ptext18:
  4472                           	opt stack 0
  4473  0137DC                     _d_to_x:
  4474                           	opt stack 13
  4475                           
  4476                           ; BSR set to: 15
  4477                           ;incstack = 0
  4478                           ;d_to_x@dec stored from wreg
  4479  0137DC  0100               	movlb	0	; () banked
  4480  0137DE  6F68               	movwf	d_to_x@dec& (0+255),b
  4481                           
  4482                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
  4483  0137E0  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  4484  0137E4  0100               	movlb	0	; () banked
  4485  0137E6  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4486  0137E8  0E00               	movlw	0
  4487  0137EA  0100               	movlb	0	; () banked
  4488  0137EC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4489  0137EE  0E0A               	movlw	10
  4490  0137F0  6F62               	movwf	___awdiv@divisor& (0+255),b
  4491  0137F2  EC17  F092         	call	___awdiv	;wreg free
  4492  0137F6  0100               	movlb	0	; () banked
  4493  0137F8  5160               	movf	?___awdiv& (0+255),w,b
  4494  0137FA  0D06               	mullw	6
  4495  0137FC  50F3               	movf	prodl,w,c
  4496  0137FE  0100               	movlb	0	; () banked
  4497  013800  2568               	addwf	d_to_x@dec& (0+255),w,b
  4498  013802  0012               	return	
  4499  013804                     __end_of_d_to_x:
  4500                           	opt stack 0
  4501                           tblptru	equ	0xFF8
  4502                           tblptrh	equ	0xFF7
  4503                           tblptrl	equ	0xFF6
  4504                           tablat	equ	0xFF5
  4505                           prodh	equ	0xFF4
  4506                           prodl	equ	0xFF3
  4507                           intcon	equ	0xFF2
  4508                           intcon2	equ	0xFF1
  4509                           postinc0	equ	0xFEE
  4510                           wreg	equ	0xFE8
  4511                           postdec1	equ	0xFE5
  4512                           fsr1h	equ	0xFE2
  4513                           fsr1l	equ	0xFE1
  4514                           indf2	equ	0xFDF
  4515                           postinc2	equ	0xFDE
  4516                           postdec2	equ	0xFDD
  4517                           fsr2h	equ	0xFDA
  4518                           fsr2l	equ	0xFD9
  4519                           status	equ	0xFD8
  4520                           
  4521 ;; *************** function ___awdiv *****************
  4522 ;; Defined at:
  4523 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  dividend        2    0[BANK0 ] int 
  4526 ;;  divisor         2    2[BANK0 ] int 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  quotient        2    6[BANK0 ] int 
  4529 ;;  sign            1    5[BANK0 ] unsigned char 
  4530 ;;  counter         1    4[BANK0 ] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  2    0[BANK0 ] int 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4540 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4541 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;Total ram usage:        8 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:   12
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_d_to_x
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text19
  4555  01242E                     __ptext19:
  4556                           	opt stack 0
  4557  01242E                     ___awdiv:
  4558                           	opt stack 13
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;incstack = 0
  4562  01242E  0E00               	movlw	0
  4563  012430  0100               	movlb	0	; () banked
  4564  012432  6F65               	movwf	___awdiv@sign& (0+255),b
  4565                           
  4566                           ; BSR set to: 0
  4567  012434  0100               	movlb	0	; () banked
  4568  012436  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4569  012438  D008               	goto	l8475
  4570                           
  4571                           ; BSR set to: 0
  4572  01243A  0100               	movlb	0	; () banked
  4573  01243C  6D62               	negf	___awdiv@divisor& (0+255),b
  4574  01243E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4575  012440  B0D8               	btfsc	status,0,c
  4576  012442  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4577                           
  4578                           ; BSR set to: 0
  4579  012444  0E01               	movlw	1
  4580  012446  0100               	movlb	0	; () banked
  4581  012448  6F65               	movwf	___awdiv@sign& (0+255),b
  4582  01244A                     l8475:
  4583                           
  4584                           ; BSR set to: 0
  4585  01244A  0100               	movlb	0	; () banked
  4586  01244C  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4587  01244E  D008               	goto	l8481
  4588                           
  4589                           ; BSR set to: 0
  4590  012450  0100               	movlb	0	; () banked
  4591  012452  6D60               	negf	___awdiv@dividend& (0+255),b
  4592  012454  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4593  012456  B0D8               	btfsc	status,0,c
  4594  012458  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4595                           
  4596                           ; BSR set to: 0
  4597  01245A  0E01               	movlw	1
  4598  01245C  0100               	movlb	0	; () banked
  4599  01245E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  4600  012460                     l8481:
  4601                           
  4602                           ; BSR set to: 0
  4603  012460  0E00               	movlw	0
  4604  012462  0100               	movlb	0	; () banked
  4605  012464  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  4606  012466  0E00               	movlw	0
  4607  012468  6F66               	movwf	___awdiv@quotient& (0+255),b
  4608                           
  4609                           ; BSR set to: 0
  4610  01246A  0100               	movlb	0	; () banked
  4611  01246C  5162               	movf	___awdiv@divisor& (0+255),w,b
  4612  01246E  0100               	movlb	0	; () banked
  4613  012470  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4614  012472  B4D8               	btfsc	status,2,c
  4615  012474  D02C               	goto	l8503
  4616                           
  4617                           ; BSR set to: 0
  4618  012476  0E01               	movlw	1
  4619  012478  0100               	movlb	0	; () banked
  4620  01247A  6F64               	movwf	___awdiv@counter& (0+255),b
  4621  01247C  D006               	goto	l8489
  4622  01247E                     l8487:
  4623                           
  4624                           ; BSR set to: 0
  4625  01247E  0100               	movlb	0	; () banked
  4626  012480  90D8               	bcf	status,0,c
  4627  012482  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  4628  012484  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4629  012486  0100               	movlb	0	; () banked
  4630  012488  2B64               	incf	___awdiv@counter& (0+255),f,b
  4631  01248A                     l8489:
  4632                           
  4633                           ; BSR set to: 0
  4634  01248A  0100               	movlb	0	; () banked
  4635  01248C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4636  01248E  D7F7               	goto	l8487
  4637  012490                     l8491:
  4638                           
  4639                           ; BSR set to: 0
  4640  012490  0100               	movlb	0	; () banked
  4641  012492  90D8               	bcf	status,0,c
  4642  012494  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  4643  012496  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4644                           
  4645                           ; BSR set to: 0
  4646  012498  0100               	movlb	0	; () banked
  4647  01249A  5162               	movf	___awdiv@divisor& (0+255),w,b
  4648  01249C  0100               	movlb	0	; () banked
  4649  01249E  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  4650  0124A0  0100               	movlb	0	; () banked
  4651  0124A2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4652  0124A4  0100               	movlb	0	; () banked
  4653  0124A6  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4654  0124A8  A0D8               	btfss	status,0,c
  4655  0124AA  D00A               	goto	l8499
  4656                           
  4657                           ; BSR set to: 0
  4658  0124AC  0100               	movlb	0	; () banked
  4659  0124AE  5162               	movf	___awdiv@divisor& (0+255),w,b
  4660  0124B0  0100               	movlb	0	; () banked
  4661  0124B2  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  4662  0124B4  0100               	movlb	0	; () banked
  4663  0124B6  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4664  0124B8  0100               	movlb	0	; () banked
  4665  0124BA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4666                           
  4667                           ; BSR set to: 0
  4668  0124BC  0100               	movlb	0	; () banked
  4669  0124BE  8166               	bsf	___awdiv@quotient& (0+255),0,b
  4670  0124C0                     l8499:
  4671                           
  4672                           ; BSR set to: 0
  4673  0124C0  0100               	movlb	0	; () banked
  4674  0124C2  90D8               	bcf	status,0,c
  4675  0124C4  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4676  0124C6  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  4677                           
  4678                           ; BSR set to: 0
  4679  0124C8  0100               	movlb	0	; () banked
  4680  0124CA  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  4681  0124CC  D7E1               	goto	l8491
  4682  0124CE                     l8503:
  4683                           
  4684                           ; BSR set to: 0
  4685  0124CE  0100               	movlb	0	; () banked
  4686  0124D0  5165               	movf	___awdiv@sign& (0+255),w,b
  4687  0124D2  0100               	movlb	0	; () banked
  4688  0124D4  B4D8               	btfsc	status,2,c
  4689  0124D6  D005               	goto	l8507
  4690                           
  4691                           ; BSR set to: 0
  4692  0124D8  0100               	movlb	0	; () banked
  4693  0124DA  6D66               	negf	___awdiv@quotient& (0+255),b
  4694  0124DC  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4695  0124DE  B0D8               	btfsc	status,0,c
  4696  0124E0  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4697  0124E2                     l8507:
  4698                           
  4699                           ; BSR set to: 0
  4700  0124E2  C066  F060         	movff	___awdiv@quotient,?___awdiv
  4701  0124E6  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  4702  0124EA  0012               	return	
  4703  0124EC                     __end_of___awdiv:
  4704                           	opt stack 0
  4705                           tblptru	equ	0xFF8
  4706                           tblptrh	equ	0xFF7
  4707                           tblptrl	equ	0xFF6
  4708                           tablat	equ	0xFF5
  4709                           prodh	equ	0xFF4
  4710                           prodl	equ	0xFF3
  4711                           intcon	equ	0xFF2
  4712                           intcon2	equ	0xFF1
  4713                           postinc0	equ	0xFEE
  4714                           wreg	equ	0xFE8
  4715                           postdec1	equ	0xFE5
  4716                           fsr1h	equ	0xFE2
  4717                           fsr1l	equ	0xFE1
  4718                           indf2	equ	0xFDF
  4719                           postinc2	equ	0xFDE
  4720                           postdec2	equ	0xFDD
  4721                           fsr2h	equ	0xFDA
  4722                           fsr2l	equ	0xFD9
  4723                           status	equ	0xFD8
  4724                           
  4725 ;; *************** function _OSC_init *****************
  4726 ;; Defined at:
  4727 ;;		line 8 in file "../My_library/My_PIC.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;		None               void
  4734 ;; Registers used:
  4735 ;;		wreg, status,2
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4745 ;;Total ram usage:        0 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:   12
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_setup
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text20
  4756  013970                     __ptext20:
  4757                           	opt stack 0
  4758  013970                     _OSC_init:
  4759                           	opt stack 17
  4760                           
  4761                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;incstack = 0
  4765  013970  88D3               	bsf	4051,4,c	;volatile
  4766  013972  8AD3               	bsf	4051,5,c	;volatile
  4767  013974  8CD3               	bsf	4051,6,c	;volatile
  4768                           
  4769                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  4770  013976  8C9B               	bsf	3995,6,c	;volatile
  4771                           
  4772                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  4773  013978  0EFC               	movlw	-4
  4774  01397A  16D3               	andwf	4051,f,c	;volatile
  4775  01397C  0012               	return		;funcret
  4776  01397E                     __end_of_OSC_init:
  4777                           	opt stack 0
  4778                           tblptru	equ	0xFF8
  4779                           tblptrh	equ	0xFF7
  4780                           tblptrl	equ	0xFF6
  4781                           tablat	equ	0xFF5
  4782                           prodh	equ	0xFF4
  4783                           prodl	equ	0xFF3
  4784                           intcon	equ	0xFF2
  4785                           intcon2	equ	0xFF1
  4786                           postinc0	equ	0xFEE
  4787                           wreg	equ	0xFE8
  4788                           postdec1	equ	0xFE5
  4789                           fsr1h	equ	0xFE2
  4790                           fsr1l	equ	0xFE1
  4791                           indf2	equ	0xFDF
  4792                           postinc2	equ	0xFDE
  4793                           postdec2	equ	0xFDD
  4794                           fsr2h	equ	0xFDA
  4795                           fsr2l	equ	0xFD9
  4796                           status	equ	0xFD8
  4797                           
  4798 ;; *************** function _I2C_LCD_init *****************
  4799 ;; Defined at:
  4800 ;;		line 211 in file "../My_library/My_ST7032.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;		None
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  i               1    9[BANK0 ] unsigned char 
  4805 ;;  i               1    8[BANK0 ] unsigned char 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;		None               void
  4808 ;; Registers used:
  4809 ;;		wreg, status,2, status,0, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4817 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4818 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4819 ;;Total ram usage:        3 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:   16
  4822 ;; This function calls:
  4823 ;;		_I2C_LCD_Clear
  4824 ;;		_I2C_LCD_Command
  4825 ;;		_I2C_init_old
  4826 ;; This function is called by:
  4827 ;;		_setup
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text21
  4832  012DBC                     __ptext21:
  4833                           	opt stack 0
  4834  012DBC                     _I2C_LCD_init:
  4835                           	opt stack 13
  4836                           
  4837                           ;My_ST7032.c: 212: I2C_init_old();
  4838                           
  4839                           ;incstack = 0
  4840  012DBC  ECA8  F09C         	call	_I2C_init_old	;wreg free
  4841                           
  4842                           ;My_ST7032.c: 214: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  4843  012DC0  0E00               	movlw	0
  4844  012DC2  0100               	movlb	0	; () banked
  4845  012DC4  6F68               	movwf	I2C_LCD_init@i& (0+255),b
  4846  012DC6                     l9493:
  4847                           
  4848                           ; BSR set to: 0
  4849  012DC6  0E27               	movlw	39
  4850  012DC8  0100               	movlb	0	; () banked
  4851  012DCA  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
  4852  012DCC  D001               	goto	l9497
  4853  012DCE  D00C               	goto	l9501
  4854  012DD0                     l9497:
  4855                           
  4856                           ; BSR set to: 0
  4857  012DD0  0E10               	movlw	16
  4858  012DD2  0100               	movlb	0	; () banked
  4859  012DD4  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  4860  012DD6  0E94               	movlw	148
  4861  012DD8                     u10347:
  4862  012DD8  2EE8               	decfsz	wreg,f,c
  4863  012DDA  D7FE               	goto	u10347
  4864  012DDC  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  4865  012DDE  D7FC               	goto	u10347
  4866  012DE0  D000               	nop2	
  4867  012DE2  0100               	movlb	0	; () banked
  4868  012DE4  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
  4869  012DE6  D7EF               	goto	l9493
  4870  012DE8                     l9501:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;My_ST7032.c: 215: I2C_LCD_Command(0x38);
  4874  012DE8  0E38               	movlw	56
  4875  012DEA  ECD5  F09A         	call	_I2C_LCD_Command
  4876                           
  4877                           ;My_ST7032.c: 216: I2C_LCD_Command(0x39);
  4878  012DEE  0E39               	movlw	57
  4879  012DF0  ECD5  F09A         	call	_I2C_LCD_Command
  4880                           
  4881                           ;My_ST7032.c: 217: I2C_LCD_Command(0x14);
  4882  012DF4  0E14               	movlw	20
  4883  012DF6  ECD5  F09A         	call	_I2C_LCD_Command
  4884                           
  4885                           ;My_ST7032.c: 218: I2C_LCD_Command(0x70);
  4886  012DFA  0E70               	movlw	112
  4887  012DFC  ECD5  F09A         	call	_I2C_LCD_Command
  4888                           
  4889                           ;My_ST7032.c: 219: I2C_LCD_Command(0x56);
  4890  012E00  0E56               	movlw	86
  4891  012E02  ECD5  F09A         	call	_I2C_LCD_Command
  4892                           
  4893                           ;My_ST7032.c: 220: I2C_LCD_Command(0x6C);
  4894  012E06  0E6C               	movlw	108
  4895  012E08  ECD5  F09A         	call	_I2C_LCD_Command
  4896                           
  4897                           ;My_ST7032.c: 221: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  4898  012E0C  0E00               	movlw	0
  4899  012E0E  0100               	movlb	0	; () banked
  4900  012E10  6F69               	movwf	I2C_LCD_init@i_4689& (0+255),b
  4901  012E12                     l9505:
  4902                           
  4903                           ; BSR set to: 0
  4904  012E12  0E27               	movlw	39
  4905  012E14  0100               	movlb	0	; () banked
  4906  012E16  6569               	cpfsgt	I2C_LCD_init@i_4689& (0+255),b
  4907  012E18  D001               	goto	l9509
  4908  012E1A  D00C               	goto	l9513
  4909  012E1C                     l9509:
  4910                           
  4911                           ; BSR set to: 0
  4912  012E1C  0E10               	movlw	16
  4913  012E1E  0100               	movlb	0	; () banked
  4914  012E20  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  4915  012E22  0E94               	movlw	148
  4916  012E24                     u10357:
  4917  012E24  2EE8               	decfsz	wreg,f,c
  4918  012E26  D7FE               	goto	u10357
  4919  012E28  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  4920  012E2A  D7FC               	goto	u10357
  4921  012E2C  D000               	nop2	
  4922  012E2E  0100               	movlb	0	; () banked
  4923  012E30  2B69               	incf	I2C_LCD_init@i_4689& (0+255),f,b
  4924  012E32  D7EF               	goto	l9505
  4925  012E34                     l9513:
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;My_ST7032.c: 222: I2C_LCD_Command(0x38);
  4929  012E34  0E38               	movlw	56
  4930  012E36  ECD5  F09A         	call	_I2C_LCD_Command
  4931                           
  4932                           ;My_ST7032.c: 223: I2C_LCD_Command(0x0C);
  4933  012E3A  0E0C               	movlw	12
  4934  012E3C  ECD5  F09A         	call	_I2C_LCD_Command
  4935                           
  4936                           ;My_ST7032.c: 224: I2C_LCD_Command(0x06);
  4937  012E40  0E06               	movlw	6
  4938  012E42  ECD5  F09A         	call	_I2C_LCD_Command
  4939                           
  4940                           ;My_ST7032.c: 225: I2C_LCD_Clear();
  4941  012E46  EC8F  F09C         	call	_I2C_LCD_Clear	;wreg free
  4942  012E4A  0012               	return		;funcret
  4943  012E4C                     __end_of_I2C_LCD_init:
  4944                           	opt stack 0
  4945                           tblptru	equ	0xFF8
  4946                           tblptrh	equ	0xFF7
  4947                           tblptrl	equ	0xFF6
  4948                           tablat	equ	0xFF5
  4949                           prodh	equ	0xFF4
  4950                           prodl	equ	0xFF3
  4951                           intcon	equ	0xFF2
  4952                           intcon2	equ	0xFF1
  4953                           postinc0	equ	0xFEE
  4954                           wreg	equ	0xFE8
  4955                           postdec1	equ	0xFE5
  4956                           fsr1h	equ	0xFE2
  4957                           fsr1l	equ	0xFE1
  4958                           indf2	equ	0xFDF
  4959                           postinc2	equ	0xFDE
  4960                           postdec2	equ	0xFDD
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _I2C_init_old *****************
  4966 ;; Defined at:
  4967 ;;		line 62 in file "../My_library/My_I2C.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		wreg, status,2
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;Total ram usage:        0 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:   12
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_I2C_LCD_init
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text22
  4996  013950                     __ptext22:
  4997                           	opt stack 0
  4998  013950                     _I2C_init_old:
  4999                           	opt stack 16
  5000                           
  5001                           ;My_I2C.c: 63: SSP1STAT = 0b10000000;
  5002                           
  5003                           ;incstack = 0
  5004  013950  0E80               	movlw	128
  5005  013952  6EC7               	movwf	4039,c	;volatile
  5006                           
  5007                           ;My_I2C.c: 64: SSP1CON1 = 0b00101000;
  5008  013954  0E28               	movlw	40
  5009  013956  6EC6               	movwf	4038,c	;volatile
  5010                           
  5011                           ;My_I2C.c: 65: SSP1ADD = 0x13;
  5012  013958  0E13               	movlw	19
  5013  01395A  6EC8               	movwf	4040,c	;volatile
  5014                           
  5015                           ;My_I2C.c: 68: SSP1IF = 0;
  5016  01395C  969E               	bcf	3998,3,c	;volatile
  5017                           
  5018                           ;My_I2C.c: 69: BCL1IF = 0;
  5019  01395E  96A1               	bcf	4001,3,c	;volatile
  5020  013960  0012               	return		;funcret
  5021  013962                     __end_of_I2C_init_old:
  5022                           	opt stack 0
  5023                           tblptru	equ	0xFF8
  5024                           tblptrh	equ	0xFF7
  5025                           tblptrl	equ	0xFF6
  5026                           tablat	equ	0xFF5
  5027                           prodh	equ	0xFF4
  5028                           prodl	equ	0xFF3
  5029                           intcon	equ	0xFF2
  5030                           intcon2	equ	0xFF1
  5031                           postinc0	equ	0xFEE
  5032                           wreg	equ	0xFE8
  5033                           postdec1	equ	0xFE5
  5034                           fsr1h	equ	0xFE2
  5035                           fsr1l	equ	0xFE1
  5036                           indf2	equ	0xFDF
  5037                           postinc2	equ	0xFDE
  5038                           postdec2	equ	0xFDD
  5039                           fsr2h	equ	0xFDA
  5040                           fsr2l	equ	0xFD9
  5041                           status	equ	0xFD8
  5042                           
  5043 ;; *************** function _loop *****************
  5044 ;; Defined at:
  5045 ;;		line 95 in file "main.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  s              40    0[BANK2 ] unsigned char [20][2]
  5050 ;; Return value:  Size  Location     Type
  5051 ;;		None               void
  5052 ;; Registers used:
  5053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;      Locals:         0       0       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5061 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5062 ;;      Totals:         0       1       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5063 ;;Total ram usage:       41 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:   17
  5066 ;; This function calls:
  5067 ;;		_I2C_LCD_Clear
  5068 ;;		_I2C_LCD_Puts
  5069 ;;		_I2C_LCD_SetCursor
  5070 ;;		_RTCC_task
  5071 ;;		_UART_task
  5072 ;;		_USB_CDC_task
  5073 ;;		_display_time_0802
  5074 ;;		_ringbuf_num
  5075 ;;		_ringbuf_pop
  5076 ;;		_ringbuf_put
  5077 ;; This function is called by:
  5078 ;;		_main
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           	psect	text23
  5083  011192                     __ptext23:
  5084                           	opt stack 0
  5085  011192                     _loop:
  5086                           	opt stack 13
  5087                           
  5088                           ;main.c: 96: RTCC_task();
  5089                           
  5090                           ;incstack = 0
  5091  011192  EC44  F09A         	call	_RTCC_task	;wreg free
  5092                           
  5093                           ;main.c: 97: if (time_change_flag) {
  5094  011196  0100               	movlb	0	; () banked
  5095  011198  51C1               	movf	_time_change_flag& (0+255),w,b
  5096  01119A  B4D8               	btfsc	status,2,c
  5097  01119C  D035               	goto	l9755
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;main.c: 98: time_change_flag = 0;
  5101  01119E  0E00               	movlw	0
  5102  0111A0  0100               	movlb	0	; () banked
  5103  0111A2  6FC1               	movwf	_time_change_flag& (0+255),b
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;main.c: 99: char s[2][20];
  5107                           ;main.c: 100: display_time_0802(&now, s[0], s[1]);
  5108  0111A4  0EB8               	movlw	low _now
  5109  0111A6  0100               	movlb	0	; () banked
  5110  0111A8  6F97               	movwf	display_time_0802@tm& (0+255),b
  5111  0111AA  0E01               	movlw	high _now
  5112  0111AC  0100               	movlb	0	; () banked
  5113  0111AE  6F98               	movwf	(display_time_0802@tm+1)& (0+255),b
  5114  0111B0  0EC0               	movlw	low loop@s
  5115  0111B2  0100               	movlb	0	; () banked
  5116  0111B4  6F99               	movwf	display_time_0802@line0& (0+255),b
  5117  0111B6  0E02               	movlw	high loop@s
  5118  0111B8  0100               	movlb	0	; () banked
  5119  0111BA  6F9A               	movwf	(display_time_0802@line0+1)& (0+255),b
  5120  0111BC  0ED4               	movlw	low (loop@s+20)
  5121  0111BE  0100               	movlb	0	; () banked
  5122  0111C0  6F9B               	movwf	display_time_0802@line1& (0+255),b
  5123  0111C2  0E02               	movlw	high (loop@s+20)
  5124  0111C4  0100               	movlb	0	; () banked
  5125  0111C6  6F9C               	movwf	(display_time_0802@line1+1)& (0+255),b
  5126  0111C8  ECB8  F084         	call	_display_time_0802	;wreg free
  5127                           
  5128                           ;main.c: 101: I2C_LCD_Clear();
  5129  0111CC  EC8F  F09C         	call	_I2C_LCD_Clear	;wreg free
  5130                           
  5131                           ;main.c: 102: I2C_LCD_SetCursor(0, 0);
  5132  0111D0  0E00               	movlw	0
  5133  0111D2  0100               	movlb	0	; () banked
  5134  0111D4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5135  0111D6  0E00               	movlw	0
  5136  0111D8  EC6D  F09B         	call	_I2C_LCD_SetCursor
  5137                           
  5138                           ;main.c: 103: I2C_LCD_Puts(s[0]);
  5139  0111DC  0EC0               	movlw	low loop@s
  5140  0111DE  0100               	movlb	0	; () banked
  5141  0111E0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5142  0111E2  0E02               	movlw	high loop@s
  5143  0111E4  0100               	movlb	0	; () banked
  5144  0111E6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5145  0111E8  EC26  F097         	call	_I2C_LCD_Puts	;wreg free
  5146                           
  5147                           ;main.c: 104: I2C_LCD_SetCursor(0, 1);
  5148  0111EC  0E01               	movlw	1
  5149  0111EE  0100               	movlb	0	; () banked
  5150  0111F0  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5151  0111F2  0E00               	movlw	0
  5152  0111F4  EC6D  F09B         	call	_I2C_LCD_SetCursor
  5153                           
  5154                           ;main.c: 105: I2C_LCD_Puts(s[1]);
  5155  0111F8  0ED4               	movlw	low (loop@s+20)
  5156  0111FA  0100               	movlb	0	; () banked
  5157  0111FC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5158  0111FE  0E02               	movlw	high (loop@s+20)
  5159  011200  0100               	movlb	0	; () banked
  5160  011202  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5161  011204  EC26  F097         	call	_I2C_LCD_Puts	;wreg free
  5162  011208                     l9755:
  5163                           
  5164                           ;main.c: 106: }
  5165                           ;main.c: 107: USB_CDC_task();
  5166  011208  ECAC  F08B         	call	_USB_CDC_task	;wreg free
  5167                           
  5168                           ;main.c: 108: UART_task();
  5169  01120C  EC46  F09C         	call	_UART_task	;wreg free
  5170                           
  5171                           ;main.c: 109: if (ringbuf_num(&usb_rx)) {
  5172  011210  0EDE               	movlw	low _usb_rx
  5173  011212  0100               	movlb	0	; () banked
  5174  011214  6F60               	movwf	ringbuf_num@rb& (0+255),b
  5175  011216  0E01               	movlw	high _usb_rx
  5176  011218  0100               	movlb	0	; () banked
  5177  01121A  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  5178  01121C  EC9F  F08C         	call	_ringbuf_num	;wreg free
  5179  011220  0100               	movlb	0	; () banked
  5180  011222  5160               	movf	?_ringbuf_num& (0+255),w,b
  5181  011224  0100               	movlb	0	; () banked
  5182  011226  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5183  011228  B4D8               	btfsc	status,2,c
  5184  01122A  D023               	goto	l9765
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;main.c: 110: ringbuf_put(&usb_tx, ringbuf_pop(&usb_rx));
  5188  01122C  0EE6               	movlw	low _usb_tx
  5189  01122E  0100               	movlb	0	; () banked
  5190  011230  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  5191  011232  0E01               	movlw	high _usb_tx
  5192  011234  0100               	movlb	0	; () banked
  5193  011236  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  5194  011238  0EDE               	movlw	low _usb_rx
  5195  01123A  0100               	movlb	0	; () banked
  5196  01123C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  5197  01123E  0E01               	movlw	high _usb_rx
  5198  011240  0100               	movlb	0	; () banked
  5199  011242  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  5200  011244  EC50  F091         	call	_ringbuf_pop	;wreg free
  5201  011248  0100               	movlb	0	; () banked
  5202  01124A  6F71               	movwf	ringbuf_put@data& (0+255),b
  5203  01124C  EC16  F090         	call	_ringbuf_put	;wreg free
  5204                           
  5205                           ;main.c: 111: LATBbits.LATB7 = !LATBbits.LATB7;
  5206  011250  BE8A               	btfsc	3978,7,c	;volatile
  5207  011252  D004               	goto	u9570
  5208  011254  0100               	movlb	0	; () banked
  5209  011256  6B9D               	clrf	??_loop& (0+255),b
  5210  011258  2B9D               	incf	??_loop& (0+255),f,b
  5211  01125A  D002               	goto	u9588
  5212  01125C                     u9570:
  5213  01125C  0100               	movlb	0	; () banked
  5214  01125E  6B9D               	clrf	??_loop& (0+255),b
  5215  011260                     u9588:
  5216  011260  0100               	movlb	0	; () banked
  5217  011262  339D               	rrcf	??_loop& (0+255),f,b
  5218  011264  339D               	rrcf	??_loop& (0+255),f,b
  5219  011266  508A               	movf	3978,w,c	;volatile
  5220  011268  0100               	movlb	0	; () banked
  5221  01126A  199D               	xorwf	??_loop& (0+255),w,b
  5222  01126C  0B7F               	andlw	-129
  5223  01126E  199D               	xorwf	??_loop& (0+255),w,b
  5224  011270  6E8A               	movwf	3978,c	;volatile
  5225  011272                     l9765:
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;main.c: 112: }
  5229                           ;main.c: 113: if (ringbuf_num(&uart_rx)) {
  5230  011272  0ECE               	movlw	low _uart_rx
  5231  011274  0100               	movlb	0	; () banked
  5232  011276  6F60               	movwf	ringbuf_num@rb& (0+255),b
  5233  011278  0E01               	movlw	high _uart_rx
  5234  01127A  0100               	movlb	0	; () banked
  5235  01127C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  5236  01127E  EC9F  F08C         	call	_ringbuf_num	;wreg free
  5237  011282  0100               	movlb	0	; () banked
  5238  011284  5160               	movf	?_ringbuf_num& (0+255),w,b
  5239  011286  0100               	movlb	0	; () banked
  5240  011288  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5241  01128A  B4D8               	btfsc	status,2,c
  5242  01128C  0012               	return	
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;main.c: 114: ringbuf_put(&uart_tx, ringbuf_pop(&uart_rx));
  5246  01128E  0ED6               	movlw	low _uart_tx
  5247  011290  0100               	movlb	0	; () banked
  5248  011292  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  5249  011294  0E01               	movlw	high _uart_tx
  5250  011296  0100               	movlb	0	; () banked
  5251  011298  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  5252  01129A  0ECE               	movlw	low _uart_rx
  5253  01129C  0100               	movlb	0	; () banked
  5254  01129E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  5255  0112A0  0E01               	movlw	high _uart_rx
  5256  0112A2  0100               	movlb	0	; () banked
  5257  0112A4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  5258  0112A6  EC50  F091         	call	_ringbuf_pop	;wreg free
  5259  0112AA  0100               	movlb	0	; () banked
  5260  0112AC  6F71               	movwf	ringbuf_put@data& (0+255),b
  5261  0112AE  EC16  F090         	call	_ringbuf_put	;wreg free
  5262                           
  5263                           ;main.c: 115: LATBbits.LATB6 = !LATBbits.LATB6;
  5264  0112B2  BC8A               	btfsc	3978,6,c	;volatile
  5265  0112B4  D004               	goto	u9600
  5266  0112B6  0100               	movlb	0	; () banked
  5267  0112B8  6B9D               	clrf	??_loop& (0+255),b
  5268  0112BA  2B9D               	incf	??_loop& (0+255),f,b
  5269  0112BC  D002               	goto	u9618
  5270  0112BE                     u9600:
  5271  0112BE  0100               	movlb	0	; () banked
  5272  0112C0  6B9D               	clrf	??_loop& (0+255),b
  5273  0112C2                     u9618:
  5274  0112C2  0100               	movlb	0	; () banked
  5275  0112C4  3B9D               	swapf	??_loop& (0+255),f,b
  5276  0112C6  479D               	rlncf	??_loop& (0+255),f,b
  5277  0112C8  479D               	rlncf	??_loop& (0+255),f,b
  5278  0112CA  508A               	movf	3978,w,c	;volatile
  5279  0112CC  0100               	movlb	0	; () banked
  5280  0112CE  199D               	xorwf	??_loop& (0+255),w,b
  5281  0112D0  0BBF               	andlw	-65
  5282  0112D2  199D               	xorwf	??_loop& (0+255),w,b
  5283  0112D4  6E8A               	movwf	3978,c	;volatile
  5284  0112D6  0012               	return	
  5285  0112D8                     __end_of_loop:
  5286                           	opt stack 0
  5287                           tblptru	equ	0xFF8
  5288                           tblptrh	equ	0xFF7
  5289                           tblptrl	equ	0xFF6
  5290                           tablat	equ	0xFF5
  5291                           prodh	equ	0xFF4
  5292                           prodl	equ	0xFF3
  5293                           intcon	equ	0xFF2
  5294                           intcon2	equ	0xFF1
  5295                           postinc0	equ	0xFEE
  5296                           wreg	equ	0xFE8
  5297                           postdec1	equ	0xFE5
  5298                           fsr1h	equ	0xFE2
  5299                           fsr1l	equ	0xFE1
  5300                           indf2	equ	0xFDF
  5301                           postinc2	equ	0xFDE
  5302                           postdec2	equ	0xFDD
  5303                           fsr2h	equ	0xFDA
  5304                           fsr2l	equ	0xFD9
  5305                           status	equ	0xFD8
  5306                           
  5307 ;; *************** function _display_time_0802 *****************
  5308 ;; Defined at:
  5309 ;;		line 224 in file "../My_library/My_RTCC.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;  tm              2   55[BANK0 ] PTR struct .
  5312 ;;		 -> now(14), 
  5313 ;;  line0           2   57[BANK0 ] PTR unsigned char 
  5314 ;;		 -> loop@s(40), 
  5315 ;;  line1           2   59[BANK0 ] PTR unsigned char 
  5316 ;;		 -> loop@s(40), 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;		None               void
  5321 ;; Registers used:
  5322 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5328 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5331 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5332 ;;Total ram usage:        6 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:   16
  5335 ;; This function calls:
  5336 ;;		_RTCC_from_RTCC
  5337 ;;		_display_dec
  5338 ;;		_strcat
  5339 ;;		_strcpy
  5340 ;; This function is called by:
  5341 ;;		_loop
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text24
  5346  010970                     __ptext24:
  5347                           	opt stack 0
  5348  010970                     _display_time_0802:
  5349                           	opt stack 13
  5350                           
  5351                           ;My_RTCC.c: 225: RTCC_from_RTCC(&now);
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;incstack = 0
  5355  010970  0EB8               	movlw	low _now
  5356  010972  0100               	movlb	0	; () banked
  5357  010974  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5358  010976  0E01               	movlw	high _now
  5359  010978  0100               	movlb	0	; () banked
  5360  01097A  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5361  01097C  EC82  F09C         	call	_RTCC_from_RTCC	;wreg free
  5362                           
  5363                           ;My_RTCC.c: 227: strcpy(line0, "");
  5364  010980  C099  F060         	movff	display_time_0802@line0,strcpy@to
  5365  010984  C09A  F061         	movff	display_time_0802@line0+1,strcpy@to+1
  5366  010988  0EE8               	movlw	low (STR_19+3)
  5367  01098A  0100               	movlb	0	; () banked
  5368  01098C  6F62               	movwf	strcpy@from& (0+255),b
  5369  01098E  0EFF               	movlw	high (STR_19+3)
  5370  010990  0100               	movlb	0	; () banked
  5371  010992  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5372  010994  ECB9  F09A         	call	_strcpy	;wreg free
  5373                           
  5374                           ;My_RTCC.c: 228: display_dec(line0, tm->YY, tm->edit.flag.YY);
  5375  010998  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  5376  01099C  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  5377  0109A0  0100               	movlb	0	; () banked
  5378  0109A2  EE20 F00A          	lfsr	2,10
  5379  0109A6  5197               	movf	display_time_0802@tm& (0+255),w,b
  5380  0109A8  26D9               	addwf	fsr2l,f,c
  5381  0109AA  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5382  0109AC  22DA               	addwfc	fsr2h,f,c
  5383  0109AE  50DF               	movf	indf2,w,c
  5384  0109B0  0100               	movlb	0	; () banked
  5385  0109B2  6F91               	movwf	display_dec@dec& (0+255),b
  5386  0109B4  0100               	movlb	0	; () banked
  5387  0109B6  EE20 F00D          	lfsr	2,13
  5388  0109BA  5197               	movf	display_time_0802@tm& (0+255),w,b
  5389  0109BC  26D9               	addwf	fsr2l,f,c
  5390  0109BE  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5391  0109C0  22DA               	addwfc	fsr2h,f,c
  5392  0109C2  0E00               	movlw	0
  5393  0109C4  BADF               	btfsc	indf2,5,c
  5394  0109C6  0E01               	movlw	1
  5395  0109C8  0100               	movlb	0	; () banked
  5396  0109CA  6F92               	movwf	display_dec@edit& (0+255),b
  5397  0109CC  EC91  F098         	call	_display_dec	;wreg free
  5398                           
  5399                           ;My_RTCC.c: 229: strcat(line0, "/");
  5400  0109D0  C099  F060         	movff	display_time_0802@line0,strcat@to
  5401  0109D4  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  5402  0109D8  0EFA               	movlw	low STR_4
  5403  0109DA  0100               	movlb	0	; () banked
  5404  0109DC  6F62               	movwf	strcat@from& (0+255),b
  5405  0109DE  0EFF               	movlw	high STR_4
  5406  0109E0  0100               	movlb	0	; () banked
  5407  0109E2  6F63               	movwf	(strcat@from+1)& (0+255),b
  5408  0109E4  ECF7  F098         	call	_strcat	;wreg free
  5409                           
  5410                           ;My_RTCC.c: 230: display_dec(line0, tm->MM, tm->edit.flag.MM);
  5411  0109E8  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  5412  0109EC  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  5413  0109F0  0100               	movlb	0	; () banked
  5414  0109F2  EE20 F009          	lfsr	2,9
  5415  0109F6  5197               	movf	display_time_0802@tm& (0+255),w,b
  5416  0109F8  26D9               	addwf	fsr2l,f,c
  5417  0109FA  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5418  0109FC  22DA               	addwfc	fsr2h,f,c
  5419  0109FE  50DF               	movf	indf2,w,c
  5420  010A00  0100               	movlb	0	; () banked
  5421  010A02  6F91               	movwf	display_dec@dec& (0+255),b
  5422  010A04  0100               	movlb	0	; () banked
  5423  010A06  EE20 F00D          	lfsr	2,13
  5424  010A0A  5197               	movf	display_time_0802@tm& (0+255),w,b
  5425  010A0C  26D9               	addwf	fsr2l,f,c
  5426  010A0E  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5427  010A10  22DA               	addwfc	fsr2h,f,c
  5428  010A12  0E00               	movlw	0
  5429  010A14  B8DF               	btfsc	indf2,4,c
  5430  010A16  0E01               	movlw	1
  5431  010A18  0100               	movlb	0	; () banked
  5432  010A1A  6F92               	movwf	display_dec@edit& (0+255),b
  5433  010A1C  EC91  F098         	call	_display_dec	;wreg free
  5434                           
  5435                           ;My_RTCC.c: 231: strcat(line0, "/");
  5436  010A20  C099  F060         	movff	display_time_0802@line0,strcat@to
  5437  010A24  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  5438  010A28  0EFA               	movlw	low STR_4
  5439  010A2A  0100               	movlb	0	; () banked
  5440  010A2C  6F62               	movwf	strcat@from& (0+255),b
  5441  010A2E  0EFF               	movlw	high STR_4
  5442  010A30  0100               	movlb	0	; () banked
  5443  010A32  6F63               	movwf	(strcat@from+1)& (0+255),b
  5444  010A34  ECF7  F098         	call	_strcat	;wreg free
  5445                           
  5446                           ;My_RTCC.c: 232: display_dec(line0, tm->DD, tm->edit.flag.DD);
  5447  010A38  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  5448  010A3C  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  5449  010A40  0100               	movlb	0	; () banked
  5450  010A42  EE20 F008          	lfsr	2,8
  5451  010A46  5197               	movf	display_time_0802@tm& (0+255),w,b
  5452  010A48  26D9               	addwf	fsr2l,f,c
  5453  010A4A  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5454  010A4C  22DA               	addwfc	fsr2h,f,c
  5455  010A4E  50DF               	movf	indf2,w,c
  5456  010A50  0100               	movlb	0	; () banked
  5457  010A52  6F91               	movwf	display_dec@dec& (0+255),b
  5458  010A54  0100               	movlb	0	; () banked
  5459  010A56  EE20 F00D          	lfsr	2,13
  5460  010A5A  5197               	movf	display_time_0802@tm& (0+255),w,b
  5461  010A5C  26D9               	addwf	fsr2l,f,c
  5462  010A5E  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5463  010A60  22DA               	addwfc	fsr2h,f,c
  5464  010A62  0E00               	movlw	0
  5465  010A64  B6DF               	btfsc	indf2,3,c
  5466  010A66  0E01               	movlw	1
  5467  010A68  0100               	movlb	0	; () banked
  5468  010A6A  6F92               	movwf	display_dec@edit& (0+255),b
  5469  010A6C  EC91  F098         	call	_display_dec	;wreg free
  5470                           
  5471                           ;My_RTCC.c: 234: strcpy(line1, "");
  5472  010A70  C09B  F060         	movff	display_time_0802@line1,strcpy@to
  5473  010A74  C09C  F061         	movff	display_time_0802@line1+1,strcpy@to+1
  5474  010A78  0EE8               	movlw	low (STR_19+3)
  5475  010A7A  0100               	movlb	0	; () banked
  5476  010A7C  6F62               	movwf	strcpy@from& (0+255),b
  5477  010A7E  0EFF               	movlw	high (STR_19+3)
  5478  010A80  0100               	movlb	0	; () banked
  5479  010A82  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5480  010A84  ECB9  F09A         	call	_strcpy	;wreg free
  5481                           
  5482                           ;My_RTCC.c: 235: display_dec(line1, tm->hh, tm->edit.flag.hh);
  5483  010A88  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  5484  010A8C  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  5485  010A90  0100               	movlb	0	; () banked
  5486  010A92  EE20 F006          	lfsr	2,6
  5487  010A96  5197               	movf	display_time_0802@tm& (0+255),w,b
  5488  010A98  26D9               	addwf	fsr2l,f,c
  5489  010A9A  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5490  010A9C  22DA               	addwfc	fsr2h,f,c
  5491  010A9E  50DF               	movf	indf2,w,c
  5492  010AA0  0100               	movlb	0	; () banked
  5493  010AA2  6F91               	movwf	display_dec@dec& (0+255),b
  5494  010AA4  0100               	movlb	0	; () banked
  5495  010AA6  EE20 F00D          	lfsr	2,13
  5496  010AAA  5197               	movf	display_time_0802@tm& (0+255),w,b
  5497  010AAC  26D9               	addwf	fsr2l,f,c
  5498  010AAE  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5499  010AB0  22DA               	addwfc	fsr2h,f,c
  5500  010AB2  0E00               	movlw	0
  5501  010AB4  B4DF               	btfsc	indf2,2,c
  5502  010AB6  0E01               	movlw	1
  5503  010AB8  0100               	movlb	0	; () banked
  5504  010ABA  6F92               	movwf	display_dec@edit& (0+255),b
  5505  010ABC  EC91  F098         	call	_display_dec	;wreg free
  5506                           
  5507                           ;My_RTCC.c: 236: if (now.colon) strcat(line1, ":");
  5508  010AC0  0101               	movlb	1	; () banked
  5509  010AC2  51C3               	movf	(_now+11)& (0+255),w,b
  5510  010AC4  B4D8               	btfsc	status,2,c
  5511  010AC6  D00D               	goto	l9447
  5512                           
  5513                           ; BSR set to: 1
  5514  010AC8  C09B  F060         	movff	display_time_0802@line1,strcat@to
  5515  010ACC  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  5516  010AD0  0EFC               	movlw	low STR_7
  5517  010AD2  0100               	movlb	0	; () banked
  5518  010AD4  6F62               	movwf	strcat@from& (0+255),b
  5519  010AD6  0EFF               	movlw	high STR_7
  5520  010AD8  0100               	movlb	0	; () banked
  5521  010ADA  6F63               	movwf	(strcat@from+1)& (0+255),b
  5522  010ADC  ECF7  F098         	call	_strcat	;wreg free
  5523  010AE0  D00C               	goto	l9449
  5524  010AE2                     l9447:
  5525                           
  5526                           ;My_RTCC.c: 237: else strcat(line1, " ");
  5527  010AE2  C09B  F060         	movff	display_time_0802@line1,strcat@to
  5528  010AE6  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  5529  010AEA  0EB1               	movlw	low (STR_15+7)
  5530  010AEC  0100               	movlb	0	; () banked
  5531  010AEE  6F62               	movwf	strcat@from& (0+255),b
  5532  010AF0  0EFF               	movlw	high (STR_15+7)
  5533  010AF2  0100               	movlb	0	; () banked
  5534  010AF4  6F63               	movwf	(strcat@from+1)& (0+255),b
  5535  010AF6  ECF7  F098         	call	_strcat	;wreg free
  5536  010AFA                     l9449:
  5537                           
  5538                           ;My_RTCC.c: 238: display_dec(line1, tm->mm, tm->edit.flag.mm);
  5539  010AFA  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  5540  010AFE  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  5541  010B02  0100               	movlb	0	; () banked
  5542  010B04  EE20 F005          	lfsr	2,5
  5543  010B08  5197               	movf	display_time_0802@tm& (0+255),w,b
  5544  010B0A  26D9               	addwf	fsr2l,f,c
  5545  010B0C  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5546  010B0E  22DA               	addwfc	fsr2h,f,c
  5547  010B10  50DF               	movf	indf2,w,c
  5548  010B12  0100               	movlb	0	; () banked
  5549  010B14  6F91               	movwf	display_dec@dec& (0+255),b
  5550  010B16  0100               	movlb	0	; () banked
  5551  010B18  EE20 F00D          	lfsr	2,13
  5552  010B1C  5197               	movf	display_time_0802@tm& (0+255),w,b
  5553  010B1E  26D9               	addwf	fsr2l,f,c
  5554  010B20  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5555  010B22  22DA               	addwfc	fsr2h,f,c
  5556  010B24  0E00               	movlw	0
  5557  010B26  B2DF               	btfsc	indf2,1,c
  5558  010B28  0E01               	movlw	1
  5559  010B2A  0100               	movlb	0	; () banked
  5560  010B2C  6F92               	movwf	display_dec@edit& (0+255),b
  5561  010B2E  EC91  F098         	call	_display_dec	;wreg free
  5562                           
  5563                           ;My_RTCC.c: 239: strcat(line1, "-");
  5564  010B32  C09B  F060         	movff	display_time_0802@line1,strcat@to
  5565  010B36  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  5566  010B3A  0EF8               	movlw	low STR_9
  5567  010B3C  0100               	movlb	0	; () banked
  5568  010B3E  6F62               	movwf	strcat@from& (0+255),b
  5569  010B40  0EFF               	movlw	high STR_9
  5570  010B42  0100               	movlb	0	; () banked
  5571  010B44  6F63               	movwf	(strcat@from+1)& (0+255),b
  5572  010B46  ECF7  F098         	call	_strcat	;wreg free
  5573                           
  5574                           ;My_RTCC.c: 240: display_dec(line1, tm->ss, tm->edit.flag.ss);
  5575  010B4A  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  5576  010B4E  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  5577  010B52  0100               	movlb	0	; () banked
  5578  010B54  EE20 F004          	lfsr	2,4
  5579  010B58  5197               	movf	display_time_0802@tm& (0+255),w,b
  5580  010B5A  26D9               	addwf	fsr2l,f,c
  5581  010B5C  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5582  010B5E  22DA               	addwfc	fsr2h,f,c
  5583  010B60  50DF               	movf	indf2,w,c
  5584  010B62  0100               	movlb	0	; () banked
  5585  010B64  6F91               	movwf	display_dec@dec& (0+255),b
  5586  010B66  0100               	movlb	0	; () banked
  5587  010B68  EE20 F00D          	lfsr	2,13
  5588  010B6C  5197               	movf	display_time_0802@tm& (0+255),w,b
  5589  010B6E  26D9               	addwf	fsr2l,f,c
  5590  010B70  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5591  010B72  22DA               	addwfc	fsr2h,f,c
  5592  010B74  0E00               	movlw	0
  5593  010B76  B0DF               	btfsc	indf2,0,c
  5594  010B78  0E01               	movlw	1
  5595  010B7A  0100               	movlb	0	; () banked
  5596  010B7C  6F92               	movwf	display_dec@edit& (0+255),b
  5597  010B7E  EC91  F098         	call	_display_dec	;wreg free
  5598  010B82  0012               	return		;funcret
  5599  010B84                     __end_of_display_time_0802:
  5600                           	opt stack 0
  5601                           tblptru	equ	0xFF8
  5602                           tblptrh	equ	0xFF7
  5603                           tblptrl	equ	0xFF6
  5604                           tablat	equ	0xFF5
  5605                           prodh	equ	0xFF4
  5606                           prodl	equ	0xFF3
  5607                           intcon	equ	0xFF2
  5608                           intcon2	equ	0xFF1
  5609                           postinc0	equ	0xFEE
  5610                           wreg	equ	0xFE8
  5611                           postdec1	equ	0xFE5
  5612                           fsr1h	equ	0xFE2
  5613                           fsr1l	equ	0xFE1
  5614                           indf2	equ	0xFDF
  5615                           postinc2	equ	0xFDE
  5616                           postdec2	equ	0xFDD
  5617                           fsr2h	equ	0xFDA
  5618                           fsr2l	equ	0xFD9
  5619                           status	equ	0xFD8
  5620                           
  5621 ;; *************** function _strcpy *****************
  5622 ;; Defined at:
  5623 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  to              2    0[BANK0 ] PTR unsigned char 
  5626 ;;		 -> loop@s(40), 
  5627 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  5628 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  5631 ;;		 -> loop@s(40), 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  2    0[BANK0 ] PTR unsigned char 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5641 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5642 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;Total ram usage:        6 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:   12
  5648 ;; This function calls:
  5649 ;;		Nothing
  5650 ;; This function is called by:
  5651 ;;		_display_time_0802
  5652 ;;		_display_time_1602
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text25
  5657  013572                     __ptext25:
  5658                           	opt stack 0
  5659  013572                     _strcpy:
  5660                           	opt stack 16
  5661                           
  5662                           ;incstack = 0
  5663  013572  C060  F064         	movff	strcpy@to,strcpy@cp
  5664  013576  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  5665  01357A  D006               	goto	l9295
  5666  01357C                     l9293:
  5667  01357C  0100               	movlb	0	; () banked
  5668  01357E  4B64               	infsnz	strcpy@cp& (0+255),f,b
  5669  013580  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  5670  013582  0100               	movlb	0	; () banked
  5671  013584  4B62               	infsnz	strcpy@from& (0+255),f,b
  5672  013586  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  5673  013588                     l9295:
  5674  013588  C062  FFF6         	movff	strcpy@from,tblptrl
  5675  01358C  C063  FFF7         	movff	strcpy@from+1,tblptrh
  5676  013590                     	if	0	;tblptru may be non-zero
  5677  013590                     	endif
  5678  013590                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5679  013590  0E00               	movlw	low (__mediumconst shr (0+16))
  5680  013592  6EF8               	movwf	tblptru,c
  5681  013594                     	endif
  5682  013594  C064  FFD9         	movff	strcpy@cp,fsr2l
  5683  013598  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  5684  01359C  0008               	tblrd		*
  5685  01359E  CFF5 FFDF          	movff	tablat,indf2
  5686  0135A2  50DF               	movf	indf2,w,c
  5687  0135A4  B4D8               	btfsc	status,2,c
  5688  0135A6  0012               	return	
  5689  0135A8  D7E9               	goto	l9293
  5690  0135AA                     __end_of_strcpy:
  5691                           	opt stack 0
  5692                           tblptru	equ	0xFF8
  5693                           tblptrh	equ	0xFF7
  5694                           tblptrl	equ	0xFF6
  5695                           tablat	equ	0xFF5
  5696                           prodh	equ	0xFF4
  5697                           prodl	equ	0xFF3
  5698                           intcon	equ	0xFF2
  5699                           intcon2	equ	0xFF1
  5700                           postinc0	equ	0xFEE
  5701                           wreg	equ	0xFE8
  5702                           postdec1	equ	0xFE5
  5703                           fsr1h	equ	0xFE2
  5704                           fsr1l	equ	0xFE1
  5705                           indf2	equ	0xFDF
  5706                           postinc2	equ	0xFDE
  5707                           postdec2	equ	0xFDD
  5708                           fsr2h	equ	0xFDA
  5709                           fsr2l	equ	0xFD9
  5710                           status	equ	0xFD8
  5711                           
  5712 ;; *************** function _display_dec *****************
  5713 ;; Defined at:
  5714 ;;		line 217 in file "../My_library/My_RTCC.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  str             2   47[BANK0 ] PTR unsigned char 
  5717 ;;		 -> loop@s(40), 
  5718 ;;  dec             1   49[BANK0 ] unsigned char 
  5719 ;;  edit            1   50[BANK0 ] unsigned char 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  s               4   51[BANK0 ] unsigned char [4]
  5722 ;; Return value:  Size  Location     Type
  5723 ;;		None               void
  5724 ;; Registers used:
  5725 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5732 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5734 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5735 ;;Total ram usage:        8 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:   14
  5738 ;; This function calls:
  5739 ;;		_sprintf
  5740 ;;		_strcat
  5741 ;; This function is called by:
  5742 ;;		_display_time_0802
  5743 ;;		_display_time_1602
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text26
  5748  013122                     __ptext26:
  5749                           	opt stack 0
  5750  013122                     _display_dec:
  5751                           	opt stack 14
  5752                           
  5753                           ;My_RTCC.c: 218: char s[4];
  5754                           ;My_RTCC.c: 219: sprintf(s, "%02d", dec);
  5755                           
  5756                           ;incstack = 0
  5757  013122  0E93               	movlw	low display_dec@s
  5758  013124  0100               	movlb	0	; () banked
  5759  013126  6F6C               	movwf	sprintf@sp& (0+255),b
  5760  013128  0E00               	movlw	high display_dec@s
  5761  01312A  0100               	movlb	0	; () banked
  5762  01312C  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  5763  01312E  0EE0               	movlw	low STR_1
  5764  013130  0100               	movlb	0	; () banked
  5765  013132  6F6E               	movwf	sprintf@f& (0+255),b
  5766  013134  0EFF               	movlw	high STR_1
  5767  013136  0100               	movlb	0	; () banked
  5768  013138  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  5769  01313A  C091  F070         	movff	display_dec@dec,?_sprintf+4
  5770  01313E  0100               	movlb	0	; () banked
  5771  013140  6B71               	clrf	(?_sprintf+5)& (0+255),b
  5772  013142  EC00  F080         	call	_sprintf	;wreg free
  5773                           
  5774                           ;My_RTCC.c: 220: if (edit && now.halfsec)strcat(str, "  ");
  5775  013146  0100               	movlb	0	; () banked
  5776  013148  5192               	movf	display_dec@edit& (0+255),w,b
  5777  01314A  0100               	movlb	0	; () banked
  5778  01314C  B4D8               	btfsc	status,2,c
  5779  01314E  D011               	goto	l9289
  5780                           
  5781                           ; BSR set to: 0
  5782  013150  0101               	movlb	1	; () banked
  5783  013152  51C4               	movf	(_now+12)& (0+255),w,b
  5784  013154  B4D8               	btfsc	status,2,c
  5785  013156  D00D               	goto	l9289
  5786                           
  5787                           ; BSR set to: 1
  5788  013158  C08F  F060         	movff	display_dec@str,strcat@to
  5789  01315C  C090  F061         	movff	display_dec@str+1,strcat@to+1
  5790  013160  0EB0               	movlw	low (STR_15+6)
  5791  013162  0100               	movlb	0	; () banked
  5792  013164  6F62               	movwf	strcat@from& (0+255),b
  5793  013166  0EFF               	movlw	high (STR_15+6)
  5794  013168  0100               	movlb	0	; () banked
  5795  01316A  6F63               	movwf	(strcat@from+1)& (0+255),b
  5796  01316C  ECF7  F098         	call	_strcat	;wreg free
  5797  013170  0012               	return	
  5798  013172                     l9289:
  5799                           
  5800                           ;My_RTCC.c: 221: else strcat(str, s);
  5801  013172  C08F  F060         	movff	display_dec@str,strcat@to
  5802  013176  C090  F061         	movff	display_dec@str+1,strcat@to+1
  5803  01317A  0E93               	movlw	low display_dec@s
  5804  01317C  0100               	movlb	0	; () banked
  5805  01317E  6F62               	movwf	strcat@from& (0+255),b
  5806  013180  0E00               	movlw	high display_dec@s
  5807  013182  0100               	movlb	0	; () banked
  5808  013184  6F63               	movwf	(strcat@from+1)& (0+255),b
  5809  013186  ECF7  F098         	call	_strcat	;wreg free
  5810  01318A  0012               	return	
  5811  01318C                     __end_of_display_dec:
  5812                           	opt stack 0
  5813                           tblptru	equ	0xFF8
  5814                           tblptrh	equ	0xFF7
  5815                           tblptrl	equ	0xFF6
  5816                           tablat	equ	0xFF5
  5817                           prodh	equ	0xFF4
  5818                           prodl	equ	0xFF3
  5819                           intcon	equ	0xFF2
  5820                           intcon2	equ	0xFF1
  5821                           postinc0	equ	0xFEE
  5822                           wreg	equ	0xFE8
  5823                           postdec1	equ	0xFE5
  5824                           fsr1h	equ	0xFE2
  5825                           fsr1l	equ	0xFE1
  5826                           indf2	equ	0xFDF
  5827                           postinc2	equ	0xFDE
  5828                           postdec2	equ	0xFDD
  5829                           fsr2h	equ	0xFDA
  5830                           fsr2l	equ	0xFD9
  5831                           status	equ	0xFD8
  5832                           
  5833 ;; *************** function _strcat *****************
  5834 ;; Defined at:
  5835 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  to              2    0[BANK0 ] PTR unsigned char 
  5838 ;;		 -> loop@s(40), 
  5839 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  5840 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
  5841 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
  5842 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
  5843 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  5846 ;;		 -> loop@s(40), 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  2    0[BANK0 ] PTR unsigned char 
  5849 ;; Registers used:
  5850 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5857 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5859 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5860 ;;Total ram usage:        6 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:   12
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_display_dec
  5867 ;;		_display_time_0802
  5868 ;;		_display_time_1602
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text27
  5873  0131EE                     __ptext27:
  5874                           	opt stack 0
  5875  0131EE                     _strcat:
  5876                           	opt stack 16
  5877                           
  5878                           ;incstack = 0
  5879  0131EE  C060  F064         	movff	strcat@to,strcat@cp
  5880  0131F2  C061  F065         	movff	strcat@to+1,strcat@cp+1
  5881  0131F6  D003               	goto	l9117
  5882  0131F8                     l9115:
  5883  0131F8  0100               	movlb	0	; () banked
  5884  0131FA  4B64               	infsnz	strcat@cp& (0+255),f,b
  5885  0131FC  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  5886  0131FE                     l9117:
  5887  0131FE  C064  FFD9         	movff	strcat@cp,fsr2l
  5888  013202  C065  FFDA         	movff	strcat@cp+1,fsr2h
  5889  013206  50DF               	movf	indf2,w,c
  5890  013208  B4D8               	btfsc	status,2,c
  5891  01320A  D007               	goto	l9121
  5892  01320C  D7F5               	goto	l9115
  5893  01320E                     l9119:
  5894  01320E  0100               	movlb	0	; () banked
  5895  013210  4B64               	infsnz	strcat@cp& (0+255),f,b
  5896  013212  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  5897  013214  0100               	movlb	0	; () banked
  5898  013216  4B62               	infsnz	strcat@from& (0+255),f,b
  5899  013218  2B63               	incf	(strcat@from+1)& (0+255),f,b
  5900  01321A                     l9121:
  5901  01321A  C062  FFF6         	movff	strcat@from,tblptrl
  5902  01321E  C063  FFF7         	movff	strcat@from+1,tblptrh
  5903  013222  0E00               	movlw	low (__mediumconst shr (0+16))
  5904  013224  6EF8               	movwf	tblptru,c
  5905  013226  C064  FFD9         	movff	strcat@cp,fsr2l
  5906  01322A  C065  FFDA         	movff	strcat@cp+1,fsr2h
  5907  01322E  0E0E               	movlw	(high __ramtop+-1)
  5908  013230  64F7               	cpfsgt	tblptrh,c
  5909  013232  D003               	bra	u8907
  5910  013234  0008               	tblrd		*
  5911  013236  50F5               	movf	tablat,w,c
  5912  013238  D005               	bra	u8900
  5913  01323A                     u8907:
  5914  01323A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5915  01323E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5916  013242  50EF               	movf	indf0,w,c
  5917  013244                     u8900:
  5918  013244  6EDF               	movwf	indf2,c
  5919  013246  50DF               	movf	indf2,w,c
  5920  013248  B4D8               	btfsc	status,2,c
  5921  01324A  0012               	return	
  5922  01324C  D7E0               	goto	l9119
  5923  01324E                     __end_of_strcat:
  5924                           	opt stack 0
  5925                           tblptru	equ	0xFF8
  5926                           tblptrh	equ	0xFF7
  5927                           tblptrl	equ	0xFF6
  5928                           tablat	equ	0xFF5
  5929                           prodh	equ	0xFF4
  5930                           prodl	equ	0xFF3
  5931                           intcon	equ	0xFF2
  5932                           intcon2	equ	0xFF1
  5933                           indf0	equ	0xFEF
  5934                           postinc0	equ	0xFEE
  5935                           fsr0h	equ	0xFEA
  5936                           fsr0l	equ	0xFE9
  5937                           wreg	equ	0xFE8
  5938                           postdec1	equ	0xFE5
  5939                           fsr1h	equ	0xFE2
  5940                           fsr1l	equ	0xFE1
  5941                           indf2	equ	0xFDF
  5942                           postinc2	equ	0xFDE
  5943                           postdec2	equ	0xFDD
  5944                           fsr2h	equ	0xFDA
  5945                           fsr2l	equ	0xFD9
  5946                           status	equ	0xFD8
  5947                           
  5948 ;; *************** function _sprintf *****************
  5949 ;; Defined at:
  5950 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  5953 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  5954 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  5955 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  tmpval          4    0        struct .
  5958 ;;  width           2   45[BANK0 ] int 
  5959 ;;  len             2   41[BANK0 ] unsigned int 
  5960 ;;  val             2   39[BANK0 ] unsigned int 
  5961 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  5962 ;;		 -> STR_43(7), weekday_3char(28), 
  5963 ;;  ap              2   35[BANK0 ] PTR void [1]
  5964 ;;		 -> ?_sprintf(2), 
  5965 ;;  c               1   44[BANK0 ] char 
  5966 ;;  flag            1   43[BANK0 ] unsigned char 
  5967 ;;  prec            1   34[BANK0 ] char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  2   12[BANK0 ] int 
  5970 ;; Registers used:
  5971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5977 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5978 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;Total ram usage:       35 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:   13
  5984 ;; This function calls:
  5985 ;;		___lwdiv
  5986 ;;		___lwmod
  5987 ;;		___wmul
  5988 ;;		_isdigit
  5989 ;; This function is called by:
  5990 ;;		_display_dec
  5991 ;;		_print_time_dec
  5992 ;;		_print_time
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text28
  5997  010000                     __ptext28:
  5998                           	opt stack 0
  5999  010000                     _sprintf:
  6000                           	opt stack 14
  6001                           
  6002                           ;doprnt.c: 494: va_list ap;
  6003                           ;doprnt.c: 499: signed char c;
  6004                           ;doprnt.c: 501: int width;
  6005                           ;doprnt.c: 506: signed char prec;
  6006                           ;doprnt.c: 508: unsigned char flag;
  6007                           ;doprnt.c: 523: union {
  6008                           ;doprnt.c: 524: unsigned long vd;
  6009                           ;doprnt.c: 525: double integ;
  6010                           ;doprnt.c: 526: } tmpval;
  6011                           ;doprnt.c: 528: unsigned int val;
  6012                           ;doprnt.c: 529: unsigned len;
  6013                           ;doprnt.c: 530: const char * cp;
  6014                           ;doprnt.c: 533: *ap = __va_start();
  6015                           
  6016                           ;incstack = 0
  6017  010000  0E70               	movlw	low (?_sprintf+4)
  6018  010002  0100               	movlb	0	; () banked
  6019  010004  6F83               	movwf	sprintf@ap& (0+255),b
  6020  010006  0E00               	movlw	high (?_sprintf+4)
  6021  010008  0100               	movlb	0	; () banked
  6022  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  6023                           
  6024                           ;doprnt.c: 536: while(c = *f++) {
  6025  01000C  D20F               	goto	l9107
  6026  01000E                     l8967:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;doprnt.c: 538: if(c != '%')
  6030  01000E  0E25               	movlw	37
  6031  010010  0100               	movlb	0	; () banked
  6032  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  6033  010014  B4D8               	btfsc	status,2,c
  6034  010016  D00A               	goto	l8973
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;doprnt.c: 540: {
  6038                           ;doprnt.c: 541: ((*sp++ = (c)));
  6039  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6040  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6041  010020  C08C  FFDF         	movff	sprintf@c,indf2
  6042                           
  6043                           ; BSR set to: 0
  6044  010024  0100               	movlb	0	; () banked
  6045  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6046  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6047                           
  6048                           ;doprnt.c: 542: continue;
  6049  01002A  D200               	goto	l9107
  6050  01002C                     l8973:
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;doprnt.c: 543: }
  6054                           ;doprnt.c: 546: width = 0;
  6055  01002C  0E00               	movlw	0
  6056  01002E  0100               	movlb	0	; () banked
  6057  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6058  010032  0E00               	movlw	0
  6059  010034  6F8D               	movwf	sprintf@width& (0+255),b
  6060                           
  6061                           ;doprnt.c: 548: flag = 0;
  6062  010036  0E00               	movlw	0
  6063  010038  0100               	movlb	0	; () banked
  6064  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;doprnt.c: 551: switch(*f) {
  6068                           
  6069                           ;doprnt.c: 550: for(;;) {
  6070  01003C  D005               	goto	l8979
  6071  01003E                     l8975:
  6072                           
  6073                           ;doprnt.c: 580: flag |= 0x04;
  6074  01003E  0100               	movlb	0	; () banked
  6075  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  6076                           
  6077                           ;doprnt.c: 581: f++;
  6078  010042  0100               	movlb	0	; () banked
  6079  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6080  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6081  010048                     l8979:
  6082  010048  C06E  FFF6         	movff	sprintf@f,tblptrl
  6083  01004C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6084  010050                     	if	0	;tblptru may be non-zero
  6085  010050                     	endif
  6086  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6087  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  6088  010052  6EF8               	movwf	tblptru,c
  6089  010054                     	endif
  6090  010054  0008               	tblrd		*
  6091  010056  50F5               	movf	tablat,w,c
  6092                           
  6093                           ; Switch size 1, requested type "space"
  6094                           ; Number of cases is 1, Range of values is 48 to 48
  6095                           ; switch strategies available:
  6096                           ; Name         Instructions Cycles
  6097                           ; simple_byte            4     3 (average)
  6098                           ;	Chosen strategy is simple_byte
  6099  010058  0A30               	xorlw	48	; case 48
  6100  01005A  B4D8               	btfsc	status,2,c
  6101  01005C  D7F0               	goto	l8975
  6102                           
  6103                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6104                           
  6105                           ;doprnt.c: 586: }
  6106                           
  6107                           ;doprnt.c: 585: break;
  6108  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
  6109  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6110  010066                     	if	0	;tblptru may be non-zero
  6111  010066                     	endif
  6112  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6113  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  6114  010068  6EF8               	movwf	tblptru,c
  6115  01006A                     	endif
  6116  01006A  0008               	tblrd		*
  6117  01006C  50F5               	movf	tablat,w,c
  6118  01006E  ECAF  F09B         	call	_isdigit
  6119  010072  A0D8               	btfss	status,0,c
  6120  010074  D0CB               	goto	l9029
  6121                           
  6122                           ;doprnt.c: 598: width = 0;
  6123  010076  0E00               	movlw	0
  6124  010078  0100               	movlb	0	; () banked
  6125  01007A  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6126  01007C  0E00               	movlw	0
  6127  01007E  6F8D               	movwf	sprintf@width& (0+255),b
  6128  010080                     l8985:
  6129                           
  6130                           ;doprnt.c: 600: width *= 10;
  6131  010080  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  6132  010084  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  6133  010088  0E00               	movlw	0
  6134  01008A  0100               	movlb	0	; () banked
  6135  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6136  01008E  0E0A               	movlw	10
  6137  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6138  010092  ECF1  F09A         	call	___wmul	;wreg free
  6139  010096  C060  F08D         	movff	?___wmul,sprintf@width
  6140  01009A  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  6141                           
  6142                           ;doprnt.c: 601: width += *f++ - '0';
  6143  01009E  0ED0               	movlw	208
  6144  0100A0  0100               	movlb	0	; () banked
  6145  0100A2  6F7E               	movwf	??_sprintf& (0+255),b
  6146  0100A4  0EFF               	movlw	255
  6147  0100A6  0100               	movlb	0	; () banked
  6148  0100A8  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  6149  0100AA  C06E  FFF6         	movff	sprintf@f,tblptrl
  6150  0100AE  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6151  0100B2                     	if	0	;tblptru may be non-zero
  6152  0100B2                     	endif
  6153  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6154  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  6155  0100B4  6EF8               	movwf	tblptru,c
  6156  0100B6                     	endif
  6157  0100B6  0008               	tblrd		*
  6158  0100B8  50F5               	movf	tablat,w,c
  6159  0100BA  0100               	movlb	0	; () banked
  6160  0100BC  6F80               	movwf	(??_sprintf+2)& (0+255),b
  6161  0100BE  6B81               	clrf	(??_sprintf+3)& (0+255),b
  6162  0100C0  0100               	movlb	0	; () banked
  6163  0100C2  517E               	movf	??_sprintf& (0+255),w,b
  6164  0100C4  0100               	movlb	0	; () banked
  6165  0100C6  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  6166  0100C8  0100               	movlb	0	; () banked
  6167  0100CA  517F               	movf	(??_sprintf+1)& (0+255),w,b
  6168  0100CC  0100               	movlb	0	; () banked
  6169  0100CE  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  6170  0100D0  0100               	movlb	0	; () banked
  6171  0100D2  5180               	movf	(??_sprintf+2)& (0+255),w,b
  6172  0100D4  0100               	movlb	0	; () banked
  6173  0100D6  278D               	addwf	sprintf@width& (0+255),f,b
  6174  0100D8  0100               	movlb	0	; () banked
  6175  0100DA  5181               	movf	(??_sprintf+3)& (0+255),w,b
  6176  0100DC  0100               	movlb	0	; () banked
  6177  0100DE  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  6178                           
  6179                           ; BSR set to: 0
  6180  0100E0  0100               	movlb	0	; () banked
  6181  0100E2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6182  0100E4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6186  0100E6  C06E  FFF6         	movff	sprintf@f,tblptrl
  6187  0100EA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6188  0100EE                     	if	0	;tblptru may be non-zero
  6189  0100EE                     	endif
  6190  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6191  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  6192  0100F0  6EF8               	movwf	tblptru,c
  6193  0100F2                     	endif
  6194  0100F2  0008               	tblrd		*
  6195  0100F4  50F5               	movf	tablat,w,c
  6196  0100F6  ECAF  F09B         	call	_isdigit
  6197  0100FA  A0D8               	btfss	status,0,c
  6198  0100FC  D087               	goto	l9029
  6199  0100FE  D7C0               	goto	l8985
  6200  010100                     l8993:
  6201                           
  6202                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6203  010100  C083  FFD9         	movff	sprintf@ap,fsr2l
  6204  010104  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  6205  010108  CFDE F085          	movff	postinc2,sprintf@cp
  6206  01010C  CFDD F086          	movff	postdec2,sprintf@cp+1
  6207  010110  0E02               	movlw	2
  6208  010112  0100               	movlb	0	; () banked
  6209  010114  2783               	addwf	sprintf@ap& (0+255),f,b
  6210  010116  0E00               	movlw	0
  6211  010118  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;doprnt.c: 740: if(!cp)
  6215  01011A  0100               	movlb	0	; () banked
  6216  01011C  5185               	movf	sprintf@cp& (0+255),w,b
  6217  01011E  0100               	movlb	0	; () banked
  6218  010120  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  6219  010122  A4D8               	btfss	status,2,c
  6220  010124  D006               	goto	l9001
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;doprnt.c: 741: cp = "(null)";
  6224  010126  0EBB               	movlw	low STR_43
  6225  010128  0100               	movlb	0	; () banked
  6226  01012A  6F85               	movwf	sprintf@cp& (0+255),b
  6227  01012C  0EFF               	movlw	high STR_43
  6228  01012E  0100               	movlb	0	; () banked
  6229  010130  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  6230  010132                     l9001:
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;doprnt.c: 745: len = 0;
  6234  010132  0E00               	movlw	0
  6235  010134  0100               	movlb	0	; () banked
  6236  010136  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  6237  010138  0E00               	movlw	0
  6238  01013A  6F89               	movwf	sprintf@len& (0+255),b
  6239                           
  6240                           ;doprnt.c: 746: while(cp[len])
  6241  01013C  D003               	goto	l9005
  6242  01013E                     l9003:
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;doprnt.c: 747: len++;
  6246  01013E  0100               	movlb	0	; () banked
  6247  010140  4B89               	infsnz	sprintf@len& (0+255),f,b
  6248  010142  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  6249  010144                     l9005:
  6250                           
  6251                           ; BSR set to: 0
  6252  010144  0100               	movlb	0	; () banked
  6253  010146  5189               	movf	sprintf@len& (0+255),w,b
  6254  010148  0100               	movlb	0	; () banked
  6255  01014A  2585               	addwf	sprintf@cp& (0+255),w,b
  6256  01014C  0100               	movlb	0	; () banked
  6257  01014E  6F7E               	movwf	??_sprintf& (0+255),b
  6258  010150  0100               	movlb	0	; () banked
  6259  010152  518A               	movf	(sprintf@len+1)& (0+255),w,b
  6260  010154  0100               	movlb	0	; () banked
  6261  010156  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  6262  010158  0100               	movlb	0	; () banked
  6263  01015A  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  6264  01015C  C07E  FFF6         	movff	??_sprintf,tblptrl
  6265  010160  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  6266  010164                     	if	0	;tblptru may be non-zero
  6267  010164                     	endif
  6268  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6269  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  6270  010166  6EF8               	movwf	tblptru,c
  6271  010168                     	endif
  6272  010168  0008               	tblrd		*
  6273  01016A  50F5               	movf	tablat,w,c
  6274  01016C  0900               	iorlw	0
  6275  01016E  A4D8               	btfss	status,2,c
  6276  010170  D7E6               	goto	l9003
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;doprnt.c: 757: if(width > len)
  6280                           
  6281                           ; BSR set to: 0
  6282  010172  0100               	movlb	0	; () banked
  6283  010174  518D               	movf	sprintf@width& (0+255),w,b
  6284  010176  0100               	movlb	0	; () banked
  6285  010178  5D89               	subwf	sprintf@len& (0+255),w,b
  6286  01017A  0100               	movlb	0	; () banked
  6287  01017C  518E               	movf	(sprintf@width+1)& (0+255),w,b
  6288  01017E  0100               	movlb	0	; () banked
  6289  010180  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  6290  010182  B0D8               	btfsc	status,0,c
  6291  010184  D009               	goto	l9011
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;doprnt.c: 758: width -= len;
  6295  010186  0100               	movlb	0	; () banked
  6296  010188  5189               	movf	sprintf@len& (0+255),w,b
  6297  01018A  0100               	movlb	0	; () banked
  6298  01018C  5F8D               	subwf	sprintf@width& (0+255),f,b
  6299  01018E  0100               	movlb	0	; () banked
  6300  010190  518A               	movf	(sprintf@len+1)& (0+255),w,b
  6301  010192  0100               	movlb	0	; () banked
  6302  010194  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  6303  010196  D00F               	goto	l9017
  6304  010198                     l9011:
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;doprnt.c: 759: else
  6308                           ;doprnt.c: 760: width = 0;
  6309  010198  0E00               	movlw	0
  6310  01019A  0100               	movlb	0	; () banked
  6311  01019C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6312  01019E  0E00               	movlw	0
  6313  0101A0  6F8D               	movwf	sprintf@width& (0+255),b
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;doprnt.c: 764: while(width--)
  6317  0101A2  D009               	goto	l9017
  6318  0101A4                     l9013:
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6322  0101A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6323  0101A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6324  0101AC  0E20               	movlw	32
  6325  0101AE  6EDF               	movwf	indf2,c
  6326                           
  6327                           ; BSR set to: 0
  6328  0101B0  0100               	movlb	0	; () banked
  6329  0101B2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6330  0101B4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6331  0101B6                     l9017:
  6332                           
  6333                           ; BSR set to: 0
  6334  0101B6  0100               	movlb	0	; () banked
  6335  0101B8  078D               	decf	sprintf@width& (0+255),f,b
  6336  0101BA  A0D8               	btfss	status,0,c
  6337  0101BC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6338  0101BE  0100               	movlb	0	; () banked
  6339  0101C0  298D               	incf	sprintf@width& (0+255),w,b
  6340  0101C2  E1F0               	bnz	l9013
  6341  0101C4  0100               	movlb	0	; () banked
  6342  0101C6  298E               	incf	(sprintf@width+1)& (0+255),w,b
  6343  0101C8  B4D8               	btfsc	status,2,c
  6344  0101CA  D014               	goto	l9025
  6345  0101CC  D7EB               	goto	l9013
  6346  0101CE                     l9019:
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6350  0101CE  C085  FFF6         	movff	sprintf@cp,tblptrl
  6351  0101D2  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  6352  0101D6                     	if	0	;tblptru may be non-zero
  6353  0101D6                     	endif
  6354  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6355  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  6356  0101D8  6EF8               	movwf	tblptru,c
  6357  0101DA                     	endif
  6358  0101DA  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6359  0101DE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6360  0101E2  0008               	tblrd		*
  6361  0101E4  CFF5 FFDF          	movff	tablat,indf2
  6362                           
  6363                           ; BSR set to: 0
  6364  0101E8  0100               	movlb	0	; () banked
  6365  0101EA  4B85               	infsnz	sprintf@cp& (0+255),f,b
  6366  0101EC  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  6367                           
  6368                           ; BSR set to: 0
  6369  0101EE  0100               	movlb	0	; () banked
  6370  0101F0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6371  0101F2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6372  0101F4                     l9025:
  6373                           
  6374                           ; BSR set to: 0
  6375  0101F4  0100               	movlb	0	; () banked
  6376  0101F6  0789               	decf	sprintf@len& (0+255),f,b
  6377  0101F8  A0D8               	btfss	status,0,c
  6378  0101FA  078A               	decf	(sprintf@len+1)& (0+255),f,b
  6379  0101FC  0100               	movlb	0	; () banked
  6380  0101FE  2989               	incf	sprintf@len& (0+255),w,b
  6381  010200  E1E6               	bnz	l9019
  6382  010202  0100               	movlb	0	; () banked
  6383  010204  298A               	incf	(sprintf@len+1)& (0+255),w,b
  6384  010206  B4D8               	btfsc	status,2,c
  6385  010208  D111               	goto	l9107
  6386  01020A  D7E1               	goto	l9019
  6387  01020C                     l9029:
  6388  01020C  C06E  FFF6         	movff	sprintf@f,tblptrl
  6389  010210  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6390  010214  0100               	movlb	0	; () banked
  6391  010216  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6392  010218  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6393  01021A                     	if	0	;tblptru may be non-zero
  6394  01021A                     	endif
  6395  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6396  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  6397  01021C  6EF8               	movwf	tblptru,c
  6398  01021E                     	endif
  6399  01021E  0008               	tblrd		*
  6400  010220  CFF5 F08C          	movff	tablat,sprintf@c
  6401  010224  0100               	movlb	0	; () banked
  6402  010226  518C               	movf	sprintf@c& (0+255),w,b
  6403                           
  6404                           ; Switch size 1, requested type "space"
  6405                           ; Number of cases is 4, Range of values is 0 to 115
  6406                           ; switch strategies available:
  6407                           ; Name         Instructions Cycles
  6408                           ; simple_byte           13     7 (average)
  6409                           ;	Chosen strategy is simple_byte
  6410  010228  0A00               	xorlw	0	; case 0
  6411  01022A  B4D8               	btfsc	status,2,c
  6412  01022C  D10F               	goto	l9109
  6413  01022E  0A64               	xorlw	100	; case 100
  6414  010230  B4D8               	btfsc	status,2,c
  6415  010232  D007               	goto	l9031
  6416  010234  0A0D               	xorlw	13	; case 105
  6417  010236  B4D8               	btfsc	status,2,c
  6418  010238  D004               	goto	l9031
  6419  01023A  0A1A               	xorlw	26	; case 115
  6420  01023C  B4D8               	btfsc	status,2,c
  6421  01023E  D760               	goto	l8993
  6422  010240  D0F5               	goto	l9107
  6423  010242                     l9031:
  6424                           
  6425                           ;doprnt.c: 1253: {
  6426                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6427  010242  C083  FFD9         	movff	sprintf@ap,fsr2l
  6428  010246  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  6429  01024A  CFDE F087          	movff	postinc2,sprintf@val
  6430  01024E  CFDD F088          	movff	postdec2,sprintf@val+1
  6431  010252  0E02               	movlw	2
  6432  010254  0100               	movlb	0	; () banked
  6433  010256  2783               	addwf	sprintf@ap& (0+255),f,b
  6434  010258  0E00               	movlw	0
  6435  01025A  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;doprnt.c: 1261: if((int)val < 0) {
  6439  01025C  0100               	movlb	0	; () banked
  6440  01025E  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  6441  010260  D008               	goto	l9041
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;doprnt.c: 1262: flag |= 0x03;
  6445  010262  0E03               	movlw	3
  6446  010264  0100               	movlb	0	; () banked
  6447  010266  138B               	iorwf	sprintf@flag& (0+255),f,b
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;doprnt.c: 1263: val = -val;
  6451  010268  0100               	movlb	0	; () banked
  6452  01026A  6D87               	negf	sprintf@val& (0+255),b
  6453  01026C  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  6454  01026E  B0D8               	btfsc	status,0,c
  6455  010270  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  6456  010272                     l9041:
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;doprnt.c: 1264: }
  6460                           ;doprnt.c: 1266: }
  6461                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6462  010272  0E01               	movlw	1
  6463  010274  0100               	movlb	0	; () banked
  6464  010276  6F8C               	movwf	sprintf@c& (0+255),b
  6465  010278                     l9043:
  6466                           
  6467                           ; BSR set to: 0
  6468  010278  0E05               	movlw	5
  6469  01027A  0100               	movlb	0	; () banked
  6470  01027C  198C               	xorwf	sprintf@c& (0+255),w,b
  6471  01027E  B4D8               	btfsc	status,2,c
  6472  010280  D019               	goto	l9055
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;doprnt.c: 1306: if(val < dpowers[c])
  6476                           
  6477                           ; BSR set to: 0
  6478                           
  6479                           ; BSR set to: 0
  6480  010282  0100               	movlb	0	; () banked
  6481  010284  518C               	movf	sprintf@c& (0+255),w,b
  6482  010286  0D02               	mullw	2
  6483  010288  0E6D               	movlw	low _dpowers
  6484  01028A  24F3               	addwf	prodl,w,c
  6485  01028C  6EF6               	movwf	tblptrl,c
  6486  01028E  0EFE               	movlw	high _dpowers
  6487  010290  20F4               	addwfc	prodh,w,c
  6488  010292  6EF7               	movwf	tblptrh,c
  6489  010294                     	if	1	;There are 3 active tblptr bytes
  6490  010294  6AF8               	clrf	tblptru,c
  6491  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  6492  010298  22F8               	addwfc	tblptru,f,c
  6493  01029A                     	endif
  6494  01029A  0009               	tblrd		*+
  6495  01029C  50F5               	movf	tablat,w,c
  6496  01029E  0100               	movlb	0	; () banked
  6497  0102A0  5D87               	subwf	sprintf@val& (0+255),w,b
  6498  0102A2  0009               	tblrd		*+
  6499  0102A4  50F5               	movf	tablat,w,c
  6500  0102A6  0100               	movlb	0	; () banked
  6501  0102A8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  6502  0102AA  A0D8               	btfss	status,0,c
  6503  0102AC  D003               	goto	l9055
  6504                           
  6505                           ; BSR set to: 0
  6506                           
  6507                           ; BSR set to: 0
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;doprnt.c: 1307: break;
  6511  0102AE  0100               	movlb	0	; () banked
  6512  0102B0  2B8C               	incf	sprintf@c& (0+255),f,b
  6513  0102B2  D7E2               	goto	l9043
  6514  0102B4                     l9055:
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6518  0102B4  0100               	movlb	0	; () banked
  6519  0102B6  518D               	movf	sprintf@width& (0+255),w,b
  6520  0102B8  0100               	movlb	0	; () banked
  6521  0102BA  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6522  0102BC  B4D8               	btfsc	status,2,c
  6523  0102BE  D00B               	goto	l9061
  6524                           
  6525                           ; BSR set to: 0
  6526  0102C0  C08B  F07E         	movff	sprintf@flag,??_sprintf
  6527  0102C4  0E03               	movlw	3
  6528  0102C6  0100               	movlb	0	; () banked
  6529  0102C8  177E               	andwf	??_sprintf& (0+255),f,b
  6530  0102CA  B4D8               	btfsc	status,2,c
  6531  0102CC  D004               	goto	l9061
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;doprnt.c: 1346: width--;
  6535  0102CE  0100               	movlb	0	; () banked
  6536  0102D0  078D               	decf	sprintf@width& (0+255),f,b
  6537  0102D2  A0D8               	btfss	status,0,c
  6538  0102D4  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6539  0102D6                     l9061:
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;doprnt.c: 1381: if(width > c)
  6543  0102D6  0E80               	movlw	128
  6544  0102D8  0100               	movlb	0	; () banked
  6545  0102DA  BF8C               	btfsc	sprintf@c& (0+255),7,b
  6546  0102DC  0E7F               	movlw	127
  6547  0102DE  0100               	movlb	0	; () banked
  6548  0102E0  6F7E               	movwf	??_sprintf& (0+255),b
  6549  0102E2  0100               	movlb	0	; () banked
  6550  0102E4  518D               	movf	sprintf@width& (0+255),w,b
  6551  0102E6  0100               	movlb	0	; () banked
  6552  0102E8  5D8C               	subwf	sprintf@c& (0+255),w,b
  6553  0102EA  0100               	movlb	0	; () banked
  6554  0102EC  518E               	movf	(sprintf@width+1)& (0+255),w,b
  6555  0102EE  0A80               	xorlw	128
  6556  0102F0  0100               	movlb	0	; () banked
  6557  0102F2  597E               	subwfb	??_sprintf& (0+255),w,b
  6558  0102F4  B0D8               	btfsc	status,0,c
  6559  0102F6  D00B               	goto	l9065
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;doprnt.c: 1382: width -= c;
  6563  0102F8  0100               	movlb	0	; () banked
  6564  0102FA  518C               	movf	sprintf@c& (0+255),w,b
  6565  0102FC  0100               	movlb	0	; () banked
  6566  0102FE  5F8D               	subwf	sprintf@width& (0+255),f,b
  6567  010300  0E00               	movlw	0
  6568  010302  0100               	movlb	0	; () banked
  6569  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  6570  010306  0EFF               	movlw	255
  6571  010308  0100               	movlb	0	; () banked
  6572  01030A  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  6573  01030C  D005               	goto	l9067
  6574  01030E                     l9065:
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;doprnt.c: 1383: else
  6578                           ;doprnt.c: 1384: width = 0;
  6579  01030E  0E00               	movlw	0
  6580  010310  0100               	movlb	0	; () banked
  6581  010312  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6582  010314  0E00               	movlw	0
  6583  010316  6F8D               	movwf	sprintf@width& (0+255),b
  6584  010318                     l9067:
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;doprnt.c: 1387: if(flag & 0x04) {
  6588  010318  0100               	movlb	0	; () banked
  6589  01031A  A58B               	btfss	sprintf@flag& (0+255),2,b
  6590  01031C  D024               	goto	l9083
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;doprnt.c: 1392: if(flag & 0x03)
  6594  01031E  C08B  F07E         	movff	sprintf@flag,??_sprintf
  6595  010322  0E03               	movlw	3
  6596  010324  0100               	movlb	0	; () banked
  6597  010326  177E               	andwf	??_sprintf& (0+255),f,b
  6598  010328  B4D8               	btfsc	status,2,c
  6599  01032A  D009               	goto	l9075
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  6603  01032C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6604  010330  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6605  010334  0E2D               	movlw	45
  6606  010336  6EDF               	movwf	indf2,c
  6607                           
  6608                           ; BSR set to: 0
  6609  010338  0100               	movlb	0	; () banked
  6610  01033A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6611  01033C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6612  01033E                     l9075:
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;doprnt.c: 1415: if(width)
  6616  01033E  0100               	movlb	0	; () banked
  6617  010340  518D               	movf	sprintf@width& (0+255),w,b
  6618  010342  0100               	movlb	0	; () banked
  6619  010344  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6620  010346  B4D8               	btfsc	status,2,c
  6621  010348  D037               	goto	l9097
  6622                           
  6623                           ; BSR set to: 0
  6624                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  6625                           
  6626                           ; BSR set to: 0
  6627                           
  6628                           ;doprnt.c: 1416: do
  6629  01034A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6630  01034E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6631  010352  0E30               	movlw	48
  6632  010354  6EDF               	movwf	indf2,c
  6633                           
  6634                           ; BSR set to: 0
  6635  010356  0100               	movlb	0	; () banked
  6636  010358  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6637  01035A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;doprnt.c: 1418: while(--width);
  6641  01035C  0100               	movlb	0	; () banked
  6642  01035E  078D               	decf	sprintf@width& (0+255),f,b
  6643  010360  A0D8               	btfss	status,0,c
  6644  010362  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6645  010364  D7EC               	goto	l9075
  6646  010366                     l9083:
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;doprnt.c: 1422: {
  6650                           ;doprnt.c: 1424: if(width
  6651                           ;doprnt.c: 1428: )
  6652  010366  0100               	movlb	0	; () banked
  6653  010368  518D               	movf	sprintf@width& (0+255),w,b
  6654  01036A  0100               	movlb	0	; () banked
  6655  01036C  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6656  01036E  B4D8               	btfsc	status,2,c
  6657  010370  D013               	goto	l9091
  6658  010372                     l9085:
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  6662  010372  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6663  010376  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6664  01037A  0E20               	movlw	32
  6665  01037C  6EDF               	movwf	indf2,c
  6666                           
  6667                           ; BSR set to: 0
  6668  01037E  0100               	movlb	0	; () banked
  6669  010380  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6670  010382  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;doprnt.c: 1431: while(--width);
  6674  010384  0100               	movlb	0	; () banked
  6675  010386  078D               	decf	sprintf@width& (0+255),f,b
  6676  010388  A0D8               	btfss	status,0,c
  6677  01038A  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6678  01038C  0100               	movlb	0	; () banked
  6679  01038E  518D               	movf	sprintf@width& (0+255),w,b
  6680  010390  0100               	movlb	0	; () banked
  6681  010392  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6682  010394  A4D8               	btfss	status,2,c
  6683  010396  D7ED               	goto	l9085
  6684  010398                     l9091:
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;doprnt.c: 1438: if(flag & 0x03)
  6688  010398  C08B  F07E         	movff	sprintf@flag,??_sprintf
  6689  01039C  0E03               	movlw	3
  6690  01039E  0100               	movlb	0	; () banked
  6691  0103A0  177E               	andwf	??_sprintf& (0+255),f,b
  6692  0103A2  B4D8               	btfsc	status,2,c
  6693  0103A4  D009               	goto	l9097
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6697  0103A6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6698  0103AA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6699  0103AE  0E2D               	movlw	45
  6700  0103B0  6EDF               	movwf	indf2,c
  6701                           
  6702                           ; BSR set to: 0
  6703  0103B2  0100               	movlb	0	; () banked
  6704  0103B4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6705  0103B6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6706  0103B8                     l9097:
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;doprnt.c: 1469: }
  6710                           ;doprnt.c: 1472: prec = c;
  6711  0103B8  C08C  F082         	movff	sprintf@c,sprintf@prec
  6712                           
  6713                           ;doprnt.c: 1474: while(prec--) {
  6714  0103BC  D031               	goto	l9105
  6715  0103BE                     l9099:
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;doprnt.c: 1478: {
  6719                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6720  0103BE  0100               	movlb	0	; () banked
  6721  0103C0  5182               	movf	sprintf@prec& (0+255),w,b
  6722  0103C2  0D02               	mullw	2
  6723  0103C4  0E6D               	movlw	low _dpowers
  6724  0103C6  24F3               	addwf	prodl,w,c
  6725  0103C8  6EF6               	movwf	tblptrl,c
  6726  0103CA  0EFE               	movlw	high _dpowers
  6727  0103CC  20F4               	addwfc	prodh,w,c
  6728  0103CE  6EF7               	movwf	tblptrh,c
  6729  0103D0                     	if	1	;There are 3 active tblptr bytes
  6730  0103D0  6AF8               	clrf	tblptru,c
  6731  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  6732  0103D4  22F8               	addwfc	tblptru,f,c
  6733  0103D6                     	endif
  6734  0103D6  0009               	tblrd		*+
  6735  0103D8  CFF5 F062          	movff	tablat,___lwdiv@divisor
  6736  0103DC  000A               	tblrd		*-
  6737  0103DE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  6738  0103E2  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  6739  0103E6  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  6740  0103EA  ECAE  F097         	call	___lwdiv	;wreg free
  6741  0103EE  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  6742  0103F2  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  6743  0103F6  0E00               	movlw	0
  6744  0103F8  0100               	movlb	0	; () banked
  6745  0103FA  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  6746  0103FC  0E0A               	movlw	10
  6747  0103FE  6F69               	movwf	___lwmod@divisor& (0+255),b
  6748  010400  ECC6  F098         	call	___lwmod	;wreg free
  6749  010404  0100               	movlb	0	; () banked
  6750  010406  5167               	movf	?___lwmod& (0+255),w,b
  6751  010408  0F30               	addlw	48
  6752  01040A  0100               	movlb	0	; () banked
  6753  01040C  6F8C               	movwf	sprintf@c& (0+255),b
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;doprnt.c: 1523: }
  6757                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6758  01040E  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6759  010412  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6760  010416  C08C  FFDF         	movff	sprintf@c,indf2
  6761                           
  6762                           ; BSR set to: 0
  6763  01041A  0100               	movlb	0	; () banked
  6764  01041C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6765  01041E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6766  010420                     l9105:
  6767                           
  6768                           ; BSR set to: 0
  6769  010420  0100               	movlb	0	; () banked
  6770  010422  0782               	decf	sprintf@prec& (0+255),f,b
  6771  010424  0100               	movlb	0	; () banked
  6772  010426  2982               	incf	sprintf@prec& (0+255),w,b
  6773  010428  A4D8               	btfss	status,2,c
  6774  01042A  D7C9               	goto	l9099
  6775  01042C                     l9107:
  6776                           
  6777                           ; BSR set to: 0
  6778  01042C  C06E  FFF6         	movff	sprintf@f,tblptrl
  6779  010430  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6780  010434  0100               	movlb	0	; () banked
  6781  010436  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6782  010438  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6783  01043A                     	if	0	;tblptru may be non-zero
  6784  01043A                     	endif
  6785  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6786  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  6787  01043C  6EF8               	movwf	tblptru,c
  6788  01043E                     	endif
  6789  01043E  0008               	tblrd		*
  6790  010440  CFF5 F08C          	movff	tablat,sprintf@c
  6791  010444  0100               	movlb	0	; () banked
  6792  010446  518C               	movf	sprintf@c& (0+255),w,b
  6793  010448  A4D8               	btfss	status,2,c
  6794  01044A  D5E1               	goto	l8967
  6795  01044C                     l9109:
  6796                           
  6797                           ;doprnt.c: 1538: *sp = 0;
  6798  01044C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6799  010450  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6800  010454  0E00               	movlw	0
  6801  010456  6EDF               	movwf	indf2,c
  6802  010458  0012               	return	
  6803  01045A                     __end_of_sprintf:
  6804                           	opt stack 0
  6805                           tblptru	equ	0xFF8
  6806                           tblptrh	equ	0xFF7
  6807                           tblptrl	equ	0xFF6
  6808                           tablat	equ	0xFF5
  6809                           prodh	equ	0xFF4
  6810                           prodl	equ	0xFF3
  6811                           intcon	equ	0xFF2
  6812                           intcon2	equ	0xFF1
  6813                           indf0	equ	0xFEF
  6814                           postinc0	equ	0xFEE
  6815                           fsr0h	equ	0xFEA
  6816                           fsr0l	equ	0xFE9
  6817                           wreg	equ	0xFE8
  6818                           postdec1	equ	0xFE5
  6819                           fsr1h	equ	0xFE2
  6820                           fsr1l	equ	0xFE1
  6821                           indf2	equ	0xFDF
  6822                           postinc2	equ	0xFDE
  6823                           postdec2	equ	0xFDD
  6824                           fsr2h	equ	0xFDA
  6825                           fsr2l	equ	0xFD9
  6826                           status	equ	0xFD8
  6827                           
  6828 ;; *************** function _isdigit *****************
  6829 ;; Defined at:
  6830 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  c               1    wreg     unsigned char 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  c               1    2[BANK0 ] unsigned char 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;		None               void
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6847 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6848 ;;Total ram usage:        3 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:   12
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_sprintf
  6855 ;;		_atoi
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           	psect	text29
  6860  01375E                     __ptext29:
  6861                           	opt stack 0
  6862  01375E                     _isdigit:
  6863                           	opt stack 14
  6864                           
  6865                           ;incstack = 0
  6866                           ;isdigit@c stored from wreg
  6867  01375E  0100               	movlb	0	; () banked
  6868  013760  6F62               	movwf	isdigit@c& (0+255),b
  6869  013762  0E00               	movlw	0
  6870  013764  0100               	movlb	0	; () banked
  6871  013766  6F61               	movwf	_isdigit$5905& (0+255),b
  6872                           
  6873                           ; BSR set to: 0
  6874  013768  0E3A               	movlw	58
  6875  01376A  0100               	movlb	0	; () banked
  6876  01376C  6162               	cpfslt	isdigit@c& (0+255),b
  6877  01376E  D007               	goto	l8659
  6878                           
  6879                           ; BSR set to: 0
  6880  013770  0E2F               	movlw	47
  6881  013772  0100               	movlb	0	; () banked
  6882  013774  6562               	cpfsgt	isdigit@c& (0+255),b
  6883  013776  D003               	goto	l8659
  6884                           
  6885                           ; BSR set to: 0
  6886  013778  0E01               	movlw	1
  6887  01377A  0100               	movlb	0	; () banked
  6888  01377C  6F61               	movwf	_isdigit$5905& (0+255),b
  6889  01377E                     l8659:
  6890                           
  6891                           ; BSR set to: 0
  6892  01377E  C061  F060         	movff	_isdigit$5905,??_isdigit
  6893  013782  0100               	movlb	0	; () banked
  6894  013784  3160               	rrcf	??_isdigit& (0+255),w,b
  6895  013786  0012               	return	
  6896  013788                     __end_of_isdigit:
  6897                           	opt stack 0
  6898                           tblptru	equ	0xFF8
  6899                           tblptrh	equ	0xFF7
  6900                           tblptrl	equ	0xFF6
  6901                           tablat	equ	0xFF5
  6902                           prodh	equ	0xFF4
  6903                           prodl	equ	0xFF3
  6904                           intcon	equ	0xFF2
  6905                           intcon2	equ	0xFF1
  6906                           indf0	equ	0xFEF
  6907                           postinc0	equ	0xFEE
  6908                           fsr0h	equ	0xFEA
  6909                           fsr0l	equ	0xFE9
  6910                           wreg	equ	0xFE8
  6911                           postdec1	equ	0xFE5
  6912                           fsr1h	equ	0xFE2
  6913                           fsr1l	equ	0xFE1
  6914                           indf2	equ	0xFDF
  6915                           postinc2	equ	0xFDE
  6916                           postdec2	equ	0xFDD
  6917                           fsr2h	equ	0xFDA
  6918                           fsr2l	equ	0xFD9
  6919                           status	equ	0xFD8
  6920                           
  6921 ;; *************** function ___wmul *****************
  6922 ;; Defined at:
  6923 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6926 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  product         2    4[BANK0 ] unsigned int 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  2    0[BANK0 ] unsigned int 
  6931 ;; Registers used:
  6932 ;;		wreg, status,2, status,0, prodl, prodh
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6938 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6939 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6941 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;Total ram usage:        6 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:   12
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_sprintf
  6949 ;;		_atoi
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text30
  6954  0135E2                     __ptext30:
  6955                           	opt stack 0
  6956  0135E2                     ___wmul:
  6957                           	opt stack 14
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;incstack = 0
  6961  0135E2  0100               	movlb	0	; () banked
  6962  0135E4  5160               	movf	___wmul@multiplier& (0+255),w,b
  6963  0135E6  0100               	movlb	0	; () banked
  6964  0135E8  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6965  0135EA  CFF3 F064          	movff	prodl,___wmul@product
  6966  0135EE  CFF4 F065          	movff	prodh,___wmul@product+1
  6967  0135F2  0100               	movlb	0	; () banked
  6968  0135F4  5160               	movf	___wmul@multiplier& (0+255),w,b
  6969  0135F6  0100               	movlb	0	; () banked
  6970  0135F8  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6971  0135FA  50F3               	movf	prodl,w,c
  6972  0135FC  0100               	movlb	0	; () banked
  6973  0135FE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6974  013600  0100               	movlb	0	; () banked
  6975  013602  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6976  013604  0100               	movlb	0	; () banked
  6977  013606  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6978  013608  50F3               	movf	prodl,w,c
  6979  01360A  0100               	movlb	0	; () banked
  6980  01360C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6981                           
  6982                           ; BSR set to: 0
  6983  01360E  C064  F060         	movff	___wmul@product,?___wmul
  6984  013612  C065  F061         	movff	___wmul@product+1,?___wmul+1
  6985  013616  0012               	return	
  6986  013618                     __end_of___wmul:
  6987                           	opt stack 0
  6988                           tblptru	equ	0xFF8
  6989                           tblptrh	equ	0xFF7
  6990                           tblptrl	equ	0xFF6
  6991                           tablat	equ	0xFF5
  6992                           prodh	equ	0xFF4
  6993                           prodl	equ	0xFF3
  6994                           intcon	equ	0xFF2
  6995                           intcon2	equ	0xFF1
  6996                           indf0	equ	0xFEF
  6997                           postinc0	equ	0xFEE
  6998                           fsr0h	equ	0xFEA
  6999                           fsr0l	equ	0xFE9
  7000                           wreg	equ	0xFE8
  7001                           postdec1	equ	0xFE5
  7002                           fsr1h	equ	0xFE2
  7003                           fsr1l	equ	0xFE1
  7004                           indf2	equ	0xFDF
  7005                           postinc2	equ	0xFDE
  7006                           postdec2	equ	0xFDD
  7007                           fsr2h	equ	0xFDA
  7008                           fsr2l	equ	0xFD9
  7009                           status	equ	0xFD8
  7010                           
  7011 ;; *************** function ___lwmod *****************
  7012 ;; Defined at:
  7013 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  dividend        2    7[BANK0 ] unsigned int 
  7016 ;;  divisor         2    9[BANK0 ] unsigned int 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;  counter         1   11[BANK0 ] unsigned char 
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  2    7[BANK0 ] unsigned int 
  7021 ;; Registers used:
  7022 ;;		wreg, status,2, status,0
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7028 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7029 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7031 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7032 ;;Total ram usage:        5 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; Hardware stack levels required when called:   12
  7035 ;; This function calls:
  7036 ;;		Nothing
  7037 ;; This function is called by:
  7038 ;;		_sprintf
  7039 ;;		_ringbuf_put_num
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           	psect	text31
  7044  01318C                     __ptext31:
  7045                           	opt stack 0
  7046  01318C                     ___lwmod:
  7047                           	opt stack 14
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;incstack = 0
  7051  01318C  0100               	movlb	0	; () banked
  7052  01318E  5169               	movf	___lwmod@divisor& (0+255),w,b
  7053  013190  0100               	movlb	0	; () banked
  7054  013192  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7055  013194  B4D8               	btfsc	status,2,c
  7056  013196  D026               	goto	l2079
  7057                           
  7058                           ; BSR set to: 0
  7059  013198  0E01               	movlw	1
  7060  01319A  0100               	movlb	0	; () banked
  7061  01319C  6F6B               	movwf	___lwmod@counter& (0+255),b
  7062  01319E  D006               	goto	l8697
  7063  0131A0                     l8695:
  7064                           
  7065                           ; BSR set to: 0
  7066  0131A0  0100               	movlb	0	; () banked
  7067  0131A2  90D8               	bcf	status,0,c
  7068  0131A4  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  7069  0131A6  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7070  0131A8  0100               	movlb	0	; () banked
  7071  0131AA  2B6B               	incf	___lwmod@counter& (0+255),f,b
  7072  0131AC                     l8697:
  7073                           
  7074                           ; BSR set to: 0
  7075  0131AC  0100               	movlb	0	; () banked
  7076  0131AE  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7077  0131B0  D7F7               	goto	l8695
  7078  0131B2                     l8699:
  7079                           
  7080                           ; BSR set to: 0
  7081  0131B2  0100               	movlb	0	; () banked
  7082  0131B4  5169               	movf	___lwmod@divisor& (0+255),w,b
  7083  0131B6  0100               	movlb	0	; () banked
  7084  0131B8  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  7085  0131BA  0100               	movlb	0	; () banked
  7086  0131BC  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7087  0131BE  0100               	movlb	0	; () banked
  7088  0131C0  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7089  0131C2  A0D8               	btfss	status,0,c
  7090  0131C4  D008               	goto	l8703
  7091                           
  7092                           ; BSR set to: 0
  7093  0131C6  0100               	movlb	0	; () banked
  7094  0131C8  5169               	movf	___lwmod@divisor& (0+255),w,b
  7095  0131CA  0100               	movlb	0	; () banked
  7096  0131CC  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  7097  0131CE  0100               	movlb	0	; () banked
  7098  0131D0  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7099  0131D2  0100               	movlb	0	; () banked
  7100  0131D4  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7101  0131D6                     l8703:
  7102                           
  7103                           ; BSR set to: 0
  7104  0131D6  0100               	movlb	0	; () banked
  7105  0131D8  90D8               	bcf	status,0,c
  7106  0131DA  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7107  0131DC  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  7108                           
  7109                           ; BSR set to: 0
  7110  0131DE  0100               	movlb	0	; () banked
  7111  0131E0  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  7112  0131E2  D7E7               	goto	l8699
  7113  0131E4                     l2079:
  7114                           
  7115                           ; BSR set to: 0
  7116  0131E4  C067  F067         	movff	___lwmod@dividend,?___lwmod
  7117  0131E8  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  7118                           
  7119                           ; BSR set to: 0
  7120  0131EC  0012               	return		;funcret
  7121  0131EE                     __end_of___lwmod:
  7122                           	opt stack 0
  7123                           tblptru	equ	0xFF8
  7124                           tblptrh	equ	0xFF7
  7125                           tblptrl	equ	0xFF6
  7126                           tablat	equ	0xFF5
  7127                           prodh	equ	0xFF4
  7128                           prodl	equ	0xFF3
  7129                           intcon	equ	0xFF2
  7130                           intcon2	equ	0xFF1
  7131                           indf0	equ	0xFEF
  7132                           postinc0	equ	0xFEE
  7133                           fsr0h	equ	0xFEA
  7134                           fsr0l	equ	0xFE9
  7135                           wreg	equ	0xFE8
  7136                           postdec1	equ	0xFE5
  7137                           fsr1h	equ	0xFE2
  7138                           fsr1l	equ	0xFE1
  7139                           indf2	equ	0xFDF
  7140                           postinc2	equ	0xFDE
  7141                           postdec2	equ	0xFDD
  7142                           fsr2h	equ	0xFDA
  7143                           fsr2l	equ	0xFD9
  7144                           status	equ	0xFD8
  7145                           
  7146 ;; *************** function ___lwdiv *****************
  7147 ;; Defined at:
  7148 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  dividend        2    0[BANK0 ] unsigned int 
  7151 ;;  divisor         2    2[BANK0 ] unsigned int 
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  quotient        2    5[BANK0 ] unsigned int 
  7154 ;;  counter         1    4[BANK0 ] unsigned char 
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  2    0[BANK0 ] unsigned int 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7165 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7167 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7168 ;;Total ram usage:        7 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:   12
  7171 ;; This function calls:
  7172 ;;		Nothing
  7173 ;; This function is called by:
  7174 ;;		_sprintf
  7175 ;;		_ringbuf_put_num
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           	psect	text32
  7180  012F5C                     __ptext32:
  7181                           	opt stack 0
  7182  012F5C                     ___lwdiv:
  7183                           	opt stack 14
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;incstack = 0
  7187  012F5C  0E00               	movlw	0
  7188  012F5E  0100               	movlb	0	; () banked
  7189  012F60  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7190  012F62  0E00               	movlw	0
  7191  012F64  6F65               	movwf	___lwdiv@quotient& (0+255),b
  7192                           
  7193                           ; BSR set to: 0
  7194  012F66  0100               	movlb	0	; () banked
  7195  012F68  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7196  012F6A  0100               	movlb	0	; () banked
  7197  012F6C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7198  012F6E  B4D8               	btfsc	status,2,c
  7199  012F70  D02C               	goto	l2069
  7200                           
  7201                           ; BSR set to: 0
  7202  012F72  0E01               	movlw	1
  7203  012F74  0100               	movlb	0	; () banked
  7204  012F76  6F64               	movwf	___lwdiv@counter& (0+255),b
  7205  012F78  D006               	goto	l8677
  7206  012F7A                     l8675:
  7207                           
  7208                           ; BSR set to: 0
  7209  012F7A  0100               	movlb	0	; () banked
  7210  012F7C  90D8               	bcf	status,0,c
  7211  012F7E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  7212  012F80  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7213  012F82  0100               	movlb	0	; () banked
  7214  012F84  2B64               	incf	___lwdiv@counter& (0+255),f,b
  7215  012F86                     l8677:
  7216                           
  7217                           ; BSR set to: 0
  7218  012F86  0100               	movlb	0	; () banked
  7219  012F88  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7220  012F8A  D7F7               	goto	l8675
  7221  012F8C                     l8679:
  7222                           
  7223                           ; BSR set to: 0
  7224  012F8C  0100               	movlb	0	; () banked
  7225  012F8E  90D8               	bcf	status,0,c
  7226  012F90  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  7227  012F92  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7228                           
  7229                           ; BSR set to: 0
  7230  012F94  0100               	movlb	0	; () banked
  7231  012F96  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7232  012F98  0100               	movlb	0	; () banked
  7233  012F9A  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  7234  012F9C  0100               	movlb	0	; () banked
  7235  012F9E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7236  012FA0  0100               	movlb	0	; () banked
  7237  012FA2  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7238  012FA4  A0D8               	btfss	status,0,c
  7239  012FA6  D00A               	goto	l8687
  7240                           
  7241                           ; BSR set to: 0
  7242  012FA8  0100               	movlb	0	; () banked
  7243  012FAA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7244  012FAC  0100               	movlb	0	; () banked
  7245  012FAE  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  7246  012FB0  0100               	movlb	0	; () banked
  7247  012FB2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7248  012FB4  0100               	movlb	0	; () banked
  7249  012FB6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7250                           
  7251                           ; BSR set to: 0
  7252  012FB8  0100               	movlb	0	; () banked
  7253  012FBA  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  7254  012FBC                     l8687:
  7255                           
  7256                           ; BSR set to: 0
  7257  012FBC  0100               	movlb	0	; () banked
  7258  012FBE  90D8               	bcf	status,0,c
  7259  012FC0  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7260  012FC2  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  7261                           
  7262                           ; BSR set to: 0
  7263  012FC4  0100               	movlb	0	; () banked
  7264  012FC6  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  7265  012FC8  D7E1               	goto	l8679
  7266  012FCA                     l2069:
  7267                           
  7268                           ; BSR set to: 0
  7269  012FCA  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  7270  012FCE  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7271                           
  7272                           ; BSR set to: 0
  7273  012FD2  0012               	return		;funcret
  7274  012FD4                     __end_of___lwdiv:
  7275                           	opt stack 0
  7276                           tblptru	equ	0xFF8
  7277                           tblptrh	equ	0xFF7
  7278                           tblptrl	equ	0xFF6
  7279                           tablat	equ	0xFF5
  7280                           prodh	equ	0xFF4
  7281                           prodl	equ	0xFF3
  7282                           intcon	equ	0xFF2
  7283                           intcon2	equ	0xFF1
  7284                           indf0	equ	0xFEF
  7285                           postinc0	equ	0xFEE
  7286                           fsr0h	equ	0xFEA
  7287                           fsr0l	equ	0xFE9
  7288                           wreg	equ	0xFE8
  7289                           postdec1	equ	0xFE5
  7290                           fsr1h	equ	0xFE2
  7291                           fsr1l	equ	0xFE1
  7292                           indf2	equ	0xFDF
  7293                           postinc2	equ	0xFDE
  7294                           postdec2	equ	0xFDD
  7295                           fsr2h	equ	0xFDA
  7296                           fsr2l	equ	0xFD9
  7297                           status	equ	0xFD8
  7298                           
  7299 ;; *************** function _USB_CDC_task *****************
  7300 ;; Defined at:
  7301 ;;		line 39 in file "../My_library/USB_CDC/My_USB_CDC.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;		None
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  i               2   23[BANK0 ] unsigned int 
  7306 ;;  length          2   25[BANK0 ] unsigned int 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;		None               void
  7309 ;; Registers used:
  7310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7317 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7319 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7320 ;;Total ram usage:        5 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; Hardware stack levels required when called:   15
  7323 ;; This function calls:
  7324 ;;		_USB_CDC_get
  7325 ;;		_USB_CDC_send
  7326 ;;		_ringbuf_num
  7327 ;;		_ringbuf_pop
  7328 ;;		_ringbuf_put
  7329 ;; This function is called by:
  7330 ;;		_loop
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text33
  7335  011758                     __ptext33:
  7336                           	opt stack 0
  7337  011758                     _USB_CDC_task:
  7338                           	opt stack 14
  7339                           
  7340                           ;My_USB_CDC.c: 60: if (USBDeviceState < CONFIGURED_STATE) {
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;incstack = 0
  7344  011758  0E20               	movlw	32
  7345  01175A  6024               	cpfslt	_USBDeviceState,c	;volatile
  7346  01175C  D001               	goto	l569
  7347  01175E  0012               	return	
  7348  011760                     l569:
  7349                           
  7350                           ;My_USB_CDC.c: 63: }
  7351                           ;My_USB_CDC.c: 69: if (UCONbits.SUSPND == 1) {
  7352  011760  B265               	btfsc	3941,1,c	;volatile
  7353  011762  0012               	return	
  7354                           
  7355                           ;My_USB_CDC.c: 72: }
  7356                           ;My_USB_CDC.c: 75: uint16_t length = 0;
  7357                           
  7358                           ;My_USB_CDC.c: 71: return;
  7359  011764  0E00               	movlw	0
  7360  011766  0100               	movlb	0	; () banked
  7361  011768  6F7A               	movwf	(USB_CDC_task@length+1)& (0+255),b
  7362  01176A  0E00               	movlw	0
  7363  01176C  6F79               	movwf	USB_CDC_task@length& (0+255),b
  7364                           
  7365                           ;My_USB_CDC.c: 76: while (ringbuf_num(&usb_tx)) {
  7366  01176E  D01F               	goto	l9323
  7367  011770                     l9315:
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;My_USB_CDC.c: 77: writeBuffer[length++] = ringbuf_pop(&usb_tx);
  7371  011770  0EE6               	movlw	low _usb_tx
  7372  011772  0100               	movlb	0	; () banked
  7373  011774  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  7374  011776  0E01               	movlw	high _usb_tx
  7375  011778  0100               	movlb	0	; () banked
  7376  01177A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  7377  01177C  EC50  F091         	call	_ringbuf_pop	;wreg free
  7378  011780  0100               	movlb	0	; () banked
  7379  011782  6F76               	movwf	??_USB_CDC_task& (0+255),b
  7380  011784  0E80               	movlw	low _writeBuffer
  7381  011786  0100               	movlb	0	; () banked
  7382  011788  2579               	addwf	USB_CDC_task@length& (0+255),w,b
  7383  01178A  6ED9               	movwf	fsr2l,c
  7384  01178C  0E02               	movlw	high _writeBuffer
  7385  01178E  0100               	movlb	0	; () banked
  7386  011790  217A               	addwfc	(USB_CDC_task@length+1)& (0+255),w,b
  7387  011792  6EDA               	movwf	fsr2h,c
  7388  011794  C076  FFDF         	movff	??_USB_CDC_task,indf2
  7389                           
  7390                           ; BSR set to: 0
  7391  011798  0100               	movlb	0	; () banked
  7392  01179A  4B79               	infsnz	USB_CDC_task@length& (0+255),f,b
  7393  01179C  2B7A               	incf	(USB_CDC_task@length+1)& (0+255),f,b
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;My_USB_CDC.c: 78: if (length >= 64) {
  7397  01179E  0100               	movlb	0	; () banked
  7398  0117A0  517A               	movf	(USB_CDC_task@length+1)& (0+255),w,b
  7399  0117A2  E113               	bnz	l9325
  7400  0117A4  0E40               	movlw	64
  7401  0117A6  0100               	movlb	0	; () banked
  7402  0117A8  5D79               	subwf	USB_CDC_task@length& (0+255),w,b
  7403  0117AA  B0D8               	btfsc	status,0,c
  7404  0117AC  D00E               	goto	l9325
  7405  0117AE                     l9323:
  7406                           
  7407                           ; BSR set to: 0
  7408  0117AE  0EE6               	movlw	low _usb_tx
  7409  0117B0  0100               	movlb	0	; () banked
  7410  0117B2  6F60               	movwf	ringbuf_num@rb& (0+255),b
  7411  0117B4  0E01               	movlw	high _usb_tx
  7412  0117B6  0100               	movlb	0	; () banked
  7413  0117B8  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  7414  0117BA  EC9F  F08C         	call	_ringbuf_num	;wreg free
  7415  0117BE  0100               	movlb	0	; () banked
  7416  0117C0  5160               	movf	?_ringbuf_num& (0+255),w,b
  7417  0117C2  0100               	movlb	0	; () banked
  7418  0117C4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  7419  0117C6  A4D8               	btfss	status,2,c
  7420  0117C8  D7D3               	goto	l9315
  7421  0117CA                     l9325:
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;My_USB_CDC.c: 80: }
  7425                           ;My_USB_CDC.c: 81: }
  7426                           ;My_USB_CDC.c: 82: if (length) {
  7427  0117CA  0100               	movlb	0	; () banked
  7428  0117CC  5179               	movf	USB_CDC_task@length& (0+255),w,b
  7429  0117CE  0100               	movlb	0	; () banked
  7430  0117D0  117A               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
  7431  0117D2  B4D8               	btfsc	status,2,c
  7432  0117D4  D006               	goto	l576
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;My_USB_CDC.c: 83: USB_CDC_send(length);
  7436  0117D6  C079  F06C         	movff	USB_CDC_task@length,USB_CDC_send@length
  7437  0117DA  C07A  F06D         	movff	USB_CDC_task@length+1,USB_CDC_send@length+1
  7438  0117DE  EC36  F09C         	call	_USB_CDC_send	;wreg free
  7439  0117E2                     l576:
  7440                           
  7441                           ;My_USB_CDC.c: 84: }
  7442                           ;My_USB_CDC.c: 86: length = USB_CDC_get();
  7443  0117E2  ECC4  F09B         	call	_USB_CDC_get	;wreg free
  7444  0117E6  0100               	movlb	0	; () banked
  7445  0117E8  6F76               	movwf	??_USB_CDC_task& (0+255),b
  7446  0117EA  0100               	movlb	0	; () banked
  7447  0117EC  5176               	movf	??_USB_CDC_task& (0+255),w,b
  7448  0117EE  0100               	movlb	0	; () banked
  7449  0117F0  6F79               	movwf	USB_CDC_task@length& (0+255),b
  7450  0117F2  6B7A               	clrf	(USB_CDC_task@length+1)& (0+255),b
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;My_USB_CDC.c: 87: if (length) {
  7454  0117F4  0100               	movlb	0	; () banked
  7455  0117F6  5179               	movf	USB_CDC_task@length& (0+255),w,b
  7456  0117F8  0100               	movlb	0	; () banked
  7457  0117FA  117A               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
  7458  0117FC  B4D8               	btfsc	status,2,c
  7459  0117FE  0012               	return	
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;My_USB_CDC.c: 88: for (uint16_t i = 0; i < length; i++) {
  7463  011800  0E00               	movlw	0
  7464  011802  0100               	movlb	0	; () banked
  7465  011804  6F78               	movwf	(USB_CDC_task@i+1)& (0+255),b
  7466  011806  0E00               	movlw	0
  7467  011808  6F77               	movwf	USB_CDC_task@i& (0+255),b
  7468  01180A  D016               	goto	l9337
  7469  01180C                     l9333:
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;My_USB_CDC.c: 89: ringbuf_put(&usb_rx, readBuffer[i]);
  7473  01180C  0EDE               	movlw	low _usb_rx
  7474  01180E  0100               	movlb	0	; () banked
  7475  011810  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  7476  011812  0E01               	movlw	high _usb_rx
  7477  011814  0100               	movlb	0	; () banked
  7478  011816  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  7479  011818  0E40               	movlw	low _readBuffer
  7480  01181A  0100               	movlb	0	; () banked
  7481  01181C  2577               	addwf	USB_CDC_task@i& (0+255),w,b
  7482  01181E  6ED9               	movwf	fsr2l,c
  7483  011820  0E02               	movlw	high _readBuffer
  7484  011822  0100               	movlb	0	; () banked
  7485  011824  2178               	addwfc	(USB_CDC_task@i+1)& (0+255),w,b
  7486  011826  6EDA               	movwf	fsr2h,c
  7487  011828  50DF               	movf	indf2,w,c
  7488  01182A  0100               	movlb	0	; () banked
  7489  01182C  6F71               	movwf	ringbuf_put@data& (0+255),b
  7490  01182E  EC16  F090         	call	_ringbuf_put	;wreg free
  7491  011832  0100               	movlb	0	; () banked
  7492  011834  4B77               	infsnz	USB_CDC_task@i& (0+255),f,b
  7493  011836  2B78               	incf	(USB_CDC_task@i+1)& (0+255),f,b
  7494  011838                     l9337:
  7495                           
  7496                           ; BSR set to: 0
  7497  011838  0100               	movlb	0	; () banked
  7498  01183A  5179               	movf	USB_CDC_task@length& (0+255),w,b
  7499  01183C  0100               	movlb	0	; () banked
  7500  01183E  5D77               	subwf	USB_CDC_task@i& (0+255),w,b
  7501  011840  0100               	movlb	0	; () banked
  7502  011842  517A               	movf	(USB_CDC_task@length+1)& (0+255),w,b
  7503  011844  0100               	movlb	0	; () banked
  7504  011846  5978               	subwfb	(USB_CDC_task@i+1)& (0+255),w,b
  7505  011848  B0D8               	btfsc	status,0,c
  7506  01184A  0012               	return	
  7507  01184C  D7DF               	goto	l9333
  7508  01184E                     __end_of_USB_CDC_task:
  7509                           	opt stack 0
  7510                           tblptru	equ	0xFF8
  7511                           tblptrh	equ	0xFF7
  7512                           tblptrl	equ	0xFF6
  7513                           tablat	equ	0xFF5
  7514                           prodh	equ	0xFF4
  7515                           prodl	equ	0xFF3
  7516                           intcon	equ	0xFF2
  7517                           intcon2	equ	0xFF1
  7518                           indf0	equ	0xFEF
  7519                           postinc0	equ	0xFEE
  7520                           fsr0h	equ	0xFEA
  7521                           fsr0l	equ	0xFE9
  7522                           wreg	equ	0xFE8
  7523                           postdec1	equ	0xFE5
  7524                           fsr1h	equ	0xFE2
  7525                           fsr1l	equ	0xFE1
  7526                           indf2	equ	0xFDF
  7527                           postinc2	equ	0xFDE
  7528                           postdec2	equ	0xFDD
  7529                           fsr2h	equ	0xFDA
  7530                           fsr2l	equ	0xFD9
  7531                           status	equ	0xFD8
  7532                           
  7533 ;; *************** function _ringbuf_put *****************
  7534 ;; Defined at:
  7535 ;;		line 20 in file "../My_library/My_ringbuf.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  7538 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
  7539 ;;		 -> usb_tx(8), usb_rx(8), 
  7540 ;;  data            1   17[BANK0 ] unsigned char 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;		None
  7543 ;; Return value:  Size  Location     Type
  7544 ;;		None               void
  7545 ;; Registers used:
  7546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7552 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7554 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7555 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7556 ;;Total ram usage:        7 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:   13
  7559 ;; This function calls:
  7560 ;;		_ringbuf_num
  7561 ;; This function is called by:
  7562 ;;		_USB_CDC_task
  7563 ;;		_loop
  7564 ;;		_ringbuf_put_num
  7565 ;;		_ringbuf_put_str
  7566 ;;		_ST7032_command
  7567 ;;		_ST7032_put
  7568 ;;		_ST7032_create_char
  7569 ;;		_ST7032_init
  7570 ;;		_terminal_task
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text34
  7575  01202C                     __ptext34:
  7576                           	opt stack 0
  7577  01202C                     _ringbuf_put:
  7578                           	opt stack 16
  7579                           
  7580                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  7581                           
  7582                           ;incstack = 0
  7583  01202C  C06F  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  7584  012030  C070  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  7585  012034  EC9F  F08C         	call	_ringbuf_num	;wreg free
  7586  012038  0100               	movlb	0	; () banked
  7587  01203A  EE20 F002          	lfsr	2,2
  7588  01203E  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7589  012040  26D9               	addwf	fsr2l,f,c
  7590  012042  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7591  012044  22DA               	addwfc	fsr2h,f,c
  7592  012046  50DE               	movf	postinc2,w,c
  7593  012048  0100               	movlb	0	; () banked
  7594  01204A  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  7595  01204C  50DE               	movf	postinc2,w,c
  7596  01204E  0100               	movlb	0	; () banked
  7597  012050  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  7598  012052  B0D8               	btfsc	status,0,c
  7599  012054  0012               	return	
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
  7603  012056  0100               	movlb	0	; () banked
  7604  012058  EE20 F004          	lfsr	2,4
  7605  01205C  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7606  01205E  26D9               	addwf	fsr2l,f,c
  7607  012060  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7608  012062  22DA               	addwfc	fsr2h,f,c
  7609  012064  CFDE F072          	movff	postinc2,??_ringbuf_put
  7610  012068  CFDD F073          	movff	postdec2,??_ringbuf_put+1
  7611  01206C  C06F  FFD9         	movff	ringbuf_put@rb,fsr2l
  7612  012070  C070  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  7613  012074  CFDE F074          	movff	postinc2,??_ringbuf_put+2
  7614  012078  CFDD F075          	movff	postdec2,??_ringbuf_put+3
  7615  01207C  0100               	movlb	0	; () banked
  7616  01207E  5172               	movf	??_ringbuf_put& (0+255),w,b
  7617  012080  0100               	movlb	0	; () banked
  7618  012082  2574               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  7619  012084  6ED9               	movwf	fsr2l,c
  7620  012086  0100               	movlb	0	; () banked
  7621  012088  5173               	movf	(??_ringbuf_put+1)& (0+255),w,b
  7622  01208A  0100               	movlb	0	; () banked
  7623  01208C  2175               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  7624  01208E  6EDA               	movwf	fsr2h,c
  7625  012090  C071  FFDF         	movff	ringbuf_put@data,indf2
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  7629  012094  0100               	movlb	0	; () banked
  7630  012096  EE20 F002          	lfsr	2,2
  7631  01209A  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7632  01209C  26D9               	addwf	fsr2l,f,c
  7633  01209E  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7634  0120A0  22DA               	addwfc	fsr2h,f,c
  7635  0120A2  0100               	movlb	0	; () banked
  7636  0120A4  EE10 F004          	lfsr	1,4
  7637  0120A8  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7638  0120AA  26E1               	addwf	fsr1l,f,c
  7639  0120AC  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7640  0120AE  22E2               	addwfc	fsr1h,f,c
  7641  0120B0  CFE6 F074          	movff	postinc1,??_ringbuf_put+2
  7642  0120B4  CFE5 F075          	movff	postdec1,??_ringbuf_put+3
  7643  0120B8  0E01               	movlw	1
  7644  0120BA  0100               	movlb	0	; () banked
  7645  0120BC  2774               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  7646  0120BE  0E00               	movlw	0
  7647  0120C0  2375               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  7648  0120C2  50DE               	movf	postinc2,w,c
  7649  0120C4  0100               	movlb	0	; () banked
  7650  0120C6  5D74               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  7651  0120C8  50DE               	movf	postinc2,w,c
  7652  0120CA  0100               	movlb	0	; () banked
  7653  0120CC  5975               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  7654  0120CE  B0D8               	btfsc	status,0,c
  7655  0120D0  D00B               	goto	l9257
  7656                           
  7657                           ; BSR set to: 0
  7658  0120D2  0100               	movlb	0	; () banked
  7659  0120D4  EE20 F004          	lfsr	2,4
  7660  0120D8  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7661  0120DA  26D9               	addwf	fsr2l,f,c
  7662  0120DC  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7663  0120DE  22DA               	addwfc	fsr2h,f,c
  7664  0120E0  2ADE               	incf	postinc2,f,c
  7665  0120E2  0E00               	movlw	0
  7666  0120E4  22DD               	addwfc	postdec2,f,c
  7667  0120E6  0012               	return	
  7668  0120E8                     l9257:
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;My_ringbuf.c: 24: else rb->head = 0;
  7672  0120E8  0100               	movlb	0	; () banked
  7673  0120EA  EE20 F004          	lfsr	2,4
  7674  0120EE  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7675  0120F0  26D9               	addwf	fsr2l,f,c
  7676  0120F2  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7677  0120F4  22DA               	addwfc	fsr2h,f,c
  7678  0120F6  0E00               	movlw	0
  7679  0120F8  6EDE               	movwf	postinc2,c
  7680  0120FA  0E00               	movlw	0
  7681  0120FC  6EDD               	movwf	postdec2,c
  7682                           
  7683                           ; BSR set to: 0
  7684  0120FE  0012               	return	
  7685  012100                     __end_of_ringbuf_put:
  7686                           	opt stack 0
  7687                           tblptru	equ	0xFF8
  7688                           tblptrh	equ	0xFF7
  7689                           tblptrl	equ	0xFF6
  7690                           tablat	equ	0xFF5
  7691                           prodh	equ	0xFF4
  7692                           prodl	equ	0xFF3
  7693                           intcon	equ	0xFF2
  7694                           intcon2	equ	0xFF1
  7695                           indf0	equ	0xFEF
  7696                           postinc0	equ	0xFEE
  7697                           fsr0h	equ	0xFEA
  7698                           fsr0l	equ	0xFE9
  7699                           wreg	equ	0xFE8
  7700                           postinc1	equ	0xFE6
  7701                           postdec1	equ	0xFE5
  7702                           fsr1h	equ	0xFE2
  7703                           fsr1l	equ	0xFE1
  7704                           indf2	equ	0xFDF
  7705                           postinc2	equ	0xFDE
  7706                           postdec2	equ	0xFDD
  7707                           fsr2h	equ	0xFDA
  7708                           fsr2l	equ	0xFD9
  7709                           status	equ	0xFD8
  7710                           
  7711 ;; *************** function _ringbuf_pop *****************
  7712 ;; Defined at:
  7713 ;;		line 45 in file "../My_library/My_ringbuf.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  7716 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
  7717 ;;		 -> usb_tx(8), usb_rx(8), 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  ret             1   14[BANK0 ] unsigned char 
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  1    wreg      unsigned char 
  7722 ;; Registers used:
  7723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7729 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7731 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7732 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7733 ;;Total ram usage:        7 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; Hardware stack levels required when called:   13
  7736 ;; This function calls:
  7737 ;;		_ringbuf_num
  7738 ;; This function is called by:
  7739 ;;		_USB_CDC_task
  7740 ;;		_loop
  7741 ;;		_ST7032_task
  7742 ;;		_terminal_task
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text35
  7747  0122A0                     __ptext35:
  7748                           	opt stack 0
  7749  0122A0                     _ringbuf_pop:
  7750                           	opt stack 16
  7751                           
  7752                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;incstack = 0
  7756  0122A0  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  7757  0122A4  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  7758  0122A8  EC9F  F08C         	call	_ringbuf_num	;wreg free
  7759  0122AC  0100               	movlb	0	; () banked
  7760  0122AE  5160               	movf	?_ringbuf_num& (0+255),w,b
  7761  0122B0  0100               	movlb	0	; () banked
  7762  0122B2  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  7763  0122B4  B4D8               	btfsc	status,2,c
  7764  0122B6  D058               	goto	l9231
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  7768  0122B8  0100               	movlb	0	; () banked
  7769  0122BA  EE20 F006          	lfsr	2,6
  7770  0122BE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7771  0122C0  26D9               	addwf	fsr2l,f,c
  7772  0122C2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7773  0122C4  22DA               	addwfc	fsr2h,f,c
  7774  0122C6  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  7775  0122CA  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  7776  0122CE  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  7777  0122D2  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  7778  0122D6  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  7779  0122DA  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  7780  0122DE  0100               	movlb	0	; () banked
  7781  0122E0  516A               	movf	??_ringbuf_pop& (0+255),w,b
  7782  0122E2  0100               	movlb	0	; () banked
  7783  0122E4  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  7784  0122E6  6ED9               	movwf	fsr2l,c
  7785  0122E8  0100               	movlb	0	; () banked
  7786  0122EA  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  7787  0122EC  0100               	movlb	0	; () banked
  7788  0122EE  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  7789  0122F0  6EDA               	movwf	fsr2h,c
  7790  0122F2  50DF               	movf	indf2,w,c
  7791  0122F4  0100               	movlb	0	; () banked
  7792  0122F6  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  7796  0122F8  0100               	movlb	0	; () banked
  7797  0122FA  EE20 F002          	lfsr	2,2
  7798  0122FE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7799  012300  26D9               	addwf	fsr2l,f,c
  7800  012302  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7801  012304  22DA               	addwfc	fsr2h,f,c
  7802  012306  0100               	movlb	0	; () banked
  7803  012308  EE10 F006          	lfsr	1,6
  7804  01230C  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7805  01230E  26E1               	addwf	fsr1l,f,c
  7806  012310  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7807  012312  22E2               	addwfc	fsr1h,f,c
  7808  012314  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  7809  012318  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  7810  01231C  0E01               	movlw	1
  7811  01231E  0100               	movlb	0	; () banked
  7812  012320  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  7813  012322  0E00               	movlw	0
  7814  012324  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  7815  012326  50DE               	movf	postinc2,w,c
  7816  012328  0100               	movlb	0	; () banked
  7817  01232A  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  7818  01232C  50DE               	movf	postinc2,w,c
  7819  01232E  0100               	movlb	0	; () banked
  7820  012330  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  7821  012332  B0D8               	btfsc	status,0,c
  7822  012334  D00B               	goto	l9223
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;My_ringbuf.c: 49: rb->tail++;
  7826  012336  0100               	movlb	0	; () banked
  7827  012338  EE20 F006          	lfsr	2,6
  7828  01233C  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7829  01233E  26D9               	addwf	fsr2l,f,c
  7830  012340  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7831  012342  22DA               	addwfc	fsr2h,f,c
  7832  012344  2ADE               	incf	postinc2,f,c
  7833  012346  0E00               	movlw	0
  7834  012348  22DD               	addwfc	postdec2,f,c
  7835                           
  7836                           ;My_ringbuf.c: 50: } else {
  7837  01234A  D00B               	goto	l9225
  7838  01234C                     l9223:
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;My_ringbuf.c: 51: rb->tail = 0;
  7842  01234C  0100               	movlb	0	; () banked
  7843  01234E  EE20 F006          	lfsr	2,6
  7844  012352  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7845  012354  26D9               	addwf	fsr2l,f,c
  7846  012356  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7847  012358  22DA               	addwfc	fsr2h,f,c
  7848  01235A  0E00               	movlw	0
  7849  01235C  6EDE               	movwf	postinc2,c
  7850  01235E  0E00               	movlw	0
  7851  012360  6EDD               	movwf	postdec2,c
  7852  012362                     l9225:
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;My_ringbuf.c: 52: }
  7856                           ;My_ringbuf.c: 53: return ret;
  7857  012362  0100               	movlb	0	; () banked
  7858  012364  516E               	movf	ringbuf_pop@ret& (0+255),w,b
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;My_ringbuf.c: 54: } else {
  7862                           
  7863                           ; BSR set to: 0
  7864  012366  0012               	return	
  7865  012368                     l9231:
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;My_ringbuf.c: 55: return 0;
  7869  012368  0E00               	movlw	0
  7870                           
  7871                           ; BSR set to: 0
  7872  01236A  0012               	return	
  7873  01236C                     __end_of_ringbuf_pop:
  7874                           	opt stack 0
  7875                           tblptru	equ	0xFF8
  7876                           tblptrh	equ	0xFF7
  7877                           tblptrl	equ	0xFF6
  7878                           tablat	equ	0xFF5
  7879                           prodh	equ	0xFF4
  7880                           prodl	equ	0xFF3
  7881                           intcon	equ	0xFF2
  7882                           intcon2	equ	0xFF1
  7883                           indf0	equ	0xFEF
  7884                           postinc0	equ	0xFEE
  7885                           fsr0h	equ	0xFEA
  7886                           fsr0l	equ	0xFE9
  7887                           wreg	equ	0xFE8
  7888                           postinc1	equ	0xFE6
  7889                           postdec1	equ	0xFE5
  7890                           fsr1h	equ	0xFE2
  7891                           fsr1l	equ	0xFE1
  7892                           indf2	equ	0xFDF
  7893                           postinc2	equ	0xFDE
  7894                           postdec2	equ	0xFDD
  7895                           fsr2h	equ	0xFDA
  7896                           fsr2l	equ	0xFD9
  7897                           status	equ	0xFD8
  7898                           
  7899 ;; *************** function _USB_CDC_send *****************
  7900 ;; Defined at:
  7901 ;;		line 94 in file "../My_library/USB_CDC/My_USB_CDC.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  length          2   12[BANK0 ] unsigned int 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;		None
  7906 ;; Return value:  Size  Location     Type
  7907 ;;		None               void
  7908 ;; Registers used:
  7909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7919 ;;Total ram usage:        2 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:   14
  7922 ;; This function calls:
  7923 ;;		_CDCTxService
  7924 ;;		_putUSBUSART
  7925 ;; This function is called by:
  7926 ;;		_USB_CDC_task
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text36
  7931  01386C                     __ptext36:
  7932                           	opt stack 0
  7933  01386C                     _USB_CDC_send:
  7934                           	opt stack 14
  7935                           
  7936                           ;My_USB_CDC.c: 95: if ((cdc_trf_state == 0) == 1) {
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;incstack = 0
  7940  01386C  5028               	movf	_cdc_trf_state,w,c
  7941  01386E  A4D8               	btfss	status,2,c
  7942  013870  D00A               	goto	l9239
  7943                           
  7944                           ;My_USB_CDC.c: 96: putUSBUSART(writeBuffer, length);
  7945  013872  0E80               	movlw	low _writeBuffer
  7946  013874  0100               	movlb	0	; () banked
  7947  013876  6F60               	movwf	putUSBUSART@data& (0+255),b
  7948  013878  0E02               	movlw	high _writeBuffer
  7949  01387A  0100               	movlb	0	; () banked
  7950  01387C  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
  7951  01387E  C06C  F062         	movff	USB_CDC_send@length,putUSBUSART@length
  7952  013882  EC25  F09C         	call	_putUSBUSART	;wreg free
  7953  013886                     l9239:
  7954                           
  7955                           ;My_USB_CDC.c: 97: }
  7956                           ;My_USB_CDC.c: 98: CDCTxService();
  7957  013886  ECBB  F086         	call	_CDCTxService	;wreg free
  7958  01388A  0012               	return		;funcret
  7959  01388C                     __end_of_USB_CDC_send:
  7960                           	opt stack 0
  7961                           tblptru	equ	0xFF8
  7962                           tblptrh	equ	0xFF7
  7963                           tblptrl	equ	0xFF6
  7964                           tablat	equ	0xFF5
  7965                           prodh	equ	0xFF4
  7966                           prodl	equ	0xFF3
  7967                           intcon	equ	0xFF2
  7968                           intcon2	equ	0xFF1
  7969                           indf0	equ	0xFEF
  7970                           postinc0	equ	0xFEE
  7971                           fsr0h	equ	0xFEA
  7972                           fsr0l	equ	0xFE9
  7973                           wreg	equ	0xFE8
  7974                           postinc1	equ	0xFE6
  7975                           postdec1	equ	0xFE5
  7976                           fsr1h	equ	0xFE2
  7977                           fsr1l	equ	0xFE1
  7978                           indf2	equ	0xFDF
  7979                           postinc2	equ	0xFDE
  7980                           postdec2	equ	0xFDD
  7981                           fsr2h	equ	0xFDA
  7982                           fsr2l	equ	0xFD9
  7983                           status	equ	0xFD8
  7984                           
  7985 ;; *************** function _putUSBUSART *****************
  7986 ;; Defined at:
  7987 ;;		line 613 in file "../My_library/USB_CDC/usb/usb_device_cdc.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  data            2    0[BANK0 ] PTR unsigned char 
  7990 ;;		 -> writeBuffer(64), 
  7991 ;;  length          1    2[BANK0 ] unsigned char 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;		None               void
  7996 ;; Registers used:
  7997 ;;		wreg, status,2, status,0
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8003 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8006 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8007 ;;Total ram usage:        3 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:   12
  8010 ;; This function calls:
  8011 ;;		Nothing
  8012 ;; This function is called by:
  8013 ;;		_USB_CDC_send
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           	psect	text37
  8018  01384A                     __ptext37:
  8019                           	opt stack 0
  8020  01384A                     _putUSBUSART:
  8021                           	opt stack 15
  8022                           
  8023                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
  8024                           
  8025                           ;incstack = 0
  8026  01384A  98A0               	bcf	4000,4,c	;volatile
  8027                           
  8028                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  8029  01384C  5028               	movf	_cdc_trf_state,w,c
  8030  01384E  A4D8               	btfss	status,2,c
  8031  013850  D00B               	goto	l8755
  8032                           
  8033                           ;usb_device_cdc.c: 640: {
  8034                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  8035  013852  C060  F0AB         	movff	putUSBUSART@data,_pCDCSrc
  8036  013856  C061  F0AC         	movff	putUSBUSART@data+1,_pCDCSrc+1
  8037  01385A  C062  F0BE         	movff	putUSBUSART@length,_cdc_tx_len
  8038  01385E  0E01               	movlw	1
  8039  013860  0100               	movlb	0	; () banked
  8040  013862  6FBC               	movwf	_cdc_mem_type& (0+255),b
  8041                           
  8042                           ; BSR set to: 0
  8043  013864  0E01               	movlw	1
  8044  013866  6E28               	movwf	_cdc_trf_state,c
  8045  013868                     l8755:
  8046                           
  8047                           ;usb_device_cdc.c: 642: }
  8048                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
  8049  013868  88A0               	bsf	4000,4,c	;volatile
  8050  01386A  0012               	return		;funcret
  8051  01386C                     __end_of_putUSBUSART:
  8052                           	opt stack 0
  8053                           tblptru	equ	0xFF8
  8054                           tblptrh	equ	0xFF7
  8055                           tblptrl	equ	0xFF6
  8056                           tablat	equ	0xFF5
  8057                           prodh	equ	0xFF4
  8058                           prodl	equ	0xFF3
  8059                           intcon	equ	0xFF2
  8060                           intcon2	equ	0xFF1
  8061                           indf0	equ	0xFEF
  8062                           postinc0	equ	0xFEE
  8063                           fsr0h	equ	0xFEA
  8064                           fsr0l	equ	0xFE9
  8065                           wreg	equ	0xFE8
  8066                           postinc1	equ	0xFE6
  8067                           postdec1	equ	0xFE5
  8068                           fsr1h	equ	0xFE2
  8069                           fsr1l	equ	0xFE1
  8070                           indf2	equ	0xFDF
  8071                           postinc2	equ	0xFDE
  8072                           postdec2	equ	0xFDD
  8073                           fsr2h	equ	0xFDA
  8074                           fsr2l	equ	0xFD9
  8075                           status	equ	0xFD8
  8076                           
  8077 ;; *************** function _USB_CDC_get *****************
  8078 ;; Defined at:
  8079 ;;		line 101 in file "../My_library/USB_CDC/My_USB_CDC.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;		None
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  numBytesRead    1   13[BANK0 ] unsigned char 
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  1    wreg      unsigned char 
  8086 ;; Registers used:
  8087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8096 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8097 ;;Total ram usage:        1 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; Hardware stack levels required when called:   14
  8100 ;; This function calls:
  8101 ;;		_CDCTxService
  8102 ;;		_getsUSBUSART
  8103 ;; This function is called by:
  8104 ;;		_USB_CDC_task
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text38
  8109  013788                     __ptext38:
  8110                           	opt stack 0
  8111  013788                     _USB_CDC_get:
  8112                           	opt stack 14
  8113                           
  8114                           ;My_USB_CDC.c: 102: uint8_t numBytesRead;
  8115                           ;My_USB_CDC.c: 103: if ((cdc_trf_state == 0) == 1) {
  8116                           
  8117                           ;incstack = 0
  8118  013788  5028               	movf	_cdc_trf_state,w,c
  8119  01378A  A4D8               	btfss	status,2,c
  8120  01378C  D00D               	goto	l587
  8121                           
  8122                           ;My_USB_CDC.c: 104: numBytesRead = getsUSBUSART(readBuffer, sizeof (readBuffer));
  8123  01378E  0E40               	movlw	low _readBuffer
  8124  013790  0100               	movlb	0	; () banked
  8125  013792  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
  8126  013794  0E02               	movlw	high _readBuffer
  8127  013796  0100               	movlb	0	; () banked
  8128  013798  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
  8129  01379A  0E40               	movlw	64
  8130  01379C  0100               	movlb	0	; () banked
  8131  01379E  6F69               	movwf	getsUSBUSART@len& (0+255),b
  8132  0137A0  EC16  F08D         	call	_getsUSBUSART	;wreg free
  8133  0137A4  0100               	movlb	0	; () banked
  8134  0137A6  6F6D               	movwf	USB_CDC_get@numBytesRead& (0+255),b
  8135  0137A8                     l587:
  8136                           
  8137                           ;My_USB_CDC.c: 105: }
  8138                           ;My_USB_CDC.c: 106: CDCTxService();
  8139  0137A8  ECBB  F086         	call	_CDCTxService	;wreg free
  8140                           
  8141                           ;My_USB_CDC.c: 107: return numBytesRead;
  8142  0137AC  0100               	movlb	0	; () banked
  8143  0137AE  516D               	movf	USB_CDC_get@numBytesRead& (0+255),w,b
  8144  0137B0  0012               	return	
  8145  0137B2                     __end_of_USB_CDC_get:
  8146                           	opt stack 0
  8147                           tblptru	equ	0xFF8
  8148                           tblptrh	equ	0xFF7
  8149                           tblptrl	equ	0xFF6
  8150                           tablat	equ	0xFF5
  8151                           prodh	equ	0xFF4
  8152                           prodl	equ	0xFF3
  8153                           intcon	equ	0xFF2
  8154                           intcon2	equ	0xFF1
  8155                           indf0	equ	0xFEF
  8156                           postinc0	equ	0xFEE
  8157                           fsr0h	equ	0xFEA
  8158                           fsr0l	equ	0xFE9
  8159                           wreg	equ	0xFE8
  8160                           postinc1	equ	0xFE6
  8161                           postdec1	equ	0xFE5
  8162                           fsr1h	equ	0xFE2
  8163                           fsr1l	equ	0xFE1
  8164                           indf2	equ	0xFDF
  8165                           postinc2	equ	0xFDE
  8166                           postdec2	equ	0xFDD
  8167                           fsr2h	equ	0xFDA
  8168                           fsr2l	equ	0xFD9
  8169                           status	equ	0xFD8
  8170                           
  8171 ;; *************** function _getsUSBUSART *****************
  8172 ;; Defined at:
  8173 ;;		line 542 in file "../My_library/USB_CDC/usb/usb_device_cdc.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
  8176 ;;		 -> readBuffer(64), 
  8177 ;;  len             1    9[BANK0 ] unsigned char 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      unsigned char 
  8182 ;; Registers used:
  8183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8189 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8190 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8191 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8192 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8193 ;;Total ram usage:        6 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:   13
  8196 ;; This function calls:
  8197 ;;		_USBTransferOnePacket
  8198 ;; This function is called by:
  8199 ;;		_USB_CDC_get
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text39
  8204  011A2C                     __ptext39:
  8205                           	opt stack 0
  8206  011A2C                     _getsUSBUSART:
  8207                           	opt stack 14
  8208                           
  8209                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;incstack = 0
  8213  011A2C  0E00               	movlw	0
  8214  011A2E  0100               	movlb	0	; () banked
  8215  011A30  6FBD               	movwf	_cdc_rx_len& (0+255),b
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  8219  011A32  0100               	movlb	0	; () banked
  8220  011A34  51B2               	movf	_CDCDataOutHandle& (0+255),w,b
  8221  011A36  0100               	movlb	0	; () banked
  8222  011A38  11B3               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  8223  011A3A  B4D8               	btfsc	status,2,c
  8224  011A3C  D013               	goto	l8721
  8225                           
  8226                           ; BSR set to: 0
  8227  011A3E  C0B2  FFD9         	movff	_CDCDataOutHandle,fsr2l
  8228  011A42  C0B3  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  8229  011A46  0100               	movlb	0	; () banked
  8230  011A48  AEDF               	btfss	indf2,7,c
  8231  011A4A  D004               	goto	u8370
  8232  011A4C  0100               	movlb	0	; () banked
  8233  011A4E  6B6A               	clrf	??_getsUSBUSART& (0+255),b
  8234  011A50  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
  8235  011A52  D002               	goto	u8378
  8236  011A54                     u8370:
  8237  011A54  0100               	movlb	0	; () banked
  8238  011A56  6B6A               	clrf	??_getsUSBUSART& (0+255),b
  8239  011A58                     u8378:
  8240  011A58  0100               	movlb	0	; () banked
  8241  011A5A  516A               	movf	??_getsUSBUSART& (0+255),w,b
  8242  011A5C  0100               	movlb	0	; () banked
  8243  011A5E  6F6B               	movwf	_getsUSBUSART$1886& (0+255),b
  8244  011A60  6B6C               	clrf	(_getsUSBUSART$1886+1)& (0+255),b
  8245  011A62  D005               	goto	l8723
  8246  011A64                     l8721:
  8247                           
  8248                           ; BSR set to: 0
  8249  011A64  0E00               	movlw	0
  8250  011A66  0100               	movlb	0	; () banked
  8251  011A68  6F6C               	movwf	(_getsUSBUSART$1886+1)& (0+255),b
  8252  011A6A  0E00               	movlw	0
  8253  011A6C  6F6B               	movwf	_getsUSBUSART$1886& (0+255),b
  8254  011A6E                     l8723:
  8255                           
  8256                           ; BSR set to: 0
  8257  011A6E  0100               	movlb	0	; () banked
  8258  011A70  516B               	movf	_getsUSBUSART$1886& (0+255),w,b
  8259  011A72  0100               	movlb	0	; () banked
  8260  011A74  116C               	iorwf	(_getsUSBUSART$1886+1)& (0+255),w,b
  8261  011A76  A4D8               	btfss	status,2,c
  8262  011A78  D04B               	goto	l8739
  8263                           
  8264                           ; BSR set to: 0
  8265                           ;usb_device_cdc.c: 547: {
  8266                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  8267  011A7A  0100               	movlb	0	; () banked
  8268  011A7C  EE20 F001          	lfsr	2,1
  8269  011A80  51B2               	movf	_CDCDataOutHandle& (0+255),w,b
  8270  011A82  26D9               	addwf	fsr2l,f,c
  8271  011A84  51B3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  8272  011A86  22DA               	addwfc	fsr2h,f,c
  8273  011A88  0100               	movlb	0	; () banked
  8274  011A8A  5169               	movf	getsUSBUSART@len& (0+255),w,b
  8275  011A8C  5CDE               	subwf	postinc2,w,c
  8276  011A8E  B0D8               	btfsc	status,0,c
  8277  011A90  D00A               	goto	l8729
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  8281  011A92  0100               	movlb	0	; () banked
  8282  011A94  EE20 F001          	lfsr	2,1
  8283  011A98  51B2               	movf	_CDCDataOutHandle& (0+255),w,b
  8284  011A9A  26D9               	addwf	fsr2l,f,c
  8285  011A9C  51B3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  8286  011A9E  22DA               	addwfc	fsr2h,f,c
  8287  011AA0  50DF               	movf	indf2,w,c
  8288  011AA2  0100               	movlb	0	; () banked
  8289  011AA4  6F69               	movwf	getsUSBUSART@len& (0+255),b
  8290  011AA6                     l8729:
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  8294  011AA6  0E00               	movlw	0
  8295  011AA8  0100               	movlb	0	; () banked
  8296  011AAA  6FBD               	movwf	_cdc_rx_len& (0+255),b
  8297  011AAC  D018               	goto	l8735
  8298  011AAE                     l8731:
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  8302  011AAE  0100               	movlb	0	; () banked
  8303  011AB0  51BD               	movf	_cdc_rx_len& (0+255),w,b
  8304  011AB2  0D01               	mullw	1
  8305  011AB4  0E14               	movlw	low _cdc_data_rx
  8306  011AB6  24F3               	addwf	prodl,w,c
  8307  011AB8  6ED9               	movwf	fsr2l,c
  8308  011ABA  0E01               	movlw	high _cdc_data_rx
  8309  011ABC  20F4               	addwfc	prodh,w,c
  8310  011ABE  6EDA               	movwf	fsr2h,c
  8311  011AC0  0100               	movlb	0	; () banked
  8312  011AC2  51BD               	movf	_cdc_rx_len& (0+255),w,b
  8313  011AC4  0D01               	mullw	1
  8314  011AC6  50F3               	movf	prodl,w,c
  8315  011AC8  0100               	movlb	0	; () banked
  8316  011ACA  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
  8317  011ACC  6EE1               	movwf	fsr1l,c
  8318  011ACE  50F4               	movf	prodh,w,c
  8319  011AD0  0100               	movlb	0	; () banked
  8320  011AD2  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
  8321  011AD4  6EE2               	movwf	fsr1h,c
  8322  011AD6  CFDF FFE7          	movff	indf2,indf1
  8323                           
  8324                           ; BSR set to: 0
  8325  011ADA  0100               	movlb	0	; () banked
  8326  011ADC  2BBD               	incf	_cdc_rx_len& (0+255),f,b
  8327  011ADE                     l8735:
  8328                           
  8329                           ; BSR set to: 0
  8330  011ADE  0100               	movlb	0	; () banked
  8331  011AE0  5169               	movf	getsUSBUSART@len& (0+255),w,b
  8332  011AE2  0100               	movlb	0	; () banked
  8333  011AE4  5DBD               	subwf	_cdc_rx_len& (0+255),w,b
  8334  011AE6  A0D8               	btfss	status,0,c
  8335  011AE8  D7E2               	goto	l8731
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8339                           
  8340                           ; BSR set to: 0
  8341  011AEA  0E00               	movlw	0
  8342  011AEC  0100               	movlb	0	; () banked
  8343  011AEE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8344  011AF0  0E14               	movlw	low _cdc_data_rx
  8345  011AF2  0100               	movlb	0	; () banked
  8346  011AF4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8347  011AF6  0E01               	movlw	high _cdc_data_rx
  8348  011AF8  0100               	movlb	0	; () banked
  8349  011AFA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8350  011AFC  0E40               	movlw	64
  8351  011AFE  0100               	movlb	0	; () banked
  8352  011B00  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  8353  011B02  0E02               	movlw	2
  8354  011B04  ECD5  F08E         	call	_USBTransferOnePacket
  8355  011B08  C060  F0B2         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  8356  011B0C  C061  F0B3         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8357  011B10                     l8739:
  8358                           
  8359                           ;usb_device_cdc.c: 567: }
  8360                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  8361  011B10  0100               	movlb	0	; () banked
  8362  011B12  51BD               	movf	_cdc_rx_len& (0+255),w,b
  8363  011B14  0012               	return	
  8364  011B16                     __end_of_getsUSBUSART:
  8365                           	opt stack 0
  8366                           tblptru	equ	0xFF8
  8367                           tblptrh	equ	0xFF7
  8368                           tblptrl	equ	0xFF6
  8369                           tablat	equ	0xFF5
  8370                           prodh	equ	0xFF4
  8371                           prodl	equ	0xFF3
  8372                           intcon	equ	0xFF2
  8373                           intcon2	equ	0xFF1
  8374                           indf0	equ	0xFEF
  8375                           postinc0	equ	0xFEE
  8376                           fsr0h	equ	0xFEA
  8377                           fsr0l	equ	0xFE9
  8378                           wreg	equ	0xFE8
  8379                           indf1	equ	0xFE7
  8380                           postinc1	equ	0xFE6
  8381                           postdec1	equ	0xFE5
  8382                           fsr1h	equ	0xFE2
  8383                           fsr1l	equ	0xFE1
  8384                           indf2	equ	0xFDF
  8385                           postinc2	equ	0xFDE
  8386                           postdec2	equ	0xFDD
  8387                           fsr2h	equ	0xFDA
  8388                           fsr2l	equ	0xFD9
  8389                           status	equ	0xFD8
  8390                           
  8391 ;; *************** function _CDCTxService *****************
  8392 ;; Defined at:
  8393 ;;		line 893 in file "../My_library/USB_CDC/usb/usb_device_cdc.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;		None
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
  8398 ;;  i               1   10[BANK0 ] unsigned char 
  8399 ;; Return value:  Size  Location     Type
  8400 ;;		None               void
  8401 ;; Registers used:
  8402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8409 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8410 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8411 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;Total ram usage:        5 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:   13
  8415 ;; This function calls:
  8416 ;;		_USBTransferOnePacket
  8417 ;; This function is called by:
  8418 ;;		_USB_CDC_send
  8419 ;;		_USB_CDC_get
  8420 ;; This function uses a non-reentrant model
  8421 ;;
  8422                           
  8423                           	psect	text40
  8424  010D76                     __ptext40:
  8425                           	opt stack 0
  8426  010D76                     _CDCTxService:
  8427                           	opt stack 14
  8428                           
  8429                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  8430                           ;usb_device_cdc.c: 896: uint8_t i;
  8431                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
  8432                           
  8433                           ; BSR set to: 0
  8434                           ;incstack = 0
  8435  010D76  98A0               	bcf	4000,4,c	;volatile
  8436                           
  8437                           ;usb_device_cdc.c: 900: {};
  8438                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  8439  010D78  0100               	movlb	0	; () banked
  8440  010D7A  51B0               	movf	_CDCDataInHandle& (0+255),w,b
  8441  010D7C  0100               	movlb	0	; () banked
  8442  010D7E  11B1               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  8443  010D80  B4D8               	btfsc	status,2,c
  8444  010D82  D013               	goto	l8763
  8445                           
  8446                           ; BSR set to: 0
  8447  010D84  C0B0  FFD9         	movff	_CDCDataInHandle,fsr2l
  8448  010D88  C0B1  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  8449  010D8C  0100               	movlb	0	; () banked
  8450  010D8E  AEDF               	btfss	indf2,7,c
  8451  010D90  D004               	goto	u8430
  8452  010D92  0100               	movlb	0	; () banked
  8453  010D94  6B67               	clrf	??_CDCTxService& (0+255),b
  8454  010D96  2B67               	incf	??_CDCTxService& (0+255),f,b
  8455  010D98  D002               	goto	u8438
  8456  010D9A                     u8430:
  8457  010D9A  0100               	movlb	0	; () banked
  8458  010D9C  6B67               	clrf	??_CDCTxService& (0+255),b
  8459  010D9E                     u8438:
  8460  010D9E  0100               	movlb	0	; () banked
  8461  010DA0  5167               	movf	??_CDCTxService& (0+255),w,b
  8462  010DA2  0100               	movlb	0	; () banked
  8463  010DA4  6F68               	movwf	_CDCTxService$1934& (0+255),b
  8464  010DA6  6B69               	clrf	(_CDCTxService$1934+1)& (0+255),b
  8465  010DA8  D005               	goto	l8765
  8466  010DAA                     l8763:
  8467                           
  8468                           ; BSR set to: 0
  8469  010DAA  0E00               	movlw	0
  8470  010DAC  0100               	movlb	0	; () banked
  8471  010DAE  6F69               	movwf	(_CDCTxService$1934+1)& (0+255),b
  8472  010DB0  0E00               	movlw	0
  8473  010DB2  6F68               	movwf	_CDCTxService$1934& (0+255),b
  8474  010DB4                     l8765:
  8475                           
  8476                           ; BSR set to: 0
  8477  010DB4  0100               	movlb	0	; () banked
  8478  010DB6  5168               	movf	_CDCTxService$1934& (0+255),w,b
  8479  010DB8  0100               	movlb	0	; () banked
  8480  010DBA  1169               	iorwf	(_CDCTxService$1934+1)& (0+255),w,b
  8481  010DBC  B4D8               	btfsc	status,2,c
  8482  010DBE  D002               	goto	l8769
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;usb_device_cdc.c: 903: {
  8486                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
  8487  010DC0  88A0               	bsf	4000,4,c	;volatile
  8488                           
  8489                           ;usb_device_cdc.c: 905: return;
  8490  010DC2  0012               	return	
  8491  010DC4                     l8769:
  8492                           
  8493                           ; BSR set to: 0
  8494                           ;usb_device_cdc.c: 906: }
  8495                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  8496  010DC4  0E03               	movlw	3
  8497  010DC6  1828               	xorwf	_cdc_trf_state,w,c
  8498  010DC8  A4D8               	btfss	status,2,c
  8499  010DCA  D002               	goto	l490
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  8503  010DCC  0E00               	movlw	0
  8504  010DCE  6E28               	movwf	_cdc_trf_state,c
  8505  010DD0                     l490:
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  8509  010DD0  5028               	movf	_cdc_trf_state,w,c
  8510  010DD2  A4D8               	btfss	status,2,c
  8511  010DD4  D002               	goto	l8775
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;usb_device_cdc.c: 920: {
  8515                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
  8516  010DD6  88A0               	bsf	4000,4,c	;volatile
  8517                           
  8518                           ;usb_device_cdc.c: 922: return;
  8519  010DD8  0012               	return	
  8520  010DDA                     l8775:
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;usb_device_cdc.c: 923: }
  8524                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  8525  010DDA  0E02               	movlw	2
  8526  010DDC  1828               	xorwf	_cdc_trf_state,w,c
  8527  010DDE  A4D8               	btfss	status,2,c
  8528  010DE0  D016               	goto	l8781
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;usb_device_cdc.c: 929: {
  8532                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  8533  010DE2  0E01               	movlw	1
  8534  010DE4  0100               	movlb	0	; () banked
  8535  010DE6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8536  010DE8  0E00               	movlw	0
  8537  010DEA  0100               	movlb	0	; () banked
  8538  010DEC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8539  010DEE  0E00               	movlw	0
  8540  010DF0  0100               	movlb	0	; () banked
  8541  010DF2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8542  010DF4  0E00               	movlw	0
  8543  010DF6  0100               	movlb	0	; () banked
  8544  010DF8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  8545  010DFA  0E02               	movlw	2
  8546  010DFC  ECD5  F08E         	call	_USBTransferOnePacket
  8547  010E00  C060  F0B0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  8548  010E04  C061  F0B1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  8549                           
  8550                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  8551  010E08  0E03               	movlw	3
  8552  010E0A  6E28               	movwf	_cdc_trf_state,c
  8553                           
  8554                           ;usb_device_cdc.c: 933: }
  8555  010E0C  D06F               	goto	l8825
  8556  010E0E                     l8781:
  8557                           
  8558                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  8559  010E0E  0428               	decf	_cdc_trf_state,w,c
  8560  010E10  A4D8               	btfss	status,2,c
  8561  010E12  D06C               	goto	l8825
  8562                           
  8563                           ;usb_device_cdc.c: 935: {
  8564                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  8565  010E14  0E40               	movlw	64
  8566  010E16  0100               	movlb	0	; () banked
  8567  010E18  65BE               	cpfsgt	_cdc_tx_len& (0+255),b
  8568  010E1A  D004               	goto	l495
  8569                           
  8570                           ; BSR set to: 0
  8571                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  8572  010E1C  0E40               	movlw	64
  8573  010E1E  0100               	movlb	0	; () banked
  8574  010E20  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
  8575  010E22  D002               	goto	l8787
  8576  010E24                     l495:
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;usb_device_cdc.c: 941: else
  8580                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  8581  010E24  C0BE  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  8582  010E28                     l8787:
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  8586  010E28  0100               	movlb	0	; () banked
  8587  010E2A  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
  8588  010E2C  0800               	sublw	0
  8589  010E2E  0100               	movlb	0	; () banked
  8590  010E30  25BE               	addwf	_cdc_tx_len& (0+255),w,b
  8591  010E32  0100               	movlb	0	; () banked
  8592  010E34  6FBE               	movwf	_cdc_tx_len& (0+255),b
  8593                           
  8594                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  8595  010E36  0E00               	movlw	low _cdc_data_tx
  8596  010E38  0100               	movlb	0	; () banked
  8597  010E3A  6FA8               	movwf	_pCDCDst& (0+255),b
  8598  010E3C  0E02               	movlw	high _cdc_data_tx
  8599  010E3E  0100               	movlb	0	; () banked
  8600  010E40  6FA9               	movwf	(_pCDCDst+1)& (0+255),b
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;usb_device_cdc.c: 951: i = byte_to_send;
  8604  010E42  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  8608  010E46  0100               	movlb	0	; () banked
  8609  010E48  51BC               	movf	_cdc_mem_type& (0+255),w,b
  8610  010E4A  B4D8               	btfsc	status,2,c
  8611  010E4C  D013               	goto	l8803
  8612  010E4E  D02A               	goto	l8813
  8613  010E50                     l8795:
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;usb_device_cdc.c: 955: {
  8617                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  8618  010E50  C0AB  FFD9         	movff	_pCDCSrc,fsr2l
  8619  010E54  C0AC  FFDA         	movff	_pCDCSrc+1,fsr2h
  8620  010E58  C0A8  FFE1         	movff	_pCDCDst,fsr1l
  8621  010E5C  C0A9  FFE2         	movff	_pCDCDst+1,fsr1h
  8622  010E60  CFDF FFE7          	movff	indf2,indf1
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  8626  010E64  0100               	movlb	0	; () banked
  8627  010E66  4BA8               	infsnz	_pCDCDst& (0+255),f,b
  8628  010E68  2BA9               	incf	(_pCDCDst+1)& (0+255),f,b
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  8632  010E6A  0100               	movlb	0	; () banked
  8633  010E6C  4BAB               	infsnz	_pCDCSrc& (0+255),f,b
  8634  010E6E  2BAC               	incf	(_pCDCSrc+1)& (0+255),f,b
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;usb_device_cdc.c: 959: i--;
  8638  010E70  0100               	movlb	0	; () banked
  8639  010E72  076A               	decf	CDCTxService@i& (0+255),f,b
  8640  010E74                     l8803:
  8641                           
  8642                           ; BSR set to: 0
  8643  010E74  0100               	movlb	0	; () banked
  8644  010E76  516A               	movf	CDCTxService@i& (0+255),w,b
  8645  010E78  0100               	movlb	0	; () banked
  8646  010E7A  B4D8               	btfsc	status,2,c
  8647  010E7C  D018               	goto	l8815
  8648  010E7E  D7E8               	goto	l8795
  8649  010E80                     l8805:
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;usb_device_cdc.c: 965: {
  8653                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  8654  010E80  C0AB  FFD9         	movff	_pCDCSrc,fsr2l
  8655  010E84  C0AC  FFDA         	movff	_pCDCSrc+1,fsr2h
  8656  010E88  C0A8  FFE1         	movff	_pCDCDst,fsr1l
  8657  010E8C  C0A9  FFE2         	movff	_pCDCDst+1,fsr1h
  8658  010E90  CFDF FFE7          	movff	indf2,indf1
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  8662  010E94  0100               	movlb	0	; () banked
  8663  010E96  4BA8               	infsnz	_pCDCDst& (0+255),f,b
  8664  010E98  2BA9               	incf	(_pCDCDst+1)& (0+255),f,b
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  8668  010E9A  0100               	movlb	0	; () banked
  8669  010E9C  4BAB               	infsnz	_pCDCSrc& (0+255),f,b
  8670  010E9E  2BAC               	incf	(_pCDCSrc+1)& (0+255),f,b
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;usb_device_cdc.c: 969: i--;
  8674  010EA0  0100               	movlb	0	; () banked
  8675  010EA2  076A               	decf	CDCTxService@i& (0+255),f,b
  8676  010EA4                     l8813:
  8677                           
  8678                           ; BSR set to: 0
  8679  010EA4  0100               	movlb	0	; () banked
  8680  010EA6  516A               	movf	CDCTxService@i& (0+255),w,b
  8681  010EA8  0100               	movlb	0	; () banked
  8682  010EAA  A4D8               	btfss	status,2,c
  8683  010EAC  D7E9               	goto	l8805
  8684  010EAE                     l8815:
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;usb_device_cdc.c: 970: }
  8688                           ;usb_device_cdc.c: 971: }
  8689                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  8690  010EAE  0100               	movlb	0	; () banked
  8691  010EB0  51BE               	movf	_cdc_tx_len& (0+255),w,b
  8692  010EB2  A4D8               	btfss	status,2,c
  8693  010EB4  D009               	goto	l8823
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;usb_device_cdc.c: 978: {
  8697                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  8698  010EB6  0E40               	movlw	64
  8699  010EB8  0100               	movlb	0	; () banked
  8700  010EBA  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  8701  010EBC  A4D8               	btfss	status,2,c
  8702  010EBE  D002               	goto	l8821
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  8706  010EC0  0E02               	movlw	2
  8707  010EC2  D001               	goto	L1
  8708  010EC4                     l8821:
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;usb_device_cdc.c: 981: else
  8712                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  8713  010EC4  0E03               	movlw	3
  8714  010EC6                     L1:
  8715  010EC6  6E28               	movwf	_cdc_trf_state,c
  8716  010EC8                     l8823:
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;usb_device_cdc.c: 983: }
  8720                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  8721  010EC8  0E01               	movlw	1
  8722  010ECA  0100               	movlb	0	; () banked
  8723  010ECC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8724  010ECE  0E00               	movlw	low _cdc_data_tx
  8725  010ED0  0100               	movlb	0	; () banked
  8726  010ED2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8727  010ED4  0E02               	movlw	high _cdc_data_tx
  8728  010ED6  0100               	movlb	0	; () banked
  8729  010ED8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8730  010EDA  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  8731  010EDE  0E02               	movlw	2
  8732  010EE0  ECD5  F08E         	call	_USBTransferOnePacket
  8733  010EE4  C060  F0B0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  8734  010EE8  C061  F0B1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  8735  010EEC                     l8825:
  8736                           
  8737                           ;usb_device_cdc.c: 986: }
  8738                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
  8739  010EEC  88A0               	bsf	4000,4,c	;volatile
  8740  010EEE  0012               	return		;funcret
  8741  010EF0                     __end_of_CDCTxService:
  8742                           	opt stack 0
  8743                           tblptru	equ	0xFF8
  8744                           tblptrh	equ	0xFF7
  8745                           tblptrl	equ	0xFF6
  8746                           tablat	equ	0xFF5
  8747                           prodh	equ	0xFF4
  8748                           prodl	equ	0xFF3
  8749                           intcon	equ	0xFF2
  8750                           intcon2	equ	0xFF1
  8751                           indf0	equ	0xFEF
  8752                           postinc0	equ	0xFEE
  8753                           fsr0h	equ	0xFEA
  8754                           fsr0l	equ	0xFE9
  8755                           wreg	equ	0xFE8
  8756                           indf1	equ	0xFE7
  8757                           postinc1	equ	0xFE6
  8758                           postdec1	equ	0xFE5
  8759                           fsr1h	equ	0xFE2
  8760                           fsr1l	equ	0xFE1
  8761                           indf2	equ	0xFDF
  8762                           postinc2	equ	0xFDE
  8763                           postdec2	equ	0xFDD
  8764                           fsr2h	equ	0xFDA
  8765                           fsr2l	equ	0xFD9
  8766                           status	equ	0xFD8
  8767                           
  8768 ;; *************** function _USBTransferOnePacket *****************
  8769 ;; Defined at:
  8770 ;;		line 996 in file "../My_library/USB_CDC/usb/usb_device.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;  ep              1    wreg     unsigned char 
  8773 ;;  dir             1    0[BANK0 ] unsigned char 
  8774 ;;  data            2    1[BANK0 ] PTR unsigned char 
  8775 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8776 ;;  len             1    3[BANK0 ] unsigned char 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  ep              1    4[BANK0 ] unsigned char 
  8779 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
  8780 ;;		 -> NULL(0), BDT(48), 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  2    0[BANK0 ] PTR void 
  8783 ;; Registers used:
  8784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8790 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8791 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8793 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8794 ;;Total ram usage:        7 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:   12
  8797 ;; This function calls:
  8798 ;;		Nothing
  8799 ;; This function is called by:
  8800 ;;		_getsUSBUSART
  8801 ;;		_CDCTxService
  8802 ;;		_USBCDCEventHandler
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           	psect	text41
  8807  011DAA                     __ptext41:
  8808                           	opt stack 0
  8809  011DAA                     _USBTransferOnePacket:
  8810                           	opt stack 14
  8811                           
  8812                           ;incstack = 0
  8813                           ;USBTransferOnePacket@ep stored from wreg
  8814  011DAA  0100               	movlb	0	; () banked
  8815  011DAC  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
  8816                           
  8817                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
  8818                           ;usb_device.c: 1001: if(dir != 0)
  8819  011DAE  0100               	movlb	0	; () banked
  8820  011DB0  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  8821  011DB2  0100               	movlb	0	; () banked
  8822  011DB4  B4D8               	btfsc	status,2,c
  8823  011DB6  D008               	goto	l8573
  8824                           
  8825                           ; BSR set to: 0
  8826                           ;usb_device.c: 1002: {
  8827                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
  8828  011DB8  0100               	movlb	0	; () banked
  8829  011DBA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8830  011DBC  0D02               	mullw	2
  8831  011DBE  0E10               	movlw	low _pBDTEntryIn
  8832  011DC0  24F3               	addwf	prodl,w,c
  8833  011DC2  6ED9               	movwf	fsr2l,c
  8834  011DC4  0E00               	movlw	high _pBDTEntryIn
  8835  011DC6  D007               	goto	L2
  8836  011DC8                     l8573:
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;usb_device.c: 1006: else
  8840                           ;usb_device.c: 1007: {
  8841                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
  8842  011DC8  0100               	movlb	0	; () banked
  8843  011DCA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8844  011DCC  0D02               	mullw	2
  8845  011DCE  0E9F               	movlw	low _pBDTEntryOut
  8846  011DD0  24F3               	addwf	prodl,w,c
  8847  011DD2  6ED9               	movwf	fsr2l,c
  8848  011DD4  0E00               	movlw	high _pBDTEntryOut
  8849  011DD6                     L2:
  8850  011DD6  20F4               	addwfc	prodh,w,c
  8851  011DD8  6EDA               	movwf	fsr2h,c
  8852  011DDA  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
  8853  011DDE  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;usb_device.c: 1010: }
  8857                           ;usb_device.c: 1014: if(handle == 0)
  8858                           
  8859                           ; BSR set to: 0
  8860  011DE2  0100               	movlb	0	; () banked
  8861  011DE4  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8862  011DE6  0100               	movlb	0	; () banked
  8863  011DE8  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8864  011DEA  A4D8               	btfss	status,2,c
  8865  011DEC  D007               	goto	l8581
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;usb_device.c: 1015: {
  8869                           ;usb_device.c: 1016: return 0;
  8870  011DEE  0E00               	movlw	0
  8871  011DF0  0100               	movlb	0	; () banked
  8872  011DF2  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  8873  011DF4  0E00               	movlw	0
  8874  011DF6  0100               	movlb	0	; () banked
  8875  011DF8  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  8876                           
  8877                           ; BSR set to: 0
  8878  011DFA  0012               	return	
  8879  011DFC                     l8581:
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;usb_device.c: 1017: }
  8883                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
  8884  011DFC  0100               	movlb	0	; () banked
  8885  011DFE  EE20 F002          	lfsr	2,2
  8886  011E02  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8887  011E04  26D9               	addwf	fsr2l,f,c
  8888  011E06  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8889  011E08  22DA               	addwfc	fsr2h,f,c
  8890  011E0A  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  8891  011E0E  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  8892                           
  8893                           ;usb_device.c: 1031: handle->CNT = len;
  8894  011E12  0100               	movlb	0	; () banked
  8895  011E14  EE20 F001          	lfsr	2,1
  8896  011E18  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8897  011E1A  26D9               	addwf	fsr2l,f,c
  8898  011E1C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8899  011E1E  22DA               	addwfc	fsr2h,f,c
  8900  011E20  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
  8904  011E24  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8905  011E28  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8906  011E2C  0E40               	movlw	64
  8907  011E2E  16DF               	andwf	indf2,f,c
  8908                           
  8909                           ; BSR set to: 0
  8910                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
  8911  011E30  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8912  011E34  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8913  011E38  0E00               	movlw	0
  8914  011E3A  86DB               	bsf	plusw2,3,c
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
  8918  011E3C  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8919  011E40  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8920  011E44  0E00               	movlw	0
  8921  011E46  8EDB               	bsf	plusw2,7,c
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;usb_device.c: 1037: if(dir != 0)
  8925  011E48  0100               	movlb	0	; () banked
  8926  011E4A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  8927  011E4C  0100               	movlb	0	; () banked
  8928  011E4E  B4D8               	btfsc	status,2,c
  8929  011E50  D008               	goto	l8593
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;usb_device.c: 1038: {
  8933                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  8934  011E52  0100               	movlb	0	; () banked
  8935  011E54  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8936  011E56  0D02               	mullw	2
  8937  011E58  0E10               	movlw	low _pBDTEntryIn
  8938  011E5A  24F3               	addwf	prodl,w,c
  8939  011E5C  6ED9               	movwf	fsr2l,c
  8940  011E5E  0E00               	movlw	high _pBDTEntryIn
  8941  011E60  D007               	goto	L3
  8942  011E62                     l8593:
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;usb_device.c: 1042: else
  8946                           ;usb_device.c: 1043: {
  8947                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  8948  011E62  0100               	movlb	0	; () banked
  8949  011E64  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8950  011E66  0D02               	mullw	2
  8951  011E68  0E9F               	movlw	low _pBDTEntryOut
  8952  011E6A  24F3               	addwf	prodl,w,c
  8953  011E6C  6ED9               	movwf	fsr2l,c
  8954  011E6E  0E00               	movlw	high _pBDTEntryOut
  8955  011E70                     L3:
  8956  011E70  20F4               	addwfc	prodh,w,c
  8957  011E72  6EDA               	movwf	fsr2h,c
  8958  011E74  0E04               	movlw	4
  8959  011E76  1ADF               	xorwf	indf2,f,c
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;usb_device.c: 1046: }
  8963                           ;usb_device.c: 1047: return (void*)handle;
  8964                           
  8965                           ; BSR set to: 0
  8966  011E78  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  8967  011E7C  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  8968  011E80  0012               	return	
  8969  011E82                     __end_of_USBTransferOnePacket:
  8970                           	opt stack 0
  8971                           tblptru	equ	0xFF8
  8972                           tblptrh	equ	0xFF7
  8973                           tblptrl	equ	0xFF6
  8974                           tablat	equ	0xFF5
  8975                           prodh	equ	0xFF4
  8976                           prodl	equ	0xFF3
  8977                           intcon	equ	0xFF2
  8978                           intcon2	equ	0xFF1
  8979                           indf0	equ	0xFEF
  8980                           postinc0	equ	0xFEE
  8981                           fsr0h	equ	0xFEA
  8982                           fsr0l	equ	0xFE9
  8983                           wreg	equ	0xFE8
  8984                           indf1	equ	0xFE7
  8985                           postinc1	equ	0xFE6
  8986                           postdec1	equ	0xFE5
  8987                           fsr1h	equ	0xFE2
  8988                           fsr1l	equ	0xFE1
  8989                           indf2	equ	0xFDF
  8990                           postinc2	equ	0xFDE
  8991                           postdec2	equ	0xFDD
  8992                           plusw2	equ	0xFDB
  8993                           fsr2h	equ	0xFDA
  8994                           fsr2l	equ	0xFD9
  8995                           status	equ	0xFD8
  8996                           
  8997 ;; *************** function _UART_task *****************
  8998 ;; Defined at:
  8999 ;;		line 43 in file "../My_library/My_UART.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;		None
  9004 ;; Return value:  Size  Location     Type
  9005 ;;		None               void
  9006 ;; Registers used:
  9007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9017 ;;Total ram usage:        0 bytes
  9018 ;; Hardware stack levels used:    1
  9019 ;; Hardware stack levels required when called:   13
  9020 ;; This function calls:
  9021 ;;		_ringbuf_num
  9022 ;; This function is called by:
  9023 ;;		_loop
  9024 ;; This function uses a non-reentrant model
  9025 ;;
  9026                           
  9027                           	psect	text42
  9028  01388C                     __ptext42:
  9029                           	opt stack 0
  9030  01388C                     _UART_task:
  9031                           	opt stack 16
  9032                           
  9033                           ;My_UART.c: 44: if (ringbuf_num(&uart_tx)) {
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;incstack = 0
  9037  01388C  0ED6               	movlw	low _uart_tx
  9038  01388E  0100               	movlb	0	; () banked
  9039  013890  6F60               	movwf	ringbuf_num@rb& (0+255),b
  9040  013892  0E01               	movlw	high _uart_tx
  9041  013894  0100               	movlb	0	; () banked
  9042  013896  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  9043  013898  EC9F  F08C         	call	_ringbuf_num	;wreg free
  9044  01389C  0100               	movlb	0	; () banked
  9045  01389E  5160               	movf	?_ringbuf_num& (0+255),w,b
  9046  0138A0  0100               	movlb	0	; () banked
  9047  0138A2  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9048  0138A4  B4D8               	btfsc	status,2,c
  9049  0138A6  0012               	return	
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
  9053  0138A8  889D               	bsf	3997,4,c	;volatile
  9054  0138AA  0012               	return	
  9055  0138AC                     __end_of_UART_task:
  9056                           	opt stack 0
  9057                           tblptru	equ	0xFF8
  9058                           tblptrh	equ	0xFF7
  9059                           tblptrl	equ	0xFF6
  9060                           tablat	equ	0xFF5
  9061                           prodh	equ	0xFF4
  9062                           prodl	equ	0xFF3
  9063                           intcon	equ	0xFF2
  9064                           intcon2	equ	0xFF1
  9065                           indf0	equ	0xFEF
  9066                           postinc0	equ	0xFEE
  9067                           fsr0h	equ	0xFEA
  9068                           fsr0l	equ	0xFE9
  9069                           wreg	equ	0xFE8
  9070                           indf1	equ	0xFE7
  9071                           postinc1	equ	0xFE6
  9072                           postdec1	equ	0xFE5
  9073                           fsr1h	equ	0xFE2
  9074                           fsr1l	equ	0xFE1
  9075                           indf2	equ	0xFDF
  9076                           postinc2	equ	0xFDE
  9077                           postdec2	equ	0xFDD
  9078                           plusw2	equ	0xFDB
  9079                           fsr2h	equ	0xFDA
  9080                           fsr2l	equ	0xFD9
  9081                           status	equ	0xFD8
  9082                           
  9083 ;; *************** function _ringbuf_num *****************
  9084 ;; Defined at:
  9085 ;;		line 12 in file "../My_library/My_ringbuf.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  9088 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
  9089 ;;		 -> usb_tx(8), usb_rx(8), 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  2    0[BANK0 ] unsigned int 
  9094 ;; Registers used:
  9095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9101 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9104 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;Total ram usage:        8 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; Hardware stack levels required when called:   12
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		_USB_CDC_task
  9112 ;;		_ringbuf_put
  9113 ;;		_ringbuf_pop
  9114 ;;		_UART_task
  9115 ;;		_loop
  9116 ;;		_ringbuf_backspace
  9117 ;;		_ST7032_task
  9118 ;;		_terminal_task
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           	psect	text43
  9123  01193E                     __ptext43:
  9124                           	opt stack 0
  9125  01193E                     _ringbuf_num:
  9126                           	opt stack 16
  9127                           
  9128                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;incstack = 0
  9132  01193E  0100               	movlb	0	; () banked
  9133  011940  EE20 F006          	lfsr	2,6
  9134  011944  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9135  011946  26D9               	addwf	fsr2l,f,c
  9136  011948  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9137  01194A  22DA               	addwfc	fsr2h,f,c
  9138  01194C  0100               	movlb	0	; () banked
  9139  01194E  EE10 F004          	lfsr	1,4
  9140  011952  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9141  011954  26E1               	addwf	fsr1l,f,c
  9142  011956  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9143  011958  22E2               	addwfc	fsr1h,f,c
  9144  01195A  50DE               	movf	postinc2,w,c
  9145  01195C  5CE6               	subwf	postinc1,w,c
  9146  01195E  50DE               	movf	postinc2,w,c
  9147  011960  58E6               	subwfb	postinc1,w,c
  9148  011962  A0D8               	btfss	status,0,c
  9149  011964  D028               	goto	l8843
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  9153  011966  0100               	movlb	0	; () banked
  9154  011968  EE20 F004          	lfsr	2,4
  9155  01196C  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9156  01196E  26D9               	addwf	fsr2l,f,c
  9157  011970  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9158  011972  22DA               	addwfc	fsr2h,f,c
  9159  011974  CFDE F062          	movff	postinc2,??_ringbuf_num
  9160  011978  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  9161  01197C  0100               	movlb	0	; () banked
  9162  01197E  EE20 F006          	lfsr	2,6
  9163  011982  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9164  011984  26D9               	addwf	fsr2l,f,c
  9165  011986  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9166  011988  22DA               	addwfc	fsr2h,f,c
  9167  01198A  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  9168  01198E  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  9169  011992  0100               	movlb	0	; () banked
  9170  011994  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
  9171  011996  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
  9172  011998  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  9173  01199A  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
  9174  01199C  0100               	movlb	0	; () banked
  9175  01199E  5162               	movf	??_ringbuf_num& (0+255),w,b
  9176  0119A0  0100               	movlb	0	; () banked
  9177  0119A2  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  9178  0119A4  0100               	movlb	0	; () banked
  9179  0119A6  6F60               	movwf	?_ringbuf_num& (0+255),b
  9180  0119A8  0100               	movlb	0	; () banked
  9181  0119AA  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  9182  0119AC  0100               	movlb	0	; () banked
  9183  0119AE  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  9184  0119B0  0100               	movlb	0	; () banked
  9185  0119B2  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  9186                           
  9187                           ; BSR set to: 0
  9188                           ;My_ringbuf.c: 15: } else {
  9189                           
  9190                           ; BSR set to: 0
  9191  0119B4  0012               	return	
  9192  0119B6                     l8843:
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  9196  0119B6  0100               	movlb	0	; () banked
  9197  0119B8  EE20 F004          	lfsr	2,4
  9198  0119BC  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9199  0119BE  26D9               	addwf	fsr2l,f,c
  9200  0119C0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9201  0119C2  22DA               	addwfc	fsr2h,f,c
  9202  0119C4  CFDE F062          	movff	postinc2,??_ringbuf_num
  9203  0119C8  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  9204  0119CC  0100               	movlb	0	; () banked
  9205  0119CE  EE20 F002          	lfsr	2,2
  9206  0119D2  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9207  0119D4  26D9               	addwf	fsr2l,f,c
  9208  0119D6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9209  0119D8  22DA               	addwfc	fsr2h,f,c
  9210  0119DA  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  9211  0119DE  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  9212  0119E2  0100               	movlb	0	; () banked
  9213  0119E4  EE20 F006          	lfsr	2,6
  9214  0119E8  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9215  0119EA  26D9               	addwf	fsr2l,f,c
  9216  0119EC  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9217  0119EE  22DA               	addwfc	fsr2h,f,c
  9218  0119F0  CFDE F066          	movff	postinc2,??_ringbuf_num+4
  9219  0119F4  CFDD F067          	movff	postdec2,??_ringbuf_num+5
  9220  0119F8  0100               	movlb	0	; () banked
  9221  0119FA  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
  9222  0119FC  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
  9223  0119FE  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  9224  011A00  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
  9225  011A02  0100               	movlb	0	; () banked
  9226  011A04  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
  9227  011A06  0100               	movlb	0	; () banked
  9228  011A08  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  9229  011A0A  0100               	movlb	0	; () banked
  9230  011A0C  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
  9231  011A0E  0100               	movlb	0	; () banked
  9232  011A10  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  9233  011A12  0100               	movlb	0	; () banked
  9234  011A14  5162               	movf	??_ringbuf_num& (0+255),w,b
  9235  011A16  0100               	movlb	0	; () banked
  9236  011A18  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  9237  011A1A  0100               	movlb	0	; () banked
  9238  011A1C  6F60               	movwf	?_ringbuf_num& (0+255),b
  9239  011A1E  0100               	movlb	0	; () banked
  9240  011A20  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  9241  011A22  0100               	movlb	0	; () banked
  9242  011A24  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  9243  011A26  0100               	movlb	0	; () banked
  9244  011A28  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  9245                           
  9246                           ; BSR set to: 0
  9247  011A2A  0012               	return	
  9248  011A2C                     __end_of_ringbuf_num:
  9249                           	opt stack 0
  9250                           tblptru	equ	0xFF8
  9251                           tblptrh	equ	0xFF7
  9252                           tblptrl	equ	0xFF6
  9253                           tablat	equ	0xFF5
  9254                           prodh	equ	0xFF4
  9255                           prodl	equ	0xFF3
  9256                           intcon	equ	0xFF2
  9257                           intcon2	equ	0xFF1
  9258                           indf0	equ	0xFEF
  9259                           postinc0	equ	0xFEE
  9260                           fsr0h	equ	0xFEA
  9261                           fsr0l	equ	0xFE9
  9262                           wreg	equ	0xFE8
  9263                           indf1	equ	0xFE7
  9264                           postinc1	equ	0xFE6
  9265                           postdec1	equ	0xFE5
  9266                           fsr1h	equ	0xFE2
  9267                           fsr1l	equ	0xFE1
  9268                           indf2	equ	0xFDF
  9269                           postinc2	equ	0xFDE
  9270                           postdec2	equ	0xFDD
  9271                           plusw2	equ	0xFDB
  9272                           fsr2h	equ	0xFDA
  9273                           fsr2l	equ	0xFD9
  9274                           status	equ	0xFD8
  9275                           
  9276 ;; *************** function _RTCC_task *****************
  9277 ;; Defined at:
  9278 ;;		line 352 in file "../My_library/My_RTCC.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;		None
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;		None
  9283 ;; Return value:  Size  Location     Type
  9284 ;;		None               void
  9285 ;; Registers used:
  9286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9296 ;;Total ram usage:        0 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; Hardware stack levels required when called:   16
  9299 ;; This function calls:
  9300 ;;		_RTCC_from_RTCC
  9301 ;; This function is called by:
  9302 ;;		_loop
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306                           	psect	text44
  9307  013488                     __ptext44:
  9308                           	opt stack 0
  9309  013488                     _RTCC_task:
  9310                           	opt stack 13
  9311                           
  9312                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
  9313                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
  9314                           
  9315                           ; BSR set to: 0
  9316                           ;incstack = 0
  9317  013488  010F               	movlb	15	; () banked
  9318  01348A  B93F               	btfsc	63,4,b	;volatile
  9319  01348C  0012               	return	
  9320                           
  9321                           ; BSR set to: 15
  9322                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
  9323                           
  9324                           ; BSR set to: 15
  9325                           
  9326                           ; BSR set to: 15
  9327  01348E  0E00               	movlw	0
  9328  013490  B73F               	btfsc	63,3,b	;volatile
  9329  013492  0E01               	movlw	1
  9330  013494  0101               	movlb	1	; () banked
  9331  013496  6FC4               	movwf	(_now+12)& (0+255),b
  9332                           
  9333                           ; BSR set to: 1
  9334                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
  9335  013498  0100               	movlb	0	; () banked
  9336  01349A  51B8               	movf	RTCC_task@prev_halfsec& (0+255),w,b
  9337  01349C  0101               	movlb	1	; () banked
  9338  01349E  19C4               	xorwf	(_now+12)& (0+255),w,b
  9339  0134A0  B4D8               	btfsc	status,2,c
  9340  0134A2  0012               	return	
  9341                           
  9342                           ; BSR set to: 1
  9343                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
  9344  0134A4  C1C4  F0B8         	movff	_now+12,RTCC_task@prev_halfsec
  9345                           
  9346                           ;My_RTCC.c: 358: now.colon = now.halfsec;
  9347  0134A8  C1C4  F1C3         	movff	_now+12,_now+11
  9348                           
  9349                           ; BSR set to: 1
  9350                           ;My_RTCC.c: 359: time_change_flag = 1;
  9351  0134AC  0E01               	movlw	1
  9352  0134AE  0100               	movlb	0	; () banked
  9353  0134B0  6FC1               	movwf	_time_change_flag& (0+255),b
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
  9357  0134B2  0EB8               	movlw	low _now
  9358  0134B4  0100               	movlb	0	; () banked
  9359  0134B6  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  9360  0134B8  0E01               	movlw	high _now
  9361  0134BA  0100               	movlb	0	; () banked
  9362  0134BC  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  9363  0134BE  EC82  F09C         	call	_RTCC_from_RTCC	;wreg free
  9364  0134C2  0012               	return	
  9365  0134C4                     __end_of_RTCC_task:
  9366                           	opt stack 0
  9367                           tblptru	equ	0xFF8
  9368                           tblptrh	equ	0xFF7
  9369                           tblptrl	equ	0xFF6
  9370                           tablat	equ	0xFF5
  9371                           prodh	equ	0xFF4
  9372                           prodl	equ	0xFF3
  9373                           intcon	equ	0xFF2
  9374                           intcon2	equ	0xFF1
  9375                           indf0	equ	0xFEF
  9376                           postinc0	equ	0xFEE
  9377                           fsr0h	equ	0xFEA
  9378                           fsr0l	equ	0xFE9
  9379                           wreg	equ	0xFE8
  9380                           indf1	equ	0xFE7
  9381                           postinc1	equ	0xFE6
  9382                           postdec1	equ	0xFE5
  9383                           fsr1h	equ	0xFE2
  9384                           fsr1l	equ	0xFE1
  9385                           indf2	equ	0xFDF
  9386                           postinc2	equ	0xFDE
  9387                           postdec2	equ	0xFDD
  9388                           plusw2	equ	0xFDB
  9389                           fsr2h	equ	0xFDA
  9390                           fsr2l	equ	0xFD9
  9391                           status	equ	0xFD8
  9392                           
  9393 ;; *************** function _RTCC_from_RTCC *****************
  9394 ;; Defined at:
  9395 ;;		line 199 in file "../My_library/My_RTCC.c"
  9396 ;; Parameters:    Size  Location     Type
  9397 ;;  tm              2   38[BANK0 ] PTR struct .
  9398 ;;		 -> now(14), 
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;		None               void
  9403 ;; Registers used:
  9404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9413 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9414 ;;Total ram usage:        2 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:   15
  9417 ;; This function calls:
  9418 ;;		_RTCC_to_caltime
  9419 ;;		_caltime_to_epoch
  9420 ;; This function is called by:
  9421 ;;		_RTCC_init
  9422 ;;		_display_time_0802
  9423 ;;		_RTCC_task
  9424 ;;		_setup
  9425 ;;		_display_time_1602
  9426 ;;		_RTCC_adjust_time_inc
  9427 ;;		_RTCC_adjust_time_dec
  9428 ;;		_print_time
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           	psect	text45
  9433  013904                     __ptext45:
  9434                           	opt stack 0
  9435  013904                     _RTCC_from_RTCC:
  9436                           	opt stack 13
  9437                           
  9438                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
  9439                           
  9440                           ;incstack = 0
  9441  013904  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
  9442  013908  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
  9443  01390C  ECD4  F092         	call	_RTCC_to_caltime	;wreg free
  9444                           
  9445                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
  9446  013910  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
  9447  013914  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
  9448  013918  EC2D  F082         	call	_caltime_to_epoch	;wreg free
  9449  01391C  0012               	return		;funcret
  9450  01391E                     __end_of_RTCC_from_RTCC:
  9451                           	opt stack 0
  9452                           tblptru	equ	0xFF8
  9453                           tblptrh	equ	0xFF7
  9454                           tblptrl	equ	0xFF6
  9455                           tablat	equ	0xFF5
  9456                           prodh	equ	0xFF4
  9457                           prodl	equ	0xFF3
  9458                           intcon	equ	0xFF2
  9459                           intcon2	equ	0xFF1
  9460                           indf0	equ	0xFEF
  9461                           postinc0	equ	0xFEE
  9462                           fsr0h	equ	0xFEA
  9463                           fsr0l	equ	0xFE9
  9464                           wreg	equ	0xFE8
  9465                           indf1	equ	0xFE7
  9466                           postinc1	equ	0xFE6
  9467                           postdec1	equ	0xFE5
  9468                           fsr1h	equ	0xFE2
  9469                           fsr1l	equ	0xFE1
  9470                           indf2	equ	0xFDF
  9471                           postinc2	equ	0xFDE
  9472                           postdec2	equ	0xFDD
  9473                           plusw2	equ	0xFDB
  9474                           fsr2h	equ	0xFDA
  9475                           fsr2l	equ	0xFD9
  9476                           status	equ	0xFD8
  9477                           
  9478 ;; *************** function _caltime_to_epoch *****************
  9479 ;; Defined at:
  9480 ;;		line 179 in file "../My_library/My_RTCC.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  tm              2   25[BANK0 ] PTR struct .
  9483 ;;		 -> now(14), 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  month           1   37[BANK0 ] unsigned char 
  9486 ;;  month           1   32[BANK0 ] unsigned char 
  9487 ;;  year            1   31[BANK0 ] unsigned char 
  9488 ;;  epoch           4   33[BANK0 ] unsigned long 
  9489 ;; Return value:  Size  Location     Type
  9490 ;;		None               void
  9491 ;; Registers used:
  9492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9499 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9500 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9501 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9502 ;;Total ram usage:       13 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:   14
  9505 ;; This function calls:
  9506 ;;		___lmul
  9507 ;;		_month_length
  9508 ;; This function is called by:
  9509 ;;		_RTCC_from_RTCC
  9510 ;;		_RTCC_from_caltime
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text46
  9515  01045A                     __ptext46:
  9516                           	opt stack 0
  9517  01045A                     _caltime_to_epoch:
  9518                           	opt stack 13
  9519                           
  9520                           ;My_RTCC.c: 180: epoch_t epoch = 0;
  9521                           
  9522                           ;incstack = 0
  9523  01045A  0E00               	movlw	0
  9524  01045C  0100               	movlb	0	; () banked
  9525  01045E  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
  9526  010460  0E00               	movlw	0
  9527  010462  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  9528  010464  0E00               	movlw	0
  9529  010466  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  9530  010468  0E00               	movlw	0
  9531  01046A  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  9532                           
  9533                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
  9534  01046C  0E00               	movlw	0
  9535  01046E  0100               	movlb	0	; () banked
  9536  010470  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
  9537  010472  D037               	goto	l8949
  9538  010474                     l8935:
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
  9542  010474  0E01               	movlw	1
  9543  010476  0100               	movlb	0	; () banked
  9544  010478  6F85               	movwf	caltime_to_epoch@month& (0+255),b
  9545  01047A                     l8937:
  9546                           
  9547                           ; BSR set to: 0
  9548  01047A  0E0C               	movlw	12
  9549  01047C  0100               	movlb	0	; () banked
  9550  01047E  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
  9551  010480  D001               	goto	l8941
  9552  010482  D02D               	goto	l8947
  9553  010484                     l8941:
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  9557  010484  C085  F066         	movff	caltime_to_epoch@month,month_length@month
  9558  010488  0100               	movlb	0	; () banked
  9559  01048A  517F               	movf	caltime_to_epoch@year& (0+255),w,b
  9560  01048C  EC8B  F08D         	call	_month_length
  9561  010490  0100               	movlb	0	; () banked
  9562  010492  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9563  010494  0100               	movlb	0	; () banked
  9564  010496  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9565  010498  0100               	movlb	0	; () banked
  9566  01049A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9567  01049C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9568  01049E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9569  0104A0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9570  0104A2  0E80               	movlw	128
  9571  0104A4  0100               	movlb	0	; () banked
  9572  0104A6  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9573  0104A8  0E51               	movlw	81
  9574  0104AA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9575  0104AC  0E01               	movlw	1
  9576  0104AE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9577  0104B0  0E00               	movlw	0
  9578  0104B2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9579  0104B4  ECEA  F097         	call	___lmul	;wreg free
  9580  0104B8  0100               	movlb	0	; () banked
  9581  0104BA  516D               	movf	?___lmul& (0+255),w,b
  9582  0104BC  0100               	movlb	0	; () banked
  9583  0104BE  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9584  0104C0  0100               	movlb	0	; () banked
  9585  0104C2  516E               	movf	(?___lmul+1)& (0+255),w,b
  9586  0104C4  0100               	movlb	0	; () banked
  9587  0104C6  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9588  0104C8  0100               	movlb	0	; () banked
  9589  0104CA  516F               	movf	(?___lmul+2)& (0+255),w,b
  9590  0104CC  0100               	movlb	0	; () banked
  9591  0104CE  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9592  0104D0  0100               	movlb	0	; () banked
  9593  0104D2  5170               	movf	(?___lmul+3)& (0+255),w,b
  9594  0104D4  0100               	movlb	0	; () banked
  9595  0104D6  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  0104D8  0100               	movlb	0	; () banked
  9599  0104DA  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
  9600  0104DC  D7CE               	goto	l8937
  9601  0104DE                     l8947:
  9602                           
  9603                           ; BSR set to: 0
  9604  0104DE  0100               	movlb	0	; () banked
  9605  0104E0  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
  9606  0104E2                     l8949:
  9607                           
  9608                           ; BSR set to: 0
  9609  0104E2  0100               	movlb	0	; () banked
  9610  0104E4  EE20 F00A          	lfsr	2,10
  9611  0104E8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9612  0104EA  26D9               	addwf	fsr2l,f,c
  9613  0104EC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9614  0104EE  22DA               	addwfc	fsr2h,f,c
  9615  0104F0  50DE               	movf	postinc2,w,c
  9616  0104F2  0100               	movlb	0	; () banked
  9617  0104F4  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
  9618  0104F6  A0D8               	btfss	status,0,c
  9619  0104F8  D7BD               	goto	l8935
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;My_RTCC.c: 184: }
  9623                           ;My_RTCC.c: 185: }
  9624                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
  9625                           
  9626                           ; BSR set to: 0
  9627  0104FA  0E01               	movlw	1
  9628  0104FC  0100               	movlb	0	; () banked
  9629  0104FE  6F80               	movwf	caltime_to_epoch@month_3879& (0+255),b
  9630  010500  D032               	goto	l8957
  9631  010502                     l8953:
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
  9635  010502  C080  F066         	movff	caltime_to_epoch@month_3879,month_length@month
  9636  010506  0100               	movlb	0	; () banked
  9637  010508  EE20 F00A          	lfsr	2,10
  9638  01050C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9639  01050E  26D9               	addwf	fsr2l,f,c
  9640  010510  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9641  010512  22DA               	addwfc	fsr2h,f,c
  9642  010514  50DF               	movf	indf2,w,c
  9643  010516  EC8B  F08D         	call	_month_length
  9644  01051A  0100               	movlb	0	; () banked
  9645  01051C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9646  01051E  0100               	movlb	0	; () banked
  9647  010520  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9648  010522  0100               	movlb	0	; () banked
  9649  010524  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9650  010526  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9651  010528  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9652  01052A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9653  01052C  0E80               	movlw	128
  9654  01052E  0100               	movlb	0	; () banked
  9655  010530  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9656  010532  0E51               	movlw	81
  9657  010534  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9658  010536  0E01               	movlw	1
  9659  010538  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9660  01053A  0E00               	movlw	0
  9661  01053C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9662  01053E  ECEA  F097         	call	___lmul	;wreg free
  9663  010542  0100               	movlb	0	; () banked
  9664  010544  516D               	movf	?___lmul& (0+255),w,b
  9665  010546  0100               	movlb	0	; () banked
  9666  010548  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9667  01054A  0100               	movlb	0	; () banked
  9668  01054C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9669  01054E  0100               	movlb	0	; () banked
  9670  010550  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9671  010552  0100               	movlb	0	; () banked
  9672  010554  516F               	movf	(?___lmul+2)& (0+255),w,b
  9673  010556  0100               	movlb	0	; () banked
  9674  010558  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9675  01055A  0100               	movlb	0	; () banked
  9676  01055C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9677  01055E  0100               	movlb	0	; () banked
  9678  010560  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9679                           
  9680                           ; BSR set to: 0
  9681  010562  0100               	movlb	0	; () banked
  9682  010564  2B80               	incf	caltime_to_epoch@month_3879& (0+255),f,b
  9683  010566                     l8957:
  9684                           
  9685                           ; BSR set to: 0
  9686  010566  0100               	movlb	0	; () banked
  9687  010568  EE20 F009          	lfsr	2,9
  9688  01056C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9689  01056E  26D9               	addwf	fsr2l,f,c
  9690  010570  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9691  010572  22DA               	addwfc	fsr2h,f,c
  9692  010574  50DE               	movf	postinc2,w,c
  9693  010576  0100               	movlb	0	; () banked
  9694  010578  5D80               	subwf	caltime_to_epoch@month_3879& (0+255),w,b
  9695  01057A  A0D8               	btfss	status,0,c
  9696  01057C  D7C2               	goto	l8953
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;My_RTCC.c: 188: }
  9700                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
  9701                           
  9702                           ; BSR set to: 0
  9703  01057E  0EFF               	movlw	255
  9704  010580  0100               	movlb	0	; () banked
  9705  010582  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9706  010584  0EFF               	movlw	255
  9707  010586  0100               	movlb	0	; () banked
  9708  010588  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  9709  01058A  0100               	movlb	0	; () banked
  9710  01058C  EE20 F008          	lfsr	2,8
  9711  010590  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9712  010592  26D9               	addwf	fsr2l,f,c
  9713  010594  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9714  010596  22DA               	addwfc	fsr2h,f,c
  9715  010598  50DF               	movf	indf2,w,c
  9716  01059A  0100               	movlb	0	; () banked
  9717  01059C  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  9718  01059E  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  9719  0105A0  0100               	movlb	0	; () banked
  9720  0105A2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9721  0105A4  0100               	movlb	0	; () banked
  9722  0105A6  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  9723  0105A8  0100               	movlb	0	; () banked
  9724  0105AA  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  9725  0105AC  0100               	movlb	0	; () banked
  9726  0105AE  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  9727  0105B0  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  9728  0105B4  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  9729  0105B8  0100               	movlb	0	; () banked
  9730  0105BA  0E00               	movlw	0
  9731  0105BC  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  9732  0105BE  0EFF               	movlw	-1
  9733  0105C0  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  9734  0105C2  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  9735  0105C4  0E80               	movlw	128
  9736  0105C6  0100               	movlb	0	; () banked
  9737  0105C8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9738  0105CA  0E51               	movlw	81
  9739  0105CC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9740  0105CE  0E01               	movlw	1
  9741  0105D0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9742  0105D2  0E00               	movlw	0
  9743  0105D4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9744  0105D6  ECEA  F097         	call	___lmul	;wreg free
  9745  0105DA  0100               	movlb	0	; () banked
  9746  0105DC  516D               	movf	?___lmul& (0+255),w,b
  9747  0105DE  0100               	movlb	0	; () banked
  9748  0105E0  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9749  0105E2  0100               	movlb	0	; () banked
  9750  0105E4  516E               	movf	(?___lmul+1)& (0+255),w,b
  9751  0105E6  0100               	movlb	0	; () banked
  9752  0105E8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9753  0105EA  0100               	movlb	0	; () banked
  9754  0105EC  516F               	movf	(?___lmul+2)& (0+255),w,b
  9755  0105EE  0100               	movlb	0	; () banked
  9756  0105F0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9757  0105F2  0100               	movlb	0	; () banked
  9758  0105F4  5170               	movf	(?___lmul+3)& (0+255),w,b
  9759  0105F6  0100               	movlb	0	; () banked
  9760  0105F8  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9761                           
  9762                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
  9763  0105FA  0100               	movlb	0	; () banked
  9764  0105FC  EE20 F006          	lfsr	2,6
  9765  010600  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9766  010602  26D9               	addwf	fsr2l,f,c
  9767  010604  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9768  010606  22DA               	addwfc	fsr2h,f,c
  9769  010608  50DF               	movf	indf2,w,c
  9770  01060A  0100               	movlb	0	; () banked
  9771  01060C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9772  01060E  0100               	movlb	0	; () banked
  9773  010610  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9774  010612  0100               	movlb	0	; () banked
  9775  010614  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9776  010616  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9777  010618  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9778  01061A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9779  01061C  0E10               	movlw	16
  9780  01061E  0100               	movlb	0	; () banked
  9781  010620  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9782  010622  0E0E               	movlw	14
  9783  010624  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9784  010626  0E00               	movlw	0
  9785  010628  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9786  01062A  0E00               	movlw	0
  9787  01062C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9788  01062E  ECEA  F097         	call	___lmul	;wreg free
  9789  010632  0100               	movlb	0	; () banked
  9790  010634  516D               	movf	?___lmul& (0+255),w,b
  9791  010636  0100               	movlb	0	; () banked
  9792  010638  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9793  01063A  0100               	movlb	0	; () banked
  9794  01063C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9795  01063E  0100               	movlb	0	; () banked
  9796  010640  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9797  010642  0100               	movlb	0	; () banked
  9798  010644  516F               	movf	(?___lmul+2)& (0+255),w,b
  9799  010646  0100               	movlb	0	; () banked
  9800  010648  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9801  01064A  0100               	movlb	0	; () banked
  9802  01064C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9803  01064E  0100               	movlb	0	; () banked
  9804  010650  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9805                           
  9806                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
  9807  010652  0100               	movlb	0	; () banked
  9808  010654  EE20 F005          	lfsr	2,5
  9809  010658  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9810  01065A  26D9               	addwf	fsr2l,f,c
  9811  01065C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9812  01065E  22DA               	addwfc	fsr2h,f,c
  9813  010660  50DF               	movf	indf2,w,c
  9814  010662  0100               	movlb	0	; () banked
  9815  010664  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9816  010666  0100               	movlb	0	; () banked
  9817  010668  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9818  01066A  0100               	movlb	0	; () banked
  9819  01066C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9820  01066E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9821  010670  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9822  010672  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9823  010674  0E3C               	movlw	60
  9824  010676  0100               	movlb	0	; () banked
  9825  010678  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9826  01067A  0E00               	movlw	0
  9827  01067C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9828  01067E  0E00               	movlw	0
  9829  010680  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9830  010682  0E00               	movlw	0
  9831  010684  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9832  010686  ECEA  F097         	call	___lmul	;wreg free
  9833  01068A  0100               	movlb	0	; () banked
  9834  01068C  516D               	movf	?___lmul& (0+255),w,b
  9835  01068E  0100               	movlb	0	; () banked
  9836  010690  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9837  010692  0100               	movlb	0	; () banked
  9838  010694  516E               	movf	(?___lmul+1)& (0+255),w,b
  9839  010696  0100               	movlb	0	; () banked
  9840  010698  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9841  01069A  0100               	movlb	0	; () banked
  9842  01069C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9843  01069E  0100               	movlb	0	; () banked
  9844  0106A0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9845  0106A2  0100               	movlb	0	; () banked
  9846  0106A4  5170               	movf	(?___lmul+3)& (0+255),w,b
  9847  0106A6  0100               	movlb	0	; () banked
  9848  0106A8  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;My_RTCC.c: 192: epoch += tm->ss;
  9852  0106AA  0100               	movlb	0	; () banked
  9853  0106AC  EE20 F004          	lfsr	2,4
  9854  0106B0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9855  0106B2  26D9               	addwf	fsr2l,f,c
  9856  0106B4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9857  0106B6  22DA               	addwfc	fsr2h,f,c
  9858  0106B8  50DF               	movf	indf2,w,c
  9859  0106BA  0100               	movlb	0	; () banked
  9860  0106BC  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9861  0106BE  0100               	movlb	0	; () banked
  9862  0106C0  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9863  0106C2  0100               	movlb	0	; () banked
  9864  0106C4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9865  0106C6  0E00               	movlw	0
  9866  0106C8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9867  0106CA  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9868  0106CC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;My_RTCC.c: 194: tm->epoch = epoch;
  9872  0106CE  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
  9873  0106D2  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
  9874  0106D6  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  9875  0106DA  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  9876  0106DE  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  9877  0106E2  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  9878                           
  9879                           ; BSR set to: 0
  9880  0106E6  0012               	return		;funcret
  9881  0106E8                     __end_of_caltime_to_epoch:
  9882                           	opt stack 0
  9883                           tblptru	equ	0xFF8
  9884                           tblptrh	equ	0xFF7
  9885                           tblptrl	equ	0xFF6
  9886                           tablat	equ	0xFF5
  9887                           prodh	equ	0xFF4
  9888                           prodl	equ	0xFF3
  9889                           intcon	equ	0xFF2
  9890                           intcon2	equ	0xFF1
  9891                           indf0	equ	0xFEF
  9892                           postinc0	equ	0xFEE
  9893                           fsr0h	equ	0xFEA
  9894                           fsr0l	equ	0xFE9
  9895                           wreg	equ	0xFE8
  9896                           indf1	equ	0xFE7
  9897                           postinc1	equ	0xFE6
  9898                           postdec1	equ	0xFE5
  9899                           fsr1h	equ	0xFE2
  9900                           fsr1l	equ	0xFE1
  9901                           indf2	equ	0xFDF
  9902                           postinc2	equ	0xFDE
  9903                           postdec2	equ	0xFDD
  9904                           plusw2	equ	0xFDB
  9905                           fsr2h	equ	0xFDA
  9906                           fsr2l	equ	0xFD9
  9907                           status	equ	0xFD8
  9908                           
  9909 ;; *************** function _month_length *****************
  9910 ;; Defined at:
  9911 ;;		line 55 in file "../My_library/My_RTCC.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  year            1    wreg     unsigned char 
  9914 ;;  month           1    6[BANK0 ] unsigned char 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;  year            1   11[BANK0 ] unsigned char 
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  1    wreg      unsigned char 
  9919 ;; Registers used:
  9920 ;;		wreg, status,2, status,0, cstack
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9926 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9929 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9930 ;;Total ram usage:        6 bytes
  9931 ;; Hardware stack levels used:    1
  9932 ;; Hardware stack levels required when called:   13
  9933 ;; This function calls:
  9934 ;;		___awmod
  9935 ;; This function is called by:
  9936 ;;		_epoch_to_caltime
  9937 ;;		_caltime_to_epoch
  9938 ;;		_RTCC_adjust_time_inc
  9939 ;;		_RTCC_adjust_time_dec
  9940 ;;		_terminal_time
  9941 ;; This function uses a non-reentrant model
  9942 ;;
  9943                           
  9944                           	psect	text47
  9945  011B16                     __ptext47:
  9946                           	opt stack 0
  9947  011B16                     _month_length:
  9948                           	opt stack 13
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;incstack = 0
  9952                           ;month_length@year stored from wreg
  9953  011B16  0100               	movlb	0	; () banked
  9954  011B18  6F6B               	movwf	month_length@year& (0+255),b
  9955                           
  9956                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
  9957  011B1A  0E02               	movlw	2
  9958  011B1C  0100               	movlb	0	; () banked
  9959  011B1E  1966               	xorwf	month_length@month& (0+255),w,b
  9960  011B20  A4D8               	btfss	status,2,c
  9961  011B22  D03E               	goto	l8641
  9962                           
  9963                           ; BSR set to: 0
  9964  011B24  C06B  F060         	movff	month_length@year,___awmod@dividend
  9965  011B28  0100               	movlb	0	; () banked
  9966  011B2A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9967  011B2C  0E00               	movlw	0
  9968  011B2E  0100               	movlb	0	; () banked
  9969  011B30  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9970  011B32  0E64               	movlw	100
  9971  011B34  6F62               	movwf	___awmod@divisor& (0+255),b
  9972  011B36  ECA8  F095         	call	___awmod	;wreg free
  9973  011B3A  0100               	movlb	0	; () banked
  9974  011B3C  5160               	movf	?___awmod& (0+255),w,b
  9975  011B3E  0100               	movlb	0	; () banked
  9976  011B40  1161               	iorwf	(?___awmod+1)& (0+255),w,b
  9977  011B42  A4D8               	btfss	status,2,c
  9978  011B44  D002               	goto	u8190
  9979  011B46  0E01               	movlw	1
  9980  011B48  D001               	goto	u8200
  9981  011B4A                     u8190:
  9982  011B4A  0E00               	movlw	0
  9983  011B4C                     u8200:
  9984  011B4C  0800               	sublw	0
  9985  011B4E  0100               	movlb	0	; () banked
  9986  011B50  6F67               	movwf	??_month_length& (0+255),b
  9987  011B52  C06B  F060         	movff	month_length@year,___awmod@dividend
  9988  011B56  0100               	movlb	0	; () banked
  9989  011B58  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9990  011B5A  0E01               	movlw	1
  9991  011B5C  0100               	movlb	0	; () banked
  9992  011B5E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9993  011B60  0E90               	movlw	144
  9994  011B62  6F62               	movwf	___awmod@divisor& (0+255),b
  9995  011B64  ECA8  F095         	call	___awmod	;wreg free
  9996  011B68  0100               	movlb	0	; () banked
  9997  011B6A  5160               	movf	?___awmod& (0+255),w,b
  9998  011B6C  0100               	movlb	0	; () banked
  9999  011B6E  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 10000  011B70  A4D8               	btfss	status,2,c
 10001  011B72  D004               	goto	u8210
 10002  011B74  0100               	movlb	0	; () banked
 10003  011B76  6B68               	clrf	(??_month_length+1)& (0+255),b
 10004  011B78  2B68               	incf	(??_month_length+1)& (0+255),f,b
 10005  011B7A  D002               	goto	u8228
 10006  011B7C                     u8210:
 10007  011B7C  0100               	movlb	0	; () banked
 10008  011B7E  6B68               	clrf	(??_month_length+1)& (0+255),b
 10009  011B80                     u8228:
 10010  011B80  C06B  F069         	movff	month_length@year,??_month_length+2
 10011  011B84  0E03               	movlw	3
 10012  011B86  0100               	movlb	0	; () banked
 10013  011B88  1769               	andwf	(??_month_length+2)& (0+255),f,b
 10014  011B8A  A4D8               	btfss	status,2,c
 10015  011B8C  D002               	goto	u8230
 10016  011B8E  0E01               	movlw	1
 10017  011B90  D001               	goto	u8240
 10018  011B92                     u8230:
 10019  011B92  0E00               	movlw	0
 10020  011B94                     u8240:
 10021  011B94  0100               	movlb	0	; () banked
 10022  011B96  2568               	addwf	(??_month_length+1)& (0+255),w,b
 10023  011B98  0100               	movlb	0	; () banked
 10024  011B9A  2567               	addwf	??_month_length& (0+255),w,b
 10025  011B9C  0F1C               	addlw	28
 10026                           
 10027                           ; BSR set to: 0
 10028                           
 10029                           ; BSR set to: 0
 10030  011B9E  0012               	return	
 10031  011BA0                     l8641:
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 10035  011BA0  0100               	movlb	0	; () banked
 10036  011BA2  5166               	movf	month_length@month& (0+255),w,b
 10037  011BA4  0B01               	andlw	1
 10038  011BA6  0100               	movlb	0	; () banked
 10039  011BA8  6F67               	movwf	??_month_length& (0+255),b
 10040  011BAA  6B68               	clrf	(??_month_length+1)& (0+255),b
 10041  011BAC  0100               	movlb	0	; () banked
 10042  011BAE  1F67               	comf	??_month_length& (0+255),f,b
 10043  011BB0  1F68               	comf	(??_month_length+1)& (0+255),f,b
 10044  011BB2  4B67               	infsnz	??_month_length& (0+255),f,b
 10045  011BB4  2B68               	incf	(??_month_length+1)& (0+255),f,b
 10046  011BB6  0100               	movlb	0	; () banked
 10047  011BB8  5166               	movf	month_length@month& (0+255),w,b
 10048  011BBA  0100               	movlb	0	; () banked
 10049  011BBC  6F69               	movwf	(??_month_length+2)& (0+255),b
 10050  011BBE  6B6A               	clrf	(??_month_length+3)& (0+255),b
 10051  011BC0  0100               	movlb	0	; () banked
 10052  011BC2  5167               	movf	??_month_length& (0+255),w,b
 10053  011BC4  0100               	movlb	0	; () banked
 10054  011BC6  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 10055  011BC8  0100               	movlb	0	; () banked
 10056  011BCA  5168               	movf	(??_month_length+1)& (0+255),w,b
 10057  011BCC  0100               	movlb	0	; () banked
 10058  011BCE  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 10059  011BD0  0E0D               	movlw	13
 10060  011BD2  0100               	movlb	0	; () banked
 10061  011BD4  1769               	andwf	(??_month_length+2)& (0+255),f,b
 10062  011BD6  0E00               	movlw	0
 10063  011BD8  176A               	andwf	(??_month_length+3)& (0+255),f,b
 10064  011BDA  0E04               	movlw	4
 10065  011BDC  0100               	movlb	0	; () banked
 10066  011BDE  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 10067  011BE0  0100               	movlb	0	; () banked
 10068  011BE2  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 10069  011BE4  A4D8               	btfss	status,2,c
 10070  011BE6  D002               	goto	u8250
 10071  011BE8  0E01               	movlw	1
 10072  011BEA  D001               	goto	u8260
 10073  011BEC                     u8250:
 10074  011BEC  0E00               	movlw	0
 10075  011BEE                     u8260:
 10076  011BEE  0800               	sublw	0
 10077  011BF0  0F1F               	addlw	31
 10078                           
 10079                           ; BSR set to: 0
 10080  011BF2  0012               	return	
 10081  011BF4                     __end_of_month_length:
 10082                           	opt stack 0
 10083                           tblptru	equ	0xFF8
 10084                           tblptrh	equ	0xFF7
 10085                           tblptrl	equ	0xFF6
 10086                           tablat	equ	0xFF5
 10087                           prodh	equ	0xFF4
 10088                           prodl	equ	0xFF3
 10089                           intcon	equ	0xFF2
 10090                           intcon2	equ	0xFF1
 10091                           indf0	equ	0xFEF
 10092                           postinc0	equ	0xFEE
 10093                           fsr0h	equ	0xFEA
 10094                           fsr0l	equ	0xFE9
 10095                           wreg	equ	0xFE8
 10096                           indf1	equ	0xFE7
 10097                           postinc1	equ	0xFE6
 10098                           postdec1	equ	0xFE5
 10099                           fsr1h	equ	0xFE2
 10100                           fsr1l	equ	0xFE1
 10101                           indf2	equ	0xFDF
 10102                           postinc2	equ	0xFDE
 10103                           postdec2	equ	0xFDD
 10104                           plusw2	equ	0xFDB
 10105                           fsr2h	equ	0xFDA
 10106                           fsr2l	equ	0xFD9
 10107                           status	equ	0xFD8
 10108                           
 10109 ;; *************** function ___awmod *****************
 10110 ;; Defined at:
 10111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;  dividend        2    0[BANK0 ] int 
 10114 ;;  divisor         2    2[BANK0 ] int 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;  sign            1    5[BANK0 ] unsigned char 
 10117 ;;  counter         1    4[BANK0 ] unsigned char 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  2    0[BANK0 ] int 
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10127 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10128 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10130 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10131 ;;Total ram usage:        6 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:   12
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_month_length
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text48
 10142  012B50                     __ptext48:
 10143                           	opt stack 0
 10144  012B50                     ___awmod:
 10145                           	opt stack 13
 10146                           
 10147                           ; BSR set to: 0
 10148                           ;incstack = 0
 10149  012B50  0E00               	movlw	0
 10150  012B52  0100               	movlb	0	; () banked
 10151  012B54  6F65               	movwf	___awmod@sign& (0+255),b
 10152                           
 10153                           ; BSR set to: 0
 10154  012B56  0100               	movlb	0	; () banked
 10155  012B58  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10156  012B5A  D008               	goto	l8519
 10157                           
 10158                           ; BSR set to: 0
 10159  012B5C  0100               	movlb	0	; () banked
 10160  012B5E  6D60               	negf	___awmod@dividend& (0+255),b
 10161  012B60  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10162  012B62  B0D8               	btfsc	status,0,c
 10163  012B64  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10164                           
 10165                           ; BSR set to: 0
 10166  012B66  0E01               	movlw	1
 10167  012B68  0100               	movlb	0	; () banked
 10168  012B6A  6F65               	movwf	___awmod@sign& (0+255),b
 10169  012B6C                     l8519:
 10170                           
 10171                           ; BSR set to: 0
 10172  012B6C  0100               	movlb	0	; () banked
 10173  012B6E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10174  012B70  D005               	goto	l8523
 10175                           
 10176                           ; BSR set to: 0
 10177  012B72  0100               	movlb	0	; () banked
 10178  012B74  6D62               	negf	___awmod@divisor& (0+255),b
 10179  012B76  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 10180  012B78  B0D8               	btfsc	status,0,c
 10181  012B7A  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 10182  012B7C                     l8523:
 10183                           
 10184                           ; BSR set to: 0
 10185  012B7C  0100               	movlb	0	; () banked
 10186  012B7E  5162               	movf	___awmod@divisor& (0+255),w,b
 10187  012B80  0100               	movlb	0	; () banked
 10188  012B82  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10189  012B84  B4D8               	btfsc	status,2,c
 10190  012B86  D026               	goto	l8539
 10191                           
 10192                           ; BSR set to: 0
 10193  012B88  0E01               	movlw	1
 10194  012B8A  0100               	movlb	0	; () banked
 10195  012B8C  6F64               	movwf	___awmod@counter& (0+255),b
 10196  012B8E  D006               	goto	l8529
 10197  012B90                     l8527:
 10198                           
 10199                           ; BSR set to: 0
 10200  012B90  0100               	movlb	0	; () banked
 10201  012B92  90D8               	bcf	status,0,c
 10202  012B94  3762               	rlcf	___awmod@divisor& (0+255),f,b
 10203  012B96  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10204  012B98  0100               	movlb	0	; () banked
 10205  012B9A  2B64               	incf	___awmod@counter& (0+255),f,b
 10206  012B9C                     l8529:
 10207                           
 10208                           ; BSR set to: 0
 10209  012B9C  0100               	movlb	0	; () banked
 10210  012B9E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10211  012BA0  D7F7               	goto	l8527
 10212  012BA2                     l8531:
 10213                           
 10214                           ; BSR set to: 0
 10215  012BA2  0100               	movlb	0	; () banked
 10216  012BA4  5162               	movf	___awmod@divisor& (0+255),w,b
 10217  012BA6  0100               	movlb	0	; () banked
 10218  012BA8  5D60               	subwf	___awmod@dividend& (0+255),w,b
 10219  012BAA  0100               	movlb	0	; () banked
 10220  012BAC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 10221  012BAE  0100               	movlb	0	; () banked
 10222  012BB0  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10223  012BB2  A0D8               	btfss	status,0,c
 10224  012BB4  D008               	goto	l8535
 10225                           
 10226                           ; BSR set to: 0
 10227  012BB6  0100               	movlb	0	; () banked
 10228  012BB8  5162               	movf	___awmod@divisor& (0+255),w,b
 10229  012BBA  0100               	movlb	0	; () banked
 10230  012BBC  5F60               	subwf	___awmod@dividend& (0+255),f,b
 10231  012BBE  0100               	movlb	0	; () banked
 10232  012BC0  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 10233  012BC2  0100               	movlb	0	; () banked
 10234  012BC4  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10235  012BC6                     l8535:
 10236                           
 10237                           ; BSR set to: 0
 10238  012BC6  0100               	movlb	0	; () banked
 10239  012BC8  90D8               	bcf	status,0,c
 10240  012BCA  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10241  012BCC  3362               	rrcf	___awmod@divisor& (0+255),f,b
 10242                           
 10243                           ; BSR set to: 0
 10244  012BCE  0100               	movlb	0	; () banked
 10245  012BD0  2F64               	decfsz	___awmod@counter& (0+255),f,b
 10246  012BD2  D7E7               	goto	l8531
 10247  012BD4                     l8539:
 10248                           
 10249                           ; BSR set to: 0
 10250  012BD4  0100               	movlb	0	; () banked
 10251  012BD6  5165               	movf	___awmod@sign& (0+255),w,b
 10252  012BD8  0100               	movlb	0	; () banked
 10253  012BDA  B4D8               	btfsc	status,2,c
 10254  012BDC  D005               	goto	l8543
 10255                           
 10256                           ; BSR set to: 0
 10257  012BDE  0100               	movlb	0	; () banked
 10258  012BE0  6D60               	negf	___awmod@dividend& (0+255),b
 10259  012BE2  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10260  012BE4  B0D8               	btfsc	status,0,c
 10261  012BE6  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10262  012BE8                     l8543:
 10263                           
 10264                           ; BSR set to: 0
 10265  012BE8  C060  F060         	movff	___awmod@dividend,?___awmod
 10266  012BEC  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 10267  012BF0  0012               	return	
 10268  012BF2                     __end_of___awmod:
 10269                           	opt stack 0
 10270                           tblptru	equ	0xFF8
 10271                           tblptrh	equ	0xFF7
 10272                           tblptrl	equ	0xFF6
 10273                           tablat	equ	0xFF5
 10274                           prodh	equ	0xFF4
 10275                           prodl	equ	0xFF3
 10276                           intcon	equ	0xFF2
 10277                           intcon2	equ	0xFF1
 10278                           indf0	equ	0xFEF
 10279                           postinc0	equ	0xFEE
 10280                           fsr0h	equ	0xFEA
 10281                           fsr0l	equ	0xFE9
 10282                           wreg	equ	0xFE8
 10283                           indf1	equ	0xFE7
 10284                           postinc1	equ	0xFE6
 10285                           postdec1	equ	0xFE5
 10286                           fsr1h	equ	0xFE2
 10287                           fsr1l	equ	0xFE1
 10288                           indf2	equ	0xFDF
 10289                           postinc2	equ	0xFDE
 10290                           postdec2	equ	0xFDD
 10291                           plusw2	equ	0xFDB
 10292                           fsr2h	equ	0xFDA
 10293                           fsr2l	equ	0xFD9
 10294                           status	equ	0xFD8
 10295                           
 10296 ;; *************** function ___lmul *****************
 10297 ;; Defined at:
 10298 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  multiplier      4   13[BANK0 ] unsigned long 
 10301 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  product         4   21[BANK0 ] unsigned long 
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  4   13[BANK0 ] unsigned long 
 10306 ;; Registers used:
 10307 ;;		wreg, status,2, status,0
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10313 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10314 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10316 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10317 ;;Total ram usage:       12 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:   12
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_get_quot_rem
 10324 ;;		_caltime_to_epoch
 10325 ;;		_RTCC_adjust_time_inc
 10326 ;;		_RTCC_adjust_time_dec
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           	psect	text49
 10331  012FD4                     __ptext49:
 10332                           	opt stack 0
 10333  012FD4                     ___lmul:
 10334                           	opt stack 13
 10335                           
 10336                           ; BSR set to: 0
 10337                           ;incstack = 0
 10338  012FD4  0E00               	movlw	0
 10339  012FD6  0100               	movlb	0	; () banked
 10340  012FD8  6F75               	movwf	___lmul@product& (0+255),b
 10341  012FDA  0E00               	movlw	0
 10342  012FDC  6F76               	movwf	(___lmul@product+1)& (0+255),b
 10343  012FDE  0E00               	movlw	0
 10344  012FE0  6F77               	movwf	(___lmul@product+2)& (0+255),b
 10345  012FE2  0E00               	movlw	0
 10346  012FE4  6F78               	movwf	(___lmul@product+3)& (0+255),b
 10347  012FE6                     l8459:
 10348                           
 10349                           ; BSR set to: 0
 10350  012FE6  0100               	movlb	0	; () banked
 10351  012FE8  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 10352  012FEA  D010               	goto	l8463
 10353                           
 10354                           ; BSR set to: 0
 10355  012FEC  0100               	movlb	0	; () banked
 10356  012FEE  5171               	movf	___lmul@multiplicand& (0+255),w,b
 10357  012FF0  0100               	movlb	0	; () banked
 10358  012FF2  2775               	addwf	___lmul@product& (0+255),f,b
 10359  012FF4  0100               	movlb	0	; () banked
 10360  012FF6  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 10361  012FF8  0100               	movlb	0	; () banked
 10362  012FFA  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 10363  012FFC  0100               	movlb	0	; () banked
 10364  012FFE  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 10365  013000  0100               	movlb	0	; () banked
 10366  013002  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 10367  013004  0100               	movlb	0	; () banked
 10368  013006  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 10369  013008  0100               	movlb	0	; () banked
 10370  01300A  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 10371  01300C                     l8463:
 10372                           
 10373                           ; BSR set to: 0
 10374  01300C  0100               	movlb	0	; () banked
 10375  01300E  90D8               	bcf	status,0,c
 10376  013010  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 10377  013012  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 10378  013014  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 10379  013016  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 10380                           
 10381                           ; BSR set to: 0
 10382  013018  0100               	movlb	0	; () banked
 10383  01301A  90D8               	bcf	status,0,c
 10384  01301C  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 10385  01301E  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 10386  013020  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 10387  013022  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 10388  013024  0100               	movlb	0	; () banked
 10389  013026  516D               	movf	___lmul@multiplier& (0+255),w,b
 10390  013028  0100               	movlb	0	; () banked
 10391  01302A  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 10392  01302C  0100               	movlb	0	; () banked
 10393  01302E  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 10394  013030  0100               	movlb	0	; () banked
 10395  013032  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 10396  013034  A4D8               	btfss	status,2,c
 10397  013036  D7D7               	goto	l8459
 10398                           
 10399                           ; BSR set to: 0
 10400  013038  C075  F06D         	movff	___lmul@product,?___lmul
 10401  01303C  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 10402  013040  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 10403  013044  C078  F070         	movff	___lmul@product+3,?___lmul+3
 10404                           
 10405                           ; BSR set to: 0
 10406  013048  0012               	return		;funcret
 10407  01304A                     __end_of___lmul:
 10408                           	opt stack 0
 10409                           tblptru	equ	0xFF8
 10410                           tblptrh	equ	0xFF7
 10411                           tblptrl	equ	0xFF6
 10412                           tablat	equ	0xFF5
 10413                           prodh	equ	0xFF4
 10414                           prodl	equ	0xFF3
 10415                           intcon	equ	0xFF2
 10416                           intcon2	equ	0xFF1
 10417                           indf0	equ	0xFEF
 10418                           postinc0	equ	0xFEE
 10419                           fsr0h	equ	0xFEA
 10420                           fsr0l	equ	0xFE9
 10421                           wreg	equ	0xFE8
 10422                           indf1	equ	0xFE7
 10423                           postinc1	equ	0xFE6
 10424                           postdec1	equ	0xFE5
 10425                           fsr1h	equ	0xFE2
 10426                           fsr1l	equ	0xFE1
 10427                           indf2	equ	0xFDF
 10428                           postinc2	equ	0xFDE
 10429                           postdec2	equ	0xFDD
 10430                           plusw2	equ	0xFDB
 10431                           fsr2h	equ	0xFDA
 10432                           fsr2l	equ	0xFD9
 10433                           status	equ	0xFD8
 10434                           
 10435 ;; *************** function _RTCC_to_caltime *****************
 10436 ;; Defined at:
 10437 ;;		line 89 in file "../My_library/My_RTCC.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;  tm              2    2[BANK0 ] PTR struct .
 10440 ;;		 -> now(14), 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  dumy            1    4[BANK0 ] unsigned char 
 10443 ;; Return value:  Size  Location     Type
 10444 ;;		None               void
 10445 ;; Registers used:
 10446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10447 ;; Tracked objects:
 10448 ;;		On entry : 0/0
 10449 ;;		On exit  : 0/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10452 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10453 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10455 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10456 ;;Total ram usage:        3 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:   13
 10459 ;; This function calls:
 10460 ;;		_x_to_d
 10461 ;; This function is called by:
 10462 ;;		_RTCC_from_RTCC
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           	psect	text50
 10467  0125A8                     __ptext50:
 10468                           	opt stack 0
 10469  0125A8                     _RTCC_to_caltime:
 10470                           	opt stack 14
 10471  0125A8                     l1031:
 10472  0125A8  010F               	movlb	15	; () banked
 10473  0125AA  B93F               	btfsc	63,4,b	;volatile
 10474  0125AC  D7FD               	goto	l1031
 10475                           
 10476                           ; BSR set to: 15
 10477                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 10478  0125AE  010F               	movlb	15	; () banked
 10479  0125B0  813F               	bsf	63,0,b	;volatile
 10480                           
 10481                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 10482  0125B2  010F               	movlb	15	; () banked
 10483  0125B4  833F               	bsf	63,1,b	;volatile
 10484                           
 10485                           ; BSR set to: 15
 10486                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 10487  0125B6  0100               	movlb	0	; () banked
 10488  0125B8  EE20 F00A          	lfsr	2,10
 10489  0125BC  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10490  0125BE  26D9               	addwf	fsr2l,f,c
 10491  0125C0  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10492  0125C2  22DA               	addwfc	fsr2h,f,c
 10493  0125C4  010F               	movlb	15	; () banked
 10494  0125C6  513A               	movf	58,w,b	;volatile
 10495  0125C8  EC56  F09C         	call	_x_to_d
 10496  0125CC  6EDF               	movwf	indf2,c
 10497                           
 10498                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 10499  0125CE  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 10500                           
 10501                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 10502  0125D2  0100               	movlb	0	; () banked
 10503  0125D4  EE20 F008          	lfsr	2,8
 10504  0125D8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10505  0125DA  26D9               	addwf	fsr2l,f,c
 10506  0125DC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10507  0125DE  22DA               	addwfc	fsr2h,f,c
 10508  0125E0  010F               	movlb	15	; () banked
 10509  0125E2  513A               	movf	58,w,b	;volatile
 10510  0125E4  EC56  F09C         	call	_x_to_d
 10511  0125E8  6EDF               	movwf	indf2,c
 10512                           
 10513                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 10514  0125EA  0100               	movlb	0	; () banked
 10515  0125EC  EE20 F009          	lfsr	2,9
 10516  0125F0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10517  0125F2  26D9               	addwf	fsr2l,f,c
 10518  0125F4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10519  0125F6  22DA               	addwfc	fsr2h,f,c
 10520  0125F8  010F               	movlb	15	; () banked
 10521  0125FA  513B               	movf	59,w,b	;volatile
 10522  0125FC  EC56  F09C         	call	_x_to_d
 10523  012600  6EDF               	movwf	indf2,c
 10524                           
 10525                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 10526  012602  0100               	movlb	0	; () banked
 10527  012604  EE20 F006          	lfsr	2,6
 10528  012608  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10529  01260A  26D9               	addwf	fsr2l,f,c
 10530  01260C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10531  01260E  22DA               	addwfc	fsr2h,f,c
 10532  012610  010F               	movlb	15	; () banked
 10533  012612  513A               	movf	58,w,b	;volatile
 10534  012614  EC56  F09C         	call	_x_to_d
 10535  012618  6EDF               	movwf	indf2,c
 10536                           
 10537                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 10538  01261A  0100               	movlb	0	; () banked
 10539  01261C  EE20 F007          	lfsr	2,7
 10540  012620  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10541  012622  26D9               	addwf	fsr2l,f,c
 10542  012624  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10543  012626  22DA               	addwfc	fsr2h,f,c
 10544  012628  010F               	movlb	15	; () banked
 10545  01262A  513B               	movf	59,w,b	;volatile
 10546  01262C  EC56  F09C         	call	_x_to_d
 10547  012630  6EDF               	movwf	indf2,c
 10548                           
 10549                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 10550  012632  0100               	movlb	0	; () banked
 10551  012634  EE20 F004          	lfsr	2,4
 10552  012638  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10553  01263A  26D9               	addwf	fsr2l,f,c
 10554  01263C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10555  01263E  22DA               	addwfc	fsr2h,f,c
 10556  012640  010F               	movlb	15	; () banked
 10557  012642  513A               	movf	58,w,b	;volatile
 10558  012644  EC56  F09C         	call	_x_to_d
 10559  012648  6EDF               	movwf	indf2,c
 10560                           
 10561                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 10562  01264A  0100               	movlb	0	; () banked
 10563  01264C  EE20 F005          	lfsr	2,5
 10564  012650  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10565  012652  26D9               	addwf	fsr2l,f,c
 10566  012654  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10567  012656  22DA               	addwfc	fsr2h,f,c
 10568  012658  010F               	movlb	15	; () banked
 10569  01265A  513B               	movf	59,w,b	;volatile
 10570  01265C  EC56  F09C         	call	_x_to_d
 10571  012660  6EDF               	movwf	indf2,c
 10572  012662  0012               	return		;funcret
 10573  012664                     __end_of_RTCC_to_caltime:
 10574                           	opt stack 0
 10575                           tblptru	equ	0xFF8
 10576                           tblptrh	equ	0xFF7
 10577                           tblptrl	equ	0xFF6
 10578                           tablat	equ	0xFF5
 10579                           prodh	equ	0xFF4
 10580                           prodl	equ	0xFF3
 10581                           intcon	equ	0xFF2
 10582                           intcon2	equ	0xFF1
 10583                           indf0	equ	0xFEF
 10584                           postinc0	equ	0xFEE
 10585                           fsr0h	equ	0xFEA
 10586                           fsr0l	equ	0xFE9
 10587                           wreg	equ	0xFE8
 10588                           indf1	equ	0xFE7
 10589                           postinc1	equ	0xFE6
 10590                           postdec1	equ	0xFE5
 10591                           fsr1h	equ	0xFE2
 10592                           fsr1l	equ	0xFE1
 10593                           indf2	equ	0xFDF
 10594                           postinc2	equ	0xFDE
 10595                           postdec2	equ	0xFDD
 10596                           plusw2	equ	0xFDB
 10597                           fsr2h	equ	0xFDA
 10598                           fsr2l	equ	0xFD9
 10599                           status	equ	0xFD8
 10600                           
 10601 ;; *************** function _x_to_d *****************
 10602 ;; Defined at:
 10603 ;;		line 51 in file "../My_library/My_RTCC.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;  hex             1    wreg     unsigned char 
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;  hex             1    1[BANK0 ] unsigned char 
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  1    wreg      unsigned char 
 10610 ;; Registers used:
 10611 ;;		wreg, status,2, status,0, prodl, prodh
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10619 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10620 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10621 ;;Total ram usage:        2 bytes
 10622 ;; Hardware stack levels used:    1
 10623 ;; Hardware stack levels required when called:   12
 10624 ;; This function calls:
 10625 ;;		Nothing
 10626 ;; This function is called by:
 10627 ;;		_RTCC_to_caltime
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           	psect	text51
 10632  0138AC                     __ptext51:
 10633                           	opt stack 0
 10634  0138AC                     _x_to_d:
 10635                           	opt stack 14
 10636                           
 10637                           ;incstack = 0
 10638                           ;x_to_d@hex stored from wreg
 10639  0138AC  0100               	movlb	0	; () banked
 10640  0138AE  6F61               	movwf	x_to_d@hex& (0+255),b
 10641                           
 10642                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 10643  0138B0  C061  F060         	movff	x_to_d@hex,??_x_to_d
 10644  0138B4  0E0F               	movlw	15
 10645  0138B6  0100               	movlb	0	; () banked
 10646  0138B8  1760               	andwf	??_x_to_d& (0+255),f,b
 10647  0138BA  0100               	movlb	0	; () banked
 10648  0138BC  3961               	swapf	x_to_d@hex& (0+255),w,b
 10649  0138BE  0B0F               	andlw	15
 10650  0138C0  0B0F               	andlw	15
 10651  0138C2  0D0A               	mullw	10
 10652  0138C4  50F3               	movf	prodl,w,c
 10653  0138C6  0100               	movlb	0	; () banked
 10654  0138C8  2560               	addwf	??_x_to_d& (0+255),w,b
 10655  0138CA  0012               	return	
 10656  0138CC                     __end_of_x_to_d:
 10657                           	opt stack 0
 10658                           tblptru	equ	0xFF8
 10659                           tblptrh	equ	0xFF7
 10660                           tblptrl	equ	0xFF6
 10661                           tablat	equ	0xFF5
 10662                           prodh	equ	0xFF4
 10663                           prodl	equ	0xFF3
 10664                           intcon	equ	0xFF2
 10665                           intcon2	equ	0xFF1
 10666                           indf0	equ	0xFEF
 10667                           postinc0	equ	0xFEE
 10668                           fsr0h	equ	0xFEA
 10669                           fsr0l	equ	0xFE9
 10670                           wreg	equ	0xFE8
 10671                           indf1	equ	0xFE7
 10672                           postinc1	equ	0xFE6
 10673                           postdec1	equ	0xFE5
 10674                           fsr1h	equ	0xFE2
 10675                           fsr1l	equ	0xFE1
 10676                           indf2	equ	0xFDF
 10677                           postinc2	equ	0xFDE
 10678                           postdec2	equ	0xFDD
 10679                           plusw2	equ	0xFDB
 10680                           fsr2h	equ	0xFDA
 10681                           fsr2l	equ	0xFD9
 10682                           status	equ	0xFD8
 10683                           
 10684 ;; *************** function _I2C_LCD_SetCursor *****************
 10685 ;; Defined at:
 10686 ;;		line 159 in file "../My_library/My_ST7032.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;  col             1    wreg     unsigned char 
 10689 ;;  row             1    6[BANK0 ] unsigned char 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  col             1    9[BANK0 ] unsigned char 
 10692 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 10693 ;; Return value:  Size  Location     Type
 10694 ;;		None               void
 10695 ;; Registers used:
 10696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10702 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10703 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10705 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10706 ;;Total ram usage:        4 bytes
 10707 ;; Hardware stack levels used:    1
 10708 ;; Hardware stack levels required when called:   15
 10709 ;; This function calls:
 10710 ;;		_I2C_LCD_Command
 10711 ;; This function is called by:
 10712 ;;		_setup
 10713 ;;		_loop
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717                           	psect	text52
 10718  0136DA                     __ptext52:
 10719                           	opt stack 0
 10720  0136DA                     _I2C_LCD_SetCursor:
 10721                           	opt stack 14
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;incstack = 0
 10725                           ;I2C_LCD_SetCursor@col stored from wreg
 10726  0136DA  0100               	movlb	0	; () banked
 10727  0136DC  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 10728                           
 10729                           ;My_ST7032.c: 160: uint8_t row_offsets[] = {0x00, 0x40};
 10730  0136DE  C0D6  F067         	movff	I2C_LCD_SetCursor@F8685,I2C_LCD_SetCursor@row_offsets
 10731  0136E2  C0D7  F068         	movff	I2C_LCD_SetCursor@F8685+1,I2C_LCD_SetCursor@row_offsets+1
 10732                           
 10733                           ;My_ST7032.c: 162: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 10734  0136E6  0100               	movlb	0	; () banked
 10735  0136E8  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 10736  0136EA  0D01               	mullw	1
 10737  0136EC  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 10738  0136EE  24F3               	addwf	prodl,w,c
 10739  0136F0  6ED9               	movwf	fsr2l,c
 10740  0136F2  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 10741  0136F4  20F4               	addwfc	prodh,w,c
 10742  0136F6  6EDA               	movwf	fsr2h,c
 10743  0136F8  50DF               	movf	indf2,w,c
 10744  0136FA  0100               	movlb	0	; () banked
 10745  0136FC  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 10746  0136FE  0980               	iorlw	128
 10747  013700  ECD5  F09A         	call	_I2C_LCD_Command
 10748  013704  0012               	return		;funcret
 10749  013706                     __end_of_I2C_LCD_SetCursor:
 10750                           	opt stack 0
 10751                           tblptru	equ	0xFF8
 10752                           tblptrh	equ	0xFF7
 10753                           tblptrl	equ	0xFF6
 10754                           tablat	equ	0xFF5
 10755                           prodh	equ	0xFF4
 10756                           prodl	equ	0xFF3
 10757                           intcon	equ	0xFF2
 10758                           intcon2	equ	0xFF1
 10759                           indf0	equ	0xFEF
 10760                           postinc0	equ	0xFEE
 10761                           fsr0h	equ	0xFEA
 10762                           fsr0l	equ	0xFE9
 10763                           wreg	equ	0xFE8
 10764                           indf1	equ	0xFE7
 10765                           postinc1	equ	0xFE6
 10766                           postdec1	equ	0xFE5
 10767                           fsr1h	equ	0xFE2
 10768                           fsr1l	equ	0xFE1
 10769                           indf2	equ	0xFDF
 10770                           postinc2	equ	0xFDE
 10771                           postdec2	equ	0xFDD
 10772                           plusw2	equ	0xFDB
 10773                           fsr2h	equ	0xFDA
 10774                           fsr2l	equ	0xFD9
 10775                           status	equ	0xFD8
 10776                           
 10777 ;; *************** function _I2C_LCD_Puts *****************
 10778 ;; Defined at:
 10779 ;;		line 178 in file "../My_library/My_ST7032.c"
 10780 ;; Parameters:    Size  Location     Type
 10781 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 10782 ;;		 -> loop@s(40), STR_42(9), STR_41(9), 
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;  ans             2    7[BANK0 ] int 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;		None               void
 10787 ;; Registers used:
 10788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10795 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10796 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10797 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10798 ;;Total ram usage:        5 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:   14
 10801 ;; This function calls:
 10802 ;;		_I2C_Send
 10803 ;;		_I2C_Start
 10804 ;;		_I2C_Stop
 10805 ;; This function is called by:
 10806 ;;		_setup
 10807 ;;		_loop
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text53
 10812  012E4C                     __ptext53:
 10813                           	opt stack 0
 10814  012E4C                     _I2C_LCD_Puts:
 10815                           	opt stack 15
 10816                           
 10817                           ;My_ST7032.c: 179: int ans;
 10818                           ;My_ST7032.c: 181: ans = I2C_Start(0x3E, 0);
 10819                           
 10820                           ;incstack = 0
 10821  012E4C  0E00               	movlw	0
 10822  012E4E  0100               	movlb	0	; () banked
 10823  012E50  6F62               	movwf	I2C_Start@rw& (0+255),b
 10824  012E52  0E3E               	movlw	62
 10825  012E54  EC3F  F09B         	call	_I2C_Start
 10826  012E58  0100               	movlb	0	; () banked
 10827  012E5A  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 10828  012E5C  0100               	movlb	0	; () banked
 10829  012E5E  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 10830  012E60  0100               	movlb	0	; () banked
 10831  012E62  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 10832  012E64  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;My_ST7032.c: 182: if (ans == 0) {
 10836  012E66  0100               	movlb	0	; () banked
 10837  012E68  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 10838  012E6A  0100               	movlb	0	; () banked
 10839  012E6C  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 10840  012E6E  A4D8               	btfss	status,2,c
 10841  012E70  D031               	goto	l9487
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;My_ST7032.c: 183: I2C_Send(0b01000000);
 10845  012E72  0E40               	movlw	64
 10846  012E74  EC9C  F09C         	call	_I2C_Send
 10847                           
 10848                           ;My_ST7032.c: 184: while (*s) {
 10849  012E78  D019               	goto	l9485
 10850  012E7A                     l9479:
 10851                           
 10852                           ;My_ST7032.c: 185: I2C_Send(*s++);
 10853  012E7A  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 10854  012E7E  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 10855  012E82  0E00               	movlw	low (__mediumconst shr (0+16))
 10856  012E84  6EF8               	movwf	tblptru,c
 10857  012E86  0E0E               	movlw	(high __ramtop+-1)
 10858  012E88  64F7               	cpfsgt	tblptrh,c
 10859  012E8A  D003               	bra	u9277
 10860  012E8C  0008               	tblrd		*
 10861  012E8E  50F5               	movf	tablat,w,c
 10862  012E90  D005               	bra	u9270
 10863  012E92                     u9277:
 10864  012E92  CFF6 FFE9          	movff	tblptrl,fsr0l
 10865  012E96  CFF7 FFEA          	movff	tblptrh,fsr0h
 10866  012E9A  50EF               	movf	indf0,w,c
 10867  012E9C                     u9270:
 10868  012E9C  EC9C  F09C         	call	_I2C_Send
 10869  012EA0  0100               	movlb	0	; () banked
 10870  012EA2  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 10871  012EA4  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;My_ST7032.c: 186: _delay((unsigned long)((26)*(48000000/4000000.0)));
 10875  012EA6  0E68               	movlw	104
 10876  012EA8                     u10367:
 10877  012EA8  2EE8               	decfsz	wreg,f,c
 10878  012EAA  D7FE               	goto	u10367
 10879  012EAC                     l9485:
 10880  012EAC  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 10881  012EB0  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 10882  012EB4  0E00               	movlw	low (__mediumconst shr (0+16))
 10883  012EB6  6EF8               	movwf	tblptru,c
 10884  012EB8  0E0E               	movlw	(high __ramtop+-1)
 10885  012EBA  64F7               	cpfsgt	tblptrh,c
 10886  012EBC  D003               	bra	u9287
 10887  012EBE  0008               	tblrd		*
 10888  012EC0  50F5               	movf	tablat,w,c
 10889  012EC2  D005               	bra	u9280
 10890  012EC4                     u9287:
 10891  012EC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 10892  012EC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 10893  012ECC  50EF               	movf	indf0,w,c
 10894  012ECE                     u9280:
 10895  012ECE  0900               	iorlw	0
 10896  012ED0  A4D8               	btfss	status,2,c
 10897  012ED2  D7D3               	goto	l9479
 10898  012ED4                     l9487:
 10899                           
 10900                           ;My_ST7032.c: 187: }
 10901                           ;My_ST7032.c: 188: }
 10902                           ;My_ST7032.c: 189: I2C_Stop();
 10903  012ED4  ECBF  F09C         	call	_I2C_Stop	;wreg free
 10904  012ED8  0012               	return		;funcret
 10905  012EDA                     __end_of_I2C_LCD_Puts:
 10906                           	opt stack 0
 10907                           tblptru	equ	0xFF8
 10908                           tblptrh	equ	0xFF7
 10909                           tblptrl	equ	0xFF6
 10910                           tablat	equ	0xFF5
 10911                           prodh	equ	0xFF4
 10912                           prodl	equ	0xFF3
 10913                           intcon	equ	0xFF2
 10914                           intcon2	equ	0xFF1
 10915                           indf0	equ	0xFEF
 10916                           postinc0	equ	0xFEE
 10917                           fsr0h	equ	0xFEA
 10918                           fsr0l	equ	0xFE9
 10919                           wreg	equ	0xFE8
 10920                           indf1	equ	0xFE7
 10921                           postinc1	equ	0xFE6
 10922                           postdec1	equ	0xFE5
 10923                           fsr1h	equ	0xFE2
 10924                           fsr1l	equ	0xFE1
 10925                           indf2	equ	0xFDF
 10926                           postinc2	equ	0xFDE
 10927                           postdec2	equ	0xFDD
 10928                           plusw2	equ	0xFDB
 10929                           fsr2h	equ	0xFDA
 10930                           fsr2l	equ	0xFD9
 10931                           status	equ	0xFD8
 10932                           
 10933 ;; *************** function _I2C_LCD_Clear *****************
 10934 ;; Defined at:
 10935 ;;		line 154 in file "../My_library/My_ST7032.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;		None
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;		None               void
 10942 ;; Registers used:
 10943 ;;		wreg, status,2, status,0, cstack
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10952 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10953 ;;Total ram usage:        1 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:   15
 10956 ;; This function calls:
 10957 ;;		_I2C_LCD_Command
 10958 ;; This function is called by:
 10959 ;;		_I2C_LCD_init
 10960 ;;		_setup
 10961 ;;		_loop
 10962 ;; This function uses a non-reentrant model
 10963 ;;
 10964                           
 10965                           	psect	text54
 10966  01391E                     __ptext54:
 10967                           	opt stack 0
 10968  01391E                     _I2C_LCD_Clear:
 10969                           	opt stack 13
 10970                           
 10971                           ;My_ST7032.c: 155: I2C_LCD_Command(0x01);
 10972                           
 10973                           ;incstack = 0
 10974  01391E  0E01               	movlw	1
 10975  013920  ECD5  F09A         	call	_I2C_LCD_Command
 10976                           
 10977                           ;My_ST7032.c: 156: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 10978  013924  0E12               	movlw	18
 10979  013926  0100               	movlb	0	; () banked
 10980  013928  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 10981  01392A  0E23               	movlw	35
 10982  01392C                     u10377:
 10983  01392C  2EE8               	decfsz	wreg,f,c
 10984  01392E  D7FE               	goto	u10377
 10985  013930  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 10986  013932  D7FC               	goto	u10377
 10987  013934  F000               	nop	
 10988  013936  0012               	return		;funcret
 10989  013938                     __end_of_I2C_LCD_Clear:
 10990                           	opt stack 0
 10991                           tblptru	equ	0xFF8
 10992                           tblptrh	equ	0xFF7
 10993                           tblptrl	equ	0xFF6
 10994                           tablat	equ	0xFF5
 10995                           prodh	equ	0xFF4
 10996                           prodl	equ	0xFF3
 10997                           intcon	equ	0xFF2
 10998                           intcon2	equ	0xFF1
 10999                           indf0	equ	0xFEF
 11000                           postinc0	equ	0xFEE
 11001                           fsr0h	equ	0xFEA
 11002                           fsr0l	equ	0xFE9
 11003                           wreg	equ	0xFE8
 11004                           indf1	equ	0xFE7
 11005                           postinc1	equ	0xFE6
 11006                           postdec1	equ	0xFE5
 11007                           fsr1h	equ	0xFE2
 11008                           fsr1l	equ	0xFE1
 11009                           indf2	equ	0xFDF
 11010                           postinc2	equ	0xFDE
 11011                           postdec2	equ	0xFDD
 11012                           plusw2	equ	0xFDB
 11013                           fsr2h	equ	0xFDA
 11014                           fsr2l	equ	0xFD9
 11015                           status	equ	0xFD8
 11016                           
 11017 ;; *************** function _I2C_LCD_Command *****************
 11018 ;; Defined at:
 11019 ;;		line 141 in file "../My_library/My_ST7032.c"
 11020 ;; Parameters:    Size  Location     Type
 11021 ;;  c               1    wreg     unsigned char 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  c               1    4[BANK0 ] unsigned char 
 11024 ;;  ans             1    5[BANK0 ] unsigned char 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;		None               void
 11027 ;; Registers used:
 11028 ;;		wreg, status,2, status,0, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11035 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11037 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11038 ;;Total ram usage:        2 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:   14
 11041 ;; This function calls:
 11042 ;;		_I2C_Send
 11043 ;;		_I2C_Start
 11044 ;;		_I2C_Stop
 11045 ;; This function is called by:
 11046 ;;		_I2C_LCD_Clear
 11047 ;;		_I2C_LCD_SetCursor
 11048 ;;		_I2C_LCD_init
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           	psect	text55
 11053  0135AA                     __ptext55:
 11054                           	opt stack 0
 11055  0135AA                     _I2C_LCD_Command:
 11056                           	opt stack 14
 11057                           
 11058                           ;incstack = 0
 11059                           ;I2C_LCD_Command@c stored from wreg
 11060  0135AA  0100               	movlb	0	; () banked
 11061  0135AC  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 11062                           
 11063                           ;My_ST7032.c: 142: uint8_t ans;
 11064                           ;My_ST7032.c: 144: ans = I2C_Start(0x3E, 0);
 11065  0135AE  0E00               	movlw	0
 11066  0135B0  0100               	movlb	0	; () banked
 11067  0135B2  6F62               	movwf	I2C_Start@rw& (0+255),b
 11068  0135B4  0E3E               	movlw	62
 11069  0135B6  EC3F  F09B         	call	_I2C_Start
 11070  0135BA  0100               	movlb	0	; () banked
 11071  0135BC  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;My_ST7032.c: 145: if (ans == 0) {
 11075  0135BE  0100               	movlb	0	; () banked
 11076  0135C0  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 11077  0135C2  0100               	movlb	0	; () banked
 11078  0135C4  A4D8               	btfss	status,2,c
 11079  0135C6  D007               	goto	l1275
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;My_ST7032.c: 147: I2C_Send(0b10000000);
 11083  0135C8  0E80               	movlw	128
 11084  0135CA  EC9C  F09C         	call	_I2C_Send
 11085                           
 11086                           ;My_ST7032.c: 148: I2C_Send(c);
 11087  0135CE  0100               	movlb	0	; () banked
 11088  0135D0  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 11089  0135D2  EC9C  F09C         	call	_I2C_Send
 11090  0135D6                     l1275:
 11091                           
 11092                           ;My_ST7032.c: 149: }
 11093                           ;My_ST7032.c: 150: I2C_Stop();
 11094  0135D6  ECBF  F09C         	call	_I2C_Stop	;wreg free
 11095                           
 11096                           ;My_ST7032.c: 151: _delay((unsigned long)((26)*(48000000/4000000.0)));
 11097  0135DA  0E68               	movlw	104
 11098  0135DC                     u10387:
 11099  0135DC  2EE8               	decfsz	wreg,f,c
 11100  0135DE  D7FE               	goto	u10387
 11101  0135E0  0012               	return		;funcret
 11102  0135E2                     __end_of_I2C_LCD_Command:
 11103                           	opt stack 0
 11104                           tblptru	equ	0xFF8
 11105                           tblptrh	equ	0xFF7
 11106                           tblptrl	equ	0xFF6
 11107                           tablat	equ	0xFF5
 11108                           prodh	equ	0xFF4
 11109                           prodl	equ	0xFF3
 11110                           intcon	equ	0xFF2
 11111                           intcon2	equ	0xFF1
 11112                           indf0	equ	0xFEF
 11113                           postinc0	equ	0xFEE
 11114                           fsr0h	equ	0xFEA
 11115                           fsr0l	equ	0xFE9
 11116                           wreg	equ	0xFE8
 11117                           indf1	equ	0xFE7
 11118                           postinc1	equ	0xFE6
 11119                           postdec1	equ	0xFE5
 11120                           fsr1h	equ	0xFE2
 11121                           fsr1l	equ	0xFE1
 11122                           indf2	equ	0xFDF
 11123                           postinc2	equ	0xFDE
 11124                           postdec2	equ	0xFDD
 11125                           plusw2	equ	0xFDB
 11126                           fsr2h	equ	0xFDA
 11127                           fsr2l	equ	0xFD9
 11128                           status	equ	0xFD8
 11129                           
 11130 ;; *************** function _I2C_Stop *****************
 11131 ;; Defined at:
 11132 ;;		line 96 in file "../My_library/My_I2C.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;		None
 11135 ;; Auto vars:     Size  Location     Type
 11136 ;;		None
 11137 ;; Return value:  Size  Location     Type
 11138 ;;		None               void
 11139 ;; Registers used:
 11140 ;;		wreg, status,2, status,0, cstack
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11150 ;;Total ram usage:        0 bytes
 11151 ;; Hardware stack levels used:    1
 11152 ;; Hardware stack levels required when called:   13
 11153 ;; This function calls:
 11154 ;;		_I2C_IdleCheck
 11155 ;; This function is called by:
 11156 ;;		_I2C_LCD_Command
 11157 ;;		_I2C_LCD_Puts
 11158 ;;		_RTC_Write
 11159 ;;		_RTC_Read
 11160 ;;		_EEP_write
 11161 ;;		_EEP_read
 11162 ;;		_EEP_read16
 11163 ;;		_EEP_read32
 11164 ;;		_EEP_write16
 11165 ;;		_EEP_write32
 11166 ;;		_TM_init
 11167 ;;		_TM_Read
 11168 ;;		_I2C_LCD_Putc
 11169 ;;		_I2C_LCD_CreateChar
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           	psect	text56
 11174  01397E                     __ptext56:
 11175                           	opt stack 0
 11176  01397E                     _I2C_Stop:
 11177                           	opt stack 14
 11178                           
 11179                           ;My_I2C.c: 98: I2C_IdleCheck(0x5);
 11180                           
 11181                           ;incstack = 0
 11182  01397E  0E05               	movlw	5
 11183  013980  EC66  F09C         	call	_I2C_IdleCheck
 11184                           
 11185                           ;My_I2C.c: 99: SSP1CON2bits.PEN = 1;
 11186  013984  84C5               	bsf	4037,2,c	;volatile
 11187  013986  0012               	return		;funcret
 11188  013988                     __end_of_I2C_Stop:
 11189                           	opt stack 0
 11190                           tblptru	equ	0xFF8
 11191                           tblptrh	equ	0xFF7
 11192                           tblptrl	equ	0xFF6
 11193                           tablat	equ	0xFF5
 11194                           prodh	equ	0xFF4
 11195                           prodl	equ	0xFF3
 11196                           intcon	equ	0xFF2
 11197                           intcon2	equ	0xFF1
 11198                           indf0	equ	0xFEF
 11199                           postinc0	equ	0xFEE
 11200                           fsr0h	equ	0xFEA
 11201                           fsr0l	equ	0xFE9
 11202                           wreg	equ	0xFE8
 11203                           indf1	equ	0xFE7
 11204                           postinc1	equ	0xFE6
 11205                           postdec1	equ	0xFE5
 11206                           fsr1h	equ	0xFE2
 11207                           fsr1l	equ	0xFE1
 11208                           indf2	equ	0xFDF
 11209                           postinc2	equ	0xFDE
 11210                           postdec2	equ	0xFDD
 11211                           plusw2	equ	0xFDB
 11212                           fsr2h	equ	0xFDA
 11213                           fsr2l	equ	0xFD9
 11214                           status	equ	0xFD8
 11215                           
 11216 ;; *************** function _I2C_Start *****************
 11217 ;; Defined at:
 11218 ;;		line 72 in file "../My_library/My_I2C.c"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;  adrs            1    wreg     unsigned char 
 11221 ;;  rw              1    2[BANK0 ] unsigned char 
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;  adrs            1    3[BANK0 ] unsigned char 
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  1    wreg      unsigned char 
 11226 ;; Registers used:
 11227 ;;		wreg, status,2, status,0, cstack
 11228 ;; Tracked objects:
 11229 ;;		On entry : 0/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11233 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11236 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11237 ;;Total ram usage:        2 bytes
 11238 ;; Hardware stack levels used:    1
 11239 ;; Hardware stack levels required when called:   13
 11240 ;; This function calls:
 11241 ;;		_I2C_IdleCheck
 11242 ;; This function is called by:
 11243 ;;		_I2C_LCD_Command
 11244 ;;		_I2C_LCD_Puts
 11245 ;;		_RTC_Write
 11246 ;;		_RTC_Read
 11247 ;;		_EEP_write
 11248 ;;		_EEP_read
 11249 ;;		_EEP_read16
 11250 ;;		_EEP_read32
 11251 ;;		_EEP_write16
 11252 ;;		_EEP_write32
 11253 ;;		_TM_init
 11254 ;;		_TM_Read
 11255 ;;		_I2C_LCD_Putc
 11256 ;;		_I2C_LCD_CreateChar
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           	psect	text57
 11261  01367E                     __ptext57:
 11262                           	opt stack 0
 11263  01367E                     _I2C_Start:
 11264                           	opt stack 14
 11265                           
 11266                           ;incstack = 0
 11267                           ;I2C_Start@adrs stored from wreg
 11268  01367E  0100               	movlb	0	; () banked
 11269  013680  6F63               	movwf	I2C_Start@adrs& (0+255),b
 11270                           
 11271                           ;My_I2C.c: 74: I2C_IdleCheck(0x5);
 11272  013682  0E05               	movlw	5
 11273  013684  EC66  F09C         	call	_I2C_IdleCheck
 11274                           
 11275                           ;My_I2C.c: 75: SSP1CON2bits.SEN = 1;
 11276  013688  80C5               	bsf	4037,0,c	;volatile
 11277                           
 11278                           ;My_I2C.c: 77: I2C_IdleCheck(0x5);
 11279  01368A  0E05               	movlw	5
 11280  01368C  EC66  F09C         	call	_I2C_IdleCheck
 11281                           
 11282                           ;My_I2C.c: 78: SSP1IF = 0;
 11283  013690  969E               	bcf	3998,3,c	;volatile
 11284                           
 11285                           ;My_I2C.c: 79: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 11286  013692  0100               	movlb	0	; () banked
 11287  013694  5163               	movf	I2C_Start@adrs& (0+255),w,b
 11288  013696  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 11289  013698  0100               	movlb	0	; () banked
 11290  01369A  2562               	addwf	I2C_Start@rw& (0+255),w,b
 11291  01369C  6EC9               	movwf	4041,c	;volatile
 11292  01369E                     l783:
 11293  01369E  A69E               	btfss	3998,3,c	;volatile
 11294  0136A0  D7FE               	goto	l783
 11295                           
 11296                           ;My_I2C.c: 81: return SSP1CON2bits.ACKSTAT;
 11297  0136A2  ACC5               	btfss	4037,6,c	;volatile
 11298  0136A4  D002               	goto	u8160
 11299  0136A6  0E01               	movlw	1
 11300  0136A8  0012               	return	
 11301  0136AA                     u8160:
 11302  0136AA  0E00               	movlw	0
 11303  0136AC  0012               	return	
 11304  0136AE                     __end_of_I2C_Start:
 11305                           	opt stack 0
 11306                           tblptru	equ	0xFF8
 11307                           tblptrh	equ	0xFF7
 11308                           tblptrl	equ	0xFF6
 11309                           tablat	equ	0xFF5
 11310                           prodh	equ	0xFF4
 11311                           prodl	equ	0xFF3
 11312                           intcon	equ	0xFF2
 11313                           intcon2	equ	0xFF1
 11314                           indf0	equ	0xFEF
 11315                           postinc0	equ	0xFEE
 11316                           fsr0h	equ	0xFEA
 11317                           fsr0l	equ	0xFE9
 11318                           wreg	equ	0xFE8
 11319                           indf1	equ	0xFE7
 11320                           postinc1	equ	0xFE6
 11321                           postdec1	equ	0xFE5
 11322                           fsr1h	equ	0xFE2
 11323                           fsr1l	equ	0xFE1
 11324                           indf2	equ	0xFDF
 11325                           postinc2	equ	0xFDE
 11326                           postdec2	equ	0xFDD
 11327                           plusw2	equ	0xFDB
 11328                           fsr2h	equ	0xFDA
 11329                           fsr2l	equ	0xFD9
 11330                           status	equ	0xFD8
 11331                           
 11332 ;; *************** function _I2C_Send *****************
 11333 ;; Defined at:
 11334 ;;		line 102 in file "../My_library/My_I2C.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;  data            1    wreg     unsigned char 
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;  data            1    2[BANK0 ] unsigned char 
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  1    wreg      unsigned char 
 11341 ;; Registers used:
 11342 ;;		wreg, status,2, status,0, cstack
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11351 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11352 ;;Total ram usage:        1 bytes
 11353 ;; Hardware stack levels used:    1
 11354 ;; Hardware stack levels required when called:   13
 11355 ;; This function calls:
 11356 ;;		_I2C_IdleCheck
 11357 ;; This function is called by:
 11358 ;;		_I2C_LCD_Command
 11359 ;;		_I2C_LCD_Puts
 11360 ;;		_RTC_Write
 11361 ;;		_RTC_Read
 11362 ;;		_EEP_write
 11363 ;;		_EEP_read
 11364 ;;		_EEP_read16
 11365 ;;		_EEP_read32
 11366 ;;		_EEP_write16
 11367 ;;		_EEP_write32
 11368 ;;		_TM_init
 11369 ;;		_TM_Read
 11370 ;;		_I2C_LCD_Putc
 11371 ;;		_I2C_LCD_CreateChar
 11372 ;; This function uses a non-reentrant model
 11373 ;;
 11374                           
 11375                           	psect	text58
 11376  013938                     __ptext58:
 11377                           	opt stack 0
 11378  013938                     _I2C_Send:
 11379                           	opt stack 14
 11380                           
 11381                           ;incstack = 0
 11382                           ;I2C_Send@data stored from wreg
 11383  013938  0100               	movlb	0	; () banked
 11384  01393A  6F62               	movwf	I2C_Send@data& (0+255),b
 11385                           
 11386                           ;My_I2C.c: 103: I2C_IdleCheck(0x5);
 11387  01393C  0E05               	movlw	5
 11388  01393E  EC66  F09C         	call	_I2C_IdleCheck
 11389                           
 11390                           ;My_I2C.c: 104: SSP1IF = 0;
 11391  013942  969E               	bcf	3998,3,c	;volatile
 11392                           
 11393                           ;My_I2C.c: 105: SSP1BUF = data;
 11394  013944  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 11395  013948                     l798:
 11396  013948  A69E               	btfss	3998,3,c	;volatile
 11397  01394A  D7FE               	goto	l798
 11398                           
 11399                           ;My_I2C.c: 107: return SSP1CON2bits.ACKSTAT;
 11400                           ;	Return value of _I2C_Send is never used
 11401  01394C  50C5               	movf	4037,w,c	;volatile
 11402  01394E  0012               	return	
 11403  013950                     __end_of_I2C_Send:
 11404                           	opt stack 0
 11405                           tblptru	equ	0xFF8
 11406                           tblptrh	equ	0xFF7
 11407                           tblptrl	equ	0xFF6
 11408                           tablat	equ	0xFF5
 11409                           prodh	equ	0xFF4
 11410                           prodl	equ	0xFF3
 11411                           intcon	equ	0xFF2
 11412                           intcon2	equ	0xFF1
 11413                           indf0	equ	0xFEF
 11414                           postinc0	equ	0xFEE
 11415                           fsr0h	equ	0xFEA
 11416                           fsr0l	equ	0xFE9
 11417                           wreg	equ	0xFE8
 11418                           indf1	equ	0xFE7
 11419                           postinc1	equ	0xFE6
 11420                           postdec1	equ	0xFE5
 11421                           fsr1h	equ	0xFE2
 11422                           fsr1l	equ	0xFE1
 11423                           indf2	equ	0xFDF
 11424                           postinc2	equ	0xFDE
 11425                           postdec2	equ	0xFDD
 11426                           plusw2	equ	0xFDB
 11427                           fsr2h	equ	0xFDA
 11428                           fsr2l	equ	0xFD9
 11429                           status	equ	0xFD8
 11430                           
 11431 ;; *************** function _I2C_IdleCheck *****************
 11432 ;; Defined at:
 11433 ;;		line 58 in file "../My_library/My_I2C.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;  mask            1    wreg     unsigned char 
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;  mask            1    1[BANK0 ] unsigned char 
 11438 ;; Return value:  Size  Location     Type
 11439 ;;		None               void
 11440 ;; Registers used:
 11441 ;;		wreg, status,2, status,0
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11451 ;;Total ram usage:        2 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:   12
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_I2C_Start
 11458 ;;		_I2C_Stop
 11459 ;;		_I2C_Send
 11460 ;;		_I2C_rStart
 11461 ;;		_I2C_Receive
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           	psect	text59
 11466  0138CC                     __ptext59:
 11467                           	opt stack 0
 11468  0138CC                     _I2C_IdleCheck:
 11469                           	opt stack 14
 11470                           
 11471                           ;incstack = 0
 11472                           ;I2C_IdleCheck@mask stored from wreg
 11473  0138CC  0100               	movlb	0	; () banked
 11474  0138CE  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 11475  0138D0                     l8455:
 11476  0138D0  50C7               	movf	4039,w,c	;volatile
 11477  0138D2  0100               	movlb	0	; () banked
 11478  0138D4  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 11479  0138D6  0100               	movlb	0	; () banked
 11480  0138D8  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 11481  0138DA  50C5               	movf	4037,w,c	;volatile
 11482  0138DC  0B1F               	andlw	31
 11483  0138DE  0100               	movlb	0	; () banked
 11484  0138E0  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 11485  0138E2  0900               	iorlw	0
 11486  0138E4  B4D8               	btfsc	status,2,c
 11487  0138E6  0012               	return	
 11488  0138E8  D7F3               	goto	l8455
 11489  0138EA                     __end_of_I2C_IdleCheck:
 11490                           	opt stack 0
 11491                           tblptru	equ	0xFF8
 11492                           tblptrh	equ	0xFF7
 11493                           tblptrl	equ	0xFF6
 11494                           tablat	equ	0xFF5
 11495                           prodh	equ	0xFF4
 11496                           prodl	equ	0xFF3
 11497                           intcon	equ	0xFF2
 11498                           intcon2	equ	0xFF1
 11499                           indf0	equ	0xFEF
 11500                           postinc0	equ	0xFEE
 11501                           fsr0h	equ	0xFEA
 11502                           fsr0l	equ	0xFE9
 11503                           wreg	equ	0xFE8
 11504                           indf1	equ	0xFE7
 11505                           postinc1	equ	0xFE6
 11506                           postdec1	equ	0xFE5
 11507                           fsr1h	equ	0xFE2
 11508                           fsr1l	equ	0xFE1
 11509                           indf2	equ	0xFDF
 11510                           postinc2	equ	0xFDE
 11511                           postdec2	equ	0xFDD
 11512                           plusw2	equ	0xFDB
 11513                           fsr2h	equ	0xFDA
 11514                           fsr2l	equ	0xFD9
 11515                           status	equ	0xFD8
 11516                           
 11517 ;; *************** function _ISR *****************
 11518 ;; Defined at:
 11519 ;;		line 44 in file "main.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;		None
 11522 ;; Auto vars:     Size  Location     Type
 11523 ;;		None
 11524 ;; Return value:  Size  Location     Type
 11525 ;;		None               void
 11526 ;; Registers used:
 11527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11528 ;; Tracked objects:
 11529 ;;		On entry : 0/0
 11530 ;;		On exit  : 0/0
 11531 ;;		Unchanged: 0/0
 11532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11535 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11536 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11537 ;;Total ram usage:       15 bytes
 11538 ;; Hardware stack levels used:    1
 11539 ;; Hardware stack levels required when called:   11
 11540 ;; This function calls:
 11541 ;;		_UART_ISR
 11542 ;;		_USB_CDC_ISR
 11543 ;; This function is called by:
 11544 ;;		Interrupt level 2
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           
 11548                           	psect	intcode
 11549  001008                     __pintcode:
 11550                           	opt stack 0
 11551  001008                     _ISR:
 11552                           	opt stack 13
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;incstack = 0
 11556  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11557  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 11558  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 11559  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 11560  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 11561  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 11562  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 11563  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 11564  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 11565  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 11566  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 11567  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 11568  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 11569  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 11570  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 11571                           
 11572                           ;main.c: 45: USB_CDC_ISR();
 11573  001042  ECC4  F09C         	call	_USB_CDC_ISR	;wreg free
 11574                           
 11575                           ;main.c: 46: UART_ISR();
 11576  001046  ECFC  F099         	call	_UART_ISR	;wreg free
 11577                           
 11578                           ;main.c: 47: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 11579  00104A  B4F2               	btfsc	intcon,2,c	;volatile
 11580  00104C  AAF2               	btfss	intcon,5,c	;volatile
 11581  00104E  D001               	goto	i2l1559
 11582                           
 11583                           ;main.c: 48: INTCONbits.T0IF = 0;
 11584  001050  94F2               	bcf	intcon,2,c	;volatile
 11585  001052                     i2l1559:
 11586                           
 11587                           ;main.c: 49: }
 11588                           ;main.c: 50: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 11589  001052  B09E               	btfsc	3998,0,c	;volatile
 11590  001054  A09D               	btfss	3997,0,c	;volatile
 11591  001056  D00E               	goto	i2l8395
 11592                           
 11593                           ;main.c: 51: PIR1bits.TMR1IF = 0;
 11594  001058  909E               	bcf	3998,0,c	;volatile
 11595                           
 11596                           ;main.c: 52: TMR1H = 0xC0;
 11597  00105A  0EC0               	movlw	192
 11598  00105C  6ECF               	movwf	4047,c	;volatile
 11599                           
 11600                           ;main.c: 53: LATAbits.LATA0 = !LATAbits.LATA0;
 11601  00105E  B089               	btfsc	3977,0,c	;volatile
 11602  001060  D003               	goto	i2u789_40
 11603  001062  6A4C               	clrf	??_ISR& (0+255),c
 11604  001064  2A4C               	incf	??_ISR& (0+255),f,c
 11605  001066  D001               	goto	i2u790_48
 11606  001068                     i2u789_40:
 11607  001068  6A4C               	clrf	??_ISR& (0+255),c
 11608  00106A                     i2u790_48:
 11609  00106A  5089               	movf	3977,w,c	;volatile
 11610  00106C  184C               	xorwf	??_ISR,w,c
 11611  00106E  0BFE               	andlw	-2
 11612  001070  184C               	xorwf	??_ISR,w,c
 11613  001072  6E89               	movwf	3977,c	;volatile
 11614  001074                     i2l8395:
 11615                           
 11616                           ;main.c: 54: }
 11617                           ;main.c: 55: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 11618  001074  B2A1               	btfsc	4001,1,c	;volatile
 11619  001076  A2A0               	btfss	4000,1,c	;volatile
 11620  001078  D001               	goto	i2l1562
 11621                           
 11622                           ;main.c: 56: PIR2bits.TMR3IF = 0;
 11623  00107A  92A1               	bcf	4001,1,c	;volatile
 11624  00107C                     i2l1562:
 11625  00107C  C05A  FFF5         	movff	??_ISR+14,tablat
 11626  001080  C059  FFF8         	movff	??_ISR+13,tblptru
 11627  001084  C058  FFF7         	movff	??_ISR+12,tblptrh
 11628  001088  C057  FFF6         	movff	??_ISR+11,tblptrl
 11629  00108C  C056  FFF4         	movff	??_ISR+10,prodh
 11630  001090  C055  FFF3         	movff	??_ISR+9,prodl
 11631  001094  C054  FFDA         	movff	??_ISR+8,fsr2h
 11632  001098  C053  FFD9         	movff	??_ISR+7,fsr2l
 11633  00109C  C052  FFE2         	movff	??_ISR+6,fsr1h
 11634  0010A0  C051  FFE1         	movff	??_ISR+5,fsr1l
 11635  0010A4  C050  FFEA         	movff	??_ISR+4,fsr0h
 11636  0010A8  C04F  FFE9         	movff	??_ISR+3,fsr0l
 11637  0010AC  C04E  FFFB         	movff	??_ISR+2,pclatu
 11638  0010B0  C04D  FFFA         	movff	??_ISR+1,pclath
 11639  0010B4  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11640  0010B6  0011               	retfie		f
 11641  0010B8                     __end_of_ISR:
 11642                           	opt stack 0
 11643                           pclatu	equ	0xFFB
 11644                           pclath	equ	0xFFA
 11645                           tblptru	equ	0xFF8
 11646                           tblptrh	equ	0xFF7
 11647                           tblptrl	equ	0xFF6
 11648                           tablat	equ	0xFF5
 11649                           prodh	equ	0xFF4
 11650                           prodl	equ	0xFF3
 11651                           intcon	equ	0xFF2
 11652                           intcon2	equ	0xFF1
 11653                           indf0	equ	0xFEF
 11654                           postinc0	equ	0xFEE
 11655                           fsr0h	equ	0xFEA
 11656                           fsr0l	equ	0xFE9
 11657                           wreg	equ	0xFE8
 11658                           indf1	equ	0xFE7
 11659                           postinc1	equ	0xFE6
 11660                           postdec1	equ	0xFE5
 11661                           fsr1h	equ	0xFE2
 11662                           fsr1l	equ	0xFE1
 11663                           indf2	equ	0xFDF
 11664                           postinc2	equ	0xFDE
 11665                           postdec2	equ	0xFDD
 11666                           plusw2	equ	0xFDB
 11667                           fsr2h	equ	0xFDA
 11668                           fsr2l	equ	0xFD9
 11669                           status	equ	0xFD8
 11670                           
 11671 ;; *************** function _USB_CDC_ISR *****************
 11672 ;; Defined at:
 11673 ;;		line 33 in file "../My_library/USB_CDC/My_USB_CDC.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;		None
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;		None
 11678 ;; Return value:  Size  Location     Type
 11679 ;;		None               void
 11680 ;; Registers used:
 11681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11691 ;;Total ram usage:        0 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; Hardware stack levels required when called:   10
 11694 ;; This function calls:
 11695 ;;		_USBDeviceTasks
 11696 ;; This function is called by:
 11697 ;;		_ISR
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701                           	psect	text61
 11702  013988                     __ptext61:
 11703                           	opt stack 0
 11704  013988                     _USB_CDC_ISR:
 11705                           	opt stack 13
 11706                           
 11707                           ;My_USB_CDC.c: 35: USBDeviceTasks();
 11708                           
 11709                           ;incstack = 0
 11710  013988  EC24  F088         	call	_USBDeviceTasks	;wreg free
 11711  01398C  0012               	return		;funcret
 11712  01398E                     __end_of_USB_CDC_ISR:
 11713                           	opt stack 0
 11714                           pclatu	equ	0xFFB
 11715                           pclath	equ	0xFFA
 11716                           tblptru	equ	0xFF8
 11717                           tblptrh	equ	0xFF7
 11718                           tblptrl	equ	0xFF6
 11719                           tablat	equ	0xFF5
 11720                           prodh	equ	0xFF4
 11721                           prodl	equ	0xFF3
 11722                           intcon	equ	0xFF2
 11723                           intcon2	equ	0xFF1
 11724                           indf0	equ	0xFEF
 11725                           postinc0	equ	0xFEE
 11726                           fsr0h	equ	0xFEA
 11727                           fsr0l	equ	0xFE9
 11728                           wreg	equ	0xFE8
 11729                           indf1	equ	0xFE7
 11730                           postinc1	equ	0xFE6
 11731                           postdec1	equ	0xFE5
 11732                           fsr1h	equ	0xFE2
 11733                           fsr1l	equ	0xFE1
 11734                           indf2	equ	0xFDF
 11735                           postinc2	equ	0xFDE
 11736                           postdec2	equ	0xFDD
 11737                           plusw2	equ	0xFDB
 11738                           fsr2h	equ	0xFDA
 11739                           fsr2l	equ	0xFD9
 11740                           status	equ	0xFD8
 11741                           
 11742 ;; *************** function _USBDeviceTasks *****************
 11743 ;; Defined at:
 11744 ;;		line 490 in file "../My_library/USB_CDC/usb/usb_device.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;		None
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;  i               1   29[COMRAM] unsigned char 
 11749 ;; Return value:  Size  Location     Type
 11750 ;;		None               void
 11751 ;; Registers used:
 11752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11762 ;;Total ram usage:        1 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:    9
 11765 ;; This function calls:
 11766 ;;		_USBCtrlEPAllowStatusStage
 11767 ;;		_USBCtrlEPService
 11768 ;;		_USBStallHandler
 11769 ;;		_USBSuspend
 11770 ;;		_USBWakeFromSuspend
 11771 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11772 ;;		i2_USBDeviceInit
 11773 ;; This function is called by:
 11774 ;;		_USB_CDC_ISR
 11775 ;; This function uses a non-reentrant model
 11776 ;;
 11777                           
 11778                           	psect	text62
 11779  011048                     __ptext62:
 11780                           	opt stack 0
 11781  011048                     _USBDeviceTasks:
 11782                           	opt stack 13
 11783                           
 11784                           ;usb_device.c: 492: uint8_t i;
 11785                           ;usb_device.c: 603: if(USBDeviceState == ATTACHED_STATE)
 11786                           
 11787                           ;incstack = 0
 11788  011048  0424               	decf	_USBDeviceState,w,c	;volatile
 11789  01104A  B4D8               	btfsc	status,2,c
 11790                           
 11791                           ;usb_device.c: 604: {
 11792                           ;usb_device.c: 614: if(!UCONbits.SE0)
 11793  01104C  BA65               	btfsc	3941,5,c	;volatile
 11794  01104E  D008               	goto	i2l7121
 11795                           
 11796                           ;usb_device.c: 615: {
 11797                           ;usb_device.c: 616: {UIR = 0;};
 11798  011050  0E00               	movlw	0
 11799  011052  6E62               	movwf	3938,c	;volatile
 11800                           
 11801                           ;usb_device.c: 620: UIEbits.URSTIE = 1;
 11802  011054  010F               	movlb	15	; () banked
 11803  011056  8136               	bsf	54,0,b	;volatile
 11804                           
 11805                           ; BSR set to: 15
 11806                           ;usb_device.c: 621: UIEbits.IDLEIE = 1;
 11807  011058  010F               	movlb	15	; () banked
 11808  01105A  8936               	bsf	54,4,b	;volatile
 11809                           
 11810                           ;usb_device.c: 622: USBDeviceState = POWERED_STATE;
 11811  01105C  0E02               	movlw	2
 11812  01105E  6E24               	movwf	_USBDeviceState,c	;volatile
 11813  011060                     i2l7121:
 11814                           
 11815                           ;usb_device.c: 623: }
 11816                           ;usb_device.c: 624: }
 11817                           ;usb_device.c: 640: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 11818  011060  A462               	btfss	3938,2,c	;volatile
 11819  011062  D006               	goto	i2l7129
 11820  011064  010F               	movlb	15	; () banked
 11821  011066  A536               	btfss	54,2,b	;volatile
 11822  011068  D003               	goto	i2l7129
 11823                           
 11824                           ; BSR set to: 15
 11825                           ;usb_device.c: 641: {
 11826                           ;usb_device.c: 642: (UIR &= 0xFB);
 11827  01106A  9462               	bcf	3938,2,c	;volatile
 11828                           
 11829                           ; BSR set to: 15
 11830                           ;usb_device.c: 646: USBWakeFromSuspend();
 11831  01106C  EC26  F09B         	call	_USBWakeFromSuspend	;wreg free
 11832  011070                     i2l7129:
 11833                           
 11834                           ;usb_device.c: 648: }
 11835                           ;usb_device.c: 653: if(UCONbits.SUSPND==1)
 11836  011070  A265               	btfss	3941,1,c	;volatile
 11837  011072  D002               	goto	i2l144
 11838                           
 11839                           ;usb_device.c: 654: {
 11840                           ;usb_device.c: 655: {PIR2bits.USBIF = 0;};
 11841  011074  98A1               	bcf	4001,4,c	;volatile
 11842                           
 11843                           ;usb_device.c: 656: return;
 11844  011076  0012               	return	
 11845  011078                     i2l144:
 11846                           
 11847                           ;usb_device.c: 657: }
 11848                           ;usb_device.c: 669: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11849  011078  A062               	btfss	3938,0,c	;volatile
 11850  01107A  D009               	goto	i2l7143
 11851  01107C  010F               	movlb	15	; () banked
 11852  01107E  A136               	btfss	54,0,b	;volatile
 11853  011080  D006               	goto	i2l7143
 11854                           
 11855                           ; BSR set to: 15
 11856                           ;usb_device.c: 670: {
 11857                           ;usb_device.c: 671: USBDeviceInit();
 11858  011082  EC6C  F089         	call	i2_USBDeviceInit	;wreg free
 11859                           
 11860                           ;usb_device.c: 675: {PIE2bits.USBIE = 1;};
 11861  011086  88A0               	bsf	4000,4,c	;volatile
 11862                           
 11863                           ;usb_device.c: 677: USBDeviceState = DEFAULT_STATE;
 11864  011088  0E04               	movlw	4
 11865  01108A  6E24               	movwf	_USBDeviceState,c	;volatile
 11866                           
 11867                           ;usb_device.c: 687: (UIR &= 0xFE);
 11868  01108C  9062               	bcf	3938,0,c	;volatile
 11869  01108E                     i2l7143:
 11870                           
 11871                           ;usb_device.c: 688: }
 11872                           ;usb_device.c: 693: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11873  01108E  A862               	btfss	3938,4,c	;volatile
 11874  011090  D006               	goto	i2l7151
 11875  011092  010F               	movlb	15	; () banked
 11876  011094  A936               	btfss	54,4,b	;volatile
 11877  011096  D003               	goto	i2l7151
 11878                           
 11879                           ; BSR set to: 15
 11880                           ;usb_device.c: 694: {
 11881                           ;usb_device.c: 699: USBSuspend();
 11882  011098  EC83  F09B         	call	_USBSuspend	;wreg free
 11883                           
 11884                           ;usb_device.c: 702: (UIR &= 0xEF);
 11885  01109C  9862               	bcf	3938,4,c	;volatile
 11886  01109E                     i2l7151:
 11887                           
 11888                           ;usb_device.c: 703: }
 11889                           ;usb_device.c: 705: if(UIRbits.SOFIF)
 11890  01109E  AC62               	btfss	3938,6,c	;volatile
 11891  0110A0  D019               	goto	i2l7167
 11892                           
 11893                           ;usb_device.c: 706: {
 11894                           ;usb_device.c: 707: if(UIEbits.SOFIE)
 11895  0110A2  010F               	movlb	15	; () banked
 11896  0110A4  AD36               	btfss	54,6,b	;volatile
 11897  0110A6  D00E               	goto	i2l7157
 11898                           
 11899                           ; BSR set to: 15
 11900                           ;usb_device.c: 708: {
 11901                           ;usb_device.c: 709: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11902  0110A8  0E00               	movlw	0
 11903  0110AA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11904  0110AC  0E73               	movlw	115
 11905  0110AE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11906  0110B0  0E00               	movlw	0
 11907  0110B2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11908  0110B4  0E00               	movlw	0
 11909  0110B6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11910  0110B8  0E00               	movlw	0
 11911  0110BA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11912  0110BC  0E01               	movlw	1
 11913  0110BE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11914  0110C0  EC27  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11915  0110C4                     i2l7157:
 11916                           
 11917                           ;usb_device.c: 710: }
 11918                           ;usb_device.c: 711: (UIR &= 0xBF);
 11919  0110C4  9C62               	bcf	3938,6,c	;volatile
 11920                           
 11921                           ;usb_device.c: 736: if(USBStatusStageTimeoutCounter != 0u)
 11922  0110C6  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 11923  0110C8  A4D8               	btfss	status,2,c
 11924                           
 11925                           ;usb_device.c: 737: {
 11926                           ;usb_device.c: 738: USBStatusStageTimeoutCounter--;
 11927  0110CA  0627               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 11928                           
 11929                           ;usb_device.c: 739: }
 11930                           ;usb_device.c: 745: if(USBStatusStageTimeoutCounter == 0)
 11931  0110CC  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 11932  0110CE  B4D8               	btfsc	status,2,c
 11933                           
 11934                           ;usb_device.c: 746: {
 11935                           ;usb_device.c: 747: USBCtrlEPAllowStatusStage();
 11936  0110D0  ECB6  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11937  0110D4                     i2l7167:
 11938                           
 11939                           ;usb_device.c: 748: }
 11940                           ;usb_device.c: 750: }
 11941                           ;usb_device.c: 752: if(UIRbits.STALLIF && UIEbits.STALLIE)
 11942  0110D4  AA62               	btfss	3938,5,c	;volatile
 11943  0110D6  D004               	goto	i2l7173
 11944  0110D8  010F               	movlb	15	; () banked
 11945  0110DA  BB36               	btfsc	54,5,b	;volatile
 11946                           
 11947                           ; BSR set to: 15
 11948                           ;usb_device.c: 753: {
 11949                           ;usb_device.c: 754: USBStallHandler();
 11950  0110DC  EC21  F09A         	call	_USBStallHandler	;wreg free
 11951  0110E0                     i2l7173:
 11952                           
 11953                           ;usb_device.c: 755: }
 11954                           ;usb_device.c: 757: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11955  0110E0  A262               	btfss	3938,1,c	;volatile
 11956  0110E2  D012               	goto	i2l7181
 11957  0110E4  010F               	movlb	15	; () banked
 11958  0110E6  A336               	btfss	54,1,b	;volatile
 11959  0110E8  D00F               	goto	i2l7181
 11960                           
 11961                           ; BSR set to: 15
 11962                           ;usb_device.c: 758: {
 11963                           ;usb_device.c: 759: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 11964  0110EA  0E7F               	movlw	127
 11965  0110EC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11966  0110EE  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11967  0110F0  0E00               	movlw	0
 11968  0110F2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11969  0110F4  0E00               	movlw	0
 11970  0110F6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11971  0110F8  0E00               	movlw	0
 11972  0110FA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11973  0110FC  0E01               	movlw	1
 11974  0110FE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11975  011100  EC27  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11976                           
 11977                           ;usb_device.c: 760: {UEIR = 0;};
 11978  011104  0E00               	movlw	0
 11979  011106  6E63               	movwf	3939,c	;volatile
 11980  011108                     i2l7181:
 11981                           
 11982                           ;usb_device.c: 768: }
 11983                           ;usb_device.c: 775: if(USBDeviceState < DEFAULT_STATE)
 11984  011108  0E04               	movlw	4
 11985  01110A  6024               	cpfslt	_USBDeviceState,c	;volatile
 11986  01110C  D002               	goto	i2l154
 11987                           
 11988                           ;usb_device.c: 776: {
 11989                           ;usb_device.c: 777: {PIR2bits.USBIF = 0;};
 11990  01110E  98A1               	bcf	4001,4,c	;volatile
 11991                           
 11992                           ;usb_device.c: 778: return;
 11993  011110  0012               	return	
 11994  011112                     i2l154:
 11995                           
 11996                           ;usb_device.c: 779: }
 11997                           ;usb_device.c: 784: if(UIEbits.TRNIE)
 11998  011112  010F               	movlb	15	; () banked
 11999  011114  A736               	btfss	54,3,b	;volatile
 12000  011116  D03B               	goto	i2l155
 12001                           
 12002                           ; BSR set to: 15
 12003                           ;usb_device.c: 785: {
 12004                           ;usb_device.c: 786: for(i = 0; i < 4u; i++)
 12005  011118  0E00               	movlw	0
 12006  01111A  6E4B               	movwf	USBDeviceTasks@i,c
 12007  01111C                     i2l7187:
 12008                           
 12009                           ; BSR set to: 15
 12010  01111C  0E03               	movlw	3
 12011  01111E  644B               	cpfsgt	USBDeviceTasks@i,c
 12012  011120  D001               	goto	i2l156
 12013  011122  D035               	goto	i2l155
 12014  011124                     i2l156:
 12015                           
 12016                           ;usb_device.c: 787: {
 12017                           ;usb_device.c: 788: if(UIRbits.TRNIF)
 12018  011124  A662               	btfss	3938,3,c	;volatile
 12019  011126  D033               	goto	i2l155
 12020                           
 12021                           ;usb_device.c: 789: {
 12022                           ;usb_device.c: 791: USTATcopy.Val = USTAT;
 12023  011128  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 12024                           
 12025                           ;usb_device.c: 792: endpoint_number = USTATcopy.endpoint_number;
 12026  01112C  302D               	rrcf	_USTATcopy,w,c	;volatile
 12027  01112E  32E8               	rrcf	wreg,f,c
 12028  011130  32E8               	rrcf	wreg,f,c
 12029  011132  0B0F               	andlw	15
 12030  011134  6E2A               	movwf	_endpoint_number,c	;volatile
 12031                           
 12032                           ;usb_device.c: 794: (UIR &= 0xF7);
 12033  011136  9662               	bcf	3938,3,c	;volatile
 12034                           
 12035                           ;usb_device.c: 799: if(USTATcopy.direction == 0)
 12036  011138  B42D               	btfsc	_USTATcopy,2,c	;volatile
 12037  01113A  D00A               	goto	i2l7201
 12038                           
 12039                           ;usb_device.c: 800: {
 12040                           ;usb_device.c: 801: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 12041  01113C  502A               	movf	_endpoint_number,w,c	;volatile
 12042  01113E  0D01               	mullw	1
 12043  011140  0EA5               	movlw	low _ep_data_out
 12044  011142  24F3               	addwf	prodl,w,c
 12045  011144  6ED9               	movwf	fsr2l,c
 12046  011146  0E00               	movlw	high _ep_data_out
 12047  011148  20F4               	addwfc	prodh,w,c
 12048  01114A  6EDA               	movwf	fsr2h,c
 12049  01114C  0100               	movlb	0	; () banked
 12050  01114E  D008               	goto	L4
 12051  011150                     i2l7201:
 12052                           
 12053                           ;usb_device.c: 803: else
 12054                           ;usb_device.c: 804: {
 12055                           ;usb_device.c: 805: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 12056  011150  502A               	movf	_endpoint_number,w,c	;volatile
 12057  011152  0D01               	mullw	1
 12058  011154  0E16               	movlw	low _ep_data_in
 12059  011156  24F3               	addwf	prodl,w,c
 12060  011158  6ED9               	movwf	fsr2l,c
 12061  01115A  0E00               	movlw	high _ep_data_in
 12062  01115C  20F4               	addwfc	prodh,w,c
 12063  01115E  6EDA               	movwf	fsr2h,c
 12064  011160                     L4:
 12065  011160  70DF               	btg	indf2,0,c
 12066                           
 12067                           ;usb_device.c: 806: }
 12068                           ;usb_device.c: 811: if(endpoint_number == 0)
 12069  011162  502A               	movf	_endpoint_number,w,c	;volatile
 12070  011164  A4D8               	btfss	status,2,c
 12071  011166  D003               	goto	i2l7207
 12072                           
 12073                           ;usb_device.c: 812: {
 12074                           ;usb_device.c: 813: USBCtrlEPService();
 12075  011168  ECE9  F090         	call	_USBCtrlEPService	;wreg free
 12076                           
 12077                           ;usb_device.c: 814: }
 12078  01116C  D00E               	goto	i2l7209
 12079  01116E                     i2l7207:
 12080                           
 12081                           ;usb_device.c: 815: else
 12082                           ;usb_device.c: 816: {
 12083                           ;usb_device.c: 817: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 12084  01116E  0E00               	movlw	0
 12085  011170  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12086  011172  0E72               	movlw	114
 12087  011174  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12088  011176  0E2D               	movlw	low _USTATcopy
 12089  011178  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12090  01117A  0E00               	movlw	high _USTATcopy
 12091  01117C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12092  01117E  0E00               	movlw	0
 12093  011180  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12094  011182  0E00               	movlw	0
 12095  011184  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12096  011186  EC27  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12097  01118A                     i2l7209:
 12098  01118A  2A4B               	incf	USBDeviceTasks@i,f,c
 12099  01118C  D7C7               	goto	i2l7187
 12100  01118E                     i2l155:
 12101                           
 12102                           ;usb_device.c: 823: }
 12103                           ;usb_device.c: 824: }
 12104                           ;usb_device.c: 825: }
 12105                           ;usb_device.c: 827: {PIR2bits.USBIF = 0;};
 12106  01118E  98A1               	bcf	4001,4,c	;volatile
 12107  011190  0012               	return		;funcret
 12108  011192                     __end_of_USBDeviceTasks:
 12109                           	opt stack 0
 12110                           pclatu	equ	0xFFB
 12111                           pclath	equ	0xFFA
 12112                           tblptru	equ	0xFF8
 12113                           tblptrh	equ	0xFF7
 12114                           tblptrl	equ	0xFF6
 12115                           tablat	equ	0xFF5
 12116                           prodh	equ	0xFF4
 12117                           prodl	equ	0xFF3
 12118                           intcon	equ	0xFF2
 12119                           intcon2	equ	0xFF1
 12120                           indf0	equ	0xFEF
 12121                           postinc0	equ	0xFEE
 12122                           fsr0h	equ	0xFEA
 12123                           fsr0l	equ	0xFE9
 12124                           wreg	equ	0xFE8
 12125                           indf1	equ	0xFE7
 12126                           postinc1	equ	0xFE6
 12127                           postdec1	equ	0xFE5
 12128                           fsr1h	equ	0xFE2
 12129                           fsr1l	equ	0xFE1
 12130                           indf2	equ	0xFDF
 12131                           postinc2	equ	0xFDE
 12132                           postdec2	equ	0xFDD
 12133                           plusw2	equ	0xFDB
 12134                           fsr2h	equ	0xFDA
 12135                           fsr2l	equ	0xFD9
 12136                           status	equ	0xFD8
 12137                           
 12138 ;; *************** function i2_USBDeviceInit *****************
 12139 ;; Defined at:
 12140 ;;		line 299 in file "../My_library/USB_CDC/usb/usb_device.c"
 12141 ;; Parameters:    Size  Location     Type
 12142 ;;		None
 12143 ;; Auto vars:     Size  Location     Type
 12144 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 12145 ;; Return value:  Size  Location     Type
 12146 ;;		None               void
 12147 ;; Registers used:
 12148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12149 ;; Tracked objects:
 12150 ;;		On entry : 0/0
 12151 ;;		On exit  : 0/0
 12152 ;;		Unchanged: 0/0
 12153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12158 ;;Total ram usage:        1 bytes
 12159 ;; Hardware stack levels used:    1
 12160 ;; Hardware stack levels required when called:    1
 12161 ;; This function calls:
 12162 ;;		i2_memset
 12163 ;; This function is called by:
 12164 ;;		_USBDeviceTasks
 12165 ;; This function uses a non-reentrant model
 12166 ;;
 12167                           
 12168                           	psect	text63
 12169  0112D8                     __ptext63:
 12170                           	opt stack 0
 12171  0112D8                     i2_USBDeviceInit:
 12172                           	opt stack 20
 12173                           
 12174                           ;usb_device.c: 301: uint8_t i;
 12175                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 12176                           
 12177                           ;incstack = 0
 12178  0112D8  98A0               	bcf	4000,4,c	;volatile
 12179                           
 12180                           ;usb_device.c: 306: {UEIR = 0;};
 12181  0112DA  0E00               	movlw	0
 12182  0112DC  6E63               	movwf	3939,c	;volatile
 12183                           
 12184                           ;usb_device.c: 309: {UIR = 0;};
 12185  0112DE  0E00               	movlw	0
 12186  0112E0  6E62               	movwf	3938,c	;volatile
 12187                           
 12188                           ;usb_device.c: 312: UEP0 = 0;
 12189  0112E2  0E00               	movlw	0
 12190  0112E4  010F               	movlb	15	; () banked
 12191  0112E6  6F26               	movwf	38,b	;volatile
 12192                           
 12193                           ; BSR set to: 15
 12194                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 12195  0112E8  0E27               	movlw	39
 12196  0112EA  6E2E               	movwf	i2memset@p1,c
 12197  0112EC  0E0F               	movlw	15
 12198  0112EE  6E2F               	movwf	i2memset@p1+1,c
 12199  0112F0  0E00               	movlw	0
 12200  0112F2  6E31               	movwf	i2memset@c+1,c
 12201  0112F4  0E00               	movlw	0
 12202  0112F6  6E30               	movwf	i2memset@c,c
 12203  0112F8  0E00               	movlw	0
 12204  0112FA  6E33               	movwf	i2memset@n+1,c
 12205  0112FC  0E02               	movlw	2
 12206  0112FE  6E32               	movwf	i2memset@n,c
 12207  011300  EC99  F09B         	call	i2_memset	;wreg free
 12208                           
 12209                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12210  011304  0E16               	movlw	22
 12211  011306  010F               	movlb	15	; () banked
 12212  011308  6F39               	movwf	57,b	;volatile
 12213                           
 12214                           ; BSR set to: 15
 12215  01130A  0E9F               	movlw	159
 12216  01130C  010F               	movlb	15	; () banked
 12217  01130E  6F37               	movwf	55,b	;volatile
 12218                           
 12219                           ; BSR set to: 15
 12220  011310  0E7B               	movlw	123
 12221  011312  010F               	movlb	15	; () banked
 12222  011314  6F36               	movwf	54,b	;volatile
 12223                           
 12224                           ; BSR set to: 15
 12225                           ;usb_device.c: 319: ;
 12226                           ;usb_device.c: 322: ;
 12227                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 12228  011316  0E00               	movlw	0
 12229  011318  6E36               	movwf	i2USBDeviceInit@i,c
 12230  01131A                     i2l7045:
 12231                           
 12232                           ; BSR set to: 15
 12233  01131A  0E0B               	movlw	11
 12234  01131C  6436               	cpfsgt	i2USBDeviceInit@i,c
 12235  01131E  D001               	goto	i2l7049
 12236  011320  D00E               	goto	i2l132
 12237  011322                     i2l7049:
 12238                           
 12239                           ;usb_device.c: 326: {
 12240                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 12241  011322  5036               	movf	i2USBDeviceInit@i,w,c
 12242  011324  0D04               	mullw	4
 12243  011326  0E00               	movlw	0
 12244  011328  24F3               	addwf	prodl,w,c
 12245  01132A  6ED9               	movwf	fsr2l,c
 12246  01132C  0E0D               	movlw	13
 12247  01132E  20F4               	addwfc	prodh,w,c
 12248  011330  6EDA               	movwf	fsr2h,c
 12249  011332  6ADE               	clrf	postinc2,c
 12250  011334  6ADE               	clrf	postinc2,c
 12251  011336  6ADE               	clrf	postinc2,c
 12252  011338  6ADD               	clrf	postdec2,c
 12253  01133A  2A36               	incf	i2USBDeviceInit@i,f,c
 12254  01133C  D7EE               	goto	i2l7045
 12255  01133E                     i2l132:
 12256                           
 12257                           ;usb_device.c: 328: }
 12258                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 12259  01133E  8C65               	bsf	3941,6,c	;volatile
 12260                           
 12261                           ;usb_device.c: 334: UADDR = 0x00;
 12262  011340  0E00               	movlw	0
 12263  011342  010F               	movlb	15	; () banked
 12264  011344  6F38               	movwf	56,b	;volatile
 12265                           
 12266                           ; BSR set to: 15
 12267                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 12268  011346  9865               	bcf	3941,4,c	;volatile
 12269                           
 12270                           ; BSR set to: 15
 12271                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 12272  011348  9C65               	bcf	3941,6,c	;volatile
 12273                           
 12274                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 12275  01134A  D009               	goto	i2l7069
 12276  01134C                     i2l7061:
 12277                           
 12278                           ;usb_device.c: 344: {
 12279                           ;usb_device.c: 345: (UIR &= 0xF7);
 12280  01134C  9662               	bcf	3938,3,c	;volatile
 12281                           
 12282                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 12283  01134E  0E00               	movlw	0
 12284  011350  6E0D               	movwf	_inPipes+3,c	;volatile
 12285                           
 12286                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 12287  011352  0E00               	movlw	0
 12288  011354  6E04               	movwf	_outPipes+3,c	;volatile
 12289                           
 12290                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 12291  011356  0E00               	movlw	0
 12292  011358  6E06               	movwf	_outPipes+5,c	;volatile
 12293  01135A  0E00               	movlw	0
 12294  01135C  6E05               	movwf	_outPipes+4,c	;volatile
 12295  01135E                     i2l7069:
 12296  01135E  B662               	btfsc	3938,3,c	;volatile
 12297  011360  D7F5               	goto	i2l7061
 12298                           
 12299                           ;usb_device.c: 350: }
 12300                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 12301  011362  0E01               	movlw	1
 12302  011364  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12303                           
 12304                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 12305  011366  0E01               	movlw	1
 12306  011368  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12307                           
 12308                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 12309  01136A  0E00               	movlw	0
 12310  01136C  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12311                           
 12312                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 12313  01136E  0E00               	movlw	0
 12314  011370  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12315                           
 12316                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 12317  011372  0E00               	movlw	0
 12318  011374  0100               	movlb	0	; () banked
 12319  011376  6FBB               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12320                           
 12321                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 12322  011378  0E00               	movlw	0
 12323  01137A  6E36               	movwf	i2USBDeviceInit@i,c
 12324  01137C                     i2l7073:
 12325                           
 12326                           ; BSR set to: 0
 12327  01137C  0E02               	movlw	2
 12328  01137E  6436               	cpfsgt	i2USBDeviceInit@i,c
 12329  011380  D001               	goto	i2l7077
 12330  011382  D02E               	goto	i2l7083
 12331  011384                     i2l7077:
 12332                           
 12333                           ;usb_device.c: 364: {
 12334                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 12335  011384  5036               	movf	i2USBDeviceInit@i,w,c
 12336  011386  0D02               	mullw	2
 12337  011388  0E10               	movlw	low _pBDTEntryIn
 12338  01138A  24F3               	addwf	prodl,w,c
 12339  01138C  6ED9               	movwf	fsr2l,c
 12340  01138E  0E00               	movlw	high _pBDTEntryIn
 12341  011390  20F4               	addwfc	prodh,w,c
 12342  011392  6EDA               	movwf	fsr2h,c
 12343  011394  0E00               	movlw	0
 12344  011396  6EDE               	movwf	postinc2,c
 12345  011398  0E00               	movlw	0
 12346  01139A  6EDD               	movwf	postdec2,c
 12347                           
 12348                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 12349  01139C  5036               	movf	i2USBDeviceInit@i,w,c
 12350  01139E  0D02               	mullw	2
 12351  0113A0  0E9F               	movlw	low _pBDTEntryOut
 12352  0113A2  24F3               	addwf	prodl,w,c
 12353  0113A4  6ED9               	movwf	fsr2l,c
 12354  0113A6  0E00               	movlw	high _pBDTEntryOut
 12355  0113A8  20F4               	addwfc	prodh,w,c
 12356  0113AA  6EDA               	movwf	fsr2h,c
 12357  0113AC  0E00               	movlw	0
 12358  0113AE  6EDE               	movwf	postinc2,c
 12359  0113B0  0E00               	movlw	0
 12360  0113B2  6EDD               	movwf	postdec2,c
 12361                           
 12362                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 12363  0113B4  5036               	movf	i2USBDeviceInit@i,w,c
 12364  0113B6  0D01               	mullw	1
 12365  0113B8  0E16               	movlw	low _ep_data_in
 12366  0113BA  24F3               	addwf	prodl,w,c
 12367  0113BC  6ED9               	movwf	fsr2l,c
 12368  0113BE  0E00               	movlw	high _ep_data_in
 12369  0113C0  20F4               	addwfc	prodh,w,c
 12370  0113C2  6EDA               	movwf	fsr2h,c
 12371  0113C4  0E00               	movlw	0
 12372  0113C6  6EDF               	movwf	indf2,c
 12373                           
 12374                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 12375  0113C8  5036               	movf	i2USBDeviceInit@i,w,c
 12376  0113CA  0D01               	mullw	1
 12377  0113CC  0EA5               	movlw	low _ep_data_out
 12378  0113CE  24F3               	addwf	prodl,w,c
 12379  0113D0  6ED9               	movwf	fsr2l,c
 12380  0113D2  0E00               	movlw	high _ep_data_out
 12381  0113D4  20F4               	addwfc	prodh,w,c
 12382  0113D6  6EDA               	movwf	fsr2h,c
 12383  0113D8  0E00               	movlw	0
 12384  0113DA  6EDF               	movwf	indf2,c
 12385  0113DC  2A36               	incf	i2USBDeviceInit@i,f,c
 12386  0113DE  D7CE               	goto	i2l7073
 12387  0113E0                     i2l7083:
 12388                           
 12389                           ;usb_device.c: 369: }
 12390                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12391  0113E0  0E08               	movlw	8
 12392  0113E2  6E10               	movwf	_pBDTEntryIn,c
 12393  0113E4  0E0D               	movlw	13
 12394  0113E6  6E11               	movwf	_pBDTEntryIn+1,c
 12395                           
 12396                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 12397  0113E8  0E16               	movlw	22
 12398  0113EA  010F               	movlb	15	; () banked
 12399  0113EC  6F26               	movwf	38,b	;volatile
 12400                           
 12401                           ; BSR set to: 15
 12402                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12403  0113EE  0E0D               	movlw	13
 12404  0113F0  010D               	movlb	13	; () banked
 12405  0113F2  6F03               	movwf	3,b	;volatile
 12406  0113F4  0E30               	movlw	48
 12407  0113F6  6F02               	movwf	2,b	;volatile
 12408                           
 12409                           ; BSR set to: 13
 12410                           ;usb_device.c: 377: BDT[0].CNT = 8;
 12411  0113F8  0E08               	movlw	8
 12412  0113FA  010D               	movlb	13	; () banked
 12413  0113FC  6F01               	movwf	1,b	;volatile
 12414                           
 12415                           ; BSR set to: 13
 12416                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 12417  0113FE  0E04               	movlw	4
 12418  011400  010D               	movlb	13	; () banked
 12419  011402  6F00               	movwf	0,b	;volatile
 12420                           
 12421                           ; BSR set to: 13
 12422                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 12423  011404  010D               	movlb	13	; () banked
 12424  011406  8F00               	bsf	0,7,b	;volatile
 12425                           
 12426                           ; BSR set to: 13
 12427                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 12428  011408  0E00               	movlw	0
 12429  01140A  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 12430                           
 12431                           ; BSR set to: 13
 12432                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 12433  01140C  0E00               	movlw	0
 12434  01140E  6E24               	movwf	_USBDeviceState,c	;volatile
 12435                           
 12436                           ; BSR set to: 13
 12437  011410  0012               	return		;funcret
 12438  011412                     __end_ofi2_USBDeviceInit:
 12439                           	opt stack 0
 12440                           pclatu	equ	0xFFB
 12441                           pclath	equ	0xFFA
 12442                           tblptru	equ	0xFF8
 12443                           tblptrh	equ	0xFF7
 12444                           tblptrl	equ	0xFF6
 12445                           tablat	equ	0xFF5
 12446                           prodh	equ	0xFF4
 12447                           prodl	equ	0xFF3
 12448                           intcon	equ	0xFF2
 12449                           intcon2	equ	0xFF1
 12450                           indf0	equ	0xFEF
 12451                           postinc0	equ	0xFEE
 12452                           fsr0h	equ	0xFEA
 12453                           fsr0l	equ	0xFE9
 12454                           wreg	equ	0xFE8
 12455                           indf1	equ	0xFE7
 12456                           postinc1	equ	0xFE6
 12457                           postdec1	equ	0xFE5
 12458                           fsr1h	equ	0xFE2
 12459                           fsr1l	equ	0xFE1
 12460                           indf2	equ	0xFDF
 12461                           postinc2	equ	0xFDE
 12462                           postdec2	equ	0xFDD
 12463                           plusw2	equ	0xFDB
 12464                           fsr2h	equ	0xFDA
 12465                           fsr2l	equ	0xFD9
 12466                           status	equ	0xFD8
 12467                           
 12468 ;; *************** function _USBWakeFromSuspend *****************
 12469 ;; Defined at:
 12470 ;;		line 2303 in file "../My_library/USB_CDC/usb/usb_device.c"
 12471 ;; Parameters:    Size  Location     Type
 12472 ;;		None
 12473 ;; Auto vars:     Size  Location     Type
 12474 ;;		None
 12475 ;; Return value:  Size  Location     Type
 12476 ;;		None               void
 12477 ;; Registers used:
 12478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12479 ;; Tracked objects:
 12480 ;;		On entry : 0/0
 12481 ;;		On exit  : 0/0
 12482 ;;		Unchanged: 0/0
 12483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12488 ;;Total ram usage:        0 bytes
 12489 ;; Hardware stack levels used:    1
 12490 ;; Hardware stack levels required when called:    5
 12491 ;; This function calls:
 12492 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12493 ;; This function is called by:
 12494 ;;		_USBDeviceTasks
 12495 ;; This function uses a non-reentrant model
 12496 ;;
 12497                           
 12498                           	psect	text64
 12499  01364C                     __ptext64:
 12500                           	opt stack 0
 12501  01364C                     _USBWakeFromSuspend:
 12502                           	opt stack 16
 12503                           
 12504                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 12505                           
 12506                           ; BSR set to: 13
 12507                           ;incstack = 0
 12508  01364C  0E00               	movlw	0
 12509  01364E  0100               	movlb	0	; () banked
 12510  013650  6FBB               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12514  013652  0E00               	movlw	0
 12515  013654  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12516  013656  0E74               	movlw	116
 12517  013658  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12518  01365A  0E00               	movlw	0
 12519  01365C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12520  01365E  0E00               	movlw	0
 12521  013660  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12522  013662  0E00               	movlw	0
 12523  013664  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12524  013666  0E00               	movlw	0
 12525  013668  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12526  01366A  EC27  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12527                           
 12528                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 12529  01366E  9265               	bcf	3941,1,c	;volatile
 12530                           
 12531                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 12532  013670  010F               	movlb	15	; () banked
 12533  013672  9536               	bcf	54,2,b	;volatile
 12534                           
 12535                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 12536  013674  D001               	goto	i2l6869
 12537  013676                     i2l6867:
 12538                           
 12539                           ;usb_device.c: 2343: {
 12540                           ;usb_device.c: 2344: (UIR &= 0xFB);
 12541  013676  9462               	bcf	3938,2,c	;volatile
 12542  013678                     i2l6869:
 12543  013678  A462               	btfss	3938,2,c	;volatile
 12544  01367A  0012               	return	
 12545  01367C  D7FC               	goto	i2l6867
 12546  01367E                     __end_of_USBWakeFromSuspend:
 12547                           	opt stack 0
 12548                           pclatu	equ	0xFFB
 12549                           pclath	equ	0xFFA
 12550                           tblptru	equ	0xFF8
 12551                           tblptrh	equ	0xFF7
 12552                           tblptrl	equ	0xFF6
 12553                           tablat	equ	0xFF5
 12554                           prodh	equ	0xFF4
 12555                           prodl	equ	0xFF3
 12556                           intcon	equ	0xFF2
 12557                           intcon2	equ	0xFF1
 12558                           indf0	equ	0xFEF
 12559                           postinc0	equ	0xFEE
 12560                           fsr0h	equ	0xFEA
 12561                           fsr0l	equ	0xFE9
 12562                           wreg	equ	0xFE8
 12563                           indf1	equ	0xFE7
 12564                           postinc1	equ	0xFE6
 12565                           postdec1	equ	0xFE5
 12566                           fsr1h	equ	0xFE2
 12567                           fsr1l	equ	0xFE1
 12568                           indf2	equ	0xFDF
 12569                           postinc2	equ	0xFDE
 12570                           postdec2	equ	0xFDD
 12571                           plusw2	equ	0xFDB
 12572                           fsr2h	equ	0xFDA
 12573                           fsr2l	equ	0xFD9
 12574                           status	equ	0xFD8
 12575                           
 12576 ;; *************** function _USBSuspend *****************
 12577 ;; Defined at:
 12578 ;;		line 2246 in file "../My_library/USB_CDC/usb/usb_device.c"
 12579 ;; Parameters:    Size  Location     Type
 12580 ;;		None
 12581 ;; Auto vars:     Size  Location     Type
 12582 ;;		None
 12583 ;; Return value:  Size  Location     Type
 12584 ;;		None               void
 12585 ;; Registers used:
 12586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12587 ;; Tracked objects:
 12588 ;;		On entry : 0/0
 12589 ;;		On exit  : 0/0
 12590 ;;		Unchanged: 0/0
 12591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12596 ;;Total ram usage:        0 bytes
 12597 ;; Hardware stack levels used:    1
 12598 ;; Hardware stack levels required when called:    5
 12599 ;; This function calls:
 12600 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12601 ;; This function is called by:
 12602 ;;		_USBDeviceTasks
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606                           	psect	text65
 12607  013706                     __ptext65:
 12608                           	opt stack 0
 12609  013706                     _USBSuspend:
 12610                           	opt stack 16
 12611                           
 12612                           ;usb_device.c: 2271: UIEbits.ACTVIE = 1;
 12613                           
 12614                           ;incstack = 0
 12615  013706  010F               	movlb	15	; () banked
 12616  013708  8536               	bsf	54,2,b	;volatile
 12617                           
 12618                           ; BSR set to: 15
 12619                           ;usb_device.c: 2272: (UIR &= 0xEF);
 12620  01370A  9862               	bcf	3938,4,c	;volatile
 12621                           
 12622                           ; BSR set to: 15
 12623                           ;usb_device.c: 2275: UCONbits.SUSPND = 1;
 12624  01370C  8265               	bsf	3941,1,c	;volatile
 12625                           
 12626                           ; BSR set to: 15
 12627                           ;usb_device.c: 2278: USBBusIsSuspended = 1;
 12628  01370E  0E01               	movlw	1
 12629  013710  0100               	movlb	0	; () banked
 12630  013712  6FBB               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12631                           
 12632                           ; BSR set to: 0
 12633                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12634  013714  0E00               	movlw	0
 12635  013716  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12636  013718  0E75               	movlw	117
 12637  01371A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12638  01371C  0E00               	movlw	0
 12639  01371E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12640  013720  0E00               	movlw	0
 12641  013722  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12642  013724  0E00               	movlw	0
 12643  013726  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12644  013728  0E00               	movlw	0
 12645  01372A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12646  01372C  EC27  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12647  013730  0012               	return		;funcret
 12648  013732                     __end_of_USBSuspend:
 12649                           	opt stack 0
 12650                           pclatu	equ	0xFFB
 12651                           pclath	equ	0xFFA
 12652                           tblptru	equ	0xFF8
 12653                           tblptrh	equ	0xFF7
 12654                           tblptrl	equ	0xFF6
 12655                           tablat	equ	0xFF5
 12656                           prodh	equ	0xFF4
 12657                           prodl	equ	0xFF3
 12658                           intcon	equ	0xFF2
 12659                           intcon2	equ	0xFF1
 12660                           indf0	equ	0xFEF
 12661                           postinc0	equ	0xFEE
 12662                           fsr0h	equ	0xFEA
 12663                           fsr0l	equ	0xFE9
 12664                           wreg	equ	0xFE8
 12665                           indf1	equ	0xFE7
 12666                           postinc1	equ	0xFE6
 12667                           postdec1	equ	0xFE5
 12668                           fsr1h	equ	0xFE2
 12669                           fsr1l	equ	0xFE1
 12670                           indf2	equ	0xFDF
 12671                           postinc2	equ	0xFDE
 12672                           postdec2	equ	0xFDD
 12673                           plusw2	equ	0xFDB
 12674                           fsr2h	equ	0xFDA
 12675                           fsr2l	equ	0xFD9
 12676                           status	equ	0xFD8
 12677                           
 12678 ;; *************** function _USBStallHandler *****************
 12679 ;; Defined at:
 12680 ;;		line 2203 in file "../My_library/USB_CDC/usb/usb_device.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;		None
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;		None
 12685 ;; Return value:  Size  Location     Type
 12686 ;;		None               void
 12687 ;; Registers used:
 12688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12689 ;; Tracked objects:
 12690 ;;		On entry : 0/0
 12691 ;;		On exit  : 0/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12697 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12698 ;;Total ram usage:        1 bytes
 12699 ;; Hardware stack levels used:    1
 12700 ;; This function calls:
 12701 ;;		Nothing
 12702 ;; This function is called by:
 12703 ;;		_USBDeviceTasks
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           	psect	text66
 12708  013442                     __ptext66:
 12709                           	opt stack 0
 12710  013442                     _USBStallHandler:
 12711                           	opt stack 21
 12712                           
 12713                           ;usb_device.c: 2215: if(UEP0bits.EPSTALL == 1)
 12714                           
 12715                           ;incstack = 0
 12716  013442  010F               	movlb	15	; () banked
 12717  013444  A126               	btfss	38,0,b	;volatile
 12718  013446  D01E               	goto	i2l294
 12719                           
 12720                           ; BSR set to: 15
 12721                           ;usb_device.c: 2216: {
 12722                           ;usb_device.c: 2218: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12723  013448  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12724  01344C  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12725  013450  0E80               	movlw	128
 12726  013452  18DE               	xorwf	postinc2,w,c
 12727  013454  A4D8               	btfss	status,2,c
 12728  013456  D014               	goto	i2l6891
 12729                           
 12730                           ; BSR set to: 15
 12731  013458  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 12732  01345C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12733  013460  0E84               	movlw	132
 12734  013462  18DE               	xorwf	postinc2,w,c
 12735  013464  A4D8               	btfss	status,2,c
 12736  013466  D00C               	goto	i2l6891
 12737                           
 12738                           ; BSR set to: 15
 12739                           ;usb_device.c: 2219: {
 12740                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12741  013468  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12742  01346C  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12743  013470  0E0C               	movlw	12
 12744  013472  6EDF               	movwf	indf2,c
 12745                           
 12746                           ; BSR set to: 15
 12747                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12748  013474  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12749  013478  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12750  01347C  0E00               	movlw	0
 12751  01347E  8EDB               	bsf	plusw2,7,c
 12752  013480                     i2l6891:
 12753                           
 12754                           ; BSR set to: 15
 12755                           ;usb_device.c: 2223: }
 12756                           ;usb_device.c: 2224: UEP0bits.EPSTALL = 0;
 12757  013480  010F               	movlb	15	; () banked
 12758  013482  9126               	bcf	38,0,b	;volatile
 12759  013484                     i2l294:
 12760                           
 12761                           ; BSR set to: 15
 12762                           ;usb_device.c: 2225: }
 12763                           ;usb_device.c: 2227: (UIR &= 0xDF);
 12764  013484  9A62               	bcf	3938,5,c	;volatile
 12765                           
 12766                           ; BSR set to: 15
 12767  013486  0012               	return		;funcret
 12768  013488                     __end_of_USBStallHandler:
 12769                           	opt stack 0
 12770                           pclatu	equ	0xFFB
 12771                           pclath	equ	0xFFA
 12772                           tblptru	equ	0xFF8
 12773                           tblptrh	equ	0xFF7
 12774                           tblptrl	equ	0xFF6
 12775                           tablat	equ	0xFF5
 12776                           prodh	equ	0xFF4
 12777                           prodl	equ	0xFF3
 12778                           intcon	equ	0xFF2
 12779                           intcon2	equ	0xFF1
 12780                           indf0	equ	0xFEF
 12781                           postinc0	equ	0xFEE
 12782                           fsr0h	equ	0xFEA
 12783                           fsr0l	equ	0xFE9
 12784                           wreg	equ	0xFE8
 12785                           indf1	equ	0xFE7
 12786                           postinc1	equ	0xFE6
 12787                           postdec1	equ	0xFE5
 12788                           fsr1h	equ	0xFE2
 12789                           fsr1l	equ	0xFE1
 12790                           indf2	equ	0xFDF
 12791                           postinc2	equ	0xFDE
 12792                           postdec2	equ	0xFDD
 12793                           plusw2	equ	0xFDB
 12794                           fsr2h	equ	0xFDA
 12795                           fsr2l	equ	0xFD9
 12796                           status	equ	0xFD8
 12797                           
 12798 ;; *************** function _USBCtrlEPService *****************
 12799 ;; Defined at:
 12800 ;;		line 2370 in file "../My_library/USB_CDC/usb/usb_device.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;		None
 12803 ;; Auto vars:     Size  Location     Type
 12804 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 12805 ;; Return value:  Size  Location     Type
 12806 ;;		None               void
 12807 ;; Registers used:
 12808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12817 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12818 ;;Total ram usage:        3 bytes
 12819 ;; Hardware stack levels used:    1
 12820 ;; Hardware stack levels required when called:    8
 12821 ;; This function calls:
 12822 ;;		_USBCtrlTrfInHandler
 12823 ;;		_USBCtrlTrfOutHandler
 12824 ;;		_USBCtrlTrfSetupHandler
 12825 ;; This function is called by:
 12826 ;;		_USBDeviceTasks
 12827 ;; This function uses a non-reentrant model
 12828 ;;
 12829                           
 12830                           	psect	text67
 12831  0121D2                     __ptext67:
 12832                           	opt stack 0
 12833  0121D2                     _USBCtrlEPService:
 12834                           	opt stack 13
 12835                           
 12836                           ;usb_device.c: 2376: USBStatusStageTimeoutCounter = (uint8_t)45;
 12837                           
 12838                           ; BSR set to: 15
 12839                           ;incstack = 0
 12840  0121D2  0E2D               	movlw	45
 12841  0121D4  6E27               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 12842                           
 12843                           ;usb_device.c: 2380: if((USTATcopy.Val & ~0x02) == 0x00)
 12844  0121D6  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 12845  0121DA  0EFD               	movlw	253
 12846  0121DC  1648               	andwf	??_USBCtrlEPService,f,c
 12847  0121DE  A4D8               	btfss	status,2,c
 12848  0121E0  D057               	goto	i2l6925
 12849                           
 12850                           ;usb_device.c: 2381: {
 12851                           ;usb_device.c: 2384: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 12852  0121E2  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 12853  0121E6  90D8               	bcf	status,0,c
 12854  0121E8  3248               	rrcf	??_USBCtrlEPService,f,c
 12855  0121EA  0E3F               	movlw	63
 12856  0121EC  1648               	andwf	??_USBCtrlEPService,f,c
 12857  0121EE  5048               	movf	??_USBCtrlEPService,w,c
 12858  0121F0  0D04               	mullw	4
 12859  0121F2  0E00               	movlw	0
 12860  0121F4  24F3               	addwf	prodl,w,c
 12861  0121F6  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 12862  0121F8  0E0D               	movlw	13
 12863  0121FA  20F4               	addwfc	prodh,w,c
 12864  0121FC  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 12865                           
 12866                           ;usb_device.c: 2392: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12867  0121FE  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12868  012202  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12869                           
 12870                           ;usb_device.c: 2394: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 12871  012206  0E04               	movlw	4
 12872  012208  1A1B               	xorwf	_pBDTEntryEP0OutNext,f,c
 12873                           
 12874                           ;usb_device.c: 2397: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12875  01220A  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12876  01220E  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12877  012212  30DF               	rrcf	indf2,w,c
 12878  012214  32E8               	rrcf	wreg,f,c
 12879  012216  0B0F               	andlw	15
 12880  012218  0A0D               	xorlw	13
 12881  01221A  A4D8               	btfss	status,2,c
 12882  01221C  D036               	goto	i2l6923
 12883                           
 12884                           ;usb_device.c: 2398: {
 12885                           ;usb_device.c: 2399: unsigned char setup_cnt;
 12886                           ;usb_device.c: 2405: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 12887  01221E  0E00               	movlw	0
 12888  012220  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 12889  012222                     i2l6907:
 12890  012222  0E07               	movlw	7
 12891  012224  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 12892  012226  D001               	goto	i2l6911
 12893  012228  D023               	goto	i2l6919
 12894  01222A                     i2l6911:
 12895                           
 12896                           ;usb_device.c: 2406: {
 12897                           ;usb_device.c: 2407: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 12898  01222A  EE20 F002          	lfsr	2,2
 12899  01222E  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 12900  012230  26D9               	addwf	fsr2l,f,c
 12901  012232  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12902  012234  22DA               	addwfc	fsr2h,f,c
 12903  012236  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 12904  01223A  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 12905  01223E  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 12906  012242  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 12907  012246  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 12908  012248  0D01               	mullw	1
 12909  01224A  0E30               	movlw	48
 12910  01224C  24F3               	addwf	prodl,w,c
 12911  01224E  6EE1               	movwf	fsr1l,c
 12912  012250  0E0D               	movlw	13
 12913  012252  20F4               	addwfc	prodh,w,c
 12914  012254  6EE2               	movwf	fsr1h,c
 12915  012256  CFDF FFE7          	movff	indf2,indf1
 12916                           
 12917                           ;usb_device.c: 2408: pBDTEntryEP0OutCurrent->ADR++;
 12918  01225A  EE20 F002          	lfsr	2,2
 12919  01225E  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 12920  012260  26D9               	addwf	fsr2l,f,c
 12921  012262  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12922  012264  22DA               	addwfc	fsr2h,f,c
 12923  012266  2ADE               	incf	postinc2,f,c
 12924  012268  0E00               	movlw	0
 12925  01226A  22DD               	addwfc	postdec2,f,c
 12926  01226C  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 12927  01226E  D7D9               	goto	i2l6907
 12928  012270                     i2l6919:
 12929                           
 12930                           ;usb_device.c: 2409: }
 12931                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12932  012270  EE20 F002          	lfsr	2,2
 12933  012274  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 12934  012276  26D9               	addwf	fsr2l,f,c
 12935  012278  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12936  01227A  22DA               	addwfc	fsr2h,f,c
 12937  01227C  0E30               	movlw	48
 12938  01227E  6EDE               	movwf	postinc2,c
 12939  012280  0E0D               	movlw	13
 12940  012282  6EDD               	movwf	postdec2,c
 12941                           
 12942                           ;usb_device.c: 2413: USBCtrlTrfSetupHandler();
 12943  012284  EC6D  F097         	call	_USBCtrlTrfSetupHandler	;wreg free
 12944                           
 12945                           ;usb_device.c: 2414: }
 12946  012288  0012               	return	
 12947  01228A                     i2l6923:
 12948                           
 12949                           ;usb_device.c: 2415: else
 12950                           ;usb_device.c: 2416: {
 12951                           ;usb_device.c: 2418: USBCtrlTrfOutHandler();
 12952  01228A  EC55  F099         	call	_USBCtrlTrfOutHandler	;wreg free
 12953                           
 12954                           ;usb_device.c: 2419: }
 12955                           ;usb_device.c: 2420: }
 12956  01228E  0012               	return	
 12957  012290                     i2l6925:
 12958                           
 12959                           ;usb_device.c: 2421: else if((USTATcopy.Val & ~0x02) == 0x04)
 12960  012290  502D               	movf	_USTATcopy,w,c	;volatile
 12961  012292  0BFD               	andlw	253
 12962  012294  0A04               	xorlw	4
 12963  012296  A4D8               	btfss	status,2,c
 12964  012298  0012               	return	
 12965                           
 12966                           ;usb_device.c: 2422: {
 12967                           ;usb_device.c: 2425: USBCtrlTrfInHandler();
 12968  01229A  ECED  F093         	call	_USBCtrlTrfInHandler	;wreg free
 12969  01229E  0012               	return	
 12970  0122A0                     __end_of_USBCtrlEPService:
 12971                           	opt stack 0
 12972                           pclatu	equ	0xFFB
 12973                           pclath	equ	0xFFA
 12974                           tblptru	equ	0xFF8
 12975                           tblptrh	equ	0xFF7
 12976                           tblptrl	equ	0xFF6
 12977                           tablat	equ	0xFF5
 12978                           prodh	equ	0xFF4
 12979                           prodl	equ	0xFF3
 12980                           intcon	equ	0xFF2
 12981                           intcon2	equ	0xFF1
 12982                           indf0	equ	0xFEF
 12983                           postinc0	equ	0xFEE
 12984                           fsr0h	equ	0xFEA
 12985                           fsr0l	equ	0xFE9
 12986                           wreg	equ	0xFE8
 12987                           indf1	equ	0xFE7
 12988                           postinc1	equ	0xFE6
 12989                           postdec1	equ	0xFE5
 12990                           fsr1h	equ	0xFE2
 12991                           fsr1l	equ	0xFE1
 12992                           indf2	equ	0xFDF
 12993                           postinc2	equ	0xFDE
 12994                           postdec2	equ	0xFDD
 12995                           plusw2	equ	0xFDB
 12996                           fsr2h	equ	0xFDA
 12997                           fsr2l	equ	0xFD9
 12998                           status	equ	0xFD8
 12999                           
 13000 ;; *************** function _USBCtrlTrfSetupHandler *****************
 13001 ;; Defined at:
 13002 ;;		line 2470 in file "../My_library/USB_CDC/usb/usb_device.c"
 13003 ;; Parameters:    Size  Location     Type
 13004 ;;		None
 13005 ;; Auto vars:     Size  Location     Type
 13006 ;;		None
 13007 ;; Return value:  Size  Location     Type
 13008 ;;		None               void
 13009 ;; Registers used:
 13010 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13011 ;; Tracked objects:
 13012 ;;		On entry : 0/0
 13013 ;;		On exit  : 0/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13020 ;;Total ram usage:        0 bytes
 13021 ;; Hardware stack levels used:    1
 13022 ;; Hardware stack levels required when called:    7
 13023 ;; This function calls:
 13024 ;;		_USBCheckStdRequest
 13025 ;;		_USBCtrlEPServiceComplete
 13026 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13027 ;; This function is called by:
 13028 ;;		_USBCtrlEPService
 13029 ;; This function uses a non-reentrant model
 13030 ;;
 13031                           
 13032                           	psect	text68
 13033  012EDA                     __ptext68:
 13034                           	opt stack 0
 13035  012EDA                     _USBCtrlTrfSetupHandler:
 13036                           	opt stack 13
 13037                           
 13038                           ;usb_device.c: 2475: shortPacketStatus = 0;
 13039                           
 13040                           ;incstack = 0
 13041  012EDA  0E00               	movlw	0
 13042  012EDC  6E2B               	movwf	_shortPacketStatus,c	;volatile
 13043                           
 13044                           ;usb_device.c: 2476: USBDeferStatusStagePacket = 0;
 13045  012EDE  0E00               	movlw	0
 13046  012EE0  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 13047                           
 13048                           ;usb_device.c: 2477: USBDeferINDataStagePackets = 0;
 13049  012EE2  0E00               	movlw	0
 13050  012EE4  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13051                           
 13052                           ;usb_device.c: 2478: USBDeferOUTDataStagePackets = 0;
 13053  012EE6  0E00               	movlw	0
 13054  012EE8  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13055                           
 13056                           ;usb_device.c: 2479: BothEP0OutUOWNsSet = 0;
 13057  012EEA  0E00               	movlw	0
 13058  012EEC  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 13059                           
 13060                           ;usb_device.c: 2480: controlTransferState = 0;
 13061  012EEE  0E00               	movlw	0
 13062  012EF0  6E29               	movwf	_controlTransferState,c	;volatile
 13063                           
 13064                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13065  012EF2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13066  012EF6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13067  012EFA  0E7F               	movlw	127
 13068  012EFC  16DF               	andwf	indf2,f,c
 13069                           
 13070                           ;usb_device.c: 2490: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13071  012EFE  0E04               	movlw	4
 13072  012F00  1A10               	xorwf	_pBDTEntryIn,f,c
 13073                           
 13074                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13075  012F02  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13076  012F06  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13077  012F0A  0E7F               	movlw	127
 13078  012F0C  16DF               	andwf	indf2,f,c
 13079                           
 13080                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13081  012F0E  0E04               	movlw	4
 13082  012F10  1A10               	xorwf	_pBDTEntryIn,f,c
 13083                           
 13084                           ;usb_device.c: 2493: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 13085  012F12  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13086  012F16  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13087  012F1A  0E7F               	movlw	127
 13088  012F1C  16DF               	andwf	indf2,f,c
 13089                           
 13090                           ;usb_device.c: 2495: inPipes[0].info.Val = 0;
 13091  012F1E  0E00               	movlw	0
 13092  012F20  6E0D               	movwf	_inPipes+3,c	;volatile
 13093                           
 13094                           ;usb_device.c: 2496: inPipes[0].wCount.Val = 0;
 13095  012F22  0E00               	movlw	0
 13096  012F24  6E0F               	movwf	_inPipes+5,c	;volatile
 13097  012F26  0E00               	movlw	0
 13098  012F28  6E0E               	movwf	_inPipes+4,c	;volatile
 13099                           
 13100                           ;usb_device.c: 2497: outPipes[0].info.Val = 0;
 13101  012F2A  0E00               	movlw	0
 13102  012F2C  6E04               	movwf	_outPipes+3,c	;volatile
 13103                           
 13104                           ;usb_device.c: 2498: outPipes[0].wCount.Val = 0;
 13105  012F2E  0E00               	movlw	0
 13106  012F30  6E06               	movwf	_outPipes+5,c	;volatile
 13107  012F32  0E00               	movlw	0
 13108  012F34  6E05               	movwf	_outPipes+4,c	;volatile
 13109                           
 13110                           ;usb_device.c: 2504: USBCheckStdRequest();
 13111  012F36  EC68  F08E         	call	_USBCheckStdRequest	;wreg free
 13112                           
 13113                           ;usb_device.c: 2505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 13114  012F3A  0E00               	movlw	0
 13115  012F3C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13116  012F3E  0E03               	movlw	3
 13117  012F40  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13118  012F42  0E00               	movlw	0
 13119  012F44  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13120  012F46  0E00               	movlw	0
 13121  012F48  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13122  012F4A  0E00               	movlw	0
 13123  012F4C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13124  012F4E  0E00               	movlw	0
 13125  012F50  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13126  012F52  EC27  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13127                           
 13128                           ;usb_device.c: 2518: USBCtrlEPServiceComplete();
 13129  012F56  EC27  F08C         	call	_USBCtrlEPServiceComplete	;wreg free
 13130  012F5A  0012               	return		;funcret
 13131  012F5C                     __end_of_USBCtrlTrfSetupHandler:
 13132                           	opt stack 0
 13133                           pclatu	equ	0xFFB
 13134                           pclath	equ	0xFFA
 13135                           tblptru	equ	0xFF8
 13136                           tblptrh	equ	0xFF7
 13137                           tblptrl	equ	0xFF6
 13138                           tablat	equ	0xFF5
 13139                           prodh	equ	0xFF4
 13140                           prodl	equ	0xFF3
 13141                           intcon	equ	0xFF2
 13142                           intcon2	equ	0xFF1
 13143                           indf0	equ	0xFEF
 13144                           postinc0	equ	0xFEE
 13145                           fsr0h	equ	0xFEA
 13146                           fsr0l	equ	0xFE9
 13147                           wreg	equ	0xFE8
 13148                           indf1	equ	0xFE7
 13149                           postinc1	equ	0xFE6
 13150                           postdec1	equ	0xFE5
 13151                           fsr1h	equ	0xFE2
 13152                           fsr1l	equ	0xFE1
 13153                           indf2	equ	0xFDF
 13154                           postinc2	equ	0xFDE
 13155                           postdec2	equ	0xFDD
 13156                           plusw2	equ	0xFDB
 13157                           fsr2h	equ	0xFDA
 13158                           fsr2l	equ	0xFD9
 13159                           status	equ	0xFD8
 13160                           
 13161 ;; *************** function _USBCtrlEPServiceComplete *****************
 13162 ;; Defined at:
 13163 ;;		line 1617 in file "../My_library/USB_CDC/usb/usb_device.c"
 13164 ;; Parameters:    Size  Location     Type
 13165 ;;		None
 13166 ;; Auto vars:     Size  Location     Type
 13167 ;;		None
 13168 ;; Return value:  Size  Location     Type
 13169 ;;		None               void
 13170 ;; Registers used:
 13171 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13172 ;; Tracked objects:
 13173 ;;		On entry : 0/0
 13174 ;;		On exit  : 0/0
 13175 ;;		Unchanged: 0/0
 13176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13181 ;;Total ram usage:        0 bytes
 13182 ;; Hardware stack levels used:    1
 13183 ;; Hardware stack levels required when called:    2
 13184 ;; This function calls:
 13185 ;;		_USBCtrlEPAllowDataStage
 13186 ;;		_USBCtrlEPAllowStatusStage
 13187 ;; This function is called by:
 13188 ;;		_USBCtrlTrfSetupHandler
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192                           	psect	text69
 13193  01184E                     __ptext69:
 13194                           	opt stack 0
 13195  01184E                     _USBCtrlEPServiceComplete:
 13196                           	opt stack 17
 13197                           
 13198                           ;usb_device.c: 1623: UCONbits.PKTDIS = 0;
 13199                           
 13200                           ;incstack = 0
 13201  01184E  9865               	bcf	3941,4,c	;volatile
 13202                           
 13203                           ;usb_device.c: 1629: if(inPipes[0].info.bits.busy == 0)
 13204  011850  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 13205  011852  D038               	goto	i2l218
 13206                           
 13207                           ;usb_device.c: 1630: {
 13208                           ;usb_device.c: 1631: if(outPipes[0].info.bits.busy == 1)
 13209  011854  AE04               	btfss	_outPipes+3,7,c	;volatile
 13210  011856  D00B               	goto	i2l6059
 13211                           
 13212                           ;usb_device.c: 1632: {
 13213                           ;usb_device.c: 1633: controlTransferState = 2;
 13214  011858  0E02               	movlw	2
 13215  01185A  6E29               	movwf	_controlTransferState,c	;volatile
 13216                           
 13217                           ;usb_device.c: 1644: if(USBDeferOUTDataStagePackets == 0)
 13218  01185C  5022               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 13219  01185E  B4D8               	btfsc	status,2,c
 13220                           
 13221                           ;usb_device.c: 1645: {
 13222                           ;usb_device.c: 1646: USBCtrlEPAllowDataStage();
 13223  011860  EC48  F096         	call	_USBCtrlEPAllowDataStage	;wreg free
 13224                           
 13225                           ;usb_device.c: 1647: }
 13226                           ;usb_device.c: 1651: USBStatusStageEnabledFlag2 = 0;
 13227  011864  0E00               	movlw	0
 13228  011866  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13229                           
 13230                           ;usb_device.c: 1652: USBStatusStageEnabledFlag1 = 0;
 13231  011868  0E00               	movlw	0
 13232  01186A  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13233                           
 13234                           ;usb_device.c: 1653: }
 13235  01186C  0012               	return	
 13236  01186E                     i2l6059:
 13237                           
 13238                           ;usb_device.c: 1654: else
 13239                           ;usb_device.c: 1655: {
 13240                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->CNT = 8;
 13241  01186E  EE20 F001          	lfsr	2,1
 13242  011872  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13243  011874  26D9               	addwf	fsr2l,f,c
 13244  011876  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13245  011878  22DA               	addwfc	fsr2h,f,c
 13246  01187A  0E08               	movlw	8
 13247  01187C  6EDF               	movwf	indf2,c
 13248                           
 13249                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13250  01187E  EE20 F002          	lfsr	2,2
 13251  011882  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13252  011884  26D9               	addwf	fsr2l,f,c
 13253  011886  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13254  011888  22DA               	addwfc	fsr2h,f,c
 13255  01188A  0E30               	movlw	48
 13256  01188C  6EDE               	movwf	postinc2,c
 13257  01188E  0E0D               	movlw	13
 13258  011890  6EDD               	movwf	postdec2,c
 13259                           
 13260                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13261  011892  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13262  011896  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13263  01189A  0E0C               	movlw	12
 13264  01189C  6EDF               	movwf	indf2,c
 13265                           
 13266                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13267  01189E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13268  0118A2  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13269  0118A6  0E00               	movlw	0
 13270  0118A8  8EDB               	bsf	plusw2,7,c
 13271                           
 13272                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val = 0x04;
 13273  0118AA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13274  0118AE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13275  0118B2  0E04               	movlw	4
 13276  0118B4  6EDF               	movwf	indf2,c
 13277                           
 13278                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13279  0118B6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13280  0118BA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13281  0118BE  0E00               	movlw	0
 13282  0118C0  8EDB               	bsf	plusw2,7,c
 13283                           
 13284                           ;usb_device.c: 1666: }
 13285                           ;usb_device.c: 1667: }
 13286  0118C2  0012               	return	
 13287  0118C4                     i2l218:
 13288                           
 13289                           ;usb_device.c: 1668: else
 13290                           ;usb_device.c: 1669: {
 13291                           ;usb_device.c: 1670: if(SetupPkt.DataDir == (0x80>>7))
 13292  0118C4  010D               	movlb	13	; () banked
 13293  0118C6  AF30               	btfss	48,7,b	;volatile
 13294  0118C8  D010               	goto	i2l6079
 13295                           
 13296                           ; BSR set to: 13
 13297                           ;usb_device.c: 1671: {
 13298                           ;usb_device.c: 1672: controlTransferState = 1;
 13299  0118CA  0E01               	movlw	1
 13300  0118CC  6E29               	movwf	_controlTransferState,c	;volatile
 13301                           
 13302                           ;usb_device.c: 1686: if(USBDeferINDataStagePackets == 0)
 13303  0118CE  5021               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 13304  0118D0  B4D8               	btfsc	status,2,c
 13305                           
 13306                           ; BSR set to: 13
 13307                           ;usb_device.c: 1687: {
 13308                           ;usb_device.c: 1688: USBCtrlEPAllowDataStage();
 13309  0118D2  EC48  F096         	call	_USBCtrlEPAllowDataStage	;wreg free
 13310                           
 13311                           ;usb_device.c: 1689: }
 13312                           ;usb_device.c: 1711: USBStatusStageEnabledFlag2 = 0;
 13313  0118D6  0E00               	movlw	0
 13314  0118D8  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13315                           
 13316                           ;usb_device.c: 1712: USBStatusStageEnabledFlag1 = 0;
 13317  0118DA  0E00               	movlw	0
 13318  0118DC  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13319                           
 13320                           ;usb_device.c: 1713: if(USBDeferStatusStagePacket == 0)
 13321  0118DE  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 13322  0118E0  A4D8               	btfss	status,2,c
 13323  0118E2  0012               	return	
 13324                           
 13325                           ;usb_device.c: 1714: {
 13326                           ;usb_device.c: 1715: USBCtrlEPAllowStatusStage();
 13327  0118E4  ECB6  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13328                           
 13329                           ;usb_device.c: 1716: }
 13330                           ;usb_device.c: 1717: }
 13331  0118E8  0012               	return	
 13332  0118EA                     i2l6079:
 13333                           
 13334                           ;usb_device.c: 1718: else
 13335                           ;usb_device.c: 1719: {
 13336                           ;usb_device.c: 1730: controlTransferState = 2;
 13337  0118EA  0E02               	movlw	2
 13338  0118EC  6E29               	movwf	_controlTransferState,c	;volatile
 13339                           
 13340                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->CNT = 8;
 13341  0118EE  EE20 F001          	lfsr	2,1
 13342  0118F2  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13343  0118F4  26D9               	addwf	fsr2l,f,c
 13344  0118F6  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13345  0118F8  22DA               	addwfc	fsr2h,f,c
 13346  0118FA  0E08               	movlw	8
 13347  0118FC  6EDF               	movwf	indf2,c
 13348                           
 13349                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13350  0118FE  EE20 F002          	lfsr	2,2
 13351  011902  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13352  011904  26D9               	addwf	fsr2l,f,c
 13353  011906  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13354  011908  22DA               	addwfc	fsr2h,f,c
 13355  01190A  0E30               	movlw	48
 13356  01190C  6EDE               	movwf	postinc2,c
 13357  01190E  0E0D               	movlw	13
 13358  011910  6EDD               	movwf	postdec2,c
 13359                           
 13360                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13361  011912  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13362  011916  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13363  01191A  0E04               	movlw	4
 13364  01191C  6EDF               	movwf	indf2,c
 13365                           
 13366                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13367  01191E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13368  011922  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13369  011926  0E00               	movlw	0
 13370  011928  8EDB               	bsf	plusw2,7,c
 13371                           
 13372                           ;usb_device.c: 1739: USBStatusStageEnabledFlag2 = 0;
 13373  01192A  0E00               	movlw	0
 13374  01192C  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13375                           
 13376                           ;usb_device.c: 1740: USBStatusStageEnabledFlag1 = 0;
 13377  01192E  0E00               	movlw	0
 13378  011930  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13379                           
 13380                           ;usb_device.c: 1741: if(USBDeferStatusStagePacket == 0)
 13381  011932  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 13382  011934  A4D8               	btfss	status,2,c
 13383  011936  0012               	return	
 13384                           
 13385                           ;usb_device.c: 1742: {
 13386                           ;usb_device.c: 1743: USBCtrlEPAllowStatusStage();
 13387  011938  ECB6  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13388  01193C  0012               	return	
 13389  01193E                     __end_of_USBCtrlEPServiceComplete:
 13390                           	opt stack 0
 13391                           pclatu	equ	0xFFB
 13392                           pclath	equ	0xFFA
 13393                           tblptru	equ	0xFF8
 13394                           tblptrh	equ	0xFF7
 13395                           tblptrl	equ	0xFF6
 13396                           tablat	equ	0xFF5
 13397                           prodh	equ	0xFF4
 13398                           prodl	equ	0xFF3
 13399                           intcon	equ	0xFF2
 13400                           intcon2	equ	0xFF1
 13401                           indf0	equ	0xFEF
 13402                           postinc0	equ	0xFEE
 13403                           fsr0h	equ	0xFEA
 13404                           fsr0l	equ	0xFE9
 13405                           wreg	equ	0xFE8
 13406                           indf1	equ	0xFE7
 13407                           postinc1	equ	0xFE6
 13408                           postdec1	equ	0xFE5
 13409                           fsr1h	equ	0xFE2
 13410                           fsr1l	equ	0xFE1
 13411                           indf2	equ	0xFDF
 13412                           postinc2	equ	0xFDE
 13413                           postdec2	equ	0xFDD
 13414                           plusw2	equ	0xFDB
 13415                           fsr2h	equ	0xFDA
 13416                           fsr2l	equ	0xFD9
 13417                           status	equ	0xFD8
 13418                           
 13419 ;; *************** function _USBCtrlEPAllowDataStage *****************
 13420 ;; Defined at:
 13421 ;;		line 1489 in file "../My_library/USB_CDC/usb/usb_device.c"
 13422 ;; Parameters:    Size  Location     Type
 13423 ;;		None
 13424 ;; Auto vars:     Size  Location     Type
 13425 ;;		None
 13426 ;; Return value:  Size  Location     Type
 13427 ;;		None               void
 13428 ;; Registers used:
 13429 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13430 ;; Tracked objects:
 13431 ;;		On entry : 0/0
 13432 ;;		On exit  : 0/0
 13433 ;;		Unchanged: 0/0
 13434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13439 ;;Total ram usage:        0 bytes
 13440 ;; Hardware stack levels used:    1
 13441 ;; Hardware stack levels required when called:    1
 13442 ;; This function calls:
 13443 ;;		_USBCtrlTrfTxService
 13444 ;; This function is called by:
 13445 ;;		_USBCtrlEPServiceComplete
 13446 ;; This function uses a non-reentrant model
 13447 ;;
 13448                           
 13449                           	psect	text70
 13450  012C90                     __ptext70:
 13451                           	opt stack 0
 13452  012C90                     _USBCtrlEPAllowDataStage:
 13453                           	opt stack 17
 13454                           
 13455                           ;usb_device.c: 1491: USBDeferINDataStagePackets = 0;
 13456                           
 13457                           ;incstack = 0
 13458  012C90  0E00               	movlw	0
 13459  012C92  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13460                           
 13461                           ;usb_device.c: 1492: USBDeferOUTDataStagePackets = 0;
 13462  012C94  0E00               	movlw	0
 13463  012C96  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13464                           
 13465                           ;usb_device.c: 1494: if(controlTransferState == 2)
 13466  012C98  0E02               	movlw	2
 13467  012C9A  1829               	xorwf	_controlTransferState,w,c	;volatile
 13468  012C9C  A4D8               	btfss	status,2,c
 13469  012C9E  D01F               	goto	i2l5707
 13470                           
 13471                           ;usb_device.c: 1495: {
 13472                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->CNT = 8;
 13473  012CA0  EE20 F001          	lfsr	2,1
 13474  012CA4  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13475  012CA6  26D9               	addwf	fsr2l,f,c
 13476  012CA8  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13477  012CAA  22DA               	addwfc	fsr2h,f,c
 13478  012CAC  0E08               	movlw	8
 13479  012CAE  6EDF               	movwf	indf2,c
 13480                           
 13481                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13482  012CB0  EE20 F002          	lfsr	2,2
 13483  012CB4  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13484  012CB6  26D9               	addwf	fsr2l,f,c
 13485  012CB8  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13486  012CBA  22DA               	addwfc	fsr2h,f,c
 13487  012CBC  0E38               	movlw	56
 13488  012CBE  6EDE               	movwf	postinc2,c
 13489  012CC0  0E0D               	movlw	13
 13490  012CC2  6EDD               	movwf	postdec2,c
 13491                           
 13492                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13493  012CC4  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13494  012CC8  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13495  012CCC  0E48               	movlw	72
 13496  012CCE  6EDF               	movwf	indf2,c
 13497                           
 13498                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13499  012CD0  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13500  012CD4  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13501  012CD8  0E00               	movlw	0
 13502  012CDA  8EDB               	bsf	plusw2,7,c
 13503                           
 13504                           ;usb_device.c: 1501: }
 13505  012CDC  0012               	return	
 13506  012CDE                     i2l5707:
 13507                           
 13508                           ;usb_device.c: 1502: else
 13509                           ;usb_device.c: 1503: {
 13510                           ;usb_device.c: 1506: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 13511  012CDE  500E               	movf	_inPipes+4,w,c	;volatile
 13512  012CE0  010D               	movlb	13	; () banked
 13513  012CE2  5D36               	subwf	54,w,b	;volatile
 13514  012CE4  500F               	movf	_inPipes+5,w,c	;volatile
 13515  012CE6  010D               	movlb	13	; () banked
 13516  012CE8  5937               	subwfb	55,w,b	;volatile
 13517  012CEA  B0D8               	btfsc	status,0,c
 13518  012CEC  D004               	goto	i2l5711
 13519                           
 13520                           ; BSR set to: 13
 13521                           ;usb_device.c: 1507: {
 13522                           ;usb_device.c: 1508: inPipes[0].wCount.Val = SetupPkt.wLength;
 13523  012CEE  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 13524  012CF2  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 13525  012CF6                     i2l5711:
 13526                           
 13527                           ; BSR set to: 13
 13528                           ;usb_device.c: 1509: }
 13529                           ;usb_device.c: 1510: USBCtrlTrfTxService();
 13530  012CF6  EC80  F090         	call	_USBCtrlTrfTxService	;wreg free
 13531                           
 13532                           ;usb_device.c: 1515: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 13533  012CFA  EE20 F002          	lfsr	2,2
 13534  012CFE  5010               	movf	_pBDTEntryIn,w,c
 13535  012D00  26D9               	addwf	fsr2l,f,c
 13536  012D02  5011               	movf	_pBDTEntryIn+1,w,c
 13537  012D04  22DA               	addwfc	fsr2h,f,c
 13538  012D06  0E38               	movlw	56
 13539  012D08  6EDE               	movwf	postinc2,c
 13540  012D0A  0E0D               	movlw	13
 13541  012D0C  6EDD               	movwf	postdec2,c
 13542                           
 13543                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13544  012D0E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13545  012D12  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13546  012D16  0E48               	movlw	72
 13547  012D18  6EDF               	movwf	indf2,c
 13548                           
 13549                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13550  012D1A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13551  012D1E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13552  012D22  0E00               	movlw	0
 13553  012D24  8EDB               	bsf	plusw2,7,c
 13554  012D26  0012               	return	
 13555  012D28                     __end_of_USBCtrlEPAllowDataStage:
 13556                           	opt stack 0
 13557                           pclatu	equ	0xFFB
 13558                           pclath	equ	0xFFA
 13559                           tblptru	equ	0xFF8
 13560                           tblptrh	equ	0xFF7
 13561                           tblptrl	equ	0xFF6
 13562                           tablat	equ	0xFF5
 13563                           prodh	equ	0xFF4
 13564                           prodl	equ	0xFF3
 13565                           intcon	equ	0xFF2
 13566                           intcon2	equ	0xFF1
 13567                           indf0	equ	0xFEF
 13568                           postinc0	equ	0xFEE
 13569                           fsr0h	equ	0xFEA
 13570                           fsr0l	equ	0xFE9
 13571                           wreg	equ	0xFE8
 13572                           indf1	equ	0xFE7
 13573                           postinc1	equ	0xFE6
 13574                           postdec1	equ	0xFE5
 13575                           fsr1h	equ	0xFE2
 13576                           fsr1l	equ	0xFE1
 13577                           indf2	equ	0xFDF
 13578                           postinc2	equ	0xFDE
 13579                           postdec2	equ	0xFDD
 13580                           plusw2	equ	0xFDB
 13581                           fsr2h	equ	0xFDA
 13582                           fsr2l	equ	0xFD9
 13583                           status	equ	0xFD8
 13584                           
 13585 ;; *************** function _USBCheckStdRequest *****************
 13586 ;; Defined at:
 13587 ;;		line 2690 in file "../My_library/USB_CDC/usb/usb_device.c"
 13588 ;; Parameters:    Size  Location     Type
 13589 ;;		None
 13590 ;; Auto vars:     Size  Location     Type
 13591 ;;		None
 13592 ;; Return value:  Size  Location     Type
 13593 ;;		None               void
 13594 ;; Registers used:
 13595 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13596 ;; Tracked objects:
 13597 ;;		On entry : 0/0
 13598 ;;		On exit  : 0/0
 13599 ;;		Unchanged: 0/0
 13600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13605 ;;Total ram usage:        0 bytes
 13606 ;; Hardware stack levels used:    1
 13607 ;; Hardware stack levels required when called:    6
 13608 ;; This function calls:
 13609 ;;		_USBStdFeatureReqHandler
 13610 ;;		_USBStdGetDscHandler
 13611 ;;		_USBStdGetStatusHandler
 13612 ;;		_USBStdSetCfgHandler
 13613 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13614 ;; This function is called by:
 13615 ;;		_USBCtrlTrfSetupHandler
 13616 ;; This function uses a non-reentrant model
 13617 ;;
 13618                           
 13619                           	psect	text71
 13620  011CD0                     __ptext71:
 13621                           	opt stack 0
 13622  011CD0                     _USBCheckStdRequest:
 13623                           	opt stack 13
 13624                           
 13625                           ;usb_device.c: 2692: if(SetupPkt.RequestType != (0x00>>5)) return;
 13626                           
 13627                           ;incstack = 0
 13628  011CD0  010D               	movlb	13	; () banked
 13629  011CD2  3930               	swapf	48,w,b	;volatile
 13630  011CD4  32E8               	rrcf	wreg,f,c
 13631  011CD6  0B03               	andlw	3
 13632  011CD8  0900               	iorlw	0
 13633  011CDA  A4D8               	btfss	status,2,c
 13634  011CDC  0012               	return	
 13635  011CDE  D043               	goto	i2l6177
 13636  011CE0                     i2l345:
 13637                           
 13638                           ; BSR set to: 13
 13639                           ;usb_device.c: 2697: inPipes[0].info.bits.busy = 1;
 13640  011CE0  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13641                           
 13642                           ; BSR set to: 13
 13643                           ;usb_device.c: 2698: USBDeviceState = ADR_PENDING_STATE;
 13644  011CE2  0E08               	movlw	8
 13645  011CE4  6E24               	movwf	_USBDeviceState,c	;volatile
 13646                           
 13647                           ;usb_device.c: 2700: break;
 13648  011CE6  0012               	return	
 13649  011CE8                     i2l6147:
 13650                           
 13651                           ; BSR set to: 13
 13652                           ;usb_device.c: 2702: USBStdGetDscHandler();
 13653  011CE8  EC09  F08A         	call	_USBStdGetDscHandler	;wreg free
 13654                           
 13655                           ;usb_device.c: 2703: break;
 13656  011CEC  0012               	return	
 13657  011CEE                     i2l6149:
 13658                           
 13659                           ;usb_device.c: 2705: USBStdSetCfgHandler();
 13660  011CEE  ECFA  F08D         	call	_USBStdSetCfgHandler	;wreg free
 13661                           
 13662                           ;usb_device.c: 2706: break;
 13663  011CF2  0012               	return	
 13664  011CF4                     i2l6151:
 13665                           
 13666                           ;usb_device.c: 2708: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 13667  011CF4  0E2C               	movlw	low _USBActiveConfiguration
 13668  011CF6  6E0A               	movwf	_inPipes,c	;volatile
 13669  011CF8  0E00               	movlw	high _USBActiveConfiguration
 13670  011CFA  6E0B               	movwf	_inPipes+1,c	;volatile
 13671                           
 13672                           ;usb_device.c: 2709: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13673  011CFC  800D               	bsf	_inPipes+3,0,c	;volatile
 13674                           
 13675                           ;usb_device.c: 2710: inPipes[0].wCount.v[0] = 1;
 13676  011CFE  0E01               	movlw	1
 13677  011D00  6E0E               	movwf	_inPipes+4,c	;volatile
 13678                           
 13679                           ;usb_device.c: 2711: inPipes[0].info.bits.busy = 1;
 13680  011D02  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13681                           
 13682                           ;usb_device.c: 2712: break;
 13683  011D04  0012               	return	
 13684  011D06                     i2l6159:
 13685                           
 13686                           ;usb_device.c: 2714: USBStdGetStatusHandler();
 13687  011D06  EC53  F095         	call	_USBStdGetStatusHandler	;wreg free
 13688                           
 13689                           ;usb_device.c: 2715: break;
 13690  011D0A  0012               	return	
 13691  011D0C                     i2l6161:
 13692                           
 13693                           ;usb_device.c: 2717: case 3:
 13694                           ;usb_device.c: 2718: USBStdFeatureReqHandler();
 13695  011D0C  EC74  F083         	call	_USBStdFeatureReqHandler	;wreg free
 13696                           
 13697                           ;usb_device.c: 2719: break;
 13698  011D10  0012               	return	
 13699  011D12                     i2l6163:
 13700                           
 13701                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13702  011D12  010D               	movlb	13	; () banked
 13703  011D14  5134               	movf	52,w,b	;volatile
 13704  011D16  0D01               	mullw	1
 13705  011D18  0ED4               	movlw	low _USBAlternateInterface
 13706  011D1A  24F3               	addwf	prodl,w,c
 13707  011D1C  6E0A               	movwf	_inPipes,c	;volatile
 13708  011D1E  0E00               	movlw	high _USBAlternateInterface
 13709  011D20  20F4               	addwfc	prodh,w,c
 13710  011D22  6E0B               	movwf	_inPipes+1,c	;volatile
 13711                           
 13712                           ; BSR set to: 13
 13713                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13714  011D24  800D               	bsf	_inPipes+3,0,c	;volatile
 13715                           
 13716                           ; BSR set to: 13
 13717                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 13718  011D26  0E01               	movlw	1
 13719  011D28  6E0E               	movwf	_inPipes+4,c	;volatile
 13720                           
 13721                           ; BSR set to: 13
 13722                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 13723  011D2A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13724                           
 13725                           ;usb_device.c: 2725: break;
 13726  011D2C  0012               	return	
 13727  011D2E                     i2l354:
 13728                           
 13729                           ; BSR set to: 13
 13730                           ;usb_device.c: 2727: inPipes[0].info.bits.busy = 1;
 13731  011D2E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13732                           
 13733                           ; BSR set to: 13
 13734                           ;usb_device.c: 2728: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 13735  011D30  010D               	movlb	13	; () banked
 13736  011D32  5134               	movf	52,w,b	;volatile
 13737  011D34  0D01               	mullw	1
 13738  011D36  0ED4               	movlw	low _USBAlternateInterface
 13739  011D38  24F3               	addwf	prodl,w,c
 13740  011D3A  6ED9               	movwf	fsr2l,c
 13741  011D3C  0E00               	movlw	high _USBAlternateInterface
 13742  011D3E  20F4               	addwfc	prodh,w,c
 13743  011D40  6EDA               	movwf	fsr2h,c
 13744  011D42  CD32 FFDF          	movff	3378,indf2	;volatile
 13745                           
 13746                           ;usb_device.c: 2729: break;
 13747  011D46  0012               	return	
 13748  011D48                     i2l6173:
 13749                           
 13750                           ; BSR set to: 13
 13751                           ;usb_device.c: 2731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 13752  011D48  0E00               	movlw	0
 13753  011D4A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13754  011D4C  0E02               	movlw	2
 13755  011D4E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13756  011D50  0E00               	movlw	0
 13757  011D52  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13758  011D54  0E00               	movlw	0
 13759  011D56  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13760  011D58  0E00               	movlw	0
 13761  011D5A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13762  011D5C  0E00               	movlw	0
 13763  011D5E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13764  011D60  EC27  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13765                           
 13766                           ;usb_device.c: 2736: }
 13767                           
 13768                           ;usb_device.c: 2735: break;
 13769                           
 13770                           ;usb_device.c: 2734: default:
 13771                           
 13772                           ;usb_device.c: 2733: case 12:
 13773                           
 13774                           ;usb_device.c: 2732: break;
 13775  011D64  0012               	return	
 13776  011D66                     i2l6177:
 13777  011D66  010D               	movlb	13	; () banked
 13778  011D68  5131               	movf	49,w,b	;volatile
 13779                           
 13780                           ; Switch size 1, requested type "space"
 13781                           ; Number of cases is 11, Range of values is 0 to 12
 13782                           ; switch strategies available:
 13783                           ; Name         Instructions Cycles
 13784                           ; simple_byte           34    18 (average)
 13785                           ;	Chosen strategy is simple_byte
 13786  011D6A  0A00               	xorlw	0	; case 0
 13787  011D6C  B4D8               	btfsc	status,2,c
 13788  011D6E  D7CB               	goto	i2l6159
 13789  011D70  0A01               	xorlw	1	; case 1
 13790  011D72  B4D8               	btfsc	status,2,c
 13791  011D74  D7CB               	goto	i2l6161
 13792  011D76  0A02               	xorlw	2	; case 3
 13793  011D78  B4D8               	btfsc	status,2,c
 13794  011D7A  D7C8               	goto	i2l6161
 13795  011D7C  0A06               	xorlw	6	; case 5
 13796  011D7E  B4D8               	btfsc	status,2,c
 13797  011D80  D7AF               	goto	i2l345
 13798  011D82  0A03               	xorlw	3	; case 6
 13799  011D84  B4D8               	btfsc	status,2,c
 13800  011D86  D7B0               	goto	i2l6147
 13801  011D88  0A01               	xorlw	1	; case 7
 13802  011D8A  B4D8               	btfsc	status,2,c
 13803  011D8C  D7DD               	goto	i2l6173
 13804  011D8E  0A0F               	xorlw	15	; case 8
 13805  011D90  B4D8               	btfsc	status,2,c
 13806  011D92  D7B0               	goto	i2l6151
 13807  011D94  0A01               	xorlw	1	; case 9
 13808  011D96  B4D8               	btfsc	status,2,c
 13809  011D98  D7AA               	goto	i2l6149
 13810  011D9A  0A03               	xorlw	3	; case 10
 13811  011D9C  B4D8               	btfsc	status,2,c
 13812  011D9E  D7B9               	goto	i2l6163
 13813  011DA0  0A01               	xorlw	1	; case 11
 13814  011DA2  B4D8               	btfsc	status,2,c
 13815  011DA4  D7C4               	goto	i2l354
 13816  011DA6  0A07               	xorlw	7	; case 12
 13817  011DA8  0012               	return	
 13818  011DAA                     __end_of_USBCheckStdRequest:
 13819                           	opt stack 0
 13820                           pclatu	equ	0xFFB
 13821                           pclath	equ	0xFFA
 13822                           tblptru	equ	0xFF8
 13823                           tblptrh	equ	0xFF7
 13824                           tblptrl	equ	0xFF6
 13825                           tablat	equ	0xFF5
 13826                           prodh	equ	0xFF4
 13827                           prodl	equ	0xFF3
 13828                           intcon	equ	0xFF2
 13829                           intcon2	equ	0xFF1
 13830                           indf0	equ	0xFEF
 13831                           postinc0	equ	0xFEE
 13832                           fsr0h	equ	0xFEA
 13833                           fsr0l	equ	0xFE9
 13834                           wreg	equ	0xFE8
 13835                           indf1	equ	0xFE7
 13836                           postinc1	equ	0xFE6
 13837                           postdec1	equ	0xFE5
 13838                           fsr1h	equ	0xFE2
 13839                           fsr1l	equ	0xFE1
 13840                           indf2	equ	0xFDF
 13841                           postinc2	equ	0xFDE
 13842                           postdec2	equ	0xFDD
 13843                           plusw2	equ	0xFDB
 13844                           fsr2h	equ	0xFDA
 13845                           fsr2l	equ	0xFD9
 13846                           status	equ	0xFD8
 13847                           
 13848 ;; *************** function _USBStdSetCfgHandler *****************
 13849 ;; Defined at:
 13850 ;;		line 1969 in file "../My_library/USB_CDC/usb/usb_device.c"
 13851 ;; Parameters:    Size  Location     Type
 13852 ;;		None
 13853 ;; Auto vars:     Size  Location     Type
 13854 ;;  i               1   20[COMRAM] unsigned char 
 13855 ;; Return value:  Size  Location     Type
 13856 ;;		None               void
 13857 ;; Registers used:
 13858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13859 ;; Tracked objects:
 13860 ;;		On entry : 0/0
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13868 ;;Total ram usage:        1 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:    5
 13871 ;; This function calls:
 13872 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13873 ;;		i2_memset
 13874 ;; This function is called by:
 13875 ;;		_USBCheckStdRequest
 13876 ;; This function uses a non-reentrant model
 13877 ;;
 13878                           
 13879                           	psect	text72
 13880  011BF4                     __ptext72:
 13881                           	opt stack 0
 13882  011BF4                     _USBStdSetCfgHandler:
 13883                           	opt stack 13
 13884                           
 13885                           ;usb_device.c: 1971: uint8_t i;
 13886                           ;usb_device.c: 1974: inPipes[0].info.bits.busy = 1;
 13887                           
 13888                           ;incstack = 0
 13889  011BF4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13890                           
 13891                           ;usb_device.c: 1977: memset((void*)&UEP1,0x00,(2));;
 13892  011BF6  0E27               	movlw	39
 13893  011BF8  6E2E               	movwf	i2memset@p1,c
 13894  011BFA  0E0F               	movlw	15
 13895  011BFC  6E2F               	movwf	i2memset@p1+1,c
 13896  011BFE  0E00               	movlw	0
 13897  011C00  6E31               	movwf	i2memset@c+1,c
 13898  011C02  0E00               	movlw	0
 13899  011C04  6E30               	movwf	i2memset@c,c
 13900  011C06  0E00               	movlw	0
 13901  011C08  6E33               	movwf	i2memset@n+1,c
 13902  011C0A  0E02               	movlw	2
 13903  011C0C  6E32               	movwf	i2memset@n,c
 13904  011C0E  EC99  F09B         	call	i2_memset	;wreg free
 13905                           
 13906                           ;usb_device.c: 1980: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13907  011C12  0E00               	movlw	0
 13908  011C14  6E2E               	movwf	i2memset@p1,c
 13909  011C16  0E0D               	movlw	13
 13910  011C18  6E2F               	movwf	i2memset@p1+1,c
 13911  011C1A  0E00               	movlw	0
 13912  011C1C  6E31               	movwf	i2memset@c+1,c
 13913  011C1E  0E00               	movlw	0
 13914  011C20  6E30               	movwf	i2memset@c,c
 13915  011C22  0E00               	movlw	0
 13916  011C24  6E33               	movwf	i2memset@n+1,c
 13917  011C26  0E30               	movlw	48
 13918  011C28  6E32               	movwf	i2memset@n,c
 13919  011C2A  EC99  F09B         	call	i2_memset	;wreg free
 13920                           
 13921                           ;usb_device.c: 1983: UCONbits.PPBRST = 1;
 13922  011C2E  8C65               	bsf	3941,6,c	;volatile
 13923                           
 13924                           ;usb_device.c: 1988: for(i = 0; i < (uint8_t)(2+1u); i++)
 13925  011C30  0E00               	movlw	0
 13926  011C32  6E42               	movwf	USBStdSetCfgHandler@i,c
 13927  011C34                     i2l5727:
 13928  011C34  0E02               	movlw	2
 13929  011C36  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 13930  011C38  D001               	goto	i2l5731
 13931  011C3A  D016               	goto	i2l5737
 13932  011C3C                     i2l5731:
 13933                           
 13934                           ;usb_device.c: 1989: {
 13935                           ;usb_device.c: 1990: ep_data_in[i].Val = 0u;
 13936  011C3C  5042               	movf	USBStdSetCfgHandler@i,w,c
 13937  011C3E  0D01               	mullw	1
 13938  011C40  0E16               	movlw	low _ep_data_in
 13939  011C42  24F3               	addwf	prodl,w,c
 13940  011C44  6ED9               	movwf	fsr2l,c
 13941  011C46  0E00               	movlw	high _ep_data_in
 13942  011C48  20F4               	addwfc	prodh,w,c
 13943  011C4A  6EDA               	movwf	fsr2h,c
 13944  011C4C  0E00               	movlw	0
 13945  011C4E  6EDF               	movwf	indf2,c
 13946                           
 13947                           ;usb_device.c: 1991: ep_data_out[i].Val = 0u;
 13948  011C50  5042               	movf	USBStdSetCfgHandler@i,w,c
 13949  011C52  0D01               	mullw	1
 13950  011C54  0EA5               	movlw	low _ep_data_out
 13951  011C56  24F3               	addwf	prodl,w,c
 13952  011C58  6ED9               	movwf	fsr2l,c
 13953  011C5A  0E00               	movlw	high _ep_data_out
 13954  011C5C  20F4               	addwfc	prodh,w,c
 13955  011C5E  6EDA               	movwf	fsr2h,c
 13956  011C60  0E00               	movlw	0
 13957  011C62  6EDF               	movwf	indf2,c
 13958  011C64  2A42               	incf	USBStdSetCfgHandler@i,f,c
 13959  011C66  D7E6               	goto	i2l5727
 13960  011C68                     i2l5737:
 13961                           
 13962                           ;usb_device.c: 1992: }
 13963                           ;usb_device.c: 1995: memset((void*)&USBAlternateInterface,0x00,2);
 13964  011C68  0ED4               	movlw	low _USBAlternateInterface
 13965  011C6A  6E2E               	movwf	i2memset@p1,c
 13966  011C6C  0E00               	movlw	high _USBAlternateInterface
 13967  011C6E  6E2F               	movwf	i2memset@p1+1,c
 13968  011C70  0E00               	movlw	0
 13969  011C72  6E31               	movwf	i2memset@c+1,c
 13970  011C74  0E00               	movlw	0
 13971  011C76  6E30               	movwf	i2memset@c,c
 13972  011C78  0E00               	movlw	0
 13973  011C7A  6E33               	movwf	i2memset@n+1,c
 13974  011C7C  0E02               	movlw	2
 13975  011C7E  6E32               	movwf	i2memset@n,c
 13976  011C80  EC99  F09B         	call	i2_memset	;wreg free
 13977                           
 13978                           ;usb_device.c: 1998: UCONbits.PPBRST = 0;
 13979  011C84  9C65               	bcf	3941,6,c	;volatile
 13980                           
 13981                           ;usb_device.c: 2000: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13982  011C86  0E08               	movlw	8
 13983  011C88  6E10               	movwf	_pBDTEntryIn,c
 13984  011C8A  0E0D               	movlw	13
 13985  011C8C  6E11               	movwf	_pBDTEntryIn+1,c
 13986                           
 13987                           ;usb_device.c: 2003: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13988  011C8E  0E00               	movlw	0
 13989  011C90  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 13990  011C92  0E0D               	movlw	13
 13991  011C94  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 13992                           
 13993                           ;usb_device.c: 2004: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13994  011C96  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13995  011C9A  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13996                           
 13997                           ;usb_device.c: 2007: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13998  011C9E  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 13999                           
 14000                           ;usb_device.c: 2010: if(USBActiveConfiguration == 0)
 14001  011CA2  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 14002  011CA4  A4D8               	btfss	status,2,c
 14003  011CA6  D003               	goto	i2l5753
 14004                           
 14005                           ;usb_device.c: 2011: {
 14006                           ;usb_device.c: 2013: USBDeviceState = ADDRESS_STATE;
 14007  011CA8  0E10               	movlw	16
 14008  011CAA  6E24               	movwf	_USBDeviceState,c	;volatile
 14009                           
 14010                           ;usb_device.c: 2014: }
 14011  011CAC  0012               	return	
 14012  011CAE                     i2l5753:
 14013                           
 14014                           ;usb_device.c: 2015: else
 14015                           ;usb_device.c: 2016: {
 14016                           ;usb_device.c: 2018: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 14017  011CAE  0E00               	movlw	0
 14018  011CB0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14019  011CB2  0E01               	movlw	1
 14020  011CB4  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14021  011CB6  0E2C               	movlw	low _USBActiveConfiguration
 14022  011CB8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14023  011CBA  0E00               	movlw	high _USBActiveConfiguration
 14024  011CBC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14025  011CBE  0E00               	movlw	0
 14026  011CC0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14027  011CC2  0E01               	movlw	1
 14028  011CC4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14029  011CC6  EC27  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14030                           
 14031                           ;usb_device.c: 2023: USBDeviceState = CONFIGURED_STATE;
 14032  011CCA  0E20               	movlw	32
 14033  011CCC  6E24               	movwf	_USBDeviceState,c	;volatile
 14034  011CCE  0012               	return	
 14035  011CD0                     __end_of_USBStdSetCfgHandler:
 14036                           	opt stack 0
 14037                           pclatu	equ	0xFFB
 14038                           pclath	equ	0xFFA
 14039                           tblptru	equ	0xFF8
 14040                           tblptrh	equ	0xFF7
 14041                           tblptrl	equ	0xFF6
 14042                           tablat	equ	0xFF5
 14043                           prodh	equ	0xFF4
 14044                           prodl	equ	0xFF3
 14045                           intcon	equ	0xFF2
 14046                           intcon2	equ	0xFF1
 14047                           indf0	equ	0xFEF
 14048                           postinc0	equ	0xFEE
 14049                           fsr0h	equ	0xFEA
 14050                           fsr0l	equ	0xFE9
 14051                           wreg	equ	0xFE8
 14052                           indf1	equ	0xFE7
 14053                           postinc1	equ	0xFE6
 14054                           postdec1	equ	0xFE5
 14055                           fsr1h	equ	0xFE2
 14056                           fsr1l	equ	0xFE1
 14057                           indf2	equ	0xFDF
 14058                           postinc2	equ	0xFDE
 14059                           postdec2	equ	0xFDD
 14060                           plusw2	equ	0xFDB
 14061                           fsr2h	equ	0xFDA
 14062                           fsr2l	equ	0xFD9
 14063                           status	equ	0xFD8
 14064                           
 14065 ;; *************** function i2_memset *****************
 14066 ;; Defined at:
 14067 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 14068 ;; Parameters:    Size  Location     Type
 14069 ;;  p1              2    0[COMRAM] PTR void 
 14070 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14071 ;;  c               2    2[COMRAM] int 
 14072 ;;  n               2    4[COMRAM] unsigned int 
 14073 ;; Auto vars:     Size  Location     Type
 14074 ;;  memset          2    6[COMRAM] PTR unsigned char 
 14075 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14076 ;; Return value:  Size  Location     Type
 14077 ;;                  2    0[COMRAM] PTR void 
 14078 ;; Registers used:
 14079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14080 ;; Tracked objects:
 14081 ;;		On entry : 0/0
 14082 ;;		On exit  : 0/0
 14083 ;;		Unchanged: 0/0
 14084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14085 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14088 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14089 ;;Total ram usage:        8 bytes
 14090 ;; Hardware stack levels used:    1
 14091 ;; This function calls:
 14092 ;;		Nothing
 14093 ;; This function is called by:
 14094 ;;		_USBStdSetCfgHandler
 14095 ;;		i2_USBDeviceInit
 14096 ;; This function uses a non-reentrant model
 14097 ;;
 14098                           
 14099                           	psect	text73
 14100  013732                     __ptext73:
 14101                           	opt stack 0
 14102  013732                     i2_memset:
 14103                           	opt stack 20
 14104                           
 14105                           ;incstack = 0
 14106  013732  C02E  F034         	movff	i2memset@p1,i2memset@p
 14107  013736  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 14108  01373A  D008               	goto	i2l5661
 14109  01373C                     i2l5657:
 14110  01373C  C034  FFD9         	movff	i2memset@p,fsr2l
 14111  013740  C035  FFDA         	movff	i2memset@p+1,fsr2h
 14112  013744  C030  FFDF         	movff	i2memset@c,indf2
 14113  013748  4A34               	infsnz	i2memset@p,f,c
 14114  01374A  2A35               	incf	i2memset@p+1,f,c
 14115  01374C                     i2l5661:
 14116  01374C  0632               	decf	i2memset@n,f,c
 14117  01374E  A0D8               	btfss	status,0,c
 14118  013750  0633               	decf	i2memset@n+1,f,c
 14119  013752  2832               	incf	i2memset@n,w,c
 14120  013754  E1F3               	bnz	i2l5657
 14121  013756  2833               	incf	i2memset@n+1,w,c
 14122  013758  B4D8               	btfsc	status,2,c
 14123  01375A  0012               	return	
 14124  01375C  D7EF               	goto	i2l5657
 14125  01375E                     __end_ofi2_memset:
 14126                           	opt stack 0
 14127                           pclatu	equ	0xFFB
 14128                           pclath	equ	0xFFA
 14129                           tblptru	equ	0xFF8
 14130                           tblptrh	equ	0xFF7
 14131                           tblptrl	equ	0xFF6
 14132                           tablat	equ	0xFF5
 14133                           prodh	equ	0xFF4
 14134                           prodl	equ	0xFF3
 14135                           intcon	equ	0xFF2
 14136                           intcon2	equ	0xFF1
 14137                           indf0	equ	0xFEF
 14138                           postinc0	equ	0xFEE
 14139                           fsr0h	equ	0xFEA
 14140                           fsr0l	equ	0xFE9
 14141                           wreg	equ	0xFE8
 14142                           indf1	equ	0xFE7
 14143                           postinc1	equ	0xFE6
 14144                           postdec1	equ	0xFE5
 14145                           fsr1h	equ	0xFE2
 14146                           fsr1l	equ	0xFE1
 14147                           indf2	equ	0xFDF
 14148                           postinc2	equ	0xFDE
 14149                           postdec2	equ	0xFDD
 14150                           plusw2	equ	0xFDB
 14151                           fsr2h	equ	0xFDA
 14152                           fsr2l	equ	0xFD9
 14153                           status	equ	0xFD8
 14154                           
 14155 ;; *************** function _USBStdGetStatusHandler *****************
 14156 ;; Defined at:
 14157 ;;		line 2130 in file "../My_library/USB_CDC/usb/usb_device.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;		None
 14160 ;; Auto vars:     Size  Location     Type
 14161 ;;  p               2    1[COMRAM] PTR struct __BDT
 14162 ;;		 -> NULL(0), BDT(48), 
 14163 ;; Return value:  Size  Location     Type
 14164 ;;		None               void
 14165 ;; Registers used:
 14166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14167 ;; Tracked objects:
 14168 ;;		On entry : 0/0
 14169 ;;		On exit  : 0/0
 14170 ;;		Unchanged: 0/0
 14171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14176 ;;Total ram usage:        3 bytes
 14177 ;; Hardware stack levels used:    1
 14178 ;; This function calls:
 14179 ;;		Nothing
 14180 ;; This function is called by:
 14181 ;;		_USBCheckStdRequest
 14182 ;; This function uses a non-reentrant model
 14183 ;;
 14184                           
 14185                           	psect	text74
 14186  012AA6                     __ptext74:
 14187                           	opt stack 0
 14188  012AA6                     _USBStdGetStatusHandler:
 14189                           	opt stack 18
 14190                           
 14191                           ;usb_device.c: 2132: CtrlTrfData[0] = 0;
 14192                           
 14193                           ;incstack = 0
 14194  012AA6  0E00               	movlw	0
 14195  012AA8  010D               	movlb	13	; () banked
 14196  012AAA  6F38               	movwf	56,b	;volatile
 14197                           
 14198                           ;usb_device.c: 2133: CtrlTrfData[1] = 0;
 14199  012AAC  0E00               	movlw	0
 14200  012AAE  010D               	movlb	13	; () banked
 14201  012AB0  6F39               	movwf	57,b	;volatile
 14202                           
 14203                           ;usb_device.c: 2135: switch(SetupPkt.Recipient)
 14204  012AB2  D038               	goto	i2l5809
 14205  012AB4                     i2l281:
 14206                           
 14207                           ; BSR set to: 13
 14208                           ;usb_device.c: 2138: inPipes[0].info.bits.busy = 1;
 14209  012AB4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14210                           
 14211                           ; BSR set to: 13
 14212                           ;usb_device.c: 2146: }
 14213                           ;usb_device.c: 2148: if(RemoteWakeup == 1)
 14214                           
 14215                           ; BSR set to: 13
 14216                           
 14217                           ; BSR set to: 13
 14218                           ;usb_device.c: 2144: {
 14219                           ;usb_device.c: 2145: CtrlTrfData[0]|=0x01;
 14220                           
 14221                           ;usb_device.c: 2143: if(0 == 1)
 14222  012AB6  0420               	decf	_RemoteWakeup,w,c	;volatile
 14223  012AB8  A4D8               	btfss	status,2,c
 14224  012ABA  D040               	goto	i2l284
 14225                           
 14226                           ; BSR set to: 13
 14227                           ;usb_device.c: 2149: {
 14228                           ;usb_device.c: 2150: CtrlTrfData[0]|=0x02;
 14229  012ABC  010D               	movlb	13	; () banked
 14230  012ABE  8338               	bsf	56,1,b	;volatile
 14231                           
 14232                           ; BSR set to: 13
 14233                           ;usb_device.c: 2151: }
 14234                           ;usb_device.c: 2152: break;
 14235  012AC0  D03D               	goto	i2l284
 14236  012AC2                     i2l285:
 14237                           
 14238                           ; BSR set to: 13
 14239                           ;usb_device.c: 2154: inPipes[0].info.bits.busy = 1;
 14240  012AC2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14241                           
 14242                           ;usb_device.c: 2155: break;
 14243  012AC4  D03B               	goto	i2l284
 14244  012AC6                     i2l286:
 14245                           
 14246                           ; BSR set to: 13
 14247                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 14248  012AC6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14249                           
 14250                           ;usb_device.c: 2161: {
 14251                           ;usb_device.c: 2162: BDT_ENTRY *p;
 14252                           ;usb_device.c: 2164: if(SetupPkt.EPDir == 0)
 14253  012AC8  010D               	movlb	13	; () banked
 14254  012ACA  BF34               	btfsc	52,7,b	;volatile
 14255  012ACC  D00B               	goto	i2l5799
 14256                           
 14257                           ; BSR set to: 13
 14258                           ;usb_device.c: 2165: {
 14259                           ;usb_device.c: 2166: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14260  012ACE  010D               	movlb	13	; () banked
 14261  012AD0  5134               	movf	52,w,b	;volatile
 14262  012AD2  0B0F               	andlw	15
 14263  012AD4  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14264  012AD6  502E               	movf	??_USBStdGetStatusHandler,w,c
 14265  012AD8  0D02               	mullw	2
 14266  012ADA  0E9F               	movlw	low _pBDTEntryOut
 14267  012ADC  24F3               	addwf	prodl,w,c
 14268  012ADE  6ED9               	movwf	fsr2l,c
 14269  012AE0  0E00               	movlw	high _pBDTEntryOut
 14270  012AE2  D00A               	goto	L5
 14271  012AE4                     i2l5799:
 14272                           
 14273                           ; BSR set to: 13
 14274                           ;usb_device.c: 2168: else
 14275                           ;usb_device.c: 2169: {
 14276                           ;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 14277  012AE4  010D               	movlb	13	; () banked
 14278  012AE6  5134               	movf	52,w,b	;volatile
 14279  012AE8  0B0F               	andlw	15
 14280  012AEA  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14281  012AEC  502E               	movf	??_USBStdGetStatusHandler,w,c
 14282  012AEE  0D02               	mullw	2
 14283  012AF0  0E10               	movlw	low _pBDTEntryIn
 14284  012AF2  24F3               	addwf	prodl,w,c
 14285  012AF4  6ED9               	movwf	fsr2l,c
 14286  012AF6  0E00               	movlw	high _pBDTEntryIn
 14287  012AF8                     L5:
 14288  012AF8  20F4               	addwfc	prodh,w,c
 14289  012AFA  6EDA               	movwf	fsr2h,c
 14290  012AFC  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 14291  012B00  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 14292                           
 14293                           ; BSR set to: 13
 14294                           ;usb_device.c: 2171: }
 14295                           ;usb_device.c: 2173: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 14296                           
 14297                           ; BSR set to: 13
 14298  012B04  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14299  012B08  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14300  012B0C  AEDF               	btfss	indf2,7,c
 14301  012B0E  D016               	goto	i2l284
 14302                           
 14303                           ; BSR set to: 13
 14304  012B10  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14305  012B14  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14306  012B18  A4DF               	btfss	indf2,2,c
 14307  012B1A  D010               	goto	i2l284
 14308                           
 14309                           ; BSR set to: 13
 14310                           ;usb_device.c: 2174: CtrlTrfData[0]=0x01;
 14311  012B1C  0E01               	movlw	1
 14312  012B1E  010D               	movlb	13	; () banked
 14313  012B20  6F38               	movwf	56,b	;volatile
 14314                           
 14315                           ; BSR set to: 13
 14316                           ;usb_device.c: 2176: }
 14317                           ;usb_device.c: 2177: }
 14318                           
 14319                           ; BSR set to: 13
 14320                           ;usb_device.c: 2175: break;
 14321  012B22  D00C               	goto	i2l284
 14322  012B24                     i2l5809:
 14323                           
 14324                           ; BSR set to: 13
 14325  012B24  010D               	movlb	13	; () banked
 14326  012B26  5130               	movf	48,w,b	;volatile
 14327  012B28  0B1F               	andlw	31
 14328                           
 14329                           ; Switch size 1, requested type "space"
 14330                           ; Number of cases is 3, Range of values is 0 to 2
 14331                           ; switch strategies available:
 14332                           ; Name         Instructions Cycles
 14333                           ; simple_byte           10     6 (average)
 14334                           ;	Chosen strategy is simple_byte
 14335  012B2A  0A00               	xorlw	0	; case 0
 14336  012B2C  B4D8               	btfsc	status,2,c
 14337  012B2E  D7C2               	goto	i2l281
 14338  012B30  0A01               	xorlw	1	; case 1
 14339  012B32  B4D8               	btfsc	status,2,c
 14340  012B34  D7C6               	goto	i2l285
 14341  012B36  0A03               	xorlw	3	; case 2
 14342  012B38  B4D8               	btfsc	status,2,c
 14343  012B3A  D7C5               	goto	i2l286
 14344  012B3C                     i2l284:
 14345                           
 14346                           ; BSR set to: 13
 14347                           ;usb_device.c: 2179: if(inPipes[0].info.bits.busy == 1)
 14348  012B3C  AE0D               	btfss	_inPipes+3,7,c	;volatile
 14349  012B3E  0012               	return	
 14350                           
 14351                           ; BSR set to: 13
 14352                           ;usb_device.c: 2180: {
 14353                           ;usb_device.c: 2181: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 14354  012B40  0E38               	movlw	56
 14355  012B42  6E0A               	movwf	_inPipes,c	;volatile
 14356  012B44  0E0D               	movlw	13
 14357  012B46  6E0B               	movwf	_inPipes+1,c	;volatile
 14358                           
 14359                           ; BSR set to: 13
 14360                           ;usb_device.c: 2182: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14361  012B48  800D               	bsf	_inPipes+3,0,c	;volatile
 14362                           
 14363                           ; BSR set to: 13
 14364                           ;usb_device.c: 2183: inPipes[0].wCount.v[0] = 2;
 14365  012B4A  0E02               	movlw	2
 14366  012B4C  6E0E               	movwf	_inPipes+4,c	;volatile
 14367  012B4E  0012               	return	
 14368  012B50                     __end_of_USBStdGetStatusHandler:
 14369                           	opt stack 0
 14370                           pclatu	equ	0xFFB
 14371                           pclath	equ	0xFFA
 14372                           tblptru	equ	0xFF8
 14373                           tblptrh	equ	0xFF7
 14374                           tblptrl	equ	0xFF6
 14375                           tablat	equ	0xFF5
 14376                           prodh	equ	0xFF4
 14377                           prodl	equ	0xFF3
 14378                           intcon	equ	0xFF2
 14379                           intcon2	equ	0xFF1
 14380                           indf0	equ	0xFEF
 14381                           postinc0	equ	0xFEE
 14382                           fsr0h	equ	0xFEA
 14383                           fsr0l	equ	0xFE9
 14384                           wreg	equ	0xFE8
 14385                           indf1	equ	0xFE7
 14386                           postinc1	equ	0xFE6
 14387                           postdec1	equ	0xFE5
 14388                           fsr1h	equ	0xFE2
 14389                           fsr1l	equ	0xFE1
 14390                           indf2	equ	0xFDF
 14391                           postinc2	equ	0xFDE
 14392                           postdec2	equ	0xFDD
 14393                           plusw2	equ	0xFDB
 14394                           fsr2h	equ	0xFDA
 14395                           fsr2l	equ	0xFD9
 14396                           status	equ	0xFD8
 14397                           
 14398 ;; *************** function _USBStdGetDscHandler *****************
 14399 ;; Defined at:
 14400 ;;		line 2044 in file "../My_library/USB_CDC/usb/usb_device.c"
 14401 ;; Parameters:    Size  Location     Type
 14402 ;;		None
 14403 ;; Auto vars:     Size  Location     Type
 14404 ;;		None
 14405 ;; Return value:  Size  Location     Type
 14406 ;;		None               void
 14407 ;; Registers used:
 14408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14418 ;;Total ram usage:        2 bytes
 14419 ;; Hardware stack levels used:    1
 14420 ;; This function calls:
 14421 ;;		Nothing
 14422 ;; This function is called by:
 14423 ;;		_USBCheckStdRequest
 14424 ;; This function uses a non-reentrant model
 14425 ;;
 14426                           
 14427                           	psect	text75
 14428  011412                     __ptext75:
 14429                           	opt stack 0
 14430  011412                     _USBStdGetDscHandler:
 14431                           	opt stack 18
 14432                           
 14433                           ;usb_device.c: 2046: if(SetupPkt.bmRequestType == 0x80)
 14434                           
 14435                           ; BSR set to: 13
 14436                           ;incstack = 0
 14437  011412  0E80               	movlw	128
 14438  011414  010D               	movlb	13	; () banked
 14439  011416  1930               	xorwf	48,w,b	;volatile
 14440  011418  A4D8               	btfss	status,2,c
 14441  01141A  0012               	return	
 14442                           
 14443                           ; BSR set to: 13
 14444                           ;usb_device.c: 2047: {
 14445                           ;usb_device.c: 2048: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 14446  01141C  0EC0               	movlw	192
 14447  01141E  6E0D               	movwf	_inPipes+3,c	;volatile
 14448                           
 14449                           ;usb_device.c: 2050: switch(SetupPkt.bDescriptorType)
 14450  011420  D085               	goto	i2l5787
 14451  011422                     i2l5761:
 14452                           
 14453                           ; BSR set to: 13
 14454                           ;usb_device.c: 2056: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 14455  011422  0E46               	movlw	low _device_dsc
 14456  011424  6E0A               	movwf	_inPipes,c	;volatile
 14457  011426  0EFF               	movlw	high _device_dsc
 14458  011428  6E0B               	movwf	_inPipes+1,c	;volatile
 14459                           
 14460                           ; BSR set to: 13
 14461                           ;usb_device.c: 2058: inPipes[0].wCount.Val = sizeof(device_dsc);
 14462  01142A  0E00               	movlw	0
 14463  01142C  6E0F               	movwf	_inPipes+5,c	;volatile
 14464  01142E  0E12               	movlw	18
 14465  011430  6E0E               	movwf	_inPipes+4,c	;volatile
 14466                           
 14467                           ;usb_device.c: 2059: break;
 14468  011432  0012               	return	
 14469  011434                     i2l5765:
 14470                           
 14471                           ; BSR set to: 13
 14472                           ;usb_device.c: 2064: if(SetupPkt.bDscIndex < 1)
 14473  011434  010D               	movlb	13	; () banked
 14474  011436  5132               	movf	50,w,b	;volatile
 14475  011438  A4D8               	btfss	status,2,c
 14476  01143A  D043               	goto	i2l5773
 14477                           
 14478                           ; BSR set to: 13
 14479                           ;usb_device.c: 2065: {
 14480                           ;usb_device.c: 2069: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 14481  01143C  010D               	movlb	13	; () banked
 14482  01143E  5132               	movf	50,w,b	;volatile
 14483  011440  0D02               	mullw	2
 14484  011442  0E7D               	movlw	low _USB_CD_Ptr
 14485  011444  24F3               	addwf	prodl,w,c
 14486  011446  6EF6               	movwf	tblptrl,c
 14487  011448  0EFE               	movlw	high _USB_CD_Ptr
 14488  01144A  20F4               	addwfc	prodh,w,c
 14489  01144C  6EF7               	movwf	tblptrh,c
 14490  01144E                     	if	1	;There are 3 active tblptr bytes
 14491  01144E  6AF8               	clrf	tblptru,c
 14492  011450  0E00               	movlw	low (__mediumconst shr (0+16))
 14493  011452  22F8               	addwfc	tblptru,f,c
 14494  011454                     	endif
 14495  011454  0009               	tblrd		*+
 14496  011456  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 14497  01145A  000A               	tblrd		*-
 14498  01145C  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 14499                           
 14500                           ; BSR set to: 13
 14501                           ;usb_device.c: 2075: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 14502  011460  0E02               	movlw	2
 14503  011462  240A               	addwf	_inPipes,w,c	;volatile
 14504  011464  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14505  011466  0E00               	movlw	0
 14506  011468  200B               	addwfc	_inPipes+1,w,c	;volatile
 14507  01146A  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14508  01146C  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14509  011470  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14510  011474  0E00               	movlw	low (__mediumconst shr (0+16))
 14511  011476  6EF8               	movwf	tblptru,c
 14512  011478  0E0E               	movlw	(high __ramtop+-1)
 14513  01147A  64F7               	cpfsgt	tblptrh,c
 14514  01147C  D003               	bra	i2u437_47
 14515  01147E  0008               	tblrd		*
 14516  011480  50F5               	movf	tablat,w,c
 14517  011482  D005               	bra	i2u437_40
 14518  011484                     i2u437_47:
 14519  011484  CFF6 FFE9          	movff	tblptrl,fsr0l
 14520  011488  CFF7 FFEA          	movff	tblptrh,fsr0h
 14521  01148C  50EF               	movf	indf0,w,c
 14522  01148E                     i2u437_40:
 14523  01148E  6E0E               	movwf	_inPipes+4,c	;volatile
 14524                           
 14525                           ;usb_device.c: 2076: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 14526  011490  0E03               	movlw	3
 14527  011492  240A               	addwf	_inPipes,w,c	;volatile
 14528  011494  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14529  011496  0E00               	movlw	0
 14530  011498  200B               	addwfc	_inPipes+1,w,c	;volatile
 14531  01149A  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14532  01149C  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14533  0114A0  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14534  0114A4  0E00               	movlw	low (__mediumconst shr (0+16))
 14535  0114A6  6EF8               	movwf	tblptru,c
 14536  0114A8  0E0E               	movlw	(high __ramtop+-1)
 14537  0114AA  64F7               	cpfsgt	tblptrh,c
 14538  0114AC  D003               	bra	i2u438_47
 14539  0114AE  0008               	tblrd		*
 14540  0114B0  50F5               	movf	tablat,w,c
 14541  0114B2  D005               	bra	i2u438_40
 14542  0114B4                     i2u438_47:
 14543  0114B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 14544  0114B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 14545  0114BC  50EF               	movf	indf0,w,c
 14546  0114BE                     i2u438_40:
 14547  0114BE  6E0F               	movwf	_inPipes+5,c	;volatile
 14548                           
 14549                           ;usb_device.c: 2077: }
 14550  0114C0  0012               	return	
 14551  0114C2                     i2l5773:
 14552                           
 14553                           ;usb_device.c: 2078: else
 14554                           ;usb_device.c: 2079: {
 14555                           ;usb_device.c: 2080: inPipes[0].info.Val = 0;
 14556  0114C2  0E00               	movlw	0
 14557  0114C4  6E0D               	movwf	_inPipes+3,c	;volatile
 14558                           
 14559                           ;usb_device.c: 2081: }
 14560                           ;usb_device.c: 2082: break;
 14561  0114C6  0012               	return	
 14562  0114C8                     i2l5775:
 14563                           
 14564                           ;usb_device.c: 2087: if(SetupPkt.bDscIndex<3)
 14565  0114C8  0E03               	movlw	3
 14566  0114CA  010D               	movlb	13	; () banked
 14567  0114CC  6132               	cpfslt	50,b	;volatile
 14568  0114CE  D028               	goto	i2l5781
 14569                           
 14570                           ; BSR set to: 13
 14571                           ;usb_device.c: 2088: {
 14572                           ;usb_device.c: 2090: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 14573  0114D0  010D               	movlb	13	; () banked
 14574  0114D2  5132               	movf	50,w,b	;volatile
 14575  0114D4  0D02               	mullw	2
 14576  0114D6  0E77               	movlw	low _USB_SD_Ptr
 14577  0114D8  24F3               	addwf	prodl,w,c
 14578  0114DA  6EF6               	movwf	tblptrl,c
 14579  0114DC  0EFE               	movlw	high _USB_SD_Ptr
 14580  0114DE  20F4               	addwfc	prodh,w,c
 14581  0114E0  6EF7               	movwf	tblptrh,c
 14582  0114E2                     	if	1	;There are 3 active tblptr bytes
 14583  0114E2  6AF8               	clrf	tblptru,c
 14584  0114E4  0E00               	movlw	low (__mediumconst shr (0+16))
 14585  0114E6  22F8               	addwfc	tblptru,f,c
 14586  0114E8                     	endif
 14587  0114E8  0009               	tblrd		*+
 14588  0114EA  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 14589  0114EE  000A               	tblrd		*-
 14590  0114F0  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 14591                           
 14592                           ; BSR set to: 13
 14593                           ;usb_device.c: 2092: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 14594  0114F4  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 14595  0114F8  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 14596  0114FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14597  0114FE  6EF8               	movwf	tblptru,c
 14598  011500  0E0E               	movlw	(high __ramtop+-1)
 14599  011502  64F7               	cpfsgt	tblptrh,c
 14600  011504  D003               	bra	i2u440_47
 14601  011506  0008               	tblrd		*
 14602  011508  50F5               	movf	tablat,w,c
 14603  01150A  D005               	bra	i2u440_40
 14604  01150C                     i2u440_47:
 14605  01150C  CFF6 FFE9          	movff	tblptrl,fsr0l
 14606  011510  CFF7 FFEA          	movff	tblptrh,fsr0h
 14607  011514  50EF               	movf	indf0,w,c
 14608  011516                     i2u440_40:
 14609  011516  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14610  011518  502E               	movf	??_USBStdGetDscHandler,w,c
 14611  01151A  6E0E               	movwf	_inPipes+4,c	;volatile
 14612  01151C  6A0F               	clrf	_inPipes+5,c	;volatile
 14613                           
 14614                           ;usb_device.c: 2093: }
 14615  01151E  0012               	return	
 14616  011520                     i2l5781:
 14617                           
 14618                           ;usb_device.c: 2103: else
 14619                           ;usb_device.c: 2104: {
 14620                           ;usb_device.c: 2105: inPipes[0].info.Val = 0;
 14621  011520  0E00               	movlw	0
 14622  011522  6E0D               	movwf	_inPipes+3,c	;volatile
 14623                           
 14624                           ;usb_device.c: 2106: }
 14625                           ;usb_device.c: 2107: break;
 14626  011524  0012               	return	
 14627  011526                     i2l5783:
 14628                           
 14629                           ;usb_device.c: 2109: inPipes[0].info.Val = 0;
 14630  011526  0E00               	movlw	0
 14631  011528  6E0D               	movwf	_inPipes+3,c	;volatile
 14632                           
 14633                           ;usb_device.c: 2111: }
 14634                           
 14635                           ;usb_device.c: 2110: break;
 14636  01152A  0012               	return	
 14637  01152C                     i2l5787:
 14638  01152C  010D               	movlb	13	; () banked
 14639  01152E  5133               	movf	51,w,b	;volatile
 14640                           
 14641                           ; Switch size 1, requested type "space"
 14642                           ; Number of cases is 3, Range of values is 1 to 3
 14643                           ; switch strategies available:
 14644                           ; Name         Instructions Cycles
 14645                           ; simple_byte           10     6 (average)
 14646                           ;	Chosen strategy is simple_byte
 14647  011530  0A01               	xorlw	1	; case 1
 14648  011532  B4D8               	btfsc	status,2,c
 14649  011534  D776               	goto	i2l5761
 14650  011536  0A03               	xorlw	3	; case 2
 14651  011538  B4D8               	btfsc	status,2,c
 14652  01153A  D77C               	goto	i2l5765
 14653  01153C  0A01               	xorlw	1	; case 3
 14654  01153E  B4D8               	btfsc	status,2,c
 14655  011540  D7C3               	goto	i2l5775
 14656  011542  D7F1               	goto	i2l5783
 14657  011544                     __end_of_USBStdGetDscHandler:
 14658                           	opt stack 0
 14659                           pclatu	equ	0xFFB
 14660                           pclath	equ	0xFFA
 14661                           tblptru	equ	0xFF8
 14662                           tblptrh	equ	0xFF7
 14663                           tblptrl	equ	0xFF6
 14664                           tablat	equ	0xFF5
 14665                           prodh	equ	0xFF4
 14666                           prodl	equ	0xFF3
 14667                           intcon	equ	0xFF2
 14668                           intcon2	equ	0xFF1
 14669                           indf0	equ	0xFEF
 14670                           postinc0	equ	0xFEE
 14671                           fsr0h	equ	0xFEA
 14672                           fsr0l	equ	0xFE9
 14673                           wreg	equ	0xFE8
 14674                           indf1	equ	0xFE7
 14675                           postinc1	equ	0xFE6
 14676                           postdec1	equ	0xFE5
 14677                           fsr1h	equ	0xFE2
 14678                           fsr1l	equ	0xFE1
 14679                           indf2	equ	0xFDF
 14680                           postinc2	equ	0xFDE
 14681                           postdec2	equ	0xFDD
 14682                           plusw2	equ	0xFDB
 14683                           fsr2h	equ	0xFDA
 14684                           fsr2l	equ	0xFD9
 14685                           status	equ	0xFD8
 14686                           
 14687 ;; *************** function _USBStdFeatureReqHandler *****************
 14688 ;; Defined at:
 14689 ;;		line 2758 in file "../My_library/USB_CDC/usb/usb_device.c"
 14690 ;; Parameters:    Size  Location     Type
 14691 ;;		None
 14692 ;; Auto vars:     Size  Location     Type
 14693 ;;  p               2   24[COMRAM] PTR struct __BDT
 14694 ;;		 -> NULL(0), BDT(48), 
 14695 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 14696 ;;		 -> UEP0(1), 
 14697 ;;  current_ep_d    1   23[COMRAM] struct .
 14698 ;; Return value:  Size  Location     Type
 14699 ;;		None               void
 14700 ;; Registers used:
 14701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14702 ;; Tracked objects:
 14703 ;;		On entry : 0/0
 14704 ;;		On exit  : 0/0
 14705 ;;		Unchanged: 0/0
 14706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14708 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14711 ;;Total ram usage:        6 bytes
 14712 ;; Hardware stack levels used:    1
 14713 ;; Hardware stack levels required when called:    5
 14714 ;; This function calls:
 14715 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14716 ;; This function is called by:
 14717 ;;		_USBCheckStdRequest
 14718 ;; This function uses a non-reentrant model
 14719 ;;
 14720                           
 14721                           	psect	text76
 14722  0106E8                     __ptext76:
 14723                           	opt stack 0
 14724  0106E8                     _USBStdFeatureReqHandler:
 14725                           	opt stack 13
 14726                           
 14727                           ;usb_device.c: 2760: BDT_ENTRY *p;
 14728                           ;usb_device.c: 2761: EP_STATUS current_ep_data;
 14729                           ;usb_device.c: 2765: unsigned char* pUEP;
 14730                           ;usb_device.c: 2803: if((SetupPkt.bFeature == 1)&&
 14731                           ;usb_device.c: 2804: (SetupPkt.Recipient == (0x00)))
 14732                           
 14733                           ;incstack = 0
 14734  0106E8  010D               	movlb	13	; () banked
 14735  0106EA  0532               	decf	50,w,b	;volatile
 14736  0106EC  A4D8               	btfss	status,2,c
 14737  0106EE  D010               	goto	i2l360
 14738                           
 14739                           ; BSR set to: 13
 14740  0106F0  010D               	movlb	13	; () banked
 14741  0106F2  5130               	movf	48,w,b	;volatile
 14742  0106F4  0B1F               	andlw	31
 14743  0106F6  0900               	iorlw	0
 14744  0106F8  A4D8               	btfss	status,2,c
 14745  0106FA  D00A               	goto	i2l360
 14746                           
 14747                           ; BSR set to: 13
 14748                           ;usb_device.c: 2805: {
 14749                           ;usb_device.c: 2806: inPipes[0].info.bits.busy = 1;
 14750  0106FC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14751                           
 14752                           ; BSR set to: 13
 14753                           ;usb_device.c: 2807: if(SetupPkt.bRequest == 3)
 14754  0106FE  0E03               	movlw	3
 14755  010700  010D               	movlb	13	; () banked
 14756  010702  1931               	xorwf	49,w,b	;volatile
 14757  010704  A4D8               	btfss	status,2,c
 14758  010706  D002               	goto	i2l5827
 14759                           
 14760                           ; BSR set to: 13
 14761                           ;usb_device.c: 2808: RemoteWakeup = 1;
 14762  010708  0E01               	movlw	1
 14763  01070A  D001               	goto	L6
 14764  01070C                     i2l5827:
 14765                           
 14766                           ; BSR set to: 13
 14767                           ;usb_device.c: 2809: else
 14768                           ;usb_device.c: 2810: RemoteWakeup = 0;
 14769  01070C  0E00               	movlw	0
 14770  01070E                     L6:
 14771  01070E  6E20               	movwf	_RemoteWakeup,c	;volatile
 14772  010710                     i2l360:
 14773                           
 14774                           ; BSR set to: 13
 14775                           ;usb_device.c: 2811: }
 14776                           ;usb_device.c: 2814: if((SetupPkt.bFeature == 0)&&
 14777                           ;usb_device.c: 2815: (SetupPkt.Recipient == (0x02))&&
 14778                           ;usb_device.c: 2816: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 14779                           ;usb_device.c: 2817: (USBDeviceState == CONFIGURED_STATE))
 14780  010710  010D               	movlb	13	; () banked
 14781  010712  5132               	movf	50,w,b	;volatile
 14782  010714  A4D8               	btfss	status,2,c
 14783  010716  0012               	return	
 14784                           
 14785                           ; BSR set to: 13
 14786  010718  010D               	movlb	13	; () banked
 14787  01071A  5130               	movf	48,w,b	;volatile
 14788  01071C  0B1F               	andlw	31
 14789  01071E  0A02               	xorlw	2
 14790  010720  A4D8               	btfss	status,2,c
 14791  010722  0012               	return	
 14792                           
 14793                           ; BSR set to: 13
 14794  010724  010D               	movlb	13	; () banked
 14795  010726  5134               	movf	52,w,b	;volatile
 14796  010728  0B0F               	andlw	15
 14797  01072A  0900               	iorlw	0
 14798  01072C  B4D8               	btfsc	status,2,c
 14799  01072E  0012               	return	
 14800                           
 14801                           ; BSR set to: 13
 14802  010730  010D               	movlb	13	; () banked
 14803  010732  5134               	movf	52,w,b	;volatile
 14804  010734  0B0F               	andlw	15
 14805  010736  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14806  010738  0E03               	movlw	3
 14807  01073A  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 14808  01073C  0012               	return	
 14809                           
 14810                           ; BSR set to: 13
 14811  01073E  0E20               	movlw	32
 14812  010740  1824               	xorwf	_USBDeviceState,w,c	;volatile
 14813  010742  A4D8               	btfss	status,2,c
 14814  010744  0012               	return	
 14815                           
 14816                           ; BSR set to: 13
 14817                           ;usb_device.c: 2818: {
 14818                           ;usb_device.c: 2821: inPipes[0].info.bits.busy = 1;
 14819  010746  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14820                           
 14821                           ;usb_device.c: 2824: if(SetupPkt.EPDir == 0)
 14822  010748  010D               	movlb	13	; () banked
 14823  01074A  BF34               	btfsc	52,7,b	;volatile
 14824  01074C  D01B               	goto	i2l5841
 14825                           
 14826                           ; BSR set to: 13
 14827                           ;usb_device.c: 2825: {
 14828                           ;usb_device.c: 2826: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14829  01074E  010D               	movlb	13	; () banked
 14830  010750  5134               	movf	52,w,b	;volatile
 14831  010752  0B0F               	andlw	15
 14832  010754  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14833  010756  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14834  010758  0D02               	mullw	2
 14835  01075A  0E9F               	movlw	low _pBDTEntryOut
 14836  01075C  24F3               	addwf	prodl,w,c
 14837  01075E  6ED9               	movwf	fsr2l,c
 14838  010760  0E00               	movlw	high _pBDTEntryOut
 14839  010762  20F4               	addwfc	prodh,w,c
 14840  010764  6EDA               	movwf	fsr2h,c
 14841  010766  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 14842  01076A  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14843                           
 14844                           ;usb_device.c: 2827: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14845  01076E  010D               	movlb	13	; () banked
 14846  010770  5134               	movf	52,w,b	;volatile
 14847  010772  0B0F               	andlw	15
 14848  010774  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14849  010776  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14850  010778  0D01               	mullw	1
 14851  01077A  0EA5               	movlw	low _ep_data_out
 14852  01077C  24F3               	addwf	prodl,w,c
 14853  01077E  6ED9               	movwf	fsr2l,c
 14854  010780  0E00               	movlw	high _ep_data_out
 14855  010782  D01A               	goto	L7
 14856  010784                     i2l5841:
 14857                           
 14858                           ; BSR set to: 13
 14859                           ;usb_device.c: 2829: else
 14860                           ;usb_device.c: 2830: {
 14861                           ;usb_device.c: 2831: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 14862  010784  010D               	movlb	13	; () banked
 14863  010786  5134               	movf	52,w,b	;volatile
 14864  010788  0B0F               	andlw	15
 14865  01078A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14866  01078C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14867  01078E  0D02               	mullw	2
 14868  010790  0E10               	movlw	low _pBDTEntryIn
 14869  010792  24F3               	addwf	prodl,w,c
 14870  010794  6ED9               	movwf	fsr2l,c
 14871  010796  0E00               	movlw	high _pBDTEntryIn
 14872  010798  20F4               	addwfc	prodh,w,c
 14873  01079A  6EDA               	movwf	fsr2h,c
 14874  01079C  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 14875  0107A0  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14876                           
 14877                           ;usb_device.c: 2832: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14878  0107A4  010D               	movlb	13	; () banked
 14879  0107A6  5134               	movf	52,w,b	;volatile
 14880  0107A8  0B0F               	andlw	15
 14881  0107AA  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14882  0107AC  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14883  0107AE  0D01               	mullw	1
 14884  0107B0  0E16               	movlw	low _ep_data_in
 14885  0107B2  24F3               	addwf	prodl,w,c
 14886  0107B4  6ED9               	movwf	fsr2l,c
 14887  0107B6  0E00               	movlw	high _ep_data_in
 14888  0107B8                     L7:
 14889  0107B8  20F4               	addwfc	prodh,w,c
 14890  0107BA  6EDA               	movwf	fsr2h,c
 14891  0107BC  50DF               	movf	indf2,w,c
 14892  0107BE  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14893                           
 14894                           ; BSR set to: 13
 14895                           ;usb_device.c: 2833: }
 14896                           ;usb_device.c: 2839: if(current_ep_data.bits.ping_pong_state == 0)
 14897                           
 14898                           ; BSR set to: 13
 14899  0107C0  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14900  0107C2  D002               	goto	i2l5847
 14901                           
 14902                           ; BSR set to: 13
 14903                           ;usb_device.c: 2840: {
 14904                           ;usb_device.c: 2841: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 14905  0107C4  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 14906                           
 14907                           ;usb_device.c: 2842: }
 14908  0107C6  D001               	goto	i2l5849
 14909  0107C8                     i2l5847:
 14910                           
 14911                           ; BSR set to: 13
 14912                           ;usb_device.c: 2843: else
 14913                           ;usb_device.c: 2844: {
 14914                           ;usb_device.c: 2845: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 14915  0107C8  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 14916  0107CA                     i2l5849:
 14917                           
 14918                           ; BSR set to: 13
 14919                           ;usb_device.c: 2846: }
 14920                           ;usb_device.c: 2851: if(SetupPkt.EPDir == 0)
 14921  0107CA  010D               	movlb	13	; () banked
 14922  0107CC  BF34               	btfsc	52,7,b	;volatile
 14923  0107CE  D00B               	goto	i2l5853
 14924                           
 14925                           ; BSR set to: 13
 14926                           ;usb_device.c: 2852: {
 14927                           ;usb_device.c: 2853: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 14928  0107D0  010D               	movlb	13	; () banked
 14929  0107D2  5134               	movf	52,w,b	;volatile
 14930  0107D4  0B0F               	andlw	15
 14931  0107D6  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14932  0107D8  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14933  0107DA  0D02               	mullw	2
 14934  0107DC  0E9F               	movlw	low _pBDTEntryOut
 14935  0107DE  24F3               	addwf	prodl,w,c
 14936  0107E0  6ED9               	movwf	fsr2l,c
 14937  0107E2  0E00               	movlw	high _pBDTEntryOut
 14938  0107E4  D00A               	goto	L8
 14939  0107E6                     i2l5853:
 14940                           
 14941                           ; BSR set to: 13
 14942                           ;usb_device.c: 2855: else
 14943                           ;usb_device.c: 2856: {
 14944                           ;usb_device.c: 2857: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 14945  0107E6  010D               	movlb	13	; () banked
 14946  0107E8  5134               	movf	52,w,b	;volatile
 14947  0107EA  0B0F               	andlw	15
 14948  0107EC  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14949  0107EE  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14950  0107F0  0D02               	mullw	2
 14951  0107F2  0E10               	movlw	low _pBDTEntryIn
 14952  0107F4  24F3               	addwf	prodl,w,c
 14953  0107F6  6ED9               	movwf	fsr2l,c
 14954  0107F8  0E00               	movlw	high _pBDTEntryIn
 14955  0107FA                     L8:
 14956  0107FA  20F4               	addwfc	prodh,w,c
 14957  0107FC  6EDA               	movwf	fsr2h,c
 14958  0107FE  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14959  010802  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14960                           
 14961                           ; BSR set to: 13
 14962                           ;usb_device.c: 2858: }
 14963                           ;usb_device.c: 2861: if(SetupPkt.bRequest == 3)
 14964                           
 14965                           ; BSR set to: 13
 14966  010806  0E03               	movlw	3
 14967  010808  010D               	movlb	13	; () banked
 14968  01080A  1931               	xorwf	49,w,b	;volatile
 14969  01080C  A4D8               	btfss	status,2,c
 14970  01080E  D031               	goto	i2l5869
 14971                           
 14972                           ; BSR set to: 13
 14973                           ;usb_device.c: 2862: {
 14974                           ;usb_device.c: 2863: if(p->STAT.UOWN == 1)
 14975  010810  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14976  010814  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14977  010818  AEDF               	btfss	indf2,7,c
 14978  01081A  D01E               	goto	i2l5865
 14979                           
 14980                           ; BSR set to: 13
 14981                           ;usb_device.c: 2864: {
 14982                           ;usb_device.c: 2867: if(SetupPkt.EPDir == 0)
 14983  01081C  010D               	movlb	13	; () banked
 14984  01081E  BF34               	btfsc	52,7,b	;volatile
 14985  010820  D00E               	goto	i2l5863
 14986                           
 14987                           ; BSR set to: 13
 14988                           ;usb_device.c: 2868: {
 14989                           ;usb_device.c: 2869: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 14990  010822  010D               	movlb	13	; () banked
 14991  010824  5134               	movf	52,w,b	;volatile
 14992  010826  0B0F               	andlw	15
 14993  010828  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14994  01082A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14995  01082C  0D01               	mullw	1
 14996  01082E  0EA5               	movlw	low _ep_data_out
 14997  010830  24F3               	addwf	prodl,w,c
 14998  010832  6ED9               	movwf	fsr2l,c
 14999  010834  0E00               	movlw	high _ep_data_out
 15000  010836  20F4               	addwfc	prodh,w,c
 15001  010838  6EDA               	movwf	fsr2h,c
 15002  01083A  0100               	movlb	0	; () banked
 15003  01083C  D00C               	goto	L9
 15004  01083E                     i2l5863:
 15005                           
 15006                           ;usb_device.c: 2871: else
 15007                           ;usb_device.c: 2872: {
 15008                           ;usb_device.c: 2873: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 15009  01083E  010D               	movlb	13	; () banked
 15010  010840  5134               	movf	52,w,b	;volatile
 15011  010842  0B0F               	andlw	15
 15012  010844  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15013  010846  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15014  010848  0D01               	mullw	1
 15015  01084A  0E16               	movlw	low _ep_data_in
 15016  01084C  24F3               	addwf	prodl,w,c
 15017  01084E  6ED9               	movwf	fsr2l,c
 15018  010850  0E00               	movlw	high _ep_data_in
 15019  010852  20F4               	addwfc	prodh,w,c
 15020  010854  6EDA               	movwf	fsr2h,c
 15021  010856                     L9:
 15022  010856  82DF               	bsf	indf2,1,c
 15023  010858                     i2l5865:
 15024                           
 15025                           ;usb_device.c: 2874: }
 15026                           ;usb_device.c: 2875: }
 15027                           ;usb_device.c: 2878: p->STAT.Val |= 0x04;
 15028  010858  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15029  01085C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15030  010860  0E00               	movlw	0
 15031  010862  84DB               	bsf	plusw2,2,c
 15032                           
 15033                           ;usb_device.c: 2879: p->STAT.Val |= 0x80;
 15034  010864  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15035  010868  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15036  01086C  0E00               	movlw	0
 15037  01086E  8EDB               	bsf	plusw2,7,c
 15038                           
 15039                           ;usb_device.c: 2880: }
 15040  010870  0012               	return	
 15041  010872                     i2l5869:
 15042                           
 15043                           ;usb_device.c: 2881: else
 15044                           ;usb_device.c: 2882: {
 15045                           ;usb_device.c: 2886: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 15046  010872  0E04               	movlw	4
 15047  010874  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 15048                           
 15049                           ;usb_device.c: 2888: if(p->STAT.UOWN == 1)
 15050  010876  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15051  01087A  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15052  01087E  AEDF               	btfss	indf2,7,c
 15053  010880  D01B               	goto	i2l5879
 15054                           
 15055                           ;usb_device.c: 2889: {
 15056                           ;usb_device.c: 2892: p->STAT.Val &= (~0x80);
 15057  010882  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15058  010886  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15059  01088A  0E7F               	movlw	127
 15060  01088C  16DF               	andwf	indf2,f,c
 15061                           
 15062                           ;usb_device.c: 2893: p->STAT.Val |= 0x40;
 15063  01088E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15064  010892  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15065  010896  0E00               	movlw	0
 15066  010898  8CDB               	bsf	plusw2,6,c
 15067                           
 15068                           ;usb_device.c: 2894: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15069  01089A  0E00               	movlw	0
 15070  01089C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15071  01089E  0E05               	movlw	5
 15072  0108A0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15073  0108A2  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15074  0108A6  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15075  0108AA  0E00               	movlw	0
 15076  0108AC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15077  0108AE  0E02               	movlw	2
 15078  0108B0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15079  0108B2  EC27  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15080                           
 15081                           ;usb_device.c: 2895: }
 15082  0108B6  D006               	goto	i2l5881
 15083  0108B8                     i2l5879:
 15084                           
 15085                           ;usb_device.c: 2896: else
 15086                           ;usb_device.c: 2897: {
 15087                           ;usb_device.c: 2899: p->STAT.Val |= 0x40;
 15088  0108B8  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15089  0108BC  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15090  0108C0  0E00               	movlw	0
 15091  0108C2  8CDB               	bsf	plusw2,6,c
 15092  0108C4                     i2l5881:
 15093                           
 15094                           ;usb_device.c: 2900: }
 15095                           ;usb_device.c: 2904: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 15096  0108C4  0E04               	movlw	4
 15097  0108C6  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 15098                           
 15099                           ;usb_device.c: 2910: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 15100  0108C8  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 15101  0108CA  D006               	goto	i2l379
 15102  0108CC  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15103  0108D0  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15104  0108D4  AEDF               	btfss	indf2,7,c
 15105  0108D6  D033               	goto	i2l5895
 15106  0108D8                     i2l379:
 15107                           
 15108                           ;usb_device.c: 2911: {
 15109                           ;usb_device.c: 2912: if(SetupPkt.EPDir == 0)
 15110  0108D8  010D               	movlb	13	; () banked
 15111  0108DA  BF34               	btfsc	52,7,b	;volatile
 15112  0108DC  D00E               	goto	i2l5889
 15113                           
 15114                           ; BSR set to: 13
 15115                           ;usb_device.c: 2913: {
 15116                           ;usb_device.c: 2914: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 15117  0108DE  010D               	movlb	13	; () banked
 15118  0108E0  5134               	movf	52,w,b	;volatile
 15119  0108E2  0B0F               	andlw	15
 15120  0108E4  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15121  0108E6  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15122  0108E8  0D01               	mullw	1
 15123  0108EA  0EA5               	movlw	low _ep_data_out
 15124  0108EC  24F3               	addwf	prodl,w,c
 15125  0108EE  6ED9               	movwf	fsr2l,c
 15126  0108F0  0E00               	movlw	high _ep_data_out
 15127  0108F2  20F4               	addwfc	prodh,w,c
 15128  0108F4  6EDA               	movwf	fsr2h,c
 15129  0108F6  0100               	movlb	0	; () banked
 15130  0108F8  D00C               	goto	L10
 15131  0108FA                     i2l5889:
 15132                           
 15133                           ;usb_device.c: 2916: else
 15134                           ;usb_device.c: 2917: {
 15135                           ;usb_device.c: 2918: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 15136  0108FA  010D               	movlb	13	; () banked
 15137  0108FC  5134               	movf	52,w,b	;volatile
 15138  0108FE  0B0F               	andlw	15
 15139  010900  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15140  010902  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15141  010904  0D01               	mullw	1
 15142  010906  0E16               	movlw	low _ep_data_in
 15143  010908  24F3               	addwf	prodl,w,c
 15144  01090A  6ED9               	movwf	fsr2l,c
 15145  01090C  0E00               	movlw	high _ep_data_in
 15146  01090E  20F4               	addwfc	prodh,w,c
 15147  010910  6EDA               	movwf	fsr2h,c
 15148  010912                     L10:
 15149  010912  92DF               	bcf	indf2,1,c
 15150                           
 15151                           ;usb_device.c: 2919: }
 15152                           ;usb_device.c: 2921: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15153                           
 15154                           ; BSR set to: 13
 15155  010914  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15156  010918  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15157  01091C  0E3B               	movlw	59
 15158  01091E  16DF               	andwf	indf2,f,c
 15159                           
 15160                           ;usb_device.c: 2924: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15161  010920  0E00               	movlw	0
 15162  010922  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15163  010924  0E05               	movlw	5
 15164  010926  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15165  010928  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15166  01092C  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15167  010930  0E00               	movlw	0
 15168  010932  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15169  010934  0E02               	movlw	2
 15170  010936  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15171  010938  EC27  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15172                           
 15173                           ;usb_device.c: 2925: }
 15174  01093C  D006               	goto	i2l5897
 15175  01093E                     i2l5895:
 15176                           
 15177                           ;usb_device.c: 2926: else
 15178                           ;usb_device.c: 2927: {
 15179                           ;usb_device.c: 2929: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15180  01093E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15181  010942  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15182  010946  0E3B               	movlw	59
 15183  010948  16DF               	andwf	indf2,f,c
 15184  01094A                     i2l5897:
 15185                           
 15186                           ;usb_device.c: 2930: }
 15187                           ;usb_device.c: 2977: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 15188  01094A  010D               	movlb	13	; () banked
 15189  01094C  5134               	movf	52,w,b	;volatile
 15190  01094E  0B0F               	andlw	15
 15191  010950  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15192  010952  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15193  010954  0D01               	mullw	1
 15194  010956  0E26               	movlw	38
 15195  010958  24F3               	addwf	prodl,w,c
 15196  01095A  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 15197  01095C  0E0F               	movlw	15
 15198  01095E  20F4               	addwfc	prodh,w,c
 15199  010960  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 15200                           
 15201                           ; BSR set to: 13
 15202                           ;usb_device.c: 2981: *pUEP &= ~0x0001;
 15203  010962  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 15204  010966  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 15205  01096A  0EFE               	movlw	254
 15206  01096C  16DF               	andwf	indf2,f,c
 15207                           
 15208                           ; BSR set to: 13
 15209  01096E  0012               	return	
 15210  010970                     __end_of_USBStdFeatureReqHandler:
 15211                           	opt stack 0
 15212                           pclatu	equ	0xFFB
 15213                           pclath	equ	0xFFA
 15214                           tblptru	equ	0xFF8
 15215                           tblptrh	equ	0xFF7
 15216                           tblptrl	equ	0xFF6
 15217                           tablat	equ	0xFF5
 15218                           prodh	equ	0xFF4
 15219                           prodl	equ	0xFF3
 15220                           intcon	equ	0xFF2
 15221                           intcon2	equ	0xFF1
 15222                           indf0	equ	0xFEF
 15223                           postinc0	equ	0xFEE
 15224                           fsr0h	equ	0xFEA
 15225                           fsr0l	equ	0xFE9
 15226                           wreg	equ	0xFE8
 15227                           indf1	equ	0xFE7
 15228                           postinc1	equ	0xFE6
 15229                           postdec1	equ	0xFE5
 15230                           fsr1h	equ	0xFE2
 15231                           fsr1l	equ	0xFE1
 15232                           indf2	equ	0xFDF
 15233                           postinc2	equ	0xFDE
 15234                           postdec2	equ	0xFDD
 15235                           plusw2	equ	0xFDB
 15236                           fsr2h	equ	0xFDA
 15237                           fsr2l	equ	0xFD9
 15238                           status	equ	0xFD8
 15239                           
 15240 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 15241 ;; Defined at:
 15242 ;;		line 119 in file "../My_library/USB_CDC/My_USB_CDC.c"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;  event           2   12[COMRAM] enum E70
 15245 ;;  pdata           2   14[COMRAM] PTR void 
 15246 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 15247 ;;  size            2   16[COMRAM] unsigned int 
 15248 ;; Auto vars:     Size  Location     Type
 15249 ;;		None
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  1    wreg      unsigned char 
 15252 ;; Registers used:
 15253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15259 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15263 ;;Total ram usage:        8 bytes
 15264 ;; Hardware stack levels used:    1
 15265 ;; Hardware stack levels required when called:    4
 15266 ;; This function calls:
 15267 ;;		_APP_DeviceCDCBasicDemoInitialize
 15268 ;;		_USBCheckCDCRequest
 15269 ;; This function is called by:
 15270 ;;		_USBDeviceTasks
 15271 ;;		_USBStdSetCfgHandler
 15272 ;;		_USBSuspend
 15273 ;;		_USBWakeFromSuspend
 15274 ;;		_USBCtrlTrfSetupHandler
 15275 ;;		_USBCheckStdRequest
 15276 ;;		_USBStdFeatureReqHandler
 15277 ;; This function uses a non-reentrant model
 15278 ;;
 15279                           
 15280                           	psect	text77
 15281  01324E                     __ptext77:
 15282                           	opt stack 0
 15283  01324E                     _USER_USB_CALLBACK_EVENT_HANDLER:
 15284                           	opt stack 17
 15285                           
 15286                           ;My_USB_CDC.c: 120: switch ((int) event) {
 15287                           
 15288                           ;incstack = 0
 15289  01324E  D006               	goto	i2l5601
 15290  013250                     i2l5595:
 15291                           
 15292                           ;My_USB_CDC.c: 143: APP_DeviceCDCBasicDemoInitialize();
 15293  013250  ECD9  F09B         	call	_APP_DeviceCDCBasicDemoInitialize	;wreg free
 15294                           
 15295                           ;My_USB_CDC.c: 147: break;
 15296                           
 15297                           ;My_USB_CDC.c: 146: case EVENT_SET_DESCRIPTOR:
 15298                           
 15299                           ;My_USB_CDC.c: 144: break;
 15300  013254  0012               	return	
 15301  013256                     i2l5597:
 15302                           
 15303                           ;My_USB_CDC.c: 152: USBCheckCDCRequest();
 15304  013256  ECA5  F094         	call	_USBCheckCDCRequest	;wreg free
 15305                           
 15306                           ;My_USB_CDC.c: 163: }
 15307                           
 15308                           ;My_USB_CDC.c: 162: break;
 15309                           
 15310                           ;My_USB_CDC.c: 161: default:
 15311                           
 15312                           ;My_USB_CDC.c: 159: break;
 15313                           
 15314                           ;My_USB_CDC.c: 158: case EVENT_TRANSFER_TERMINATED:
 15315                           
 15316                           ;My_USB_CDC.c: 156: break;
 15317                           
 15318                           ;My_USB_CDC.c: 155: case EVENT_BUS_ERROR:
 15319                           
 15320                           ;My_USB_CDC.c: 153: break;
 15321  01325A  0012               	return	
 15322  01325C                     i2l5601:
 15323  01325C  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 15324  013260  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 15325                           
 15326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15327                           ; Switch size 1, requested type "space"
 15328                           ; Number of cases is 2, Range of values is 0 to 127
 15329                           ; switch strategies available:
 15330                           ; Name         Instructions Cycles
 15331                           ; simple_byte            7     4 (average)
 15332                           ;	Chosen strategy is simple_byte
 15333  013264  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 15334  013266  0A00               	xorlw	0	; case 0
 15335  013268  B4D8               	btfsc	status,2,c
 15336  01326A  D004               	goto	i2l10359
 15337  01326C  0A7F               	xorlw	127	; case 127
 15338  01326E  A4D8               	btfss	status,2,c
 15339  013270  0012               	return	
 15340  013272  D018               	goto	i2l10361
 15341  013274                     i2l10359:
 15342                           
 15343                           ; Switch size 1, requested type "space"
 15344                           ; Number of cases is 8, Range of values is 1 to 117
 15345                           ; switch strategies available:
 15346                           ; Name         Instructions Cycles
 15347                           ; simple_byte           25    13 (average)
 15348                           ;	Chosen strategy is simple_byte
 15349  013274  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15350  013276  0A01               	xorlw	1	; case 1
 15351  013278  B4D8               	btfsc	status,2,c
 15352  01327A  D7EA               	goto	i2l5595
 15353  01327C  0A03               	xorlw	3	; case 2
 15354  01327E  B4D8               	btfsc	status,2,c
 15355  013280  0012               	return	
 15356  013282  0A01               	xorlw	1	; case 3
 15357  013284  B4D8               	btfsc	status,2,c
 15358  013286  D7E7               	goto	i2l5597
 15359  013288  0A06               	xorlw	6	; case 5
 15360  01328A  B4D8               	btfsc	status,2,c
 15361  01328C  0012               	return	
 15362  01328E  0A77               	xorlw	119	; case 114
 15363  013290  B4D8               	btfsc	status,2,c
 15364  013292  0012               	return	
 15365  013294  0A01               	xorlw	1	; case 115
 15366  013296  B4D8               	btfsc	status,2,c
 15367  013298  0012               	return	
 15368  01329A  0A07               	xorlw	7	; case 116
 15369  01329C  B4D8               	btfsc	status,2,c
 15370  01329E  0012               	return	
 15371  0132A0  0A01               	xorlw	1	; case 117
 15372  0132A2  0012               	return	
 15373  0132A4                     i2l10361:
 15374                           
 15375                           ; Switch size 1, requested type "space"
 15376                           ; Number of cases is 1, Range of values is 255 to 255
 15377                           ; switch strategies available:
 15378                           ; Name         Instructions Cycles
 15379                           ; simple_byte            4     3 (average)
 15380                           ;	Chosen strategy is simple_byte
 15381  0132A4  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15382  0132A6  0AFF               	xorlw	255	; case 255
 15383  0132A8  0012               	return	
 15384  0132AA                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 15385                           	opt stack 0
 15386                           pclatu	equ	0xFFB
 15387                           pclath	equ	0xFFA
 15388                           tblptru	equ	0xFF8
 15389                           tblptrh	equ	0xFF7
 15390                           tblptrl	equ	0xFF6
 15391                           tablat	equ	0xFF5
 15392                           prodh	equ	0xFF4
 15393                           prodl	equ	0xFF3
 15394                           intcon	equ	0xFF2
 15395                           intcon2	equ	0xFF1
 15396                           indf0	equ	0xFEF
 15397                           postinc0	equ	0xFEE
 15398                           fsr0h	equ	0xFEA
 15399                           fsr0l	equ	0xFE9
 15400                           wreg	equ	0xFE8
 15401                           indf1	equ	0xFE7
 15402                           postinc1	equ	0xFE6
 15403                           postdec1	equ	0xFE5
 15404                           fsr1h	equ	0xFE2
 15405                           fsr1l	equ	0xFE1
 15406                           indf2	equ	0xFDF
 15407                           postinc2	equ	0xFDE
 15408                           postdec2	equ	0xFDD
 15409                           plusw2	equ	0xFDB
 15410                           fsr2h	equ	0xFDA
 15411                           fsr2l	equ	0xFD9
 15412                           status	equ	0xFD8
 15413                           
 15414 ;; *************** function _USBCheckCDCRequest *****************
 15415 ;; Defined at:
 15416 ;;		line 204 in file "../My_library/USB_CDC/usb/usb_device_cdc.c"
 15417 ;; Parameters:    Size  Location     Type
 15418 ;;		None
 15419 ;; Auto vars:     Size  Location     Type
 15420 ;;		None
 15421 ;; Return value:  Size  Location     Type
 15422 ;;		None               void
 15423 ;; Registers used:
 15424 ;;		wreg, status,2, status,0
 15425 ;; Tracked objects:
 15426 ;;		On entry : 0/0
 15427 ;;		On exit  : 0/0
 15428 ;;		Unchanged: 0/0
 15429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15434 ;;Total ram usage:        0 bytes
 15435 ;; Hardware stack levels used:    1
 15436 ;; This function calls:
 15437 ;;		Nothing
 15438 ;; This function is called by:
 15439 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15440 ;; This function uses a non-reentrant model
 15441 ;;
 15442                           
 15443                           	psect	text78
 15444  01294A                     __ptext78:
 15445                           	opt stack 0
 15446  01294A                     _USBCheckCDCRequest:
 15447                           	opt stack 20
 15448                           
 15449                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 15450                           
 15451                           ;incstack = 0
 15452  01294A  010D               	movlb	13	; () banked
 15453  01294C  5130               	movf	48,w,b	;volatile
 15454  01294E  0B1F               	andlw	31
 15455  012950  06E8               	decf	wreg,f,c
 15456  012952  A4D8               	btfss	status,2,c
 15457  012954  0012               	return	
 15458                           
 15459                           ; BSR set to: 13
 15460                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 15461                           
 15462                           ; BSR set to: 13
 15463                           
 15464                           ; BSR set to: 13
 15465  012956  010D               	movlb	13	; () banked
 15466  012958  3930               	swapf	48,w,b	;volatile
 15467  01295A  32E8               	rrcf	wreg,f,c
 15468  01295C  0B03               	andlw	3
 15469  01295E  06E8               	decf	wreg,f,c
 15470  012960  A4D8               	btfss	status,2,c
 15471  012962  0012               	return	
 15472                           
 15473                           ; BSR set to: 13
 15474                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 15475                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 15476                           
 15477                           ; BSR set to: 13
 15478                           
 15479                           ; BSR set to: 13
 15480  012964  010D               	movlb	13	; () banked
 15481  012966  5134               	movf	52,w,b	;volatile
 15482  012968  B4D8               	btfsc	status,2,c
 15483  01296A  D035               	goto	i2l5581
 15484                           
 15485                           ; BSR set to: 13
 15486  01296C  010D               	movlb	13	; () banked
 15487  01296E  0534               	decf	52,w,b	;volatile
 15488  012970  A4D8               	btfss	status,2,c
 15489  012972  0012               	return	
 15490  012974  D030               	goto	i2l5581
 15491  012976                     i2l5557:
 15492                           
 15493                           ; BSR set to: 13
 15494                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 15495  012976  0EC6               	movlw	low _dummy_encapsulated_cmd_response
 15496  012978  6E0A               	movwf	_inPipes,c	;volatile
 15497  01297A  0E01               	movlw	high _dummy_encapsulated_cmd_response
 15498  01297C  6E0B               	movwf	_inPipes+1,c	;volatile
 15499                           
 15500                           ; BSR set to: 13
 15501                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 15502  01297E  0E00               	movlw	0
 15503  012980  6E0F               	movwf	_inPipes+5,c	;volatile
 15504  012982  0E08               	movlw	8
 15505  012984  6E0E               	movwf	_inPipes+4,c	;volatile
 15506                           
 15507                           ; BSR set to: 13
 15508                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15509  012986  800D               	bsf	_inPipes+3,0,c	;volatile
 15510                           
 15511                           ; BSR set to: 13
 15512                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 15513  012988  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15514                           
 15515                           ;usb_device_cdc.c: 232: break;
 15516  01298A  0012               	return	
 15517  01298C                     i2l5565:
 15518                           
 15519                           ; BSR set to: 13
 15520                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 15521  01298C  0EC6               	movlw	low _dummy_encapsulated_cmd_response
 15522  01298E  6E0A               	movwf	_inPipes,c	;volatile
 15523  012990  0E01               	movlw	high _dummy_encapsulated_cmd_response
 15524  012992  6E0B               	movwf	_inPipes+1,c	;volatile
 15525                           
 15526                           ; BSR set to: 13
 15527                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 15528  012994  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15529                           
 15530                           ;usb_device_cdc.c: 237: break;
 15531  012996  0012               	return	
 15532  012998                     i2l436:
 15533                           
 15534                           ; BSR set to: 13
 15535                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 15536  012998  CD36 F005          	movff	3382,_outPipes+4	;volatile
 15537  01299C  CD37 F006          	movff	3383,_outPipes+5	;volatile
 15538                           
 15539                           ; BSR set to: 13
 15540                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 15541  0129A0  0EEE               	movlw	low _line_coding
 15542  0129A2  6E01               	movwf	_outPipes,c	;volatile
 15543  0129A4  0E01               	movlw	high _line_coding
 15544  0129A6  6E02               	movwf	_outPipes+1,c	;volatile
 15545                           
 15546                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 15547  0129A8  0E00               	movlw	0
 15548  0129AA  6E07               	movwf	_outPipes+6,c	;volatile
 15549  0129AC  0E00               	movlw	0
 15550  0129AE  6E08               	movwf	_outPipes+7,c	;volatile
 15551  0129B0  0E00               	movlw	0
 15552  0129B2  6E09               	movwf	_outPipes+8,c	;volatile
 15553                           
 15554                           ; BSR set to: 13
 15555                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 15556  0129B4  8E04               	bsf	_outPipes+3,7,c	;volatile
 15557                           
 15558                           ;usb_device_cdc.c: 246: break;
 15559  0129B6  0012               	return	
 15560  0129B8                     i2l5573:
 15561                           
 15562                           ; BSR set to: 13
 15563                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15564  0129B8  0EEE               	movlw	low _line_coding
 15565  0129BA  6E0A               	movwf	_inPipes,c	;volatile
 15566  0129BC  0E01               	movlw	high _line_coding
 15567  0129BE  6E0B               	movwf	_inPipes+1,c	;volatile
 15568                           
 15569                           ; BSR set to: 13
 15570  0129C0  0E00               	movlw	0
 15571  0129C2  6E0F               	movwf	_inPipes+5,c	;volatile
 15572  0129C4  0E07               	movlw	7
 15573  0129C6  6E0E               	movwf	_inPipes+4,c	;volatile
 15574                           
 15575                           ; BSR set to: 13
 15576  0129C8  0EC1               	movlw	193
 15577  0129CA  6E0D               	movwf	_inPipes+3,c	;volatile
 15578                           
 15579                           ;usb_device_cdc.c: 253: break;
 15580  0129CC  0012               	return	
 15581  0129CE                     i2l438:
 15582                           
 15583                           ; BSR set to: 13
 15584                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 15585  0129CE  CD32 F0BF          	movff	3378,_control_signal_bitmap	;volatile
 15586                           
 15587                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 15588  0129D2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15589                           
 15590                           ; BSR set to: 13
 15591                           ;usb_device_cdc.c: 315: }
 15592                           
 15593                           ; BSR set to: 13
 15594                           ;usb_device_cdc.c: 314: break;
 15595                           
 15596                           ;usb_device_cdc.c: 313: default:
 15597                           
 15598                           ;usb_device_cdc.c: 289: break;
 15599  0129D4  0012               	return	
 15600  0129D6                     i2l5581:
 15601                           
 15602                           ; BSR set to: 13
 15603  0129D6  010D               	movlb	13	; () banked
 15604  0129D8  5131               	movf	49,w,b	;volatile
 15605                           
 15606                           ; Switch size 1, requested type "space"
 15607                           ; Number of cases is 5, Range of values is 0 to 34
 15608                           ; switch strategies available:
 15609                           ; Name         Instructions Cycles
 15610                           ; simple_byte           16     9 (average)
 15611                           ;	Chosen strategy is simple_byte
 15612  0129DA  0A00               	xorlw	0	; case 0
 15613  0129DC  B4D8               	btfsc	status,2,c
 15614  0129DE  D7CB               	goto	i2l5557
 15615  0129E0  0A01               	xorlw	1	; case 1
 15616  0129E2  B4D8               	btfsc	status,2,c
 15617  0129E4  D7D3               	goto	i2l5565
 15618  0129E6  0A21               	xorlw	33	; case 32
 15619  0129E8  B4D8               	btfsc	status,2,c
 15620  0129EA  D7D6               	goto	i2l436
 15621  0129EC  0A01               	xorlw	1	; case 33
 15622  0129EE  B4D8               	btfsc	status,2,c
 15623  0129F0  D7E3               	goto	i2l5573
 15624  0129F2  0A03               	xorlw	3	; case 34
 15625  0129F4  A4D8               	btfss	status,2,c
 15626  0129F6  0012               	return	
 15627  0129F8  D7EA               	goto	i2l438
 15628  0129FA                     __end_of_USBCheckCDCRequest:
 15629                           	opt stack 0
 15630                           pclatu	equ	0xFFB
 15631                           pclath	equ	0xFFA
 15632                           tblptru	equ	0xFF8
 15633                           tblptrh	equ	0xFF7
 15634                           tblptrl	equ	0xFF6
 15635                           tablat	equ	0xFF5
 15636                           prodh	equ	0xFF4
 15637                           prodl	equ	0xFF3
 15638                           intcon	equ	0xFF2
 15639                           intcon2	equ	0xFF1
 15640                           indf0	equ	0xFEF
 15641                           postinc0	equ	0xFEE
 15642                           fsr0h	equ	0xFEA
 15643                           fsr0l	equ	0xFE9
 15644                           wreg	equ	0xFE8
 15645                           indf1	equ	0xFE7
 15646                           postinc1	equ	0xFE6
 15647                           postdec1	equ	0xFE5
 15648                           fsr1h	equ	0xFE2
 15649                           fsr1l	equ	0xFE1
 15650                           indf2	equ	0xFDF
 15651                           postinc2	equ	0xFDE
 15652                           postdec2	equ	0xFDD
 15653                           plusw2	equ	0xFDB
 15654                           fsr2h	equ	0xFDA
 15655                           fsr2l	equ	0xFD9
 15656                           status	equ	0xFD8
 15657                           
 15658 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
 15659 ;; Defined at:
 15660 ;;		line 110 in file "../My_library/USB_CDC/My_USB_CDC.c"
 15661 ;; Parameters:    Size  Location     Type
 15662 ;;		None
 15663 ;; Auto vars:     Size  Location     Type
 15664 ;;		None
 15665 ;; Return value:  Size  Location     Type
 15666 ;;		None               void
 15667 ;; Registers used:
 15668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15669 ;; Tracked objects:
 15670 ;;		On entry : 0/0
 15671 ;;		On exit  : 0/0
 15672 ;;		Unchanged: 0/0
 15673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15678 ;;Total ram usage:        0 bytes
 15679 ;; Hardware stack levels used:    1
 15680 ;; Hardware stack levels required when called:    3
 15681 ;; This function calls:
 15682 ;;		_CDCInitEP
 15683 ;; This function is called by:
 15684 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15685 ;; This function uses a non-reentrant model
 15686 ;;
 15687                           
 15688                           	psect	text79
 15689  0137B2                     __ptext79:
 15690                           	opt stack 0
 15691  0137B2                     _APP_DeviceCDCBasicDemoInitialize:
 15692                           	opt stack 17
 15693                           
 15694                           ;My_USB_CDC.c: 111: CDCInitEP();
 15695                           
 15696                           ; BSR set to: 13
 15697                           ;incstack = 0
 15698  0137B2  EC25  F098         	call	_CDCInitEP	;wreg free
 15699                           
 15700                           ;My_USB_CDC.c: 113: line_coding.bCharFormat = 0;
 15701  0137B6  0E00               	movlw	0
 15702  0137B8  0101               	movlb	1	; () banked
 15703  0137BA  6FF2               	movwf	(_line_coding+4)& (0+255),b
 15704                           
 15705                           ; BSR set to: 1
 15706                           ;My_USB_CDC.c: 114: line_coding.bDataBits = 8;
 15707  0137BC  0E08               	movlw	8
 15708  0137BE  0101               	movlb	1	; () banked
 15709  0137C0  6FF4               	movwf	(_line_coding+6)& (0+255),b
 15710                           
 15711                           ; BSR set to: 1
 15712                           ;My_USB_CDC.c: 115: line_coding.bParityType = 0;
 15713  0137C2  0E00               	movlw	0
 15714  0137C4  0101               	movlb	1	; () banked
 15715  0137C6  6FF3               	movwf	(_line_coding+5)& (0+255),b
 15716                           
 15717                           ; BSR set to: 1
 15718                           ;My_USB_CDC.c: 116: line_coding.dwDTERate = 115200;
 15719  0137C8  0E00               	movlw	0
 15720  0137CA  0101               	movlb	1	; () banked
 15721  0137CC  6FEE               	movwf	_line_coding& (0+255),b
 15722  0137CE  0EC2               	movlw	194
 15723  0137D0  6FEF               	movwf	(_line_coding+1)& (0+255),b
 15724  0137D2  0E01               	movlw	1
 15725  0137D4  6FF0               	movwf	(_line_coding+2)& (0+255),b
 15726  0137D6  0E00               	movlw	0
 15727  0137D8  6FF1               	movwf	(_line_coding+3)& (0+255),b
 15728                           
 15729                           ; BSR set to: 1
 15730  0137DA  0012               	return		;funcret
 15731  0137DC                     __end_of_APP_DeviceCDCBasicDemoInitialize:
 15732                           	opt stack 0
 15733                           pclatu	equ	0xFFB
 15734                           pclath	equ	0xFFA
 15735                           tblptru	equ	0xFF8
 15736                           tblptrh	equ	0xFF7
 15737                           tblptrl	equ	0xFF6
 15738                           tablat	equ	0xFF5
 15739                           prodh	equ	0xFF4
 15740                           prodl	equ	0xFF3
 15741                           intcon	equ	0xFF2
 15742                           intcon2	equ	0xFF1
 15743                           indf0	equ	0xFEF
 15744                           postinc0	equ	0xFEE
 15745                           fsr0h	equ	0xFEA
 15746                           fsr0l	equ	0xFE9
 15747                           wreg	equ	0xFE8
 15748                           indf1	equ	0xFE7
 15749                           postinc1	equ	0xFE6
 15750                           postdec1	equ	0xFE5
 15751                           fsr1h	equ	0xFE2
 15752                           fsr1l	equ	0xFE1
 15753                           indf2	equ	0xFDF
 15754                           postinc2	equ	0xFDE
 15755                           postdec2	equ	0xFDD
 15756                           plusw2	equ	0xFDB
 15757                           fsr2h	equ	0xFDA
 15758                           fsr2l	equ	0xFD9
 15759                           status	equ	0xFD8
 15760                           
 15761 ;; *************** function _CDCInitEP *****************
 15762 ;; Defined at:
 15763 ;;		line 351 in file "../My_library/USB_CDC/usb/usb_device_cdc.c"
 15764 ;; Parameters:    Size  Location     Type
 15765 ;;		None
 15766 ;; Auto vars:     Size  Location     Type
 15767 ;;		None
 15768 ;; Return value:  Size  Location     Type
 15769 ;;		None               void
 15770 ;; Registers used:
 15771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15772 ;; Tracked objects:
 15773 ;;		On entry : 0/0
 15774 ;;		On exit  : 0/0
 15775 ;;		Unchanged: 0/0
 15776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15781 ;;Total ram usage:        0 bytes
 15782 ;; Hardware stack levels used:    1
 15783 ;; Hardware stack levels required when called:    2
 15784 ;; This function calls:
 15785 ;;		_USBEnableEndpoint
 15786 ;;		i2_USBTransferOnePacket
 15787 ;; This function is called by:
 15788 ;;		_APP_DeviceCDCBasicDemoInitialize
 15789 ;; This function uses a non-reentrant model
 15790 ;;
 15791                           
 15792                           	psect	text80
 15793  01304A                     __ptext80:
 15794                           	opt stack 0
 15795  01304A                     _CDCInitEP:
 15796                           	opt stack 17
 15797                           
 15798                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 15799                           
 15800                           ; BSR set to: 1
 15801                           ;incstack = 0
 15802  01304A  0E00               	movlw	0
 15803  01304C  0101               	movlb	1	; () banked
 15804  01304E  6FEE               	movwf	_line_coding& (0+255),b
 15805  013050  0E4B               	movlw	75
 15806  013052  6FEF               	movwf	(_line_coding+1)& (0+255),b
 15807  013054  0E00               	movlw	0
 15808  013056  6FF0               	movwf	(_line_coding+2)& (0+255),b
 15809  013058  0E00               	movlw	0
 15810  01305A  6FF1               	movwf	(_line_coding+3)& (0+255),b
 15811                           
 15812                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 15813  01305C  0E00               	movlw	0
 15814  01305E  0101               	movlb	1	; () banked
 15815  013060  6FF2               	movwf	(_line_coding+4)& (0+255),b
 15816                           
 15817                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 15818  013062  0E00               	movlw	0
 15819  013064  0101               	movlb	1	; () banked
 15820  013066  6FF3               	movwf	(_line_coding+5)& (0+255),b
 15821                           
 15822                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 15823  013068  0E08               	movlw	8
 15824  01306A  0101               	movlb	1	; () banked
 15825  01306C  6FF4               	movwf	(_line_coding+6)& (0+255),b
 15826                           
 15827                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 15828  01306E  0E00               	movlw	0
 15829  013070  0100               	movlb	0	; () banked
 15830  013072  6FBD               	movwf	_cdc_rx_len& (0+255),b
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 15834  013074  0E1A               	movlw	26
 15835  013076  6E36               	movwf	USBEnableEndpoint@options,c
 15836  013078  0E01               	movlw	1
 15837  01307A  EC62  F09A         	call	_USBEnableEndpoint
 15838                           
 15839                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 15840  01307E  0E1E               	movlw	30
 15841  013080  6E36               	movwf	USBEnableEndpoint@options,c
 15842  013082  0E02               	movlw	2
 15843  013084  EC62  F09A         	call	_USBEnableEndpoint
 15844                           
 15845                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15846  013088  0E00               	movlw	0
 15847  01308A  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 15848  01308C  0E14               	movlw	low _cdc_data_rx
 15849  01308E  6E2F               	movwf	i2USBTransferOnePacket@data,c
 15850  013090  0E01               	movlw	high _cdc_data_rx
 15851  013092  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 15852  013094  0E40               	movlw	64
 15853  013096  6E31               	movwf	i2USBTransferOnePacket@len,c
 15854  013098  0E02               	movlw	2
 15855  01309A  EC90  F093         	call	i2_USBTransferOnePacket
 15856  01309E  C02E  F0B2         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 15857  0130A2  C02F  F0B3         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15858                           
 15859                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 15860  0130A6  0E00               	movlw	0
 15861  0130A8  0100               	movlb	0	; () banked
 15862  0130AA  6FB0               	movwf	_CDCDataInHandle& (0+255),b
 15863  0130AC  0E00               	movlw	0
 15864  0130AE  0100               	movlb	0	; () banked
 15865  0130B0  6FB1               	movwf	(_CDCDataInHandle+1)& (0+255),b
 15866                           
 15867                           ; BSR set to: 0
 15868                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 15869  0130B2  0E00               	movlw	0
 15870  0130B4  6E28               	movwf	_cdc_trf_state,c
 15871                           
 15872                           ; BSR set to: 0
 15873  0130B6  0012               	return		;funcret
 15874  0130B8                     __end_of_CDCInitEP:
 15875                           	opt stack 0
 15876                           pclatu	equ	0xFFB
 15877                           pclath	equ	0xFFA
 15878                           tblptru	equ	0xFF8
 15879                           tblptrh	equ	0xFF7
 15880                           tblptrl	equ	0xFF6
 15881                           tablat	equ	0xFF5
 15882                           prodh	equ	0xFF4
 15883                           prodl	equ	0xFF3
 15884                           intcon	equ	0xFF2
 15885                           intcon2	equ	0xFF1
 15886                           indf0	equ	0xFEF
 15887                           postinc0	equ	0xFEE
 15888                           fsr0h	equ	0xFEA
 15889                           fsr0l	equ	0xFE9
 15890                           wreg	equ	0xFE8
 15891                           indf1	equ	0xFE7
 15892                           postinc1	equ	0xFE6
 15893                           postdec1	equ	0xFE5
 15894                           fsr1h	equ	0xFE2
 15895                           fsr1l	equ	0xFE1
 15896                           indf2	equ	0xFDF
 15897                           postinc2	equ	0xFDE
 15898                           postdec2	equ	0xFDD
 15899                           plusw2	equ	0xFDB
 15900                           fsr2h	equ	0xFDA
 15901                           fsr2l	equ	0xFD9
 15902                           status	equ	0xFD8
 15903                           
 15904 ;; *************** function i2_USBTransferOnePacket *****************
 15905 ;; Defined at:
 15906 ;;		line 996 in file "../My_library/USB_CDC/usb/usb_device.c"
 15907 ;; Parameters:    Size  Location     Type
 15908 ;;  ep              1    wreg     unsigned char 
 15909 ;;  dir             1    0[COMRAM] unsigned char 
 15910 ;;  data            2    1[COMRAM] PTR unsigned char 
 15911 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 15912 ;;  len             1    3[COMRAM] unsigned char 
 15913 ;; Auto vars:     Size  Location     Type
 15914 ;;  ep              1    4[COMRAM] unsigned char 
 15915 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 15916 ;;		 -> NULL(0), BDT(48), 
 15917 ;; Return value:  Size  Location     Type
 15918 ;;                  2    0[COMRAM] PTR void 
 15919 ;; Registers used:
 15920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15921 ;; Tracked objects:
 15922 ;;		On entry : 0/0
 15923 ;;		On exit  : 0/0
 15924 ;;		Unchanged: 0/0
 15925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15927 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15929 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15930 ;;Total ram usage:        7 bytes
 15931 ;; Hardware stack levels used:    1
 15932 ;; This function calls:
 15933 ;;		Nothing
 15934 ;; This function is called by:
 15935 ;;		_CDCInitEP
 15936 ;; This function uses a non-reentrant model
 15937 ;;
 15938                           
 15939                           	psect	text81
 15940  012720                     __ptext81:
 15941                           	opt stack 0
 15942  012720                     i2_USBTransferOnePacket:
 15943                           	opt stack 18
 15944                           
 15945                           ; BSR set to: 0
 15946                           ;incstack = 0
 15947                           ;i2USBTransferOnePacket@ep stored from wreg
 15948  012720  6E32               	movwf	i2USBTransferOnePacket@ep,c
 15949                           
 15950                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 15951                           ;usb_device.c: 1001: if(dir != 0)
 15952  012722  502E               	movf	i2USBTransferOnePacket@dir,w,c
 15953  012724  B4D8               	btfsc	status,2,c
 15954  012726  D007               	goto	i2l5505
 15955                           
 15956                           ;usb_device.c: 1002: {
 15957                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 15958  012728  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15959  01272A  0D02               	mullw	2
 15960  01272C  0E10               	movlw	low _pBDTEntryIn
 15961  01272E  24F3               	addwf	prodl,w,c
 15962  012730  6ED9               	movwf	fsr2l,c
 15963  012732  0E00               	movlw	high _pBDTEntryIn
 15964  012734  D006               	goto	L11
 15965  012736                     i2l5505:
 15966                           
 15967                           ;usb_device.c: 1006: else
 15968                           ;usb_device.c: 1007: {
 15969                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 15970  012736  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15971  012738  0D02               	mullw	2
 15972  01273A  0E9F               	movlw	low _pBDTEntryOut
 15973  01273C  24F3               	addwf	prodl,w,c
 15974  01273E  6ED9               	movwf	fsr2l,c
 15975  012740  0E00               	movlw	high _pBDTEntryOut
 15976  012742                     L11:
 15977  012742  20F4               	addwfc	prodh,w,c
 15978  012744  6EDA               	movwf	fsr2h,c
 15979  012746  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 15980  01274A  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 15981                           
 15982                           ;usb_device.c: 1010: }
 15983                           ;usb_device.c: 1014: if(handle == 0)
 15984  01274E  5033               	movf	i2USBTransferOnePacket@handle,w,c
 15985  012750  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 15986  012752  A4D8               	btfss	status,2,c
 15987  012754  D005               	goto	i2l5513
 15988                           
 15989                           ;usb_device.c: 1015: {
 15990                           ;usb_device.c: 1016: return 0;
 15991  012756  0E00               	movlw	0
 15992  012758  6E2E               	movwf	?i2_USBTransferOnePacket,c
 15993  01275A  0E00               	movlw	0
 15994  01275C  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 15995  01275E  0012               	return	
 15996  012760                     i2l5513:
 15997                           
 15998                           ;usb_device.c: 1017: }
 15999                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 16000  012760  EE20 F002          	lfsr	2,2
 16001  012764  5033               	movf	i2USBTransferOnePacket@handle,w,c
 16002  012766  26D9               	addwf	fsr2l,f,c
 16003  012768  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 16004  01276A  22DA               	addwfc	fsr2h,f,c
 16005  01276C  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 16006  012770  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 16007                           
 16008                           ;usb_device.c: 1031: handle->CNT = len;
 16009  012774  EE20 F001          	lfsr	2,1
 16010  012778  5033               	movf	i2USBTransferOnePacket@handle,w,c
 16011  01277A  26D9               	addwf	fsr2l,f,c
 16012  01277C  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 16013  01277E  22DA               	addwfc	fsr2h,f,c
 16014  012780  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 16015                           
 16016                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 16017  012784  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 16018  012788  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 16019  01278C  0E40               	movlw	64
 16020  01278E  16DF               	andwf	indf2,f,c
 16021                           
 16022                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 16023  012790  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 16024  012794  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 16025  012798  0E00               	movlw	0
 16026  01279A  86DB               	bsf	plusw2,3,c
 16027                           
 16028                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 16029  01279C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 16030  0127A0  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 16031  0127A4  0E00               	movlw	0
 16032  0127A6  8EDB               	bsf	plusw2,7,c
 16033                           
 16034                           ;usb_device.c: 1037: if(dir != 0)
 16035  0127A8  502E               	movf	i2USBTransferOnePacket@dir,w,c
 16036  0127AA  B4D8               	btfsc	status,2,c
 16037  0127AC  D007               	goto	i2l5525
 16038                           
 16039                           ;usb_device.c: 1038: {
 16040                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 16041  0127AE  5032               	movf	i2USBTransferOnePacket@ep,w,c
 16042  0127B0  0D02               	mullw	2
 16043  0127B2  0E10               	movlw	low _pBDTEntryIn
 16044  0127B4  24F3               	addwf	prodl,w,c
 16045  0127B6  6ED9               	movwf	fsr2l,c
 16046  0127B8  0E00               	movlw	high _pBDTEntryIn
 16047  0127BA  D006               	goto	L12
 16048  0127BC                     i2l5525:
 16049                           
 16050                           ;usb_device.c: 1042: else
 16051                           ;usb_device.c: 1043: {
 16052                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 16053  0127BC  5032               	movf	i2USBTransferOnePacket@ep,w,c
 16054  0127BE  0D02               	mullw	2
 16055  0127C0  0E9F               	movlw	low _pBDTEntryOut
 16056  0127C2  24F3               	addwf	prodl,w,c
 16057  0127C4  6ED9               	movwf	fsr2l,c
 16058  0127C6  0E00               	movlw	high _pBDTEntryOut
 16059  0127C8                     L12:
 16060  0127C8  20F4               	addwfc	prodh,w,c
 16061  0127CA  6EDA               	movwf	fsr2h,c
 16062  0127CC  0E04               	movlw	4
 16063  0127CE  1ADF               	xorwf	indf2,f,c
 16064                           
 16065                           ;usb_device.c: 1046: }
 16066                           ;usb_device.c: 1047: return (void*)handle;
 16067  0127D0  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 16068  0127D4  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 16069  0127D8  0012               	return	
 16070  0127DA                     __end_ofi2_USBTransferOnePacket:
 16071                           	opt stack 0
 16072                           pclatu	equ	0xFFB
 16073                           pclath	equ	0xFFA
 16074                           tblptru	equ	0xFF8
 16075                           tblptrh	equ	0xFF7
 16076                           tblptrl	equ	0xFF6
 16077                           tablat	equ	0xFF5
 16078                           prodh	equ	0xFF4
 16079                           prodl	equ	0xFF3
 16080                           intcon	equ	0xFF2
 16081                           intcon2	equ	0xFF1
 16082                           indf0	equ	0xFEF
 16083                           postinc0	equ	0xFEE
 16084                           fsr0h	equ	0xFEA
 16085                           fsr0l	equ	0xFE9
 16086                           wreg	equ	0xFE8
 16087                           indf1	equ	0xFE7
 16088                           postinc1	equ	0xFE6
 16089                           postdec1	equ	0xFE5
 16090                           fsr1h	equ	0xFE2
 16091                           fsr1l	equ	0xFE1
 16092                           indf2	equ	0xFDF
 16093                           postinc2	equ	0xFDE
 16094                           postdec2	equ	0xFDD
 16095                           plusw2	equ	0xFDB
 16096                           fsr2h	equ	0xFDA
 16097                           fsr2l	equ	0xFD9
 16098                           status	equ	0xFD8
 16099                           
 16100 ;; *************** function _USBEnableEndpoint *****************
 16101 ;; Defined at:
 16102 ;;		line 879 in file "../My_library/USB_CDC/usb/usb_device.c"
 16103 ;; Parameters:    Size  Location     Type
 16104 ;;  ep              1    wreg     unsigned char 
 16105 ;;  options         1    8[COMRAM] unsigned char 
 16106 ;; Auto vars:     Size  Location     Type
 16107 ;;  ep              1   11[COMRAM] unsigned char 
 16108 ;;  p               2    9[COMRAM] PTR unsigned char 
 16109 ;;		 -> UEP0(1), 
 16110 ;; Return value:  Size  Location     Type
 16111 ;;		None               void
 16112 ;; Registers used:
 16113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16114 ;; Tracked objects:
 16115 ;;		On entry : 0/0
 16116 ;;		On exit  : 0/0
 16117 ;;		Unchanged: 0/0
 16118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16119 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16120 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16123 ;;Total ram usage:        4 bytes
 16124 ;; Hardware stack levels used:    1
 16125 ;; Hardware stack levels required when called:    1
 16126 ;; This function calls:
 16127 ;;		_USBConfigureEndpoint
 16128 ;; This function is called by:
 16129 ;;		_CDCInitEP
 16130 ;; This function uses a non-reentrant model
 16131 ;;
 16132                           
 16133                           	psect	text82
 16134  0134C4                     __ptext82:
 16135                           	opt stack 0
 16136  0134C4                     _USBEnableEndpoint:
 16137                           	opt stack 17
 16138                           
 16139                           ;incstack = 0
 16140                           ;USBEnableEndpoint@ep stored from wreg
 16141  0134C4  6E39               	movwf	USBEnableEndpoint@ep,c
 16142                           
 16143                           ;usb_device.c: 881: unsigned char* p;
 16144                           ;usb_device.c: 885: if(options & 0x04)
 16145  0134C6  A436               	btfss	USBEnableEndpoint@options,2,c
 16146  0134C8  D005               	goto	i2l5493
 16147                           
 16148                           ;usb_device.c: 886: {
 16149                           ;usb_device.c: 887: USBConfigureEndpoint(ep, 0);
 16150  0134CA  0E00               	movlw	0
 16151  0134CC  6E2E               	movwf	USBConfigureEndpoint@direction,c
 16152  0134CE  5039               	movf	USBEnableEndpoint@ep,w,c
 16153  0134D0  EC94  F096         	call	_USBConfigureEndpoint
 16154  0134D4                     i2l5493:
 16155                           
 16156                           ;usb_device.c: 888: }
 16157                           ;usb_device.c: 889: if(options & 0x02)
 16158  0134D4  A236               	btfss	USBEnableEndpoint@options,1,c
 16159  0134D6  D005               	goto	i2l5497
 16160                           
 16161                           ;usb_device.c: 890: {
 16162                           ;usb_device.c: 891: USBConfigureEndpoint(ep, 1);
 16163  0134D8  0E01               	movlw	1
 16164  0134DA  6E2E               	movwf	USBConfigureEndpoint@direction,c
 16165  0134DC  5039               	movf	USBEnableEndpoint@ep,w,c
 16166  0134DE  EC94  F096         	call	_USBConfigureEndpoint
 16167  0134E2                     i2l5497:
 16168                           
 16169                           ;usb_device.c: 892: }
 16170                           ;usb_device.c: 900: p = (unsigned char*)(&UEP0+ep);
 16171  0134E2  5039               	movf	USBEnableEndpoint@ep,w,c
 16172  0134E4  0D01               	mullw	1
 16173  0134E6  0E26               	movlw	38
 16174  0134E8  24F3               	addwf	prodl,w,c
 16175  0134EA  6E37               	movwf	USBEnableEndpoint@p,c
 16176  0134EC  0E0F               	movlw	15
 16177  0134EE  20F4               	addwfc	prodh,w,c
 16178  0134F0  6E38               	movwf	USBEnableEndpoint@p+1,c
 16179                           
 16180                           ;usb_device.c: 902: *p = options;
 16181  0134F2  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 16182  0134F6  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 16183  0134FA  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 16184  0134FE  0012               	return		;funcret
 16185  013500                     __end_of_USBEnableEndpoint:
 16186                           	opt stack 0
 16187                           pclatu	equ	0xFFB
 16188                           pclath	equ	0xFFA
 16189                           tblptru	equ	0xFF8
 16190                           tblptrh	equ	0xFF7
 16191                           tblptrl	equ	0xFF6
 16192                           tablat	equ	0xFF5
 16193                           prodh	equ	0xFF4
 16194                           prodl	equ	0xFF3
 16195                           intcon	equ	0xFF2
 16196                           intcon2	equ	0xFF1
 16197                           indf0	equ	0xFEF
 16198                           postinc0	equ	0xFEE
 16199                           fsr0h	equ	0xFEA
 16200                           fsr0l	equ	0xFE9
 16201                           wreg	equ	0xFE8
 16202                           indf1	equ	0xFE7
 16203                           postinc1	equ	0xFE6
 16204                           postdec1	equ	0xFE5
 16205                           fsr1h	equ	0xFE2
 16206                           fsr1l	equ	0xFE1
 16207                           indf2	equ	0xFDF
 16208                           postinc2	equ	0xFDE
 16209                           postdec2	equ	0xFDD
 16210                           plusw2	equ	0xFDB
 16211                           fsr2h	equ	0xFDA
 16212                           fsr2l	equ	0xFD9
 16213                           status	equ	0xFD8
 16214                           
 16215 ;; *************** function _USBConfigureEndpoint *****************
 16216 ;; Defined at:
 16217 ;;		line 1544 in file "../My_library/USB_CDC/usb/usb_device.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;  EPNum           1    wreg     unsigned char 
 16220 ;;  direction       1    0[COMRAM] unsigned char 
 16221 ;; Auto vars:     Size  Location     Type
 16222 ;;  EPNum           1    5[COMRAM] unsigned char 
 16223 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 16224 ;;		 -> BDT(48), 
 16225 ;; Return value:  Size  Location     Type
 16226 ;;		None               void
 16227 ;; Registers used:
 16228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16229 ;; Tracked objects:
 16230 ;;		On entry : 0/0
 16231 ;;		On exit  : 0/0
 16232 ;;		Unchanged: 0/0
 16233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16234 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16235 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16237 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16238 ;;Total ram usage:        8 bytes
 16239 ;; Hardware stack levels used:    1
 16240 ;; This function calls:
 16241 ;;		Nothing
 16242 ;; This function is called by:
 16243 ;;		_USBEnableEndpoint
 16244 ;; This function uses a non-reentrant model
 16245 ;;
 16246                           
 16247                           	psect	text83
 16248  012D28                     __ptext83:
 16249                           	opt stack 0
 16250  012D28                     _USBConfigureEndpoint:
 16251                           	opt stack 17
 16252                           
 16253                           ;incstack = 0
 16254                           ;USBConfigureEndpoint@EPNum stored from wreg
 16255  012D28  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 16256                           
 16257                           ;usb_device.c: 1546: volatile BDT_ENTRY* handle;
 16258                           ;usb_device.c: 1550: handle = (volatile BDT_ENTRY*)&BDT[0];
 16259  012D2A  0E00               	movlw	0
 16260  012D2C  6E34               	movwf	USBConfigureEndpoint@handle,c
 16261  012D2E  0E0D               	movlw	13
 16262  012D30  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 16263                           
 16264                           ;usb_device.c: 1551: handle += (4*EPNum+2*direction+0u);
 16265  012D32  502E               	movf	USBConfigureEndpoint@direction,w,c
 16266  012D34  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 16267  012D36  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 16268  012D38  90D8               	bcf	status,0,c
 16269  012D3A  362F               	rlcf	??_USBConfigureEndpoint,f,c
 16270  012D3C  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 16271  012D3E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16272  012D40  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 16273  012D42  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 16274  012D44  90D8               	bcf	status,0,c
 16275  012D46  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16276  012D48  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16277  012D4A  90D8               	bcf	status,0,c
 16278  012D4C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16279  012D4E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16280  012D50  502F               	movf	??_USBConfigureEndpoint,w,c
 16281  012D52  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 16282  012D54  5030               	movf	??_USBConfigureEndpoint+1,w,c
 16283  012D56  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 16284  012D58  90D8               	bcf	status,0,c
 16285  012D5A  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16286  012D5C  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16287  012D5E  90D8               	bcf	status,0,c
 16288  012D60  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16289  012D62  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16290  012D64  5031               	movf	??_USBConfigureEndpoint+2,w,c
 16291  012D66  2634               	addwf	USBConfigureEndpoint@handle,f,c
 16292  012D68  5032               	movf	??_USBConfigureEndpoint+3,w,c
 16293  012D6A  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16294                           
 16295                           ;usb_device.c: 1553: handle->STAT.UOWN = 0;
 16296  012D6C  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16297  012D70  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16298  012D74  9EDF               	bcf	indf2,7,c
 16299                           
 16300                           ;usb_device.c: 1558: if(direction == 0)
 16301  012D76  502E               	movf	USBConfigureEndpoint@direction,w,c
 16302  012D78  A4D8               	btfss	status,2,c
 16303  012D7A  D007               	goto	i2l5483
 16304                           
 16305                           ;usb_device.c: 1559: {
 16306                           ;usb_device.c: 1560: pBDTEntryOut[EPNum] = handle;
 16307  012D7C  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16308  012D7E  0D02               	mullw	2
 16309  012D80  0E9F               	movlw	low _pBDTEntryOut
 16310  012D82  24F3               	addwf	prodl,w,c
 16311  012D84  6ED9               	movwf	fsr2l,c
 16312  012D86  0E00               	movlw	high _pBDTEntryOut
 16313  012D88  D006               	goto	L13
 16314  012D8A                     i2l5483:
 16315                           
 16316                           ;usb_device.c: 1562: else
 16317                           ;usb_device.c: 1563: {
 16318                           ;usb_device.c: 1564: pBDTEntryIn[EPNum] = handle;
 16319  012D8A  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16320  012D8C  0D02               	mullw	2
 16321  012D8E  0E10               	movlw	low _pBDTEntryIn
 16322  012D90  24F3               	addwf	prodl,w,c
 16323  012D92  6ED9               	movwf	fsr2l,c
 16324  012D94  0E00               	movlw	high _pBDTEntryIn
 16325  012D96                     L13:
 16326  012D96  20F4               	addwfc	prodh,w,c
 16327  012D98  6EDA               	movwf	fsr2h,c
 16328  012D9A  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16329  012D9E  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16330                           
 16331                           ;usb_device.c: 1565: }
 16332                           ;usb_device.c: 1568: handle->STAT.DTS = 0;
 16333  012DA2  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16334  012DA6  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16335  012DAA  9CDF               	bcf	indf2,6,c
 16336                           
 16337                           ;usb_device.c: 1569: (handle+1)->STAT.DTS = 1;
 16338  012DAC  EE20 F004          	lfsr	2,4
 16339  012DB0  5034               	movf	USBConfigureEndpoint@handle,w,c
 16340  012DB2  26D9               	addwf	fsr2l,f,c
 16341  012DB4  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 16342  012DB6  22DA               	addwfc	fsr2h,f,c
 16343  012DB8  8CDF               	bsf	indf2,6,c
 16344  012DBA  0012               	return		;funcret
 16345  012DBC                     __end_of_USBConfigureEndpoint:
 16346                           	opt stack 0
 16347                           pclatu	equ	0xFFB
 16348                           pclath	equ	0xFFA
 16349                           tblptru	equ	0xFF8
 16350                           tblptrh	equ	0xFF7
 16351                           tblptrl	equ	0xFF6
 16352                           tablat	equ	0xFF5
 16353                           prodh	equ	0xFF4
 16354                           prodl	equ	0xFF3
 16355                           intcon	equ	0xFF2
 16356                           intcon2	equ	0xFF1
 16357                           indf0	equ	0xFEF
 16358                           postinc0	equ	0xFEE
 16359                           fsr0h	equ	0xFEA
 16360                           fsr0l	equ	0xFE9
 16361                           wreg	equ	0xFE8
 16362                           indf1	equ	0xFE7
 16363                           postinc1	equ	0xFE6
 16364                           postdec1	equ	0xFE5
 16365                           fsr1h	equ	0xFE2
 16366                           fsr1l	equ	0xFE1
 16367                           indf2	equ	0xFDF
 16368                           postinc2	equ	0xFDE
 16369                           postdec2	equ	0xFDD
 16370                           plusw2	equ	0xFDB
 16371                           fsr2h	equ	0xFDA
 16372                           fsr2l	equ	0xFD9
 16373                           status	equ	0xFD8
 16374                           
 16375 ;; *************** function _USBCtrlTrfOutHandler *****************
 16376 ;; Defined at:
 16377 ;;		line 2542 in file "../My_library/USB_CDC/usb/usb_device.c"
 16378 ;; Parameters:    Size  Location     Type
 16379 ;;		None
 16380 ;; Auto vars:     Size  Location     Type
 16381 ;;		None
 16382 ;; Return value:  Size  Location     Type
 16383 ;;		None               void
 16384 ;; Registers used:
 16385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16386 ;; Tracked objects:
 16387 ;;		On entry : 0/0
 16388 ;;		On exit  : 0/0
 16389 ;;		Unchanged: 0/0
 16390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16395 ;;Total ram usage:        0 bytes
 16396 ;; Hardware stack levels used:    1
 16397 ;; Hardware stack levels required when called:    2
 16398 ;; This function calls:
 16399 ;;		_USBCtrlTrfRxService
 16400 ;; This function is called by:
 16401 ;;		_USBCtrlEPService
 16402 ;; This function uses a non-reentrant model
 16403 ;;
 16404                           
 16405                           	psect	text84
 16406  0132AA                     __ptext84:
 16407                           	opt stack 0
 16408  0132AA                     _USBCtrlTrfOutHandler:
 16409                           	opt stack 18
 16410                           
 16411                           ;usb_device.c: 2544: if(controlTransferState == 2)
 16412                           
 16413                           ;incstack = 0
 16414  0132AA  0E02               	movlw	2
 16415  0132AC  1829               	xorwf	_controlTransferState,w,c	;volatile
 16416  0132AE  A4D8               	btfss	status,2,c
 16417  0132B0  D003               	goto	i2l6325
 16418                           
 16419                           ;usb_device.c: 2545: {
 16420                           ;usb_device.c: 2546: USBCtrlTrfRxService();
 16421  0132B2  ECA2  F08A         	call	_USBCtrlTrfRxService	;wreg free
 16422                           
 16423                           ;usb_device.c: 2547: }
 16424  0132B6  0012               	return	
 16425  0132B8                     i2l6325:
 16426                           
 16427                           ;usb_device.c: 2548: else
 16428                           ;usb_device.c: 2549: {
 16429                           ;usb_device.c: 2552: controlTransferState = 0;
 16430  0132B8  0E00               	movlw	0
 16431  0132BA  6E29               	movwf	_controlTransferState,c	;volatile
 16432                           
 16433                           ;usb_device.c: 2559: if(BothEP0OutUOWNsSet == 0)
 16434  0132BC  501E               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 16435  0132BE  A4D8               	btfss	status,2,c
 16436  0132C0  D01F               	goto	i2l6333
 16437                           
 16438                           ;usb_device.c: 2560: {
 16439                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->CNT = 8;
 16440  0132C2  EE20 F001          	lfsr	2,1
 16441  0132C6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16442  0132C8  26D9               	addwf	fsr2l,f,c
 16443  0132CA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16444  0132CC  22DA               	addwfc	fsr2h,f,c
 16445  0132CE  0E08               	movlw	8
 16446  0132D0  6EDF               	movwf	indf2,c
 16447                           
 16448                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16449  0132D2  EE20 F002          	lfsr	2,2
 16450  0132D6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16451  0132D8  26D9               	addwf	fsr2l,f,c
 16452  0132DA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16453  0132DC  22DA               	addwfc	fsr2h,f,c
 16454  0132DE  0E30               	movlw	48
 16455  0132E0  6EDE               	movwf	postinc2,c
 16456  0132E2  0E0D               	movlw	13
 16457  0132E4  6EDD               	movwf	postdec2,c
 16458                           
 16459                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16460  0132E6  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16461  0132EA  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16462  0132EE  0E0C               	movlw	12
 16463  0132F0  6EDF               	movwf	indf2,c
 16464                           
 16465                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16466  0132F2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16467  0132F6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16468  0132FA  0E00               	movlw	0
 16469  0132FC  8EDB               	bsf	plusw2,7,c
 16470                           
 16471                           ;usb_device.c: 2565: }
 16472  0132FE  0012               	return	
 16473  013300                     i2l6333:
 16474                           
 16475                           ;usb_device.c: 2566: else
 16476                           ;usb_device.c: 2567: {
 16477                           ;usb_device.c: 2568: BothEP0OutUOWNsSet = 0;
 16478  013300  0E00               	movlw	0
 16479  013302  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16480  013304  0012               	return	
 16481  013306                     __end_of_USBCtrlTrfOutHandler:
 16482                           	opt stack 0
 16483                           pclatu	equ	0xFFB
 16484                           pclath	equ	0xFFA
 16485                           tblptru	equ	0xFF8
 16486                           tblptrh	equ	0xFF7
 16487                           tblptrl	equ	0xFF6
 16488                           tablat	equ	0xFF5
 16489                           prodh	equ	0xFF4
 16490                           prodl	equ	0xFF3
 16491                           intcon	equ	0xFF2
 16492                           intcon2	equ	0xFF1
 16493                           indf0	equ	0xFEF
 16494                           postinc0	equ	0xFEE
 16495                           fsr0h	equ	0xFEA
 16496                           fsr0l	equ	0xFE9
 16497                           wreg	equ	0xFE8
 16498                           indf1	equ	0xFE7
 16499                           postinc1	equ	0xFE6
 16500                           postdec1	equ	0xFE5
 16501                           fsr1h	equ	0xFE2
 16502                           fsr1l	equ	0xFE1
 16503                           indf2	equ	0xFDF
 16504                           postinc2	equ	0xFDE
 16505                           postdec2	equ	0xFDD
 16506                           plusw2	equ	0xFDB
 16507                           fsr2h	equ	0xFDA
 16508                           fsr2l	equ	0xFD9
 16509                           status	equ	0xFD8
 16510                           
 16511 ;; *************** function _USBCtrlTrfRxService *****************
 16512 ;; Defined at:
 16513 ;;		line 1853 in file "../My_library/USB_CDC/usb/usb_device.c"
 16514 ;; Parameters:    Size  Location     Type
 16515 ;;		None
 16516 ;; Auto vars:     Size  Location     Type
 16517 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16518 ;;  i               1    0[COMRAM] unsigned char 
 16519 ;; Return value:  Size  Location     Type
 16520 ;;		None               void
 16521 ;; Registers used:
 16522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16523 ;; Tracked objects:
 16524 ;;		On entry : 0/0
 16525 ;;		On exit  : 0/0
 16526 ;;		Unchanged: 0/0
 16527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16532 ;;Total ram usage:        2 bytes
 16533 ;; Hardware stack levels used:    1
 16534 ;; Hardware stack levels required when called:    1
 16535 ;; This function calls:
 16536 ;;		_USBCtrlEPAllowStatusStage
 16537 ;; This function is called by:
 16538 ;;		_USBCtrlTrfOutHandler
 16539 ;; This function uses a non-reentrant model
 16540 ;;
 16541                           
 16542                           	psect	text85
 16543  011544                     __ptext85:
 16544                           	opt stack 0
 16545  011544                     _USBCtrlTrfRxService:
 16546                           	opt stack 18
 16547                           
 16548                           ;usb_device.c: 1855: uint8_t byteToRead;
 16549                           ;usb_device.c: 1856: uint8_t i;
 16550                           ;usb_device.c: 1860: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16551                           
 16552                           ;incstack = 0
 16553  011544  EE20 F001          	lfsr	2,1
 16554  011548  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16555  01154A  26D9               	addwf	fsr2l,f,c
 16556  01154C  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16557  01154E  22DA               	addwfc	fsr2h,f,c
 16558  011550  50DF               	movf	indf2,w,c
 16559  011552  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 16560                           
 16561                           ;usb_device.c: 1866: if(byteToRead > outPipes[0].wCount.Val)
 16562  011554  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16563  011556  5C05               	subwf	_outPipes+4,w,c	;volatile
 16564  011558  0E00               	movlw	0
 16565  01155A  5806               	subwfb	_outPipes+5,w,c	;volatile
 16566  01155C  A0D8               	btfss	status,0,c
 16567                           
 16568                           ;usb_device.c: 1867: {
 16569                           ;usb_device.c: 1868: byteToRead = outPipes[0].wCount.Val;
 16570  01155E  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 16571                           
 16572                           ;usb_device.c: 1869: }
 16573                           ;usb_device.c: 1871: outPipes[0].wCount.Val -= byteToRead;
 16574  011562  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16575  011564  5E05               	subwf	_outPipes+4,f,c	;volatile
 16576  011566  0E00               	movlw	0
 16577  011568  5A06               	subwfb	_outPipes+5,f,c	;volatile
 16578                           
 16579                           ;usb_device.c: 1875: for(i=0;i<byteToRead;i++)
 16580  01156A  0E00               	movlw	0
 16581  01156C  6E2E               	movwf	USBCtrlTrfRxService@i,c
 16582  01156E  D011               	goto	i2l6113
 16583  011570                     i2l6107:
 16584                           
 16585                           ;usb_device.c: 1876: {
 16586                           ;usb_device.c: 1877: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16587  011570  502E               	movf	USBCtrlTrfRxService@i,w,c
 16588  011572  0D01               	mullw	1
 16589  011574  0E38               	movlw	56
 16590  011576  24F3               	addwf	prodl,w,c
 16591  011578  6ED9               	movwf	fsr2l,c
 16592  01157A  0E0D               	movlw	13
 16593  01157C  20F4               	addwfc	prodh,w,c
 16594  01157E  6EDA               	movwf	fsr2h,c
 16595  011580  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 16596  011584  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 16597  011588  CFDF FFE7          	movff	indf2,indf1
 16598  01158C  4A01               	infsnz	_outPipes,f,c	;volatile
 16599  01158E  2A02               	incf	_outPipes+1,f,c	;volatile
 16600  011590  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 16601  011592                     i2l6113:
 16602  011592  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16603  011594  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 16604  011596  A0D8               	btfss	status,0,c
 16605  011598  D7EB               	goto	i2l6107
 16606                           
 16607                           ;usb_device.c: 1878: }
 16608                           ;usb_device.c: 1882: if(outPipes[0].wCount.Val > 0)
 16609  01159A  5005               	movf	_outPipes+4,w,c	;volatile
 16610  01159C  1006               	iorwf	_outPipes+5,w,c	;volatile
 16611  01159E  B4D8               	btfsc	status,2,c
 16612  0115A0  D032               	goto	i2l6129
 16613                           
 16614                           ;usb_device.c: 1883: {
 16615                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->CNT = 8;
 16616  0115A2  EE20 F001          	lfsr	2,1
 16617  0115A6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16618  0115A8  26D9               	addwf	fsr2l,f,c
 16619  0115AA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16620  0115AC  22DA               	addwfc	fsr2h,f,c
 16621  0115AE  0E08               	movlw	8
 16622  0115B0  6EDF               	movwf	indf2,c
 16623                           
 16624                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16625  0115B2  EE20 F002          	lfsr	2,2
 16626  0115B6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16627  0115B8  26D9               	addwf	fsr2l,f,c
 16628  0115BA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16629  0115BC  22DA               	addwfc	fsr2h,f,c
 16630  0115BE  0E38               	movlw	56
 16631  0115C0  6EDE               	movwf	postinc2,c
 16632  0115C2  0E0D               	movlw	13
 16633  0115C4  6EDD               	movwf	postdec2,c
 16634                           
 16635                           ;usb_device.c: 1886: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16636  0115C6  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16637  0115CA  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16638  0115CE  BCDF               	btfsc	indf2,6,c
 16639  0115D0  D00D               	goto	i2l6125
 16640                           
 16641                           ;usb_device.c: 1887: {
 16642                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16643  0115D2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16644  0115D6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16645  0115DA  0E48               	movlw	72
 16646  0115DC  6EDF               	movwf	indf2,c
 16647                           
 16648                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16649  0115DE  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16650  0115E2  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16651  0115E6  0E00               	movlw	0
 16652  0115E8  8EDB               	bsf	plusw2,7,c
 16653                           
 16654                           ;usb_device.c: 1890: }
 16655  0115EA  0012               	return	
 16656  0115EC                     i2l6125:
 16657                           
 16658                           ;usb_device.c: 1891: else
 16659                           ;usb_device.c: 1892: {
 16660                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 16661  0115EC  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16662  0115F0  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16663  0115F4  0E08               	movlw	8
 16664  0115F6  6EDF               	movwf	indf2,c
 16665                           
 16666                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16667  0115F8  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16668  0115FC  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16669  011600  0E00               	movlw	0
 16670  011602  8EDB               	bsf	plusw2,7,c
 16671                           
 16672                           ;usb_device.c: 1895: }
 16673                           ;usb_device.c: 1896: }
 16674  011604  0012               	return	
 16675  011606                     i2l6129:
 16676                           
 16677                           ;usb_device.c: 1897: else
 16678                           ;usb_device.c: 1898: {
 16679                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
 16680  011606  EE20 F001          	lfsr	2,1
 16681  01160A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16682  01160C  26D9               	addwf	fsr2l,f,c
 16683  01160E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16684  011610  22DA               	addwfc	fsr2h,f,c
 16685  011612  0E08               	movlw	8
 16686  011614  6EDF               	movwf	indf2,c
 16687                           
 16688                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16689  011616  EE20 F002          	lfsr	2,2
 16690  01161A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16691  01161C  26D9               	addwf	fsr2l,f,c
 16692  01161E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16693  011620  22DA               	addwfc	fsr2h,f,c
 16694  011622  0E30               	movlw	48
 16695  011624  6EDE               	movwf	postinc2,c
 16696  011626  0E0D               	movlw	13
 16697  011628  6EDD               	movwf	postdec2,c
 16698                           
 16699                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16700  01162A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16701  01162E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16702  011632  0E04               	movlw	4
 16703  011634  6EDF               	movwf	indf2,c
 16704                           
 16705                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16706  011636  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16707  01163A  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16708  01163E  0E00               	movlw	0
 16709  011640  8EDB               	bsf	plusw2,7,c
 16710                           
 16711                           ;usb_device.c: 1927: }
 16712                           ;usb_device.c: 1928: outPipes[0].info.bits.busy = 0;
 16713                           
 16714                           ;usb_device.c: 1916: {
 16715                           ;usb_device.c: 1922: outPipes[0].pFunc();
 16716  011642  9E04               	bcf	_outPipes+3,7,c	;volatile
 16717                           
 16718                           ;usb_device.c: 1942: if(USBDeferStatusStagePacket == 0)
 16719  011644  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16720  011646  A4D8               	btfss	status,2,c
 16721  011648  0012               	return	
 16722                           
 16723                           ;usb_device.c: 1943: {
 16724                           ;usb_device.c: 1944: USBCtrlEPAllowStatusStage();
 16725  01164A  ECB6  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16726  01164E  0012               	return	
 16727  011650                     __end_of_USBCtrlTrfRxService:
 16728                           	opt stack 0
 16729                           pclatu	equ	0xFFB
 16730                           pclath	equ	0xFFA
 16731                           tblptru	equ	0xFF8
 16732                           tblptrh	equ	0xFF7
 16733                           tblptrl	equ	0xFF6
 16734                           tablat	equ	0xFF5
 16735                           prodh	equ	0xFF4
 16736                           prodl	equ	0xFF3
 16737                           intcon	equ	0xFF2
 16738                           intcon2	equ	0xFF1
 16739                           indf0	equ	0xFEF
 16740                           postinc0	equ	0xFEE
 16741                           fsr0h	equ	0xFEA
 16742                           fsr0l	equ	0xFE9
 16743                           wreg	equ	0xFE8
 16744                           indf1	equ	0xFE7
 16745                           postinc1	equ	0xFE6
 16746                           postdec1	equ	0xFE5
 16747                           fsr1h	equ	0xFE2
 16748                           fsr1l	equ	0xFE1
 16749                           indf2	equ	0xFDF
 16750                           postinc2	equ	0xFDE
 16751                           postdec2	equ	0xFDD
 16752                           plusw2	equ	0xFDB
 16753                           fsr2h	equ	0xFDA
 16754                           fsr2l	equ	0xFD9
 16755                           status	equ	0xFD8
 16756                           
 16757 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16758 ;; Defined at:
 16759 ;;		line 1417 in file "../My_library/USB_CDC/usb/usb_device.c"
 16760 ;; Parameters:    Size  Location     Type
 16761 ;;		None
 16762 ;; Auto vars:     Size  Location     Type
 16763 ;;		None
 16764 ;; Return value:  Size  Location     Type
 16765 ;;		None               void
 16766 ;; Registers used:
 16767 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16768 ;; Tracked objects:
 16769 ;;		On entry : 0/0
 16770 ;;		On exit  : 0/0
 16771 ;;		Unchanged: 0/0
 16772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16777 ;;Total ram usage:        0 bytes
 16778 ;; Hardware stack levels used:    1
 16779 ;; This function calls:
 16780 ;;		Nothing
 16781 ;; This function is called by:
 16782 ;;		_USBDeviceTasks
 16783 ;;		_USBCtrlEPServiceComplete
 16784 ;;		_USBCtrlTrfRxService
 16785 ;; This function uses a non-reentrant model
 16786 ;;
 16787                           
 16788                           	psect	text86
 16789  01236C                     __ptext86:
 16790                           	opt stack 0
 16791  01236C                     _USBCtrlEPAllowStatusStage:
 16792                           	opt stack 18
 16793                           
 16794                           ;usb_device.c: 1424: if(USBStatusStageEnabledFlag1 == 0)
 16795                           
 16796                           ;incstack = 0
 16797  01236C  5025               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 16798  01236E  A4D8               	btfss	status,2,c
 16799  012370  0012               	return	
 16800                           
 16801                           ;usb_device.c: 1425: {
 16802                           ;usb_device.c: 1426: USBStatusStageEnabledFlag1 = 1;
 16803  012372  0E01               	movlw	1
 16804  012374  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16805                           
 16806                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag2 == 0)
 16807  012376  5026               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 16808  012378  A4D8               	btfss	status,2,c
 16809  01237A  0012               	return	
 16810                           
 16811                           ;usb_device.c: 1428: {
 16812                           ;usb_device.c: 1429: USBStatusStageEnabledFlag2 = 1;
 16813  01237C  0E01               	movlw	1
 16814  01237E  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16815                           
 16816                           ;usb_device.c: 1433: if(controlTransferState == 2)
 16817  012380  0E02               	movlw	2
 16818  012382  1829               	xorwf	_controlTransferState,w,c	;volatile
 16819  012384  A4D8               	btfss	status,2,c
 16820  012386  D015               	goto	i2l5677
 16821                           
 16822                           ;usb_device.c: 1434: {
 16823                           ;usb_device.c: 1435: pBDTEntryIn[0]->CNT = 0;
 16824  012388  EE20 F001          	lfsr	2,1
 16825  01238C  5010               	movf	_pBDTEntryIn,w,c
 16826  01238E  26D9               	addwf	fsr2l,f,c
 16827  012390  5011               	movf	_pBDTEntryIn+1,w,c
 16828  012392  22DA               	addwfc	fsr2h,f,c
 16829  012394  0E00               	movlw	0
 16830  012396  6EDF               	movwf	indf2,c
 16831                           
 16832                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16833  012398  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16834  01239C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16835  0123A0  0E48               	movlw	72
 16836  0123A2  6EDF               	movwf	indf2,c
 16837                           
 16838                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16839  0123A4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16840  0123A8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16841  0123AC  0E00               	movlw	0
 16842  0123AE  8EDB               	bsf	plusw2,7,c
 16843                           
 16844                           ;usb_device.c: 1438: }
 16845  0123B0  0012               	return	
 16846  0123B2                     i2l5677:
 16847                           
 16848                           ;usb_device.c: 1439: else if(controlTransferState == 1)
 16849  0123B2  0429               	decf	_controlTransferState,w,c	;volatile
 16850  0123B4  A4D8               	btfss	status,2,c
 16851  0123B6  0012               	return	
 16852                           
 16853                           ;usb_device.c: 1440: {
 16854                           ;usb_device.c: 1441: BothEP0OutUOWNsSet = 0;
 16855  0123B8  0E00               	movlw	0
 16856  0123BA  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16857                           
 16858                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->CNT = 8;
 16859  0123BC  EE20 F001          	lfsr	2,1
 16860  0123C0  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16861  0123C2  26D9               	addwf	fsr2l,f,c
 16862  0123C4  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16863  0123C6  22DA               	addwfc	fsr2h,f,c
 16864  0123C8  0E08               	movlw	8
 16865  0123CA  6EDF               	movwf	indf2,c
 16866                           
 16867                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16868  0123CC  EE20 F002          	lfsr	2,2
 16869  0123D0  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16870  0123D2  26D9               	addwf	fsr2l,f,c
 16871  0123D4  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16872  0123D6  22DA               	addwfc	fsr2h,f,c
 16873  0123D8  0E30               	movlw	48
 16874  0123DA  6EDE               	movwf	postinc2,c
 16875  0123DC  0E0D               	movlw	13
 16876  0123DE  6EDD               	movwf	postdec2,c
 16877                           
 16878                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 16879  0123E0  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16880  0123E4  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16881  0123E8  0E04               	movlw	4
 16882  0123EA  6EDF               	movwf	indf2,c
 16883                           
 16884                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16885  0123EC  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16886  0123F0  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16887  0123F4  0E00               	movlw	0
 16888  0123F6  8EDB               	bsf	plusw2,7,c
 16889                           
 16890                           ;usb_device.c: 1450: BothEP0OutUOWNsSet = 1;
 16891  0123F8  0E01               	movlw	1
 16892  0123FA  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16893                           
 16894                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->CNT = 8;
 16895  0123FC  EE20 F001          	lfsr	2,1
 16896  012400  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16897  012402  26D9               	addwf	fsr2l,f,c
 16898  012404  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16899  012406  22DA               	addwfc	fsr2h,f,c
 16900  012408  0E08               	movlw	8
 16901  01240A  6EDF               	movwf	indf2,c
 16902                           
 16903                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16904  01240C  EE20 F002          	lfsr	2,2
 16905  012410  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16906  012412  26D9               	addwf	fsr2l,f,c
 16907  012414  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16908  012416  22DA               	addwfc	fsr2h,f,c
 16909  012418  0E30               	movlw	48
 16910  01241A  6EDE               	movwf	postinc2,c
 16911  01241C  0E0D               	movlw	13
 16912  01241E  6EDD               	movwf	postdec2,c
 16913                           
 16914                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 16915  012420  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16916  012424  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16917  012428  0E80               	movlw	128
 16918  01242A  6EDF               	movwf	indf2,c
 16919  01242C  0012               	return	
 16920  01242E                     __end_of_USBCtrlEPAllowStatusStage:
 16921                           	opt stack 0
 16922                           pclatu	equ	0xFFB
 16923                           pclath	equ	0xFFA
 16924                           tblptru	equ	0xFF8
 16925                           tblptrh	equ	0xFF7
 16926                           tblptrl	equ	0xFF6
 16927                           tablat	equ	0xFF5
 16928                           prodh	equ	0xFF4
 16929                           prodl	equ	0xFF3
 16930                           intcon	equ	0xFF2
 16931                           intcon2	equ	0xFF1
 16932                           indf0	equ	0xFEF
 16933                           postinc0	equ	0xFEE
 16934                           fsr0h	equ	0xFEA
 16935                           fsr0l	equ	0xFE9
 16936                           wreg	equ	0xFE8
 16937                           indf1	equ	0xFE7
 16938                           postinc1	equ	0xFE6
 16939                           postdec1	equ	0xFE5
 16940                           fsr1h	equ	0xFE2
 16941                           fsr1l	equ	0xFE1
 16942                           indf2	equ	0xFDF
 16943                           postinc2	equ	0xFDE
 16944                           postdec2	equ	0xFDD
 16945                           plusw2	equ	0xFDB
 16946                           fsr2h	equ	0xFDA
 16947                           fsr2l	equ	0xFD9
 16948                           status	equ	0xFD8
 16949                           
 16950 ;; *************** function _USBCtrlTrfInHandler *****************
 16951 ;; Defined at:
 16952 ;;		line 2596 in file "../My_library/USB_CDC/usb/usb_device.c"
 16953 ;; Parameters:    Size  Location     Type
 16954 ;;		None
 16955 ;; Auto vars:     Size  Location     Type
 16956 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16957 ;; Return value:  Size  Location     Type
 16958 ;;		None               void
 16959 ;; Registers used:
 16960 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16961 ;; Tracked objects:
 16962 ;;		On entry : 0/0
 16963 ;;		On exit  : 0/0
 16964 ;;		Unchanged: 0/0
 16965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16970 ;;Total ram usage:        1 bytes
 16971 ;; Hardware stack levels used:    1
 16972 ;; Hardware stack levels required when called:    1
 16973 ;; This function calls:
 16974 ;;		_USBCtrlTrfTxService
 16975 ;; This function is called by:
 16976 ;;		_USBCtrlEPService
 16977 ;; This function uses a non-reentrant model
 16978 ;;
 16979                           
 16980                           	psect	text87
 16981  0127DA                     __ptext87:
 16982                           	opt stack 0
 16983  0127DA                     _USBCtrlTrfInHandler:
 16984                           	opt stack 19
 16985                           
 16986                           ;usb_device.c: 2598: uint8_t lastDTS;
 16987                           ;usb_device.c: 2600: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 16988                           
 16989                           ;incstack = 0
 16990  0127DA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16991  0127DE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16992  0127E2  0E00               	movlw	0
 16993  0127E4  BCDF               	btfsc	indf2,6,c
 16994  0127E6  0E01               	movlw	1
 16995  0127E8  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 16996                           
 16997                           ;usb_device.c: 2603: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16998  0127EA  0E04               	movlw	4
 16999  0127EC  1A10               	xorwf	_pBDTEntryIn,f,c
 17000                           
 17001                           ;usb_device.c: 2608: if(USBDeviceState == ADR_PENDING_STATE)
 17002  0127EE  0E08               	movlw	8
 17003  0127F0  1824               	xorwf	_USBDeviceState,w,c	;volatile
 17004  0127F2  A4D8               	btfss	status,2,c
 17005  0127F4  D00D               	goto	i2l6349
 17006                           
 17007                           ;usb_device.c: 2609: {
 17008                           ;usb_device.c: 2610: UADDR = (SetupPkt.bDevADR & 0x7F);
 17009  0127F6  010D               	movlb	13	; () banked
 17010  0127F8  5132               	movf	50,w,b	;volatile
 17011  0127FA  0B7F               	andlw	127
 17012  0127FC  010F               	movlb	15	; () banked
 17013  0127FE  6F38               	movwf	56,b	;volatile
 17014                           
 17015                           ; BSR set to: 15
 17016                           ;usb_device.c: 2611: if(UADDR != 0u)
 17017  012800  010F               	movlb	15	; () banked
 17018  012802  5138               	movf	56,w,b	;volatile
 17019  012804  B4D8               	btfsc	status,2,c
 17020  012806  D002               	goto	i2l6347
 17021                           
 17022                           ; BSR set to: 15
 17023                           ;usb_device.c: 2612: {
 17024                           ;usb_device.c: 2613: USBDeviceState=ADDRESS_STATE;
 17025  012808  0E10               	movlw	16
 17026  01280A  D001               	goto	L14
 17027  01280C                     i2l6347:
 17028                           
 17029                           ; BSR set to: 15
 17030                           ;usb_device.c: 2615: else
 17031                           ;usb_device.c: 2616: {
 17032                           ;usb_device.c: 2617: USBDeviceState=DEFAULT_STATE;
 17033  01280C  0E04               	movlw	4
 17034  01280E                     L14:
 17035  01280E  6E24               	movwf	_USBDeviceState,c	;volatile
 17036  012810                     i2l6349:
 17037                           
 17038                           ;usb_device.c: 2618: }
 17039                           ;usb_device.c: 2619: }
 17040                           ;usb_device.c: 2622: if(controlTransferState == 1)
 17041  012810  0429               	decf	_controlTransferState,w,c	;volatile
 17042  012812  A4D8               	btfss	status,2,c
 17043  012814  D03A               	goto	i2l331
 17044                           
 17045                           ;usb_device.c: 2623: {
 17046                           ;usb_device.c: 2624: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 17047  012816  EE20 F002          	lfsr	2,2
 17048  01281A  5010               	movf	_pBDTEntryIn,w,c
 17049  01281C  26D9               	addwf	fsr2l,f,c
 17050  01281E  5011               	movf	_pBDTEntryIn+1,w,c
 17051  012820  22DA               	addwfc	fsr2h,f,c
 17052  012822  0E38               	movlw	56
 17053  012824  6EDE               	movwf	postinc2,c
 17054  012826  0E0D               	movlw	13
 17055  012828  6EDD               	movwf	postdec2,c
 17056                           
 17057                           ;usb_device.c: 2625: USBCtrlTrfTxService();
 17058  01282A  EC80  F090         	call	_USBCtrlTrfTxService	;wreg free
 17059                           
 17060                           ;usb_device.c: 2631: if(shortPacketStatus == 2)
 17061  01282E  0E02               	movlw	2
 17062  012830  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 17063  012832  A4D8               	btfss	status,2,c
 17064  012834  D00D               	goto	i2l6361
 17065                           
 17066                           ;usb_device.c: 2632: {
 17067                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val = 0x04;
 17068  012836  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17069  01283A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17070  01283E  0E04               	movlw	4
 17071  012840  6EDF               	movwf	indf2,c
 17072                           
 17073                           ;usb_device.c: 2636: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17074  012842  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17075  012846  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17076  01284A  0E00               	movlw	0
 17077  01284C  8EDB               	bsf	plusw2,7,c
 17078                           
 17079                           ;usb_device.c: 2637: }
 17080  01284E  0012               	return	
 17081  012850                     i2l6361:
 17082                           
 17083                           ;usb_device.c: 2638: else
 17084                           ;usb_device.c: 2639: {
 17085                           ;usb_device.c: 2640: if(lastDTS == 0)
 17086  012850  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 17087  012852  A4D8               	btfss	status,2,c
 17088  012854  D00D               	goto	i2l6367
 17089                           
 17090                           ;usb_device.c: 2641: {
 17091                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17092  012856  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17093  01285A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17094  01285E  0E48               	movlw	72
 17095  012860  6EDF               	movwf	indf2,c
 17096                           
 17097                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17098  012862  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17099  012866  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17100  01286A  0E00               	movlw	0
 17101  01286C  8EDB               	bsf	plusw2,7,c
 17102                           
 17103                           ;usb_device.c: 2644: }
 17104  01286E  0012               	return	
 17105  012870                     i2l6367:
 17106                           
 17107                           ;usb_device.c: 2645: else
 17108                           ;usb_device.c: 2646: {
 17109                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 17110  012870  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17111  012874  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17112  012878  0E08               	movlw	8
 17113  01287A  6EDF               	movwf	indf2,c
 17114                           
 17115                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17116  01287C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17117  012880  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17118  012884  0E00               	movlw	0
 17119  012886  8EDB               	bsf	plusw2,7,c
 17120                           
 17121                           ;usb_device.c: 2649: }
 17122                           ;usb_device.c: 2650: }
 17123                           ;usb_device.c: 2651: }
 17124  012888  0012               	return	
 17125  01288A                     i2l331:
 17126                           
 17127                           ;usb_device.c: 2652: else
 17128                           ;usb_device.c: 2653: {
 17129                           ;usb_device.c: 2657: if(outPipes[0].info.bits.busy == 1)
 17130  01288A  BE04               	btfsc	_outPipes+3,7,c	;volatile
 17131                           
 17132                           ;usb_device.c: 2662: }
 17133                           ;usb_device.c: 2663: outPipes[0].info.bits.busy = 0;
 17134                           
 17135                           ;usb_device.c: 2660: {
 17136                           ;usb_device.c: 2661: outPipes[0].pFunc();
 17137  01288C  9E04               	bcf	_outPipes+3,7,c	;volatile
 17138                           
 17139                           ;usb_device.c: 2664: }
 17140                           ;usb_device.c: 2666: controlTransferState = 0;
 17141  01288E  0E00               	movlw	0
 17142  012890  6E29               	movwf	_controlTransferState,c	;volatile
 17143  012892  0012               	return	
 17144  012894                     __end_of_USBCtrlTrfInHandler:
 17145                           	opt stack 0
 17146                           pclatu	equ	0xFFB
 17147                           pclath	equ	0xFFA
 17148                           tblptru	equ	0xFF8
 17149                           tblptrh	equ	0xFF7
 17150                           tblptrl	equ	0xFF6
 17151                           tablat	equ	0xFF5
 17152                           prodh	equ	0xFF4
 17153                           prodl	equ	0xFF3
 17154                           intcon	equ	0xFF2
 17155                           intcon2	equ	0xFF1
 17156                           indf0	equ	0xFEF
 17157                           postinc0	equ	0xFEE
 17158                           fsr0h	equ	0xFEA
 17159                           fsr0l	equ	0xFE9
 17160                           wreg	equ	0xFE8
 17161                           indf1	equ	0xFE7
 17162                           postinc1	equ	0xFE6
 17163                           postdec1	equ	0xFE5
 17164                           fsr1h	equ	0xFE2
 17165                           fsr1l	equ	0xFE1
 17166                           indf2	equ	0xFDF
 17167                           postinc2	equ	0xFDE
 17168                           postdec2	equ	0xFDD
 17169                           plusw2	equ	0xFDB
 17170                           fsr2h	equ	0xFDA
 17171                           fsr2l	equ	0xFD9
 17172                           status	equ	0xFD8
 17173                           
 17174 ;; *************** function _USBCtrlTrfTxService *****************
 17175 ;; Defined at:
 17176 ;;		line 1772 in file "../My_library/USB_CDC/usb/usb_device.c"
 17177 ;; Parameters:    Size  Location     Type
 17178 ;;		None
 17179 ;; Auto vars:     Size  Location     Type
 17180 ;;  byteToSend      1    0[COMRAM] unsigned char 
 17181 ;; Return value:  Size  Location     Type
 17182 ;;		None               void
 17183 ;; Registers used:
 17184 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17194 ;;Total ram usage:        1 bytes
 17195 ;; Hardware stack levels used:    1
 17196 ;; This function calls:
 17197 ;;		Nothing
 17198 ;; This function is called by:
 17199 ;;		_USBCtrlEPAllowDataStage
 17200 ;;		_USBCtrlTrfInHandler
 17201 ;; This function uses a non-reentrant model
 17202 ;;
 17203                           
 17204                           	psect	text88
 17205  012100                     __ptext88:
 17206                           	opt stack 0
 17207  012100                     _USBCtrlTrfTxService:
 17208                           	opt stack 17
 17209                           
 17210                           ;usb_device.c: 1774: uint8_t byteToSend;
 17211                           ;usb_device.c: 1778: byteToSend = 8;
 17212                           
 17213                           ;incstack = 0
 17214  012100  0E08               	movlw	8
 17215  012102  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 17216                           
 17217                           ;usb_device.c: 1779: if(inPipes[0].wCount.Val < (uint8_t)8)
 17218  012104  500F               	movf	_inPipes+5,w,c	;volatile
 17219  012106  E110               	bnz	i2l5625
 17220  012108  0E08               	movlw	8
 17221  01210A  5C0E               	subwf	_inPipes+4,w,c	;volatile
 17222  01210C  B0D8               	btfsc	status,0,c
 17223  01210E  D00C               	goto	i2l5625
 17224                           
 17225                           ;usb_device.c: 1780: {
 17226                           ;usb_device.c: 1781: byteToSend = inPipes[0].wCount.Val;
 17227  012110  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 17228                           
 17229                           ;usb_device.c: 1788: if(shortPacketStatus == 0)
 17230  012114  502B               	movf	_shortPacketStatus,w,c	;volatile
 17231  012116  A4D8               	btfss	status,2,c
 17232  012118  D002               	goto	i2l5621
 17233                           
 17234                           ;usb_device.c: 1789: {
 17235                           ;usb_device.c: 1790: shortPacketStatus = 1;
 17236  01211A  0E01               	movlw	1
 17237  01211C  D004               	goto	L15
 17238  01211E                     i2l5621:
 17239                           
 17240                           ;usb_device.c: 1792: else if(shortPacketStatus == 1)
 17241  01211E  042B               	decf	_shortPacketStatus,w,c	;volatile
 17242  012120  A4D8               	btfss	status,2,c
 17243  012122  D002               	goto	i2l5625
 17244                           
 17245                           ;usb_device.c: 1793: {
 17246                           ;usb_device.c: 1794: shortPacketStatus = 2;
 17247  012124  0E02               	movlw	2
 17248  012126                     L15:
 17249  012126  6E2B               	movwf	_shortPacketStatus,c	;volatile
 17250  012128                     i2l5625:
 17251                           
 17252                           ;usb_device.c: 1795: }
 17253                           ;usb_device.c: 1796: }
 17254                           ;usb_device.c: 1800: inPipes[0].wCount.Val -= byteToSend;
 17255  012128  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17256  01212A  5E0E               	subwf	_inPipes+4,f,c	;volatile
 17257  01212C  0E00               	movlw	0
 17258  01212E  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 17259                           
 17260                           ;usb_device.c: 1805: pBDTEntryIn[0]->CNT = byteToSend;
 17261  012130  EE20 F001          	lfsr	2,1
 17262  012134  5010               	movf	_pBDTEntryIn,w,c
 17263  012136  26D9               	addwf	fsr2l,f,c
 17264  012138  5011               	movf	_pBDTEntryIn+1,w,c
 17265  01213A  22DA               	addwfc	fsr2h,f,c
 17266  01213C  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 17267                           
 17268                           ;usb_device.c: 1809: pDst = (volatile uint8_t*)CtrlTrfData;
 17269  012140  0E38               	movlw	56
 17270  012142  0100               	movlb	0	; () banked
 17271  012144  6FB4               	movwf	_pDst& (0+255),b
 17272  012146  0E0D               	movlw	13
 17273  012148  0100               	movlb	0	; () banked
 17274  01214A  6FB5               	movwf	(_pDst+1)& (0+255),b
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;usb_device.c: 1810: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17278  01214C  A00D               	btfss	_inPipes+3,0,c	;volatile
 17279  01214E  D01D               	goto	i2l5643
 17280  012150  D03C               	goto	i2l5653
 17281  012152                     i2l5635:
 17282                           
 17283                           ; BSR set to: 0
 17284                           ;usb_device.c: 1813: {
 17285                           ;usb_device.c: 1814: *pDst++ = *inPipes[0].pSrc.bRom++;
 17286  012152  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17287  012156  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17288  01215A  0E00               	movlw	low (__mediumconst shr (0+16))
 17289  01215C  6EF8               	movwf	tblptru,c
 17290  01215E  C0B4  FFD9         	movff	_pDst,fsr2l
 17291  012162  C0B5  FFDA         	movff	_pDst+1,fsr2h
 17292  012166  0E0E               	movlw	(high __ramtop+-1)
 17293  012168  64F7               	cpfsgt	tblptrh,c
 17294  01216A  D003               	bra	i2u421_47
 17295  01216C  0008               	tblrd		*
 17296  01216E  50F5               	movf	tablat,w,c
 17297  012170  D005               	bra	i2u421_40
 17298  012172                     i2u421_47:
 17299  012172  CFF6 FFE9          	movff	tblptrl,fsr0l
 17300  012176  CFF7 FFEA          	movff	tblptrh,fsr0h
 17301  01217A  50EF               	movf	indf0,w,c
 17302  01217C                     i2u421_40:
 17303  01217C  6EDF               	movwf	indf2,c
 17304  01217E  4A0A               	infsnz	_inPipes,f,c	;volatile
 17305  012180  2A0B               	incf	_inPipes+1,f,c	;volatile
 17306  012182  0100               	movlb	0	; () banked
 17307  012184  4BB4               	infsnz	_pDst& (0+255),f,b
 17308  012186  2BB5               	incf	(_pDst+1)& (0+255),f,b
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;usb_device.c: 1815: byteToSend--;
 17312  012188  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17313  01218A                     i2l5643:
 17314                           
 17315                           ; BSR set to: 0
 17316  01218A  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17317  01218C  B4D8               	btfsc	status,2,c
 17318  01218E  0012               	return	
 17319  012190  D7E0               	goto	i2l5635
 17320  012192                     i2l5645:
 17321                           
 17322                           ; BSR set to: 0
 17323                           ;usb_device.c: 1821: {
 17324                           ;usb_device.c: 1822: *pDst++ = *inPipes[0].pSrc.bRam++;
 17325  012192  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17326  012196  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17327  01219A  0E00               	movlw	low (__mediumconst shr (0+16))
 17328  01219C  6EF8               	movwf	tblptru,c
 17329  01219E  C0B4  FFD9         	movff	_pDst,fsr2l
 17330  0121A2  C0B5  FFDA         	movff	_pDst+1,fsr2h
 17331  0121A6  0E0E               	movlw	(high __ramtop+-1)
 17332  0121A8  64F7               	cpfsgt	tblptrh,c
 17333  0121AA  D003               	bra	i2u423_47
 17334  0121AC  0008               	tblrd		*
 17335  0121AE  50F5               	movf	tablat,w,c
 17336  0121B0  D005               	bra	i2u423_40
 17337  0121B2                     i2u423_47:
 17338  0121B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17339  0121B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17340  0121BA  50EF               	movf	indf0,w,c
 17341  0121BC                     i2u423_40:
 17342  0121BC  6EDF               	movwf	indf2,c
 17343  0121BE  4A0A               	infsnz	_inPipes,f,c	;volatile
 17344  0121C0  2A0B               	incf	_inPipes+1,f,c	;volatile
 17345  0121C2  0100               	movlb	0	; () banked
 17346  0121C4  4BB4               	infsnz	_pDst& (0+255),f,b
 17347  0121C6  2BB5               	incf	(_pDst+1)& (0+255),f,b
 17348                           
 17349                           ; BSR set to: 0
 17350                           ;usb_device.c: 1823: byteToSend--;
 17351  0121C8  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17352  0121CA                     i2l5653:
 17353                           
 17354                           ; BSR set to: 0
 17355  0121CA  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17356  0121CC  B4D8               	btfsc	status,2,c
 17357  0121CE  0012               	return	
 17358  0121D0  D7E0               	goto	i2l5645
 17359  0121D2                     __end_of_USBCtrlTrfTxService:
 17360                           	opt stack 0
 17361                           pclatu	equ	0xFFB
 17362                           pclath	equ	0xFFA
 17363                           tblptru	equ	0xFF8
 17364                           tblptrh	equ	0xFF7
 17365                           tblptrl	equ	0xFF6
 17366                           tablat	equ	0xFF5
 17367                           prodh	equ	0xFF4
 17368                           prodl	equ	0xFF3
 17369                           intcon	equ	0xFF2
 17370                           intcon2	equ	0xFF1
 17371                           indf0	equ	0xFEF
 17372                           postinc0	equ	0xFEE
 17373                           fsr0h	equ	0xFEA
 17374                           fsr0l	equ	0xFE9
 17375                           wreg	equ	0xFE8
 17376                           indf1	equ	0xFE7
 17377                           postinc1	equ	0xFE6
 17378                           postdec1	equ	0xFE5
 17379                           fsr1h	equ	0xFE2
 17380                           fsr1l	equ	0xFE1
 17381                           indf2	equ	0xFDF
 17382                           postinc2	equ	0xFDE
 17383                           postdec2	equ	0xFDD
 17384                           plusw2	equ	0xFDB
 17385                           fsr2h	equ	0xFDA
 17386                           fsr2l	equ	0xFD9
 17387                           status	equ	0xFD8
 17388                           
 17389 ;; *************** function _UART_ISR *****************
 17390 ;; Defined at:
 17391 ;;		line 29 in file "../My_library/My_UART.c"
 17392 ;; Parameters:    Size  Location     Type
 17393 ;;		None
 17394 ;; Auto vars:     Size  Location     Type
 17395 ;;  ascii           1   15[COMRAM] unsigned char 
 17396 ;; Return value:  Size  Location     Type
 17397 ;;		None               void
 17398 ;; Registers used:
 17399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17400 ;; Tracked objects:
 17401 ;;		On entry : 0/0
 17402 ;;		On exit  : 0/0
 17403 ;;		Unchanged: 0/0
 17404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17409 ;;Total ram usage:        1 bytes
 17410 ;; Hardware stack levels used:    1
 17411 ;; Hardware stack levels required when called:    2
 17412 ;; This function calls:
 17413 ;;		i2_ringbuf_num
 17414 ;;		i2_ringbuf_pop
 17415 ;;		i2_ringbuf_put
 17416 ;; This function is called by:
 17417 ;;		_ISR
 17418 ;; This function uses a non-reentrant model
 17419 ;;
 17420                           
 17421                           	psect	text89
 17422  0133F8                     __ptext89:
 17423                           	opt stack 0
 17424  0133F8                     _UART_ISR:
 17425                           	opt stack 21
 17426                           
 17427                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;incstack = 0
 17431  0133F8  B89D               	btfsc	3997,4,c	;volatile
 17432  0133FA  A89E               	btfss	3998,4,c	;volatile
 17433  0133FC  D013               	goto	i2l1462
 17434                           
 17435                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
 17436  0133FE  0ED6               	movlw	low _uart_tx
 17437  013400  6E2E               	movwf	i2ringbuf_num@rb,c
 17438  013402  0E01               	movlw	high _uart_tx
 17439  013404  6E2F               	movwf	i2ringbuf_num@rb+1,c
 17440  013406  EC32  F093         	call	i2_ringbuf_num	;wreg free
 17441  01340A  502E               	movf	?i2_ringbuf_num,w,c
 17442  01340C  102F               	iorwf	?i2_ringbuf_num+1,w,c
 17443  01340E  B4D8               	btfsc	status,2,c
 17444  013410  D008               	goto	i2l1463
 17445                           
 17446                           ;My_UART.c: 32: TXREG1 = ringbuf_pop(&uart_tx);
 17447  013412  0ED6               	movlw	low _uart_tx
 17448  013414  6E36               	movwf	i2ringbuf_pop@rb,c
 17449  013416  0E01               	movlw	high _uart_tx
 17450  013418  6E37               	movwf	i2ringbuf_pop@rb+1,c
 17451  01341A  ECFD  F094         	call	i2_ringbuf_pop	;wreg free
 17452  01341E  6EAE               	movwf	4014,c	;volatile
 17453                           
 17454                           ;My_UART.c: 33: } else {
 17455  013420  D001               	goto	i2l1462
 17456  013422                     i2l1463:
 17457                           
 17458                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
 17459  013422  989D               	bcf	3997,4,c	;volatile
 17460  013424                     i2l1462:
 17461                           
 17462                           ;My_UART.c: 35: }
 17463                           ;My_UART.c: 36: }
 17464                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 17465  013424  AA9D               	btfss	3997,5,c	;volatile
 17466  013426  0012               	return	
 17467  013428  AA9E               	btfss	3998,5,c	;volatile
 17468  01342A  0012               	return	
 17469                           
 17470                           ;My_UART.c: 38: char ascii = RCREG1;
 17471  01342C  CFAF F03D          	movff	4015,UART_ISR@ascii	;volatile
 17472                           
 17473                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
 17474  013430  0ECE               	movlw	low _uart_rx
 17475  013432  6E36               	movwf	i2ringbuf_put@rb,c
 17476  013434  0E01               	movlw	high _uart_rx
 17477  013436  6E37               	movwf	i2ringbuf_put@rb+1,c
 17478  013438  C03D  F038         	movff	UART_ISR@ascii,i2ringbuf_put@data
 17479  01343C  EC4A  F094         	call	i2_ringbuf_put	;wreg free
 17480  013440  0012               	return	
 17481  013442                     __end_of_UART_ISR:
 17482                           	opt stack 0
 17483                           pclatu	equ	0xFFB
 17484                           pclath	equ	0xFFA
 17485                           tblptru	equ	0xFF8
 17486                           tblptrh	equ	0xFF7
 17487                           tblptrl	equ	0xFF6
 17488                           tablat	equ	0xFF5
 17489                           prodh	equ	0xFF4
 17490                           prodl	equ	0xFF3
 17491                           intcon	equ	0xFF2
 17492                           intcon2	equ	0xFF1
 17493                           indf0	equ	0xFEF
 17494                           postinc0	equ	0xFEE
 17495                           fsr0h	equ	0xFEA
 17496                           fsr0l	equ	0xFE9
 17497                           wreg	equ	0xFE8
 17498                           indf1	equ	0xFE7
 17499                           postinc1	equ	0xFE6
 17500                           postdec1	equ	0xFE5
 17501                           fsr1h	equ	0xFE2
 17502                           fsr1l	equ	0xFE1
 17503                           indf2	equ	0xFDF
 17504                           postinc2	equ	0xFDE
 17505                           postdec2	equ	0xFDD
 17506                           plusw2	equ	0xFDB
 17507                           fsr2h	equ	0xFDA
 17508                           fsr2l	equ	0xFD9
 17509                           status	equ	0xFD8
 17510                           
 17511 ;; *************** function i2_ringbuf_put *****************
 17512 ;; Defined at:
 17513 ;;		line 20 in file "../My_library/My_ringbuf.c"
 17514 ;; Parameters:    Size  Location     Type
 17515 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 17516 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
 17517 ;;		 -> usb_tx(8), usb_rx(8), 
 17518 ;;  data            1   10[COMRAM] unsigned char 
 17519 ;; Auto vars:     Size  Location     Type
 17520 ;;		None
 17521 ;; Return value:  Size  Location     Type
 17522 ;;		None               void
 17523 ;; Registers used:
 17524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17525 ;; Tracked objects:
 17526 ;;		On entry : 0/0
 17527 ;;		On exit  : 0/0
 17528 ;;		Unchanged: 0/0
 17529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17530 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17532 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17533 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17534 ;;Total ram usage:        7 bytes
 17535 ;; Hardware stack levels used:    1
 17536 ;; Hardware stack levels required when called:    1
 17537 ;; This function calls:
 17538 ;;		i2_ringbuf_num
 17539 ;; This function is called by:
 17540 ;;		_UART_ISR
 17541 ;; This function uses a non-reentrant model
 17542 ;;
 17543                           
 17544                           	psect	text90
 17545  012894                     __ptext90:
 17546                           	opt stack 0
 17547  012894                     i2_ringbuf_put:
 17548                           	opt stack 21
 17549                           
 17550                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 17551                           
 17552                           ;incstack = 0
 17553  012894  C036  F02E         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 17554  012898  C037  F02F         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 17555  01289C  EC32  F093         	call	i2_ringbuf_num	;wreg free
 17556  0128A0  EE20 F002          	lfsr	2,2
 17557  0128A4  5036               	movf	i2ringbuf_put@rb,w,c
 17558  0128A6  26D9               	addwf	fsr2l,f,c
 17559  0128A8  5037               	movf	i2ringbuf_put@rb+1,w,c
 17560  0128AA  22DA               	addwfc	fsr2h,f,c
 17561  0128AC  50DE               	movf	postinc2,w,c
 17562  0128AE  5C2E               	subwf	?i2_ringbuf_num,w,c
 17563  0128B0  50DE               	movf	postinc2,w,c
 17564  0128B2  582F               	subwfb	?i2_ringbuf_num+1,w,c
 17565  0128B4  B0D8               	btfsc	status,0,c
 17566  0128B6  0012               	return	
 17567                           
 17568                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
 17569  0128B8  EE20 F004          	lfsr	2,4
 17570  0128BC  5036               	movf	i2ringbuf_put@rb,w,c
 17571  0128BE  26D9               	addwf	fsr2l,f,c
 17572  0128C0  5037               	movf	i2ringbuf_put@rb+1,w,c
 17573  0128C2  22DA               	addwfc	fsr2h,f,c
 17574  0128C4  CFDE F039          	movff	postinc2,??i2_ringbuf_put
 17575  0128C8  CFDD F03A          	movff	postdec2,??i2_ringbuf_put+1
 17576  0128CC  C036  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 17577  0128D0  C037  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 17578  0128D4  CFDE F03B          	movff	postinc2,??i2_ringbuf_put+2
 17579  0128D8  CFDD F03C          	movff	postdec2,??i2_ringbuf_put+3
 17580  0128DC  5039               	movf	??i2_ringbuf_put,w,c
 17581  0128DE  243B               	addwf	??i2_ringbuf_put+2,w,c
 17582  0128E0  6ED9               	movwf	fsr2l,c
 17583  0128E2  503A               	movf	??i2_ringbuf_put+1,w,c
 17584  0128E4  203C               	addwfc	??i2_ringbuf_put+3,w,c
 17585  0128E6  6EDA               	movwf	fsr2h,c
 17586  0128E8  C038  FFDF         	movff	i2ringbuf_put@data,indf2
 17587                           
 17588                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 17589  0128EC  EE20 F002          	lfsr	2,2
 17590  0128F0  5036               	movf	i2ringbuf_put@rb,w,c
 17591  0128F2  26D9               	addwf	fsr2l,f,c
 17592  0128F4  5037               	movf	i2ringbuf_put@rb+1,w,c
 17593  0128F6  22DA               	addwfc	fsr2h,f,c
 17594  0128F8  EE10 F004          	lfsr	1,4
 17595  0128FC  5036               	movf	i2ringbuf_put@rb,w,c
 17596  0128FE  26E1               	addwf	fsr1l,f,c
 17597  012900  5037               	movf	i2ringbuf_put@rb+1,w,c
 17598  012902  22E2               	addwfc	fsr1h,f,c
 17599  012904  CFE6 F03B          	movff	postinc1,??i2_ringbuf_put+2
 17600  012908  CFE5 F03C          	movff	postdec1,??i2_ringbuf_put+3
 17601  01290C  0E01               	movlw	1
 17602  01290E  263B               	addwf	??i2_ringbuf_put+2,f,c
 17603  012910  0E00               	movlw	0
 17604  012912  223C               	addwfc	??i2_ringbuf_put+3,f,c
 17605  012914  50DE               	movf	postinc2,w,c
 17606  012916  5C3B               	subwf	??i2_ringbuf_put+2,w,c
 17607  012918  50DE               	movf	postinc2,w,c
 17608  01291A  583C               	subwfb	??i2_ringbuf_put+3,w,c
 17609  01291C  B0D8               	btfsc	status,0,c
 17610  01291E  D00A               	goto	i2l7457
 17611  012920  EE20 F004          	lfsr	2,4
 17612  012924  5036               	movf	i2ringbuf_put@rb,w,c
 17613  012926  26D9               	addwf	fsr2l,f,c
 17614  012928  5037               	movf	i2ringbuf_put@rb+1,w,c
 17615  01292A  22DA               	addwfc	fsr2h,f,c
 17616  01292C  2ADE               	incf	postinc2,f,c
 17617  01292E  0E00               	movlw	0
 17618  012930  22DD               	addwfc	postdec2,f,c
 17619  012932  0012               	return	
 17620  012934                     i2l7457:
 17621                           
 17622                           ;My_ringbuf.c: 24: else rb->head = 0;
 17623  012934  EE20 F004          	lfsr	2,4
 17624  012938  5036               	movf	i2ringbuf_put@rb,w,c
 17625  01293A  26D9               	addwf	fsr2l,f,c
 17626  01293C  5037               	movf	i2ringbuf_put@rb+1,w,c
 17627  01293E  22DA               	addwfc	fsr2h,f,c
 17628  012940  0E00               	movlw	0
 17629  012942  6EDE               	movwf	postinc2,c
 17630  012944  0E00               	movlw	0
 17631  012946  6EDD               	movwf	postdec2,c
 17632  012948  0012               	return	
 17633  01294A                     __end_ofi2_ringbuf_put:
 17634                           	opt stack 0
 17635                           pclatu	equ	0xFFB
 17636                           pclath	equ	0xFFA
 17637                           tblptru	equ	0xFF8
 17638                           tblptrh	equ	0xFF7
 17639                           tblptrl	equ	0xFF6
 17640                           tablat	equ	0xFF5
 17641                           prodh	equ	0xFF4
 17642                           prodl	equ	0xFF3
 17643                           intcon	equ	0xFF2
 17644                           intcon2	equ	0xFF1
 17645                           indf0	equ	0xFEF
 17646                           postinc0	equ	0xFEE
 17647                           fsr0h	equ	0xFEA
 17648                           fsr0l	equ	0xFE9
 17649                           wreg	equ	0xFE8
 17650                           indf1	equ	0xFE7
 17651                           postinc1	equ	0xFE6
 17652                           postdec1	equ	0xFE5
 17653                           fsr1h	equ	0xFE2
 17654                           fsr1l	equ	0xFE1
 17655                           indf2	equ	0xFDF
 17656                           postinc2	equ	0xFDE
 17657                           postdec2	equ	0xFDD
 17658                           plusw2	equ	0xFDB
 17659                           fsr2h	equ	0xFDA
 17660                           fsr2l	equ	0xFD9
 17661                           status	equ	0xFD8
 17662                           
 17663 ;; *************** function i2_ringbuf_pop *****************
 17664 ;; Defined at:
 17665 ;;		line 45 in file "../My_library/My_ringbuf.c"
 17666 ;; Parameters:    Size  Location     Type
 17667 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 17668 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
 17669 ;;		 -> usb_tx(8), usb_rx(8), 
 17670 ;; Auto vars:     Size  Location     Type
 17671 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 17672 ;; Return value:  Size  Location     Type
 17673 ;;                  1    wreg      unsigned char 
 17674 ;; Registers used:
 17675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17676 ;; Tracked objects:
 17677 ;;		On entry : 0/0
 17678 ;;		On exit  : 0/0
 17679 ;;		Unchanged: 0/0
 17680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17684 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17685 ;;Total ram usage:        7 bytes
 17686 ;; Hardware stack levels used:    1
 17687 ;; Hardware stack levels required when called:    1
 17688 ;; This function calls:
 17689 ;;		i2_ringbuf_num
 17690 ;; This function is called by:
 17691 ;;		_UART_ISR
 17692 ;; This function uses a non-reentrant model
 17693 ;;
 17694                           
 17695                           	psect	text91
 17696  0129FA                     __ptext91:
 17697                           	opt stack 0
 17698  0129FA                     i2_ringbuf_pop:
 17699                           	opt stack 21
 17700                           
 17701                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 17702                           
 17703                           ;incstack = 0
 17704  0129FA  C036  F02E         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 17705  0129FE  C037  F02F         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 17706  012A02  EC32  F093         	call	i2_ringbuf_num	;wreg free
 17707  012A06  502E               	movf	?i2_ringbuf_num,w,c
 17708  012A08  102F               	iorwf	?i2_ringbuf_num+1,w,c
 17709  012A0A  B4D8               	btfsc	status,2,c
 17710  012A0C  D04A               	goto	i2l7475
 17711                           
 17712                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 17713  012A0E  EE20 F006          	lfsr	2,6
 17714  012A12  5036               	movf	i2ringbuf_pop@rb,w,c
 17715  012A14  26D9               	addwf	fsr2l,f,c
 17716  012A16  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17717  012A18  22DA               	addwfc	fsr2h,f,c
 17718  012A1A  CFDE F038          	movff	postinc2,??i2_ringbuf_pop
 17719  012A1E  CFDD F039          	movff	postdec2,??i2_ringbuf_pop+1
 17720  012A22  C036  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 17721  012A26  C037  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 17722  012A2A  CFDE F03A          	movff	postinc2,??i2_ringbuf_pop+2
 17723  012A2E  CFDD F03B          	movff	postdec2,??i2_ringbuf_pop+3
 17724  012A32  5038               	movf	??i2_ringbuf_pop,w,c
 17725  012A34  243A               	addwf	??i2_ringbuf_pop+2,w,c
 17726  012A36  6ED9               	movwf	fsr2l,c
 17727  012A38  5039               	movf	??i2_ringbuf_pop+1,w,c
 17728  012A3A  203B               	addwfc	??i2_ringbuf_pop+3,w,c
 17729  012A3C  6EDA               	movwf	fsr2h,c
 17730  012A3E  50DF               	movf	indf2,w,c
 17731  012A40  6E3C               	movwf	i2ringbuf_pop@ret,c
 17732                           
 17733                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 17734  012A42  EE20 F002          	lfsr	2,2
 17735  012A46  5036               	movf	i2ringbuf_pop@rb,w,c
 17736  012A48  26D9               	addwf	fsr2l,f,c
 17737  012A4A  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17738  012A4C  22DA               	addwfc	fsr2h,f,c
 17739  012A4E  EE10 F006          	lfsr	1,6
 17740  012A52  5036               	movf	i2ringbuf_pop@rb,w,c
 17741  012A54  26E1               	addwf	fsr1l,f,c
 17742  012A56  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17743  012A58  22E2               	addwfc	fsr1h,f,c
 17744  012A5A  CFE6 F03A          	movff	postinc1,??i2_ringbuf_pop+2
 17745  012A5E  CFE5 F03B          	movff	postdec1,??i2_ringbuf_pop+3
 17746  012A62  0E01               	movlw	1
 17747  012A64  263A               	addwf	??i2_ringbuf_pop+2,f,c
 17748  012A66  0E00               	movlw	0
 17749  012A68  223B               	addwfc	??i2_ringbuf_pop+3,f,c
 17750  012A6A  50DE               	movf	postinc2,w,c
 17751  012A6C  5C3A               	subwf	??i2_ringbuf_pop+2,w,c
 17752  012A6E  50DE               	movf	postinc2,w,c
 17753  012A70  583B               	subwfb	??i2_ringbuf_pop+3,w,c
 17754  012A72  B0D8               	btfsc	status,0,c
 17755  012A74  D00A               	goto	i2l7467
 17756                           
 17757                           ;My_ringbuf.c: 49: rb->tail++;
 17758  012A76  EE20 F006          	lfsr	2,6
 17759  012A7A  5036               	movf	i2ringbuf_pop@rb,w,c
 17760  012A7C  26D9               	addwf	fsr2l,f,c
 17761  012A7E  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17762  012A80  22DA               	addwfc	fsr2h,f,c
 17763  012A82  2ADE               	incf	postinc2,f,c
 17764  012A84  0E00               	movlw	0
 17765  012A86  22DD               	addwfc	postdec2,f,c
 17766                           
 17767                           ;My_ringbuf.c: 50: } else {
 17768  012A88  D00A               	goto	i2l7469
 17769  012A8A                     i2l7467:
 17770                           
 17771                           ;My_ringbuf.c: 51: rb->tail = 0;
 17772  012A8A  EE20 F006          	lfsr	2,6
 17773  012A8E  5036               	movf	i2ringbuf_pop@rb,w,c
 17774  012A90  26D9               	addwf	fsr2l,f,c
 17775  012A92  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17776  012A94  22DA               	addwfc	fsr2h,f,c
 17777  012A96  0E00               	movlw	0
 17778  012A98  6EDE               	movwf	postinc2,c
 17779  012A9A  0E00               	movlw	0
 17780  012A9C  6EDD               	movwf	postdec2,c
 17781  012A9E                     i2l7469:
 17782                           
 17783                           ;My_ringbuf.c: 52: }
 17784                           ;My_ringbuf.c: 53: return ret;
 17785  012A9E  503C               	movf	i2ringbuf_pop@ret,w,c
 17786                           
 17787                           ;My_ringbuf.c: 54: } else {
 17788  012AA0  0012               	return	
 17789  012AA2                     i2l7475:
 17790                           
 17791                           ;My_ringbuf.c: 55: return 0;
 17792  012AA2  0E00               	movlw	0
 17793  012AA4  0012               	return	
 17794  012AA6                     __end_ofi2_ringbuf_pop:
 17795                           	opt stack 0
 17796                           pclatu	equ	0xFFB
 17797                           pclath	equ	0xFFA
 17798                           tblptru	equ	0xFF8
 17799                           tblptrh	equ	0xFF7
 17800                           tblptrl	equ	0xFF6
 17801                           tablat	equ	0xFF5
 17802                           prodh	equ	0xFF4
 17803                           prodl	equ	0xFF3
 17804                           intcon	equ	0xFF2
 17805                           intcon2	equ	0xFF1
 17806                           indf0	equ	0xFEF
 17807                           postinc0	equ	0xFEE
 17808                           fsr0h	equ	0xFEA
 17809                           fsr0l	equ	0xFE9
 17810                           wreg	equ	0xFE8
 17811                           indf1	equ	0xFE7
 17812                           postinc1	equ	0xFE6
 17813                           postdec1	equ	0xFE5
 17814                           fsr1h	equ	0xFE2
 17815                           fsr1l	equ	0xFE1
 17816                           indf2	equ	0xFDF
 17817                           postinc2	equ	0xFDE
 17818                           postdec2	equ	0xFDD
 17819                           plusw2	equ	0xFDB
 17820                           fsr2h	equ	0xFDA
 17821                           fsr2l	equ	0xFD9
 17822                           status	equ	0xFD8
 17823                           
 17824 ;; *************** function i2_ringbuf_num *****************
 17825 ;; Defined at:
 17826 ;;		line 12 in file "../My_library/My_ringbuf.c"
 17827 ;; Parameters:    Size  Location     Type
 17828 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 17829 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
 17830 ;;		 -> usb_tx(8), usb_rx(8), 
 17831 ;; Auto vars:     Size  Location     Type
 17832 ;;		None
 17833 ;; Return value:  Size  Location     Type
 17834 ;;                  2    0[COMRAM] unsigned int 
 17835 ;; Registers used:
 17836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17837 ;; Tracked objects:
 17838 ;;		On entry : 0/0
 17839 ;;		On exit  : 0/0
 17840 ;;		Unchanged: 0/0
 17841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17844 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17845 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17846 ;;Total ram usage:        8 bytes
 17847 ;; Hardware stack levels used:    1
 17848 ;; This function calls:
 17849 ;;		Nothing
 17850 ;; This function is called by:
 17851 ;;		_UART_ISR
 17852 ;;		i2_ringbuf_put
 17853 ;;		i2_ringbuf_pop
 17854 ;; This function uses a non-reentrant model
 17855 ;;
 17856                           
 17857                           	psect	text92
 17858  012664                     __ptext92:
 17859                           	opt stack 0
 17860  012664                     i2_ringbuf_num:
 17861                           	opt stack 21
 17862                           
 17863                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 17864                           
 17865                           ;incstack = 0
 17866  012664  EE20 F006          	lfsr	2,6
 17867  012668  502E               	movf	i2ringbuf_num@rb,w,c
 17868  01266A  26D9               	addwf	fsr2l,f,c
 17869  01266C  502F               	movf	i2ringbuf_num@rb+1,w,c
 17870  01266E  22DA               	addwfc	fsr2h,f,c
 17871  012670  EE10 F004          	lfsr	1,4
 17872  012674  502E               	movf	i2ringbuf_num@rb,w,c
 17873  012676  26E1               	addwf	fsr1l,f,c
 17874  012678  502F               	movf	i2ringbuf_num@rb+1,w,c
 17875  01267A  22E2               	addwfc	fsr1h,f,c
 17876  01267C  50DE               	movf	postinc2,w,c
 17877  01267E  5CE6               	subwf	postinc1,w,c
 17878  012680  50DE               	movf	postinc2,w,c
 17879  012682  58E6               	subwfb	postinc1,w,c
 17880  012684  A0D8               	btfss	status,0,c
 17881  012686  D01F               	goto	i2l7107
 17882                           
 17883                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 17884  012688  EE20 F004          	lfsr	2,4
 17885  01268C  502E               	movf	i2ringbuf_num@rb,w,c
 17886  01268E  26D9               	addwf	fsr2l,f,c
 17887  012690  502F               	movf	i2ringbuf_num@rb+1,w,c
 17888  012692  22DA               	addwfc	fsr2h,f,c
 17889  012694  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 17890  012698  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 17891  01269C  EE20 F006          	lfsr	2,6
 17892  0126A0  502E               	movf	i2ringbuf_num@rb,w,c
 17893  0126A2  26D9               	addwf	fsr2l,f,c
 17894  0126A4  502F               	movf	i2ringbuf_num@rb+1,w,c
 17895  0126A6  22DA               	addwfc	fsr2h,f,c
 17896  0126A8  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 17897  0126AC  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 17898  0126B0  1E32               	comf	??i2_ringbuf_num+2,f,c
 17899  0126B2  1E33               	comf	??i2_ringbuf_num+3,f,c
 17900  0126B4  4A32               	infsnz	??i2_ringbuf_num+2,f,c
 17901  0126B6  2A33               	incf	??i2_ringbuf_num+3,f,c
 17902  0126B8  5030               	movf	??i2_ringbuf_num,w,c
 17903  0126BA  2432               	addwf	??i2_ringbuf_num+2,w,c
 17904  0126BC  6E2E               	movwf	?i2_ringbuf_num,c
 17905  0126BE  5031               	movf	??i2_ringbuf_num+1,w,c
 17906  0126C0  2033               	addwfc	??i2_ringbuf_num+3,w,c
 17907  0126C2  6E2F               	movwf	?i2_ringbuf_num+1,c
 17908                           
 17909                           ;My_ringbuf.c: 15: } else {
 17910  0126C4  0012               	return	
 17911  0126C6                     i2l7107:
 17912                           
 17913                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 17914  0126C6  EE20 F004          	lfsr	2,4
 17915  0126CA  502E               	movf	i2ringbuf_num@rb,w,c
 17916  0126CC  26D9               	addwf	fsr2l,f,c
 17917  0126CE  502F               	movf	i2ringbuf_num@rb+1,w,c
 17918  0126D0  22DA               	addwfc	fsr2h,f,c
 17919  0126D2  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 17920  0126D6  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 17921  0126DA  EE20 F002          	lfsr	2,2
 17922  0126DE  502E               	movf	i2ringbuf_num@rb,w,c
 17923  0126E0  26D9               	addwf	fsr2l,f,c
 17924  0126E2  502F               	movf	i2ringbuf_num@rb+1,w,c
 17925  0126E4  22DA               	addwfc	fsr2h,f,c
 17926  0126E6  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 17927  0126EA  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 17928  0126EE  EE20 F006          	lfsr	2,6
 17929  0126F2  502E               	movf	i2ringbuf_num@rb,w,c
 17930  0126F4  26D9               	addwf	fsr2l,f,c
 17931  0126F6  502F               	movf	i2ringbuf_num@rb+1,w,c
 17932  0126F8  22DA               	addwfc	fsr2h,f,c
 17933  0126FA  CFDE F034          	movff	postinc2,??i2_ringbuf_num+4
 17934  0126FE  CFDD F035          	movff	postdec2,??i2_ringbuf_num+5
 17935  012702  1E34               	comf	??i2_ringbuf_num+4,f,c
 17936  012704  1E35               	comf	??i2_ringbuf_num+5,f,c
 17937  012706  4A34               	infsnz	??i2_ringbuf_num+4,f,c
 17938  012708  2A35               	incf	??i2_ringbuf_num+5,f,c
 17939  01270A  5032               	movf	??i2_ringbuf_num+2,w,c
 17940  01270C  2634               	addwf	??i2_ringbuf_num+4,f,c
 17941  01270E  5033               	movf	??i2_ringbuf_num+3,w,c
 17942  012710  2235               	addwfc	??i2_ringbuf_num+5,f,c
 17943  012712  5030               	movf	??i2_ringbuf_num,w,c
 17944  012714  2434               	addwf	??i2_ringbuf_num+4,w,c
 17945  012716  6E2E               	movwf	?i2_ringbuf_num,c
 17946  012718  5031               	movf	??i2_ringbuf_num+1,w,c
 17947  01271A  2035               	addwfc	??i2_ringbuf_num+5,w,c
 17948  01271C  6E2F               	movwf	?i2_ringbuf_num+1,c
 17949  01271E  0012               	return	
 17950  012720                     __end_ofi2_ringbuf_num:
 17951                           	opt stack 0
 17952                           pclatu	equ	0xFFB
 17953                           pclath	equ	0xFFA
 17954                           tblptru	equ	0xFF8
 17955                           tblptrh	equ	0xFF7
 17956                           tblptrl	equ	0xFF6
 17957                           tablat	equ	0xFF5
 17958                           prodh	equ	0xFF4
 17959                           prodl	equ	0xFF3
 17960                           intcon	equ	0xFF2
 17961                           intcon2	equ	0xFF1
 17962                           indf0	equ	0xFEF
 17963                           postinc0	equ	0xFEE
 17964                           fsr0h	equ	0xFEA
 17965                           fsr0l	equ	0xFE9
 17966                           wreg	equ	0xFE8
 17967                           indf1	equ	0xFE7
 17968                           postinc1	equ	0xFE6
 17969                           postdec1	equ	0xFE5
 17970                           fsr1h	equ	0xFE2
 17971                           fsr1l	equ	0xFE1
 17972                           indf2	equ	0xFDF
 17973                           postinc2	equ	0xFDE
 17974                           postdec2	equ	0xFDD
 17975                           plusw2	equ	0xFDB
 17976                           fsr2h	equ	0xFDA
 17977                           fsr2l	equ	0xFD9
 17978                           status	equ	0xFD8
 17979                           pclatu	equ	0xFFB
 17980                           pclath	equ	0xFFA
 17981                           tblptru	equ	0xFF8
 17982                           tblptrh	equ	0xFF7
 17983                           tblptrl	equ	0xFF6
 17984                           tablat	equ	0xFF5
 17985                           prodh	equ	0xFF4
 17986                           prodl	equ	0xFF3
 17987                           intcon	equ	0xFF2
 17988                           intcon2	equ	0xFF1
 17989                           indf0	equ	0xFEF
 17990                           postinc0	equ	0xFEE
 17991                           fsr0h	equ	0xFEA
 17992                           fsr0l	equ	0xFE9
 17993                           wreg	equ	0xFE8
 17994                           indf1	equ	0xFE7
 17995                           postinc1	equ	0xFE6
 17996                           postdec1	equ	0xFE5
 17997                           fsr1h	equ	0xFE2
 17998                           fsr1l	equ	0xFE1
 17999                           indf2	equ	0xFDF
 18000                           postinc2	equ	0xFDE
 18001                           postdec2	equ	0xFDD
 18002                           plusw2	equ	0xFDB
 18003                           fsr2h	equ	0xFDA
 18004                           fsr2l	equ	0xFD9
 18005                           status	equ	0xFD8
 18006                           
 18007                           	psect	rparam
 18008  0000                     pclatu	equ	0xFFB
 18009                           pclath	equ	0xFFA
 18010                           tblptru	equ	0xFF8
 18011                           tblptrh	equ	0xFF7
 18012                           tblptrl	equ	0xFF6
 18013                           tablat	equ	0xFF5
 18014                           prodh	equ	0xFF4
 18015                           prodl	equ	0xFF3
 18016                           intcon	equ	0xFF2
 18017                           intcon2	equ	0xFF1
 18018                           indf0	equ	0xFEF
 18019                           postinc0	equ	0xFEE
 18020                           fsr0h	equ	0xFEA
 18021                           fsr0l	equ	0xFE9
 18022                           wreg	equ	0xFE8
 18023                           indf1	equ	0xFE7
 18024                           postinc1	equ	0xFE6
 18025                           postdec1	equ	0xFE5
 18026                           fsr1h	equ	0xFE2
 18027                           fsr1l	equ	0xFE1
 18028                           indf2	equ	0xFDF
 18029                           postinc2	equ	0xFDE
 18030                           postdec2	equ	0xFDD
 18031                           plusw2	equ	0xFDB
 18032                           fsr2h	equ	0xFDA
 18033                           fsr2l	equ	0xFD9
 18034                           status	equ	0xFD8
 18035                           
 18036                           	psect	temp
 18037  00005B                     btemp:
 18038                           	opt stack 0
 18039  00005B                     	ds	1
 18040  0000                     int$flags	set	btemp
 18041                           pclatu	equ	0xFFB
 18042                           pclath	equ	0xFFA
 18043                           tblptru	equ	0xFF8
 18044                           tblptrh	equ	0xFF7
 18045                           tblptrl	equ	0xFF6
 18046                           tablat	equ	0xFF5
 18047                           prodh	equ	0xFF4
 18048                           prodl	equ	0xFF3
 18049                           intcon	equ	0xFF2
 18050                           intcon2	equ	0xFF1
 18051                           indf0	equ	0xFEF
 18052                           postinc0	equ	0xFEE
 18053                           fsr0h	equ	0xFEA
 18054                           fsr0l	equ	0xFE9
 18055                           wreg	equ	0xFE8
 18056                           indf1	equ	0xFE7
 18057                           postinc1	equ	0xFE6
 18058                           postdec1	equ	0xFE5
 18059                           fsr1h	equ	0xFE2
 18060                           fsr1l	equ	0xFE1
 18061                           indf2	equ	0xFDF
 18062                           postinc2	equ	0xFDE
 18063                           postdec2	equ	0xFDD
 18064                           plusw2	equ	0xFDB
 18065                           fsr2h	equ	0xFDA
 18066                           fsr2l	equ	0xFD9
 18067                           status	equ	0xFD8


Data Sizes:
    Strings     162
    Constant    239
    Data        5
    BSS         2337
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     63     123
    BANK1           256      0     245
    BANK2           256     40     232
    BANK3           256      0     100
    BANK4           256      0     200
    BANK5           256      0     250
    BANK6           256      0     250
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation$4	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK1[25]), 

    terminal_operation$3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_operation$2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation$1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_operation$0	PTR struct ringbuf size(2) Largest target is 0

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> loop@s(BANK2[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> loop@s(BANK2[40]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> loop@s(BANK2[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> loop@s(BANK2[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_43(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(COMRAM[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> loop@s(BANK2[40]), STR_42(CODE[9]), STR_41(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    display_time_0802@line1	PTR unsigned char  size(2) Largest target is 40
		 -> loop@s(BANK2[40]), 

    display_time_0802@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> loop@s(BANK2[40]), 

    display_time_0802@line0	PTR unsigned char  size(2) Largest target is 40
		 -> loop@s(BANK2[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> loop@s(BANK2[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> loop@s(BANK2[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    S1935ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> setup@uartrx(BANK3[100]), setup@uarttx(BIGRAMl[1000]), terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 
		 -> USB_CDC_buffer_init@txbuf(BANK6[250]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK1[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_CDC_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_loop
    _setup->_RTCC_from_epoch
    _USB_CDC_init->_USBDeviceInit
    _USB_CDC_buffer_init->_ringbuf_init
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_Clear
    _loop->_display_time_0802
    _display_time_0802->_display_dec
    _display_dec->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USB_CDC_task->_ringbuf_put
    _ringbuf_put->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _USB_CDC_send->_CDCTxService
    _USB_CDC_get->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_loop

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  138845
                                             62 BANK0      1     1      0
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   51918
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                       _I2C_LCD_init
                           _OSC_init
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_init
                          _UART_init
                       _USB_CDC_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_init                                         0     0      0    3869
                    _USBDeviceAttach
                      _USBDeviceInit
                _USB_CDC_buffer_init
 ---------------------------------------------------------------------------------
 (3) _USB_CDC_buffer_init                                  0     0      0    2328
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17305
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9963
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (5) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    3970
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
                       _I2C_init_old
 ---------------------------------------------------------------------------------
 (3) _I2C_init_old                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                41    41      0   86893
                                             61 BANK0      1     1      0
                                              0 BANK2     40    40      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                          _RTCC_task
                          _UART_task
                       _USB_CDC_task
                  _display_time_0802
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _display_time_0802                                    6     0      6   34553
                                             55 BANK0      6     0      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    1061
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _display_dec                                          8     4      4   21305
                                             47 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             39    21     18   12708
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    8744
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     708
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_task                                         5     5      0   22227
                                             22 BANK0      5     5      0
                        _USB_CDC_get
                       _USB_CDC_send
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put                                          7     4      3    9435
                                             15 BANK0      7     4      3
                        _ringbuf_num
                        _ringbuf_pop (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    3135
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _USB_CDC_send                                         2     0      2    2839
                                             12 BANK0      2     0      2
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (4) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _USB_CDC_get                                          1     1      0    4945
                                             13 BANK0      1     1      0
                       _CDCTxService
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (4) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (5) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _UART_task                                            0     0      0    1610
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _ringbuf_num                                          8     6      2    1610
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _RTCC_task                                            0     0      0    7342
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_RTCC                                       2     0      2    7342
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (4) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (4) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (5) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    2492
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Puts                                         5     3      2    2427
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0    1917
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0    1917
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1    1759
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0   33321
                                             30 COMRAM    15    15      0
                           _UART_ISR
                        _USB_CDC_ISR
 ---------------------------------------------------------------------------------
 (8) _USB_CDC_ISR                                          0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (9) _USBDeviceTasks                                       1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (10) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (10) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (11) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (13) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (11) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _APP_DeviceCDCBasicDemoInitialize                    0     0      0    1199
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (12) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (13) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (13) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (14) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _UART_ISR                                             1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_put                                        7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _RTCC_task
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
     _UART_task
       _ringbuf_num
     _USB_CDC_task
       _USB_CDC_get
         _CDCTxService
           _USBTransferOnePacket
         _getsUSBUSART
           _USBTransferOnePacket
       _USB_CDC_send
         _CDCTxService
           _USBTransferOnePacket
         _putUSBUSART
       _ringbuf_num
       _ringbuf_pop
         _ringbuf_num
       _ringbuf_put
         _ringbuf_num
         _ringbuf_pop (ARG)
           _ringbuf_num
     _display_time_0802
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _display_dec
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
         _strcat
       _strcat
       _strcpy
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
       _ringbuf_pop (ARG)
         _ringbuf_num
   _setup
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_init_old
     _OSC_init
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _RTCC_from_epoch
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
     _USB_CDC_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
       _USB_CDC_buffer_init
         _ringbuf_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _USB_CDC_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     3E8      36       30.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      FA      18       97.7%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      FA      16       97.7%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      64      12       39.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     28      E8      10       90.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F5       7       95.7%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3F      7B       5       76.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5D2       8        0.0%
DATA                 0      0     9BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Jan 11 10:54:29 2016

                               _USB_SD_Ptr FE77                         __size_of_I2C_Start 0030  
                             ?_display_dec 008F                               ___awdiv@sign 0065  
                                       _ms 010E                              _USBDeviceInit 0EF0  
                      ___wmul@multiplicand 0062                          ??_RTCC_from_epoch 0091  
                       __size_of_CDCInitEP 006E                               __CFG_CP0$OFF 000000  
     USER_USB_CALLBACK_EVENT_HANDLER@event 003A       USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C  
                                      l132 0F66                __end_of_USBStdGetDscHandler 1544  
                                      l193 3568                                        l194 3566  
                                      l490 0DD0                                        l495 0E24  
                                      l576 17E2                                        l569 1760  
                                      l587 37A8                                        _BDT 000D00  
                                      l783 369E                                        l881 3518  
                                      l798 3948                                        l886 3384  
                                      _ISR 1008                                        _UIE 000F36  
                                      _UIR 000F62                              ?_get_quot_rem 0079  
                       caltime_to_epoch@tm 0079                                 _USBSuspend 3706  
                                      _now 01B8                               ___awmod@sign 0065  
                     USBStdSetCfgHandler@i 0042                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 1048  
                               _TXSTA1bits 000FAD                             _USBDeviceState 0024  
                    ??_USBCtrlTrfRxService 002E                               _I2C_LCD_Puts 2E4C  
                 __size_ofi2_USBDeviceInit 013A                             ??_getsUSBUSART 006A  
                 USBEnableEndpoint@options 0036                          ??_I2C_LCD_Command 0064  
                                     ?_ISR 002E                               _I2C_LCD_init 2DBC  
                                     l1031 25A8                                       l1050 0C70  
                                     l1037 1E82                                       l2016 2596  
                                     l1275 35D6                                       l2069 2FCA  
                                     l2079 31E4                 USBConfigureEndpoint@handle 0034  
                                     l9001 0132                                       l9011 0198  
                                     l9003 013E                                       l9013 01A4  
                                     l9005 0144                                       l9031 0242  
                       __CFG_WPFP$PAGE_127 000000                                       l9105 0420  
                                     l9041 0272                                       l9025 01F4  
                                     l9017 01B6                                       l9121 321A  
                                     l9043 0278                                       l9019 01CE  
                                     l9107 042C                                       l9115 31F8  
                                     l9061 02D6                                       l9109 044C  
                                     l9029 020C                                       l9117 31FE  
                                     l9223 234C                                       l9231 2368  
                                     l9055 02B4                                       l9119 320E  
                                     l8503 24CE                                       l9225 2362  
                                     l9065 030E                                       l9161 0F74  
                                     l9145 0F3C                                       l8531 2BA2  
                                     l8523 2B7C                                       l9315 1770  
                                     l9323 17AE                                       l9091 0398  
                                     l9075 033E                                       l9083 0366  
                                     l9067 0318                                       l8507 24E2  
                                     l9403 30CE                                       l9333 180C  
                                     l9325 17CA                                       l9085 0372  
                                     l9501 2DE8                                       l9173 0FA6  
                                     l9149 0F46                                       l8455 38D0  
                                     l8463 300C                                       l8543 2BE8  
                                     l8535 2BC6                                       l8527 2B90  
                                     l8519 2B6C                                       l9239 3886  
                                     l8703 31D6                                       l9183 1016  
                                     l9351 3530                                       l8529 2B9C  
                                     l8641 1BA0                                       l8721 1A64  
                                     l9257 20E8                                       l9337 1838  
                                     l9097 03B8                                       l9513 2E34  
                                     l9505 2E12                                       l8481 2460  
                                     l8553 251A                                       l8713 3634  
                                     l9177 0FB0                                       l9169 0F86  
                                     l8459 2FE6                                       l8539 2BD4  
                                     l8803 0E74                                       l8731 1AAE  
                                     l8723 1A6E                                       l9099 03BE  
                                     l8491 2490                                       l8475 244A  
                                     l8555 252A                                       l9363 3386  
                                     l8581 1DFC                                       l8573 1DC8  
                                     l8821 0EC4                                       l8805 0E80  
                                     l8813 0EA4                                       l9293 357C  
                                     l9509 2E1C                                       l8565 2584  
                                     l8557 2530                                       l8709 3622  
                                     l8823 0EC8                                       l8815 0EAE  
                                     l8735 1ADE                                       l9295 3588  
                                     l9447 0AE2                                       l8487 247E  
                                     l8593 1E62                                       l8825 0EEC  
                                     l8729 1AA6                                       l9289 3172  
                                     l9449 0AFA                                       l8489 248A  
                                     l8921 0CEE                                       l8843 19B6  
                                     l8763 0DAA                                       l8739 1B10  
                                     l8755 3868                                       l8675 2F7A  
                                     l8659 377E                                       l8499 24C0  
                                     l8915 0CE2                                       l9485 2EAC  
                                     l8941 0484                                       l8781 0E0E  
                                     l8765 0DB4                                       l8677 2F86  
                                     l9493 2DC6                                       l8917 0CE6  
                                     l9479 2E7A                                       l9487 2ED4  
                                     l8935 0474                                       l8775 0DDA  
                                     l8687 2FBC                                       l8679 2F8C  
                                     l8695 31A0                                       l9727 171A  
                                     l8953 0502                                       l8937 047A  
                                     l8769 0DC4                                       l8697 31AC  
                                     l9497 2DD0                                       l8947 04DE  
                                     l8795 0E50                                       l8787 0E28  
                                     l8699 31B2                                       l9755 1208  
                                     l8957 0566                                       l8949 04E2  
                                     l8973 002C                                       l9765 1272  
                                     l8975 003E                                       l8967 000E  
                                     STR_1 FFE0                                       STR_2 FFB0  
                                     l8993 0100                                       l8985 0080  
                                     STR_3 FFE8                                       STR_4 FFFA  
                                     l8979 0048                                       STR_5 FFFA  
                                     STR_6 FFE8                                       STR_7 FFFC  
                                     STR_8 FFB1                                       STR_9 FFF8  
                                     u8200 1B4C                                       u8210 1B7C  
                                     u8230 1B92                      ??_USBCtrlTrfTxService 002E  
                                     u8160 36AA                                       u8240 1B94  
                                     u8250 1BEC                                       u8260 1BEE  
                                     u8228 1B80                                       u8190 1B4A  
                                     u8430 0D9A                                       _UCFG 000F39  
                                     u8370 1A54                                       _UEP0 000F26  
                                     _UEP1 000F27                                       u9270 2E9C  
                                     u8438 0D9E                                       u9280 2ECE  
                                     u9600 12BE                                       u8378 1A58  
                                     _UEIE 000F37                                       u8900 3244  
                                     u9277 2E92                                       u9287 2EC4  
                                     u9618 12C2                                       u9570 125C  
                                     u8907 323A                                       _UEIR 000F63  
                                     _UCON 000F65                                       u9588 1260  
                          _CDCDataInHandle 00B0     USBStdFeatureReqHandler@current_ep_data 0045  
                                     _pDst 00B4                                       _main 3804  
                 ??i2_USBTransferOnePacket 0032                                       _loop 1192  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     indf0 000FEF                                       fsr0l 000FE9  
                                     fsr2h 000FDA                                       indf1 000FE7  
                              _BaudRateGen 010A                                       fsr1l 000FE1  
                                     indf2 000FDF                                       fsr2l 000FD9  
                         __end_of_I2C_Send 3950                            _USBDeviceAttach 353A  
                                     btemp 005B                     __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_I2C_Stop 3988                                       pclat 000FFA  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 10B8                              __CFG_IESO$OFF 000000  
               __end_of_USBCheckStdRequest 1DAA                     ??_USBCtrlTrfOutHandler 0030  
                             ___param_bank 000010                  ??_USBStdFeatureReqHandler 0042  
                            _I2C_LCD_Clear 391E                      __end_ofi2_ringbuf_pop 2AA6  
                    __end_ofi2_ringbuf_num 2720                      __end_ofi2_ringbuf_put 294A  
                                    ??_ISR 004C                     __size_of_I2C_IdleCheck 001E  
                 ??_USBStdGetStatusHandler 002E                             ?_USBDeviceInit 002E  
                        ??_RTCC_to_caltime 0064                              __CFG_PLLDIV$2 000000  
                             _BAUDCON1bits 000F7E                                      l10311 380A  
                              _writeBuffer 0280                                      ?_main 002E  
                           ??_get_quot_rem 007D                            __end_of___awdiv 24EC  
                                    _ADRES 000FC3                                      ?_loop 002E  
                                    STR_13 FFF6                                      STR_30 FFD6  
                                    STR_31 FFF0                                      STR_15 FFAA  
                                    STR_23 FF5C                                      STR_32 FFD0  
                                    STR_40 FFC2                                      STR_24 FFB3  
                                    STR_41 FF98                                      STR_25 FF8D  
                                    STR_34 FFE9                                      STR_42 FFA1  
                                    STR_27 FFED                                      STR_19 FFE5  
                                    STR_43 FFBB                                      STR_36 FFDB  
                                    STR_28 FF81                            __end_of___awmod 2BF2  
                                    STR_37 FFF2                                      STR_38 FFC9  
                                    STR_39 FFF4          __size_of_USBCtrlEPServiceComplete 00F0  
                          __end_of___lldiv 25A8                                      u10335 3824  
                                    u10336 3826                                      u10347 2DD8  
                          ___awdiv@divisor 0062                                      u10357 2E24  
                                    u10367 2EA8                                      u10377 392C  
                   __end_of_USBDeviceTasks 1192                                      u10387 35DC  
                                    _LATB2 007C52                  ?_USBCtrlEPServiceComplete 002E  
                          __end_of___lwdiv 2FD4                            ringbuf_put@data 0071  
                          __end_of___lwmod 31EE                                      i2l132 133E  
                                    i2l144 1078                                      i2l218 18C4  
                                    i2l154 1112                                      i2l331 288A  
                                    i2l155 118E                                      i2l156 1124  
                                    i2l360 0710                                      i2l281 2AB4  
                                    i2l345 1CE0                                      i2l354 1D2E  
                                    i2l436 2998                                      i2l284 2B3C  
                                    i2l285 2AC2                                      i2l438 29CE  
                                    i2l286 2AC6                                      i2l294 3484  
                                    i2l379 08D8                                      _UADDR 000F38  
                          ___awdiv@counter 0064                    ST7032_task@st7032_state 001D  
                                    _TMR1H 000FCF                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _USTAT 000F64         __size_of_USBCtrlEPAllowStatusStage 00C2  
                      ___lmul@multiplicand 0071                             __CFG_FCMEN$OFF 000000  
                         __end_of_UART_ISR 3442            __end_of_USBCtrlEPAllowDataStage 2D28  
                                    _sd000 FF58                                      _sd001 FEC2  
                                    _sd002 FEF6                       caltime_to_epoch@year 007F  
                               i2memset@p1 002E                         __size_of_UART_init 0022  
                          __end_of_dpowers FE77                         __size_of_UART_task 0020  
                         __end_of_OSC_init 397E                            __end_of_isdigit 3788  
                       __size_of_RTCC_init 006A                         __size_of_RTCC_task 003C  
                                    _setup 1650                          __end_of_I2C_Start 36AE  
                             display_dec@s 0093                                      tablat 000FF5  
                                    loop@s 02C0                                      plusw2 000FDB  
                        __end_of_CDCInitEP 30B8                                      status 000FD8  
                          __end_of_sprintf 045A                      __size_of_I2C_init_old 0012  
                         __end_ofi2_memset 375E                          month_length@month 0066  
                      _USB_CDC_buffer_init 33AA                            putUSBUSART@data 0060  
             __size_of_USBStdSetCfgHandler 00DC                             ?_I2C_LCD_Clear 002E  
                          __initialization 2BF2                               __end_of_main 3828  
                             __end_of_loop 12D8                      _control_signal_bitmap 00BF  
                      ringbuf_init@bufsize 0064                           RTCC_from_RTCC@tm 0086  
                __size_of_USBCtrlEPService 00CE                                     ??_main 009E  
                                   ??_loop 009D                              __activetblptr 000003  
                          ?_USBDeviceTasks 002E                       ?_USB_CDC_buffer_init 002E  
                              ?_USBSuspend 002E                               _cdc_mem_type 00BC  
                             _I2C_init_old 3950                                     _BCL1IF 007D0B  
                            _I2C_IdleCheck 38CC                    __end_of_USBDeviceAttach 3572  
                         _CDCDataOutHandle 00B2                          _getsUSBUSART$1886 006B  
                        _I2C_LCD_SetCursor 36DA                                     _EECON2 000FA7  
                                   _ANCON0 000F48                                     _ANCON1 000F49  
                      display_time_0802@tm 0097                           ___awdiv@dividend 0060  
                                   ?_setup 002E                         I2C_LCD_Command@ans 0065  
                          getsUSBUSART@len 0069                      __size_of_CDCTxService 017A  
                                   i2l1462 3424                                     i2l1463 3422  
                                   i2l1562 107C                             __CFG_WDTEN$OFF 000000  
                                   i2l1559 1052                                     i2l6113 1592  
                                   i2l6107 1570                                     i2l6125 15EC  
                                   i2l6151 1CF4                                     i2l6129 1606  
                                   i2l5513 2760                                     i2l5505 2736  
                                   i2l5601 325C                                     i2l6161 1D0C  
                                   i2l7201 1150                                     i2l7121 1060  
                                   i2l7107 26C6                                     i2l6163 1D12  
                                   i2l6147 1CE8                                     i2l6059 186E  
                                   i2l5621 211E                                     i2l6333 3300  
                                   i2l6325 32B8                                     i2l5525 27BC  
                                   i2l6173 1D48                                     i2l6149 1CEE  
                                   i2l7061 134C                                     i2l7045 131A  
                                   i2l6159 1D06                                     i2l5711 2CF6  
                                   i2l6079 18EA                                     i2l7207 116E  
                                   i2l7151 109E                                     i2l7143 108E  
                                   i2l5625 2128                                     i2l6361 2850  
                                   i2l6177 1D66                                     i2l7073 137C  
                                   i2l7049 1322                                     i2l7209 118A  
                                   i2l7129 1070                                     i2l5635 2152  
                                   i2l5643 218A                                     i2l6347 280C  
                                   i2l5483 2D8A                                     i2l5731 1C3C  
                                   i2l5707 2CDE                                     i2l7083 13E0  
                                   i2l5645 2192                                     i2l5653 21CA  
                                   i2l6349 2810                                     i2l5493 34D4  
                                   i2l5573 29B8                                     i2l5565 298C  
                                   i2l5557 2976                                     i2l5581 29D6  
                                   i2l5661 374C                                     i2l7077 1384  
                                   i2l7069 135E                                     i2l7181 1108  
                                   i2l7173 10E0                                     i2l7157 10C4  
                                   i2l6367 2870                                     i2l5727 1C34  
                                   i2l7167 10D4                                     i2l5497 34E2  
                                   i2l5841 0784                                     i2l5761 1422  
                                   i2l5809 2B24                                     i2l5657 373C  
                                   i2l5753 1CAE                                     i2l5737 1C68  
                                   i2l5595 3250                                     i2l5827 070C  
                                   i2l7187 111C                                     i2l5677 23B2  
                                   i2l5597 3256                                     i2l5853 07E6  
                                   i2l5781 1520                                     i2l5773 14C2  
                                   i2l5765 1434                                     i2l5863 083E  
                                   i2l5847 07C8                                     i2l5783 1526  
                                   i2l5775 14C8                                     i2l6911 222A  
                                   i2l7457 2934                                     i2l5881 08C4  
                                   i2l5865 0858                                     i2l5849 07CA  
                                   i2l7467 2A8A                                     i2l7475 2AA2  
                                   i2l5787 152C                                     i2l6907 2222  
                                   i2l6923 228A                                     i2l7469 2A9E  
                                   i2l5869 0872                                     i2l6925 2290  
                                   i2l5895 093E                                     i2l5879 08B8  
                                   i2l5799 2AE4                                     i2l6919 2270  
                                   i2l5897 094A                                     i2l5889 08FA  
                                   i2l6891 3480                                     i2l6867 3676  
                                   i2l8395 1074                                     i2l6869 3678  
                       ?_I2C_LCD_SetCursor 0066                                     _RCREG1 000FAF  
                            CDCTxService@i 006A                                     _RTCCAL 000F3E  
                                   _SPBRG1 000FB0                              USB_CDC_task@i 0077  
                                   _SSP1IF 007CF3                             __CFG_WPCFG$OFF 000000  
                                   _SSPBUF 000FC9                                     _TXREG1 000FAE  
                 i2USBTransferOnePacket@ep 0032                          ??i2_USBDeviceInit 0036  
                          i2ringbuf_pop@rb 0036                            i2ringbuf_num@rb 002E  
          __size_ofi2_USBTransferOnePacket 00BA                            i2ringbuf_put@rb 0036  
                           __CFG_WPDIS$OFF 000000                         epoch_to_caltime@tm 0081  
                        _shortPacketStatus 002B                        ??_I2C_LCD_SetCursor 0067  
                           __CFG_XINST$OFF 000000                          ?_epoch_to_caltime 0081  
                          USBDeviceTasks@i 004B                      caltime_to_epoch@epoch 0081  
              USBStdFeatureReqHandler@pUEP 0043                   USBTransferOnePacket@data 0061  
               USBCtrlTrfInHandler@lastDTS 002F                            ??_USBDeviceInit 0068  
                             ?_ringbuf_pop 0068                               ?_ringbuf_num 0060  
                             ?_ringbuf_put 006F                      caltime_to_epoch@month 0085  
                                   ___lmul 2FD4                               ?_putUSBUSART 0060  
                          _caltime_to_RTCC 1E82                                     ___wmul 35E2  
                       ??_epoch_to_caltime 0083                          __end_of_UART_init 384A  
                                ??___awdiv 0064                          __end_of_UART_task 38AC  
                                ??___awmod 0064                                     _d_to_x 37DC  
                                ??___lldiv 0068                       __end_of_getsUSBUSART 1B16  
                             ?_timer0_init 002E                          __end_of_RTCC_init 3122  
                             ?_timer1_init 0060                                  ??___lwdiv 0064  
                        __end_of_RTCC_task 34C4                                  ??___lwmod 006B  
                             ?_timer3_init 002E                                     _lcd_tx 00C4  
                        _USBEnableEndpoint 34C4            __size_of_USBStdGetStatusHandler 00AA  
                                   _memset 3618                                     clear_0 2BFA  
                                   clear_1 2C0C                                     clear_2 2C18  
                                   clear_3 2C24                                     clear_4 2C30  
                                   clear_5 2C3C                                     clear_6 2C48  
                                   clear_7 2C54                                     clear_8 2C60  
                          __CFG_CLKOEC$OFF 000000                           ___awdiv@quotient 0066  
                          ___awmod@divisor 0062                            ___awmod@counter 0064  
                                   _x_to_d 38AC                         ?_USBEnableEndpoint 0036  
                                   _usb_rx 01DE                                     _usb_tx 01E6  
                     __size_of_display_dec 006A                                     _strcat 31EE  
                                   _strcpy 3572                      ??_USB_CDC_buffer_init 0066  
            __size_of_USBTransferOnePacket 00D8                  __size_of_caltime_to_epoch 028E  
                                ??_isdigit 0060                                  ?_I2C_Send 002E  
                             _st7032_state 00C0                               _CDCTxService 0D76  
                                ?_I2C_Stop 002E                               __mediumconst FE6C  
                __end_of_I2C_LCD_SetCursor 3706                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                      ??_USBEnableEndpoint 0037                             ?_I2C_IdleCheck 002E  
                 USB_CDC_buffer_init@rxbuf 0500                   USB_CDC_buffer_init@txbuf 0600  
                                ??_sprintf 007E                                _CtrlTrfData 000D38  
                     _controlTransferState 0029                       __CFG_LS48MHZ$SYS48X8 000000  
                               __accesstop 0060                    __end_of__initialization 2C86  
                             ?_USB_CDC_ISR 002E                               __pbssBIGRAMl 06FA  
                             ?_USB_CDC_get 002E                       __end_of_get_quot_rem 202C  
                            ___rparam_used 000001                            ??_I2C_LCD_Clear 0066  
                          _RTCC_from_epoch 38EA                   __size_of_USBStallHandler 0046  
                     __CFG_WPEND$PAGE_WPFP 000000                        __size_of_USBSuspend 002C  
                         terminal_task@op0 0154                           terminal_task@op1 016D  
                         terminal_task@op2 0186                           terminal_task@op3 019F  
                           __pcstackCOMRAM 002E                  __end_of_USBEnableEndpoint 3500  
                            __end_of_sd000 FF5C                              __end_of_sd001 FEF6  
                            __end_of_sd002 FF2A                               __pidataBANK0 398E  
                                ?_UART_ISR 002E           __size_of_USBCtrlEPAllowDataStage 0098  
            __size_of_USBConfigureEndpoint 0094                                  ?_OSC_init 002E  
                            __end_of_setup 1758                __end_of_USBCtrlTrfInHandler 2894  
                          __CFG_DSWDTPS$G2 000000                            _I2C_LCD_Command 35AA  
                   i2_USBTransferOnePacket 2720                       terminal_task@command 00CC  
                            _I2C_cfct_flag 00BA                           I2C_LCD_Command@c 0064  
                               ??_I2C_Send 0062                          _CDCTxService$1934 0068  
                               ??_I2C_Stop 0062                                 _cdc_notice 0100  
                                ?i2_memset 002E                                 _cdc_rx_len 00BD  
                               _cdc_tx_len 00BE                 caltime_to_epoch@month_3879 0080  
                 ??_USBCtrlTrfSetupHandler 0048                           ?_USBDeviceAttach 002E  
                   _USBStdGetStatusHandler 2AA6                               sprintf@width 008D  
                                  ??_setup 0091                                 __pbssBANK0 009F  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                               __pbssBANK3 0300                                 __pbssBANK4 0400  
                               __pbssBANK5 0500                                 __pbssBANK6 0600  
 __end_of_APP_DeviceCDCBasicDemoInitialize 37DC  __size_of_APP_DeviceCDCBasicDemoInitialize 002A  
       ??_APP_DeviceCDCBasicDemoInitialize 003A          ?_APP_DeviceCDCBasicDemoInitialize 002E  
         _APP_DeviceCDCBasicDemoInitialize 37B2                    __end_of_caltime_to_RTCC 1F58  
                          _RTCC_to_caltime 25A8                __size_of_USBWakeFromSuspend 0032  
                              _pBDTEntryIn 0010           __end_of_USBCtrlEPServiceComplete 193E  
              __size_of_USBCheckCDCRequest 00B0                      __end_of_weekday_3char FF46  
                    RTCC_task@prev_halfsec 00B8                       USBCtrlTrfRxService@i 002E  
                                  ?___lmul 006D                                 ??_UART_ISR 003D  
                                  ?___wmul 0060                             ST7032_init@buf 0400  
                                  ?_d_to_x 002E                                 ??_OSC_init 0060  
                                  ?_memset 0060                       I2C_LCD_SetCursor@col 0069  
                           ___lmul@product 0075                                 _device_dsc FF46  
                     I2C_LCD_SetCursor@row 0066                           _USBCtrlEPService 21D2  
                                  ?_x_to_d 002E                               I2C_Send@data 0062  
                               _ep_data_in 0016                                    ?_strcat 0060  
                                  ?_strcpy 0060                __end_of_USBCtrlTrfRxService 1650  
                       _USBCheckStdRequest 1CD0                          _configDescriptor1 FE7F  
                                  i2l10361 32A4                                    i2l10359 3274  
                       __CFG_OSC$INTOSCPLL 000000                            ??_I2C_IdleCheck 0060  
                               ??i2_memset 0034                __end_of_USBCtrlTrfTxService 21D2  
                      _USBStdSetCfgHandler 1BF4                 __size_of_I2C_LCD_SetCursor 002C  
                   I2C_LCD_SetCursor@F8685 00D6                            __CFG_WDTPS$1024 000000  
                                  _SPBRGH1 000F7F                              _I2C_sent_flag 001F  
                                  _SSP1ADD 000FC8                                    _SSP1BUF 000FC9  
                                  _RTCVALH 000F3B                                    _RTCVALL 000F3A  
                      ?_USBCheckStdRequest 002E               __size_of_USBStdGetDscHandler 0132  
                                  _UIEbits 000F36                    __end_of_RTCC_from_epoch 3904  
                     timer1_init@prescaler 0062                                    _UIRbits 000F62  
                         i2ringbuf_pop@ret 003C                           __CFG_CFGPLLEN$ON 000000  
                            _cdc_trf_state 0028                              ?_month_length 0066  
                      epoch_to_caltime@day 0087                        epoch_to_caltime@num 008B  
                        RTCC_from_epoch@tm 008F                                  _I2C_Start 367E  
                                  _pCDCDst 00A8                                    _pCDCSrc 00AB  
                    __size_of_getsUSBUSART 00EA                     display_time_0802@line0 0099  
                   display_time_0802@line1 009B                                    __Hparam 0000  
                     ?_USBStdSetCfgHandler 002E                                  _CDCInitEP 304A  
                                  __Lparam 0000                    __end_of_I2C_LCD_Command 35E2  
               __size_of_USBEnableEndpoint 003C                                 _readBuffer 0240  
                     ??_USBCheckStdRequest 0048              __size_of_USBCtrlTrfOutHandler 005C  
                            ?_ringbuf_init 0060                                    ___awdiv 242E  
                          __size_of___lmul 0076                                    ___awmod 2B50  
                                  ___lldiv 24EC                           ??_USBDeviceTasks 004B  
                          __size_of___wmul 0036                                    ___lwdiv 2F5C  
                        ??_USBStallHandler 002E                                    ___lwmod 318C  
                          __size_of_d_to_x 0028                       __size_of_ringbuf_pop 00CC  
                     __size_of_ringbuf_num 00EE                       __size_of_ringbuf_put 00D4  
                          __CFG_STVREN$OFF 000000                       __size_of_putUSBUSART 0022  
              epoch_to_caltime@month_cache 00DA                                    __pcinit 2BF2  
                       getsUSBUSART@buffer 0067                            __size_of_memset 0034  
                __end_of_configDescriptor1 FEC2                                    __ramtop 0F00  
                     __size_of_timer0_init 003A                       __size_of_timer1_init 0050  
                                  __ptext0 3804                                    __ptext1 1650  
                                  __ptext2 36AE                                    __ptext3 335A  
                                  __ptext4 3500                                    __ptext5 3962  
                                  __ptext6 33AA                                    __ptext7 3306  
                                  __ptext8 0EF0                                    __ptext9 3618  
                                  _inPipes 000A                       __size_of_timer3_init 002C  
                          __size_of_x_to_d 0020                              I2C_LCD_Puts@s 0064  
              _USBDeferOUTDataStagePackets 0022                                  _T0CONbits 000FD5  
                          __size_of_strcat 0060                           _time_change_flag 00C1  
                         _caltime_to_epoch 045A                            __size_of_strcpy 0038  
                             __size_of_ISR 00B0                                  _T1CONbits 000FCD  
                                  _dpowers FE6D                               ??_USBSuspend 0042  
                  __size_of_RTCC_from_RTCC 001A                                    _isdigit 375E  
                                _T3CONbits 000F79                           ___awmod@dividend 0060  
                            I2C_LCD_init@i 0068                                  _T5CONbits 000F22  
                          i2_USBDeviceInit 12D8                           i2USBDeviceInit@i 0036  
                                  _uart_rx 01CE                                    _uart_tx 01D6  
                       __end_of_USB_CD_Ptr FE7F                                    _sprintf 0000  
          __size_of_USBCtrlTrfSetupHandler 0082                    __end_of_RTCC_to_caltime 2664  
                    __size_of_get_quot_rem 00D4                       end_of_initialization 2C86  
                             _getsUSBUSART 1A2C                     __size_ofi2_ringbuf_pop 00AC  
                   __size_ofi2_ringbuf_num 00BC                     __size_ofi2_ringbuf_put 00B6  
                             _CTMUCONHbits 000FB3                         __end_of_USB_SD_Ptr FE7D  
                             _CTMUCONLbits 000FB2                        _pBDTEntryEP0OutNext 001B  
                           ??_month_length 0067                             display_dec@dec 0091  
                                  memset@c 0062                                    memset@n 0064  
                                  memset@p 0066                             display_dec@str 008F  
          _dummy_encapsulated_cmd_response 01C6                   ?_USBStdFeatureReqHandler 002E  
                         ?_caltime_to_RTCC 0069                                 ?_I2C_Start 0062  
                    ??_USBStdSetCfgHandler 0042                       __size_of_USB_CDC_ISR 0006  
                          ___lldiv@divisor 0064                       timer3_init@prescaler 0061  
                               ?_CDCInitEP 002E                            ___lldiv@counter 006C  
                     __size_of_USB_CDC_get 002A                         __end_of_USBSuspend 3732  
                           ??_ringbuf_init 0066                    _USBCtrlEPAllowDataStage 2C90  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                   _USBCtrlEPServiceComplete 184E  
               _USBStatusStageEnabledFlag1 0025                 _USBStatusStageEnabledFlag2 0026  
                       USBEnableEndpoint@p 0037                                  _UART_init 3828  
                                _UART_task 388C                           __CFG_DSBOREN$OFF 000000  
                                _RTCC_init 30B8                                  _RTCC_task 3488  
                epoch_to_caltime@day_cache 0112                         ST7032_cursor@F8640 00D8  
                             _get_quot_rem 1F58                  __size_of_epoch_to_caltime 01F2  
                         __CFG_CPUDIV$OSC1 000000                         _BothEP0OutUOWNsSet 001E  
                              setup@uartrx 0300                                setup@uarttx 06FA  
                        __size_of_I2C_Send 0018                          __size_of_I2C_Stop 000A  
                USBConfigureEndpoint@EPNum 0033                 ?_USBCtrlEPAllowStatusStage 002E  
                            ?_USB_CDC_init 002E                              ?_USB_CDC_send 006C  
                            ?_USB_CDC_task 002E                           ?_RTCC_from_epoch 008F  
      USER_USB_CALLBACK_EVENT_HANDLER@size 003E                                  _USTATcopy 002D  
                  timer1_init@clock_select 0060               __end_of_USBTransferOnePacket 1E82  
                         __CFG_IOL1WAY$OFF 000000                          putUSBUSART@length 0062  
                      __CFG_MSSP7B_EN$MSK7 000000                           ?_I2C_LCD_Command 002E  
                           ringbuf_init@rb 0060                     _USBCtrlTrfSetupHandler 2EDA  
              __end_of_USB_CDC_buffer_init 33F8                             ringbuf_pop@ret 006E  
                            ??_display_dec 0093                              i2_ringbuf_pop 29FA  
                            i2_ringbuf_num 2664                    ?i2_USBTransferOnePacket 002E  
                            i2_ringbuf_put 2894                      __end_of_USBDeviceInit 1048  
                           __end_of___lmul 304A                             __end_of___wmul 3618  
                           __end_of_d_to_x 3804                          __size_of_UART_ISR 004A  
                  __end_ofi2_USBDeviceInit 1412                                 ?_UART_init 002E  
                                i2memset@c 0030                                  i2memset@n 0032  
                                i2memset@p 0034                                 ?_UART_task 002E  
                           __end_of_memset 364C                                 ?_RTCC_init 002E  
                        __size_of_OSC_init 000E                                 ?_RTCC_task 002E  
                         __CFG_DSWDTEN$OFF 000000                          _USBBusIsSuspended 00BB  
                           __end_of_x_to_d 38CC                             __end_of_strcat 324E  
                    epoch_to_caltime@month 008A                             __end_of_strcpy 35AA  
                      start_initialization 2BF2                           month_length@year 006B  
                  ?_USBStdGetStatusHandler 002E                                __end_of_ISR 10B8  
            USBCtrlTrfRxService@byteToRead 002F                              ?_I2C_LCD_Puts 0064  
                            ?_I2C_LCD_init 002E                                _cdc_data_rx 0114  
                           ??_USB_CDC_init 0069                                _cdc_data_tx 0200  
                        __size_ofi2_memset 002C                             ??_USB_CDC_send 006E  
                            UART_ISR@ascii 003D                             ??_USB_CDC_task 0076  
             __end_of_USBConfigureEndpoint 2DBC                           ?_RTCC_to_caltime 0062  
          __end_of_USBStdFeatureReqHandler 0970          __end_of_USBCtrlEPAllowStatusStage 242E  
                 __end_of_USBCtrlEPService 22A0                                ??_I2C_Start 0063  
                ??_USBCtrlEPAllowDataStage 002F                                ??_CDCInitEP 003A  
                           USBDeviceInit@i 0068                      __end_of_I2C_LCD_Clear 3938  
                   _pBDTEntryEP0OutCurrent 0019                    USBTransferOnePacket@dir 0060  
                  USBTransferOnePacket@len 0063             __end_ofi2_USBTransferOnePacket 27DA  
                                 ??___lmul 0075                             ?i2_ringbuf_pop 0036  
                           ?i2_ringbuf_num 002E                             ?i2_ringbuf_put 0036  
                                 ??___wmul 0064                        _USBStdGetDscHandler 1412  
                                 ??_d_to_x 0068                          __CFG_ADCSEL$BIT12 000000  
                              __pdataBANK0 00D6                                   ??_memset 0066  
                                 ??_x_to_d 0060                                   ??_strcat 0064  
                                 ??_strcpy 0064                       __end_of_month_length 1BF4  
                           _RTCC_from_RTCC 3904                     _USBActiveConfiguration 002C  
           __end_of_USBStdGetStatusHandler 2B50                        __end_of_display_dec 318C  
                              __pbssCOMRAM 0001                        RTCC_to_caltime@dumy 0064  
                            __pcstackBANK0 0060                              __pcstackBANK2 02C0  
             __size_of_USBCtrlTrfInHandler 00BA                             ??_I2C_LCD_Puts 0066  
                           ??_I2C_LCD_init 0067                       __end_of_ringbuf_init 335A  
                     ?_USBStdGetDscHandler 002E                               _isdigit$5905 0061  
               __end_of_USBWakeFromSuspend 367E                                sprintf@flag 008B  
                              sprintf@prec 0082                            _USBStallHandler 3442  
                             _pBDTEntryOut 009F                 __end_of_USBCheckCDCRequest 29FA  
                 __end_of_caltime_to_epoch 06E8                            millis_timer@cnt 00B6  
                 __size_of_USBDeviceAttach 0038                    USB_CDC_get@numBytesRead 006D  
                         ___lwdiv@dividend 0060                                  __pintcode 1008  
                            __pmediumconst FE6C                                   ?___awdiv 0060  
                                 ?___awmod 0060                                   ?___lldiv 0060  
                                 ?___lwdiv 0060                                   ?___lwmod 0067  
                   __end_of_RTCC_from_RTCC 391E                            I2C_LCD_Puts@ans 0067  
                         ?i2_USBDeviceInit 002E                                ??_UART_init 0060  
                              ??_UART_task 0068                                ??_RTCC_init 0091  
                              ??_RTCC_task 0088                       _USBTransferOnePacket 1DAA  
                              I2C_Start@rw 0062                                   ?_isdigit 002E  
                         _epoch_to_caltime 0B84                                   _I2C_Send 3938  
                                 _I2C_Stop 397E                       __CFG_RTCOSC$T1OSCREF 000000  
                                 _I2C_busy 00B9                      __end_of_I2C_IdleCheck 38EA  
                              _PADCFG1bits 000F3C               __end_of_USBCtrlTrfOutHandler 3306  
                            ?_I2C_init_old 002E                      ??_USBStdGetDscHandler 002E  
                              _ep_data_out 00A5                           ___lwdiv@quotient 0065  
                          ST7032_task@wait 00AE                                   ?_sprintf 006C  
             __size_of_USBCtrlTrfRxService 010C              USBConfigureEndpoint@direction 002E  
                           __size_of_setup 0108                                  d_to_x@dec 0068  
                                 _CTMUCONH 000FB3                                   _CTMUCONL 000FB2  
                                 _CTMUICON 000FB1               __size_of_USBCtrlTrfTxService 00D2  
                 ringbuf_init@internal_buf 0062                             ___wmul@product 0064  
                                 _LATAbits 000F89                                   _LATBbits 000F8A  
               ??_USBCtrlEPServiceComplete 002F                                   _IPR1bits 000F9F  
                                 _IPR2bits 000FA2                                   _PIE1bits 000F9D  
                                 _PIE2bits 000FA0                                   _IPR5bits 000F99  
                                 _PIE5bits 000F91                            ??i2_ringbuf_pop 0038  
                          ??i2_ringbuf_num 0030                                   i2u421_40 217C  
                                 i2u421_47 2172                            ??i2_ringbuf_put 0039  
                                 i2u423_40 21BC                                   i2u423_47 21B2  
                                 i2u440_40 1516                                   i2u440_47 150C  
                                 _PIR1bits 000F9E                                   _PIR2bits 000FA1  
                                 i2u437_40 148E                                   i2u437_47 1484  
                                 i2u438_40 14BE                                   i2u438_47 14B4  
                                 _PIR5bits 000F98                 epoch_to_caltime@year_cache 00C2  
                USBCtrlEPService@setup_cnt 004A                                   i2u790_48 106A  
                            ??_ringbuf_pop 006A                              ??_ringbuf_num 0062  
                            ??_ringbuf_put 0072                                   i2u789_40 1068  
                                 _RCONbits 000FD0                          _display_time_0802 0970  
                            ??_putUSBUSART 0063                                   _UEP0bits 000F26  
               _USBDeferINDataStagePackets 0021                                   _UART_ISR 33F8  
                                 _SSP1CON1 000FC6                                   _SSP1CON2 000FC5  
                            ??_timer0_init 0060                              ??_timer1_init 0061  
              __size_of_USBCheckStdRequest 00DA                              ??_timer3_init 0060  
                                 _SSP1STAT 000FC7                                   _UCONbits 000F65  
                     __end_of_USB_CDC_init 3970                       __end_of_USB_CDC_send 388C  
                     __end_of_USB_CDC_task 184E                         ?_display_time_0802 0097  
                              _display_dec 3122                       _USBConfigureEndpoint 2D28  
                                 _OSC_init 3970                            ?_RTCC_from_RTCC 0086  
         __size_of_USBStdFeatureReqHandler 0288                                 _ADCON0bits 000FC2  
                               _ADCON1bits 000FC1                          ___wmul@multiplier 0060  
                    ?_USBTransferOnePacket 0060                           __CFG_SOSCSEL$LOW 000000  
                            ?_CDCTxService 002E                        ??_display_time_0802 009D  
                             _RemoteWakeup 0020                         I2C_LCD_init@i_4689 0069  
                                 i2_memset 3732                          i2ringbuf_put@data 0038  
                           ??_I2C_init_old 0060                              ringbuf_pop@rb 0068  
                            ringbuf_num@rb 0060                    __end_of_USBStallHandler 3488  
                            I2C_Start@adrs 0063                              ringbuf_put@rb 006F  
                        ___lmul@multiplier 006D                                _INTCON2bits 000FF1  
                                copy_data0 2C7A                ??_USBCtrlEPAllowStatusStage 002E  
              __end_of_USBStdSetCfgHandler 1CD0                       epoch_to_caltime@year 0089  
                            ??_USB_CDC_ISR 004C                              ??_USB_CDC_get 006D  
                       __end_of_device_dsc FF58                    ?_USBCtrlTrfSetupHandler 002E  
                __end_of_display_time_0802 0B84                    USBStdGetStatusHandler@p 002F  
                                 __Hrparam 0000                                   __Lrparam 0000  
                   USBTransferOnePacket@ep 0064                       __end_of_I2C_LCD_Puts 2EDA  
                                 _SetupPkt 000D30                              _weekday_3char FF2A  
                     __end_of_I2C_LCD_init 2E4C                      __size_of_month_length 00DE  
                    ?_USBConfigureEndpoint 002E                   __size_of_caltime_to_RTCC 00D6  
                        ??_USBDeviceAttach 0060                           __size_of___awdiv 00BE  
                         __size_of___awmod 00A2                          I2C_IdleCheck@mask 0061  
                         __size_of___lldiv 00BC                           __size_of___lwdiv 0078  
                         __size_of___lwmod 0062                        __end_of_ringbuf_pop 236C  
                      __end_of_ringbuf_num 1A2C                        __end_of_ringbuf_put 2100  
                      __end_of_putUSBUSART 386C                                _line_coding 01EE  
                           ??_CDCTxService 0067                        __end_of_timer0_init 353A  
                    __size_of_ringbuf_init 0054                        __end_of_timer1_init 33AA  
                               sprintf@len 0089                        __end_of_timer3_init 36DA  
                               sprintf@val 0087                                 strcat@from 0062  
                         __size_of_isdigit 002A                    __size_of_USBDeviceTasks 014A  
                          ___lwdiv@divisor 0062                            ___lwdiv@counter 0064  
                     timer0_init@prescaler 0061                                   __ptext10 353A  
                                 __ptext11 3828                                   __ptext20 3970  
                                 __ptext12 30B8                                   __ptext21 2DBC  
                                 __ptext13 38EA                                   __ptext30 35E2  
                                 __ptext22 3950                                   __ptext14 0B84  
                                 __ptext31 318C                                   __ptext23 1192  
                                 __ptext15 1F58                                   __ptext40 0D76  
                                 __ptext32 2F5C                                   __ptext24 0970  
                                 __ptext16 24EC                                   __ptext41 1DAA  
                                 __ptext33 1758                                   __ptext25 3572  
                                 __ptext17 1E82                                   __ptext50 25A8  
                                 __ptext42 388C                                   __ptext34 202C  
                                 __ptext26 3122                                   __ptext18 37DC  
                                 __ptext51 38AC                                   __ptext43 193E  
                                 __ptext35 22A0                                   __ptext27 31EE  
                                 __ptext19 242E                                   __ptext52 36DA  
                                 __ptext44 3488                                   __ptext36 386C  
                                 __ptext28 0000                                   __ptext61 3988  
                                 __ptext53 2E4C                                   __ptext45 3904  
                                 __ptext37 384A                                   __ptext29 375E  
                                 __ptext70 2C90                                   __ptext62 1048  
                                 __ptext54 391E                                   __ptext46 045A  
                                 __ptext38 3788                                   __ptext71 1CD0  
                                 __ptext63 12D8                                   __ptext55 35AA  
                                 __ptext47 1B16                                   __ptext39 1A2C  
                                 __ptext80 304A                                   __ptext72 1BF4  
                                 __ptext64 364C                                   __ptext56 397E  
                                 __ptext48 2B50                                   __ptext81 2720  
                                 __ptext73 3732                                   __ptext65 3706  
                                 __ptext57 367E                                   __ptext49 2FD4  
                                 __ptext90 2894                                   __ptext82 34C4  
                                 __ptext74 2AA6                                   __ptext66 3442  
                                 __ptext58 3938                                   __ptext91 29FA  
                                 __ptext83 2D28                                   __ptext75 1412  
                                 __ptext67 21D2                                   __ptext59 38CC  
                                 __ptext92 2664                                   __ptext84 32AA  
                                 __ptext76 06E8                                   __ptext68 2EDA  
                                 __ptext85 1544                                   __ptext77 324E  
                                 __ptext69 184E                                   __ptext86 236C  
                                 __ptext78 294A                                   __ptext87 27DA  
                                 __ptext79 37B2                                   __ptext88 2100  
                                 __ptext89 33F8                               _SSP1CON1bits 000FC6  
                             _SSP1CON2bits 000FC5                           __size_of_sprintf 045A  
                               strcpy@from 0062             __end_of_USBCtrlTrfSetupHandler 2F5C  
                            __size_of_main 0024                          ?_USBCtrlEPService 002E  
                            __size_of_loop 0146                               _month_length 1B16  
                       ??_USBCtrlEPService 0048                   __size_of_RTCC_from_epoch 001A  
                      _USBCtrlTrfInHandler 27DA                        __end_of_USB_CDC_ISR 398E  
                      __end_of_USB_CDC_get 37B2                                   _outPipes 0001  
                     _USBCtrlTrfOutHandler 32AA                                   int$flags 005B  
                             _ringbuf_init 3306                  _USBCtrlEPAllowStatusStage 236C  
                                x_to_d@hex 0061                               _SSP1STATbits 000FC7  
                   ??_USBTransferOnePacket 0064                   __size_of_I2C_LCD_Command 0038  
                _USBDeferStatusStagePacket 0023                   CDCTxService@byte_to_send 006B  
             __size_of_USB_CDC_buffer_init 004E                                _OSCTUNEbits 000F9B  
                               _INTCONbits 000FF2                       ?_USBCtrlTrfInHandler 002E  
            USBCtrlTrfTxService@byteToSend 002E               I2C_LCD_SetCursor@row_offsets 0067  
                          display_dec@edit 0092                                   isdigit@c 0062  
                                 memset@p1 0060                           ?_USBStallHandler 002E  
                 USBStdFeatureReqHandler@p 0046                           get_quot_rem@quot 0079  
                terminal_task@command_init 00C3                          RTCC_to_caltime@tm 0062  
                       USB_CDC_send@length 006C                                   intlevel2 0000  
                                sprintf@ap 0083                                  sprintf@cp 0085  
                                sprintf@sp 006C                     __size_of_USBDeviceInit 0158  
  __end_of_USER_USB_CALLBACK_EVENT_HANDLER 32AA   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 0040           ?_USER_USB_CALLBACK_EVENT_HANDLER 003A  
          _USER_USB_CALLBACK_EVENT_HANDLER 324E                              main@GIE_cache 009E  
                         ___lwmod@dividend 0067               i2USBTransferOnePacket@handle 0033  
                         ___lldiv@dividend 0060                                 _RCSTA1bits 000FAC  
                        ?_caltime_to_epoch 0079                 __size_of_display_time_0802 0214  
                 __end_of_epoch_to_caltime 0D76                   __size_of_RTCC_to_caltime 00BC  
                    __size_of_USB_CDC_init 000E                      __size_of_USB_CDC_send 0020  
                    __size_of_USB_CDC_task 00F6                         USB_CDC_task@length 0079  
                               _OSCCONbits 000FD3                 i2USBTransferOnePacket@data 002F  
                       ??_caltime_to_epoch 007B                       __end_of_I2C_init_old 3962  
                   ??_USBConfigureEndpoint 002F                      ?_USBCtrlTrfOutHandler 002E  
                              _ringbuf_pop 22A0                                _ringbuf_num 193E  
                              _ringbuf_put 202C                                _putUSBUSART 384A  
                      _USBCtrlTrfRxService 1544                                _timer0_init 3500  
                       _USBWakeFromSuspend 364C                                _timer1_init 335A  
                              _timer3_init 36AE                    _USBStdFeatureReqHandler 06E8  
                       _USBCheckCDCRequest 294A                        _USBCtrlTrfTxService 2100  
                          get_quot_rem@div 007B                            get_quot_rem@num 007D  
                               _RTCCFGbits 000F3F                                   sprintf@c 008C  
                                 sprintf@f 006E                                   strcat@cp 0064  
                                 strcat@to 0060                        ?_USBWakeFromSuspend 002E  
                         ___lldiv@quotient 0068                            ___lwmod@divisor 0069  
                        caltime_to_RTCC@tm 0069                          ??_caltime_to_RTCC 006B  
                    ??_USBCtrlTrfInHandler 002F                                   strcpy@cp 0064  
                                 strcpy@to 0060                      _USBAlternateInterface 00D4  
                          ___lwmod@counter 006B                        ?_USBCheckCDCRequest 002E  
                i2USBTransferOnePacket@dir 002E                  i2USBTransferOnePacket@len 0031  
                      USBEnableEndpoint@ep 0039                            _endpoint_number 002A  
                   __size_of_I2C_LCD_Clear 001A                       ?_USBCtrlTrfRxService 002E  
          epoch_to_caltime@day_since_epoch 0085                              ?_getsUSBUSART 0067  
                             _USB_CDC_init 3962                               _USB_CDC_send 386C  
                             _USB_CDC_task 1758                   ?_USBCtrlEPAllowDataStage 002E  
                     ?_USBCtrlTrfTxService 002E                                _USB_CDC_ISR 3988  
             _USBStatusStageTimeoutCounter 0027                      __size_of_I2C_LCD_Puts 008E  
                              _USB_CDC_get 3788                      __size_of_I2C_LCD_init 0090  
                     ??_USBWakeFromSuspend 0042                 USBTransferOnePacket@handle 0065  
                     __end_of_CDCTxService 0EF0                       ??_USBCheckCDCRequest 002E  
                               _USB_CD_Ptr FE7D                           ??_RTCC_from_RTCC 0088  
