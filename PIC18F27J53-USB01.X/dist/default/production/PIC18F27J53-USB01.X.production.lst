

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Jan 12 21:40:21 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   114                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   115                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   116                           	dabs	1,0xD00,48,_BDT
   117                           	dabs	1,0xD38,8,_CtrlTrfData
   118                           	dabs	1,0xD30,8,_SetupPkt
   119  0000                     
   120                           	psect	idataBANK0
   121  0139A2                     __pidataBANK0:
   122                           	opt stack 0
   123                           
   124                           ;initializer for I2C_LCD_SetCursor@F8685
   125  0139A2  00                 	db	0
   126  0139A3  40                 	db	64
   127                           
   128                           ;initializer for ST7032_cursor@F8640
   129  0139A4  00                 	db	0
   130  0139A5  40                 	db	64
   131                           
   132                           ;initializer for epoch_to_caltime@month_cache
   133  0139A6  01                 	db	1
   134                           
   135                           	psect	mediumconst
   136  00FE6C                     __pmediumconst:
   137                           	opt stack 0
   138  00FE6C  00                 	db	0
   139  00FE6D                     _dpowers:
   140                           	opt stack 0
   141  00FE6D  0001               	dw	1
   142  00FE6F  000A               	dw	10
   143  00FE71  0064               	dw	100
   144  00FE73  03E8               	dw	1000
   145  00FE75  2710               	dw	10000
   146  00FE77                     __end_of_dpowers:
   147                           	opt stack 0
   148  00FE77                     _USB_SD_Ptr:
   149                           	opt stack 0
   150  00FE77  58                 	db	low _sd000
   151  00FE78  FF                 	db	high _sd000
   152  00FE79  C2                 	db	low _sd001
   153  00FE7A  FE                 	db	high _sd001
   154  00FE7B  F6                 	db	low _sd002
   155  00FE7C  FE                 	db	high _sd002
   156  00FE7D                     __end_of_USB_SD_Ptr:
   157                           	opt stack 0
   158  00FE7D                     _USB_CD_Ptr:
   159                           	opt stack 0
   160  00FE7D  7F                 	db	low _configDescriptor1
   161  00FE7E  FE                 	db	high _configDescriptor1
   162  00FE7F                     __end_of_USB_CD_Ptr:
   163                           	opt stack 0
   164  00FE7F                     _configDescriptor1:
   165                           	opt stack 0
   166  00FE7F  09                 	db	9
   167  00FE80  02                 	db	2
   168  00FE81  43                 	db	67
   169  00FE82  00                 	db	0
   170  00FE83  02                 	db	2
   171  00FE84  01                 	db	1
   172  00FE85  00                 	db	0
   173  00FE86  C0                 	db	192
   174  00FE87  32                 	db	50
   175  00FE88  09                 	db	9
   176  00FE89  04                 	db	4
   177  00FE8A  00                 	db	0
   178  00FE8B  00                 	db	0
   179  00FE8C  01                 	db	1
   180  00FE8D  02                 	db	2
   181  00FE8E  02                 	db	2
   182  00FE8F  01                 	db	1
   183  00FE90  00                 	db	0
   184  00FE91  05                 	db	5
   185  00FE92  24                 	db	36
   186  00FE93  00                 	db	0
   187  00FE94  10                 	db	16
   188  00FE95  01                 	db	1
   189  00FE96  04                 	db	4
   190  00FE97  24                 	db	36
   191  00FE98  02                 	db	2
   192  00FE99  02                 	db	2
   193  00FE9A  05                 	db	5
   194  00FE9B  24                 	db	36
   195  00FE9C  06                 	db	6
   196  00FE9D  00                 	db	0
   197  00FE9E  01                 	db	1
   198  00FE9F  05                 	db	5
   199  00FEA0  24                 	db	36
   200  00FEA1  01                 	db	1
   201  00FEA2  00                 	db	0
   202  00FEA3  01                 	db	1
   203  00FEA4  07                 	db	7
   204  00FEA5  05                 	db	5
   205  00FEA6  81                 	db	129
   206  00FEA7  03                 	db	3
   207  00FEA8  08                 	db	8
   208  00FEA9  00                 	db	0
   209  00FEAA  02                 	db	2
   210  00FEAB  09                 	db	9
   211  00FEAC  04                 	db	4
   212  00FEAD  01                 	db	1
   213  00FEAE  00                 	db	0
   214  00FEAF  02                 	db	2
   215  00FEB0  0A                 	db	10
   216  00FEB1  00                 	db	0
   217  00FEB2  00                 	db	0
   218  00FEB3  00                 	db	0
   219  00FEB4  07                 	db	7
   220  00FEB5  05                 	db	5
   221  00FEB6  02                 	db	2
   222  00FEB7  02                 	db	2
   223  00FEB8  40                 	db	64
   224  00FEB9  00                 	db	0
   225  00FEBA  00                 	db	0
   226  00FEBB  07                 	db	7
   227  00FEBC  05                 	db	5
   228  00FEBD  82                 	db	130
   229  00FEBE  02                 	db	2
   230  00FEBF  40                 	db	64
   231  00FEC0  00                 	db	0
   232  00FEC1  00                 	db	0
   233  00FEC2                     __end_of_configDescriptor1:
   234                           	opt stack 0
   235  00FEC2                     _sd001:
   236                           	opt stack 0
   237  00FEC2  34                 	db	52
   238  00FEC3  03                 	db	3
   239  00FEC4  004D               	dw	77
   240  00FEC6  0069               	dw	105
   241  00FEC8  0063               	dw	99
   242  00FECA  0072               	dw	114
   243  00FECC  006F               	dw	111
   244  00FECE  0063               	dw	99
   245  00FED0  0068               	dw	104
   246  00FED2  0069               	dw	105
   247  00FED4  0070               	dw	112
   248  00FED6  0020               	dw	32
   249  00FED8  0054               	dw	84
   250  00FEDA  0065               	dw	101
   251  00FEDC  0063               	dw	99
   252  00FEDE  0068               	dw	104
   253  00FEE0  006E               	dw	110
   254  00FEE2  006F               	dw	111
   255  00FEE4  006C               	dw	108
   256  00FEE6  006F               	dw	111
   257  00FEE8  0067               	dw	103
   258  00FEEA  0079               	dw	121
   259  00FEEC  0020               	dw	32
   260  00FEEE  0049               	dw	73
   261  00FEF0  006E               	dw	110
   262  00FEF2  0063               	dw	99
   263  00FEF4  002E               	dw	46
   264  00FEF6                     __end_of_sd001:
   265                           	opt stack 0
   266  00FEF6                     _sd002:
   267                           	opt stack 0
   268  00FEF6  34                 	db	52
   269  00FEF7  03                 	db	3
   270  00FEF8  0043               	dw	67
   271  00FEFA  0044               	dw	68
   272  00FEFC  0043               	dw	67
   273  00FEFE  0020               	dw	32
   274  00FF00  0052               	dw	82
   275  00FF02  0053               	dw	83
   276  00FF04  002D               	dw	45
   277  00FF06  0032               	dw	50
   278  00FF08  0033               	dw	51
   279  00FF0A  0032               	dw	50
   280  00FF0C  0020               	dw	32
   281  00FF0E  0045               	dw	69
   282  00FF10  006D               	dw	109
   283  00FF12  0075               	dw	117
   284  00FF14  006C               	dw	108
   285  00FF16  0061               	dw	97
   286  00FF18  0074               	dw	116
   287  00FF1A  0069               	dw	105
   288  00FF1C  006F               	dw	111
   289  00FF1E  006E               	dw	110
   290  00FF20  0020               	dw	32
   291  00FF22  0044               	dw	68
   292  00FF24  0065               	dw	101
   293  00FF26  006D               	dw	109
   294  00FF28  006F               	dw	111
   295  00FF2A                     __end_of_sd002:
   296                           	opt stack 0
   297  00FF2A                     _weekday_3char:
   298                           	opt stack 0
   299  00FF2A  53                 	db	83
   300  00FF2B  55                 	db	85
   301  00FF2C  4E                 	db	78
   302  00FF2D  00                 	db	0
   303  00FF2E  4D                 	db	77
   304  00FF2F  4F                 	db	79
   305  00FF30  4E                 	db	78
   306  00FF31  00                 	db	0
   307  00FF32  54                 	db	84
   308  00FF33  55                 	db	85
   309  00FF34  45                 	db	69
   310  00FF35  00                 	db	0
   311  00FF36  57                 	db	87
   312  00FF37  45                 	db	69
   313  00FF38  44                 	db	68
   314  00FF39  00                 	db	0
   315  00FF3A  54                 	db	84
   316  00FF3B  48                 	db	72
   317  00FF3C  55                 	db	85
   318  00FF3D  00                 	db	0
   319  00FF3E  46                 	db	70
   320  00FF3F  52                 	db	82
   321  00FF40  49                 	db	73
   322  00FF41  00                 	db	0
   323  00FF42  53                 	db	83
   324  00FF43  41                 	db	65
   325  00FF44  54                 	db	84
   326  00FF45  00                 	db	0
   327  00FF46                     __end_of_weekday_3char:
   328                           	opt stack 0
   329  00FF46                     _device_dsc:
   330                           	opt stack 0
   331  00FF46  12                 	db	18
   332  00FF47  01                 	db	1
   333  00FF48  0200               	dw	512
   334  00FF4A  02                 	db	2
   335  00FF4B  00                 	db	0
   336  00FF4C  00                 	db	0
   337  00FF4D  08                 	db	8
   338  00FF4E  04D8               	dw	1240
   339  00FF50  000A               	dw	10
   340  00FF52  0100               	dw	256
   341  00FF54  01                 	db	1
   342  00FF55  02                 	db	2
   343  00FF56  00                 	db	0
   344  00FF57  01                 	db	1
   345  00FF58                     __end_of_device_dsc:
   346                           	opt stack 0
   347  00FF58                     _sd000:
   348                           	opt stack 0
   349  00FF58  04                 	db	4
   350  00FF59  03                 	db	3
   351  00FF5A  0409               	dw	1033
   352  00FF5C                     __end_of_sd000:
   353                           	opt stack 0
   354  0000                     _ANCON0	set	3912
   355  0000                     _ANCON1	set	3913
   356  0000                     _PADCFG1bits	set	3900
   357  0000                     _RTCCAL	set	3902
   358  0000                     _RTCCFGbits	set	3903
   359  0000                     _RTCVALH	set	3899
   360  0000                     _RTCVALL	set	3898
   361  0000                     _T5CONbits	set	3874
   362  0000                     _UADDR	set	3896
   363  0000                     _UCFG	set	3897
   364  0000                     _UEIE	set	3895
   365  0000                     _UEP0bits	set	3878
   366  0000                     _UIE	set	3894
   367  0000                     _UIEbits	set	3894
   368  0000                     _UEP0	set	3878
   369  0000                     _UEP1	set	3879
   370  0000                     _ADRES	set	4035
   371  0000                     _ADCON0bits	set	4034
   372  0000                     _ADCON1bits	set	4033
   373  0000                     _BAUDCON1bits	set	3966
   374  0000                     _CTMUCONH	set	4019
   375  0000                     _CTMUCONHbits	set	4019
   376  0000                     _CTMUCONL	set	4018
   377  0000                     _CTMUCONLbits	set	4018
   378  0000                     _CTMUICON	set	4017
   379  0000                     _EECON2	set	4007
   380  0000                     _INTCON2bits	set	4081
   381  0000                     _INTCONbits	set	4082
   382  0000                     _IPR1bits	set	3999
   383  0000                     _IPR2bits	set	4002
   384  0000                     _IPR5bits	set	3993
   385  0000                     _LATAbits	set	3977
   386  0000                     _LATBbits	set	3978
   387  0000                     _OSCCONbits	set	4051
   388  0000                     _OSCTUNEbits	set	3995
   389  0000                     _PIE1bits	set	3997
   390  0000                     _PIE2bits	set	4000
   391  0000                     _PIE5bits	set	3985
   392  0000                     _PIR1bits	set	3998
   393  0000                     _PIR2bits	set	4001
   394  0000                     _PIR5bits	set	3992
   395  0000                     _RCONbits	set	4048
   396  0000                     _RCREG1	set	4015
   397  0000                     _RCSTA1bits	set	4012
   398  0000                     _SPBRG1	set	4016
   399  0000                     _SPBRGH1	set	3967
   400  0000                     _SSP1ADD	set	4040
   401  0000                     _SSP1BUF	set	4041
   402  0000                     _SSP1CON1	set	4038
   403  0000                     _SSP1CON1bits	set	4038
   404  0000                     _SSP1CON2	set	4037
   405  0000                     _SSP1CON2bits	set	4037
   406  0000                     _SSP1STAT	set	4039
   407  0000                     _SSP1STATbits	set	4039
   408  0000                     _SSPBUF	set	4041
   409  0000                     _T0CONbits	set	4053
   410  0000                     _T1CONbits	set	4045
   411  0000                     _T3CONbits	set	3961
   412  0000                     _TMR1H	set	4047
   413  0000                     _TRISA	set	3986
   414  0000                     _TRISB	set	3987
   415  0000                     _TRISC	set	3988
   416  0000                     _TXREG1	set	4014
   417  0000                     _TXSTA1bits	set	4013
   418  0000                     _UCON	set	3941
   419  0000                     _UCONbits	set	3941
   420  0000                     _UEIR	set	3939
   421  0000                     _UIR	set	3938
   422  0000                     _UIRbits	set	3938
   423  0000                     _USTAT	set	3940
   424  0000                     _BCL1IF	set	32011
   425  0000                     _LATB2	set	31826
   426  0000                     _SSP1IF	set	31987
   427  00FF5C  09                 	db	9
   428  00FF5D  32                 	db	50	;'2'
   429  00FF5E  30                 	db	48	;'0'
   430  00FF5F  25                 	db	37
   431  00FF60  30                 	db	48	;'0'
   432  00FF61  32                 	db	50	;'2'
   433  00FF62  64                 	db	100	;'d'
   434  00FF63  2F                 	db	47
   435  00FF64  25                 	db	37
   436  00FF65  30                 	db	48	;'0'
   437  00FF66  32                 	db	50	;'2'
   438  00FF67  64                 	db	100	;'d'
   439  00FF68  2F                 	db	47
   440  00FF69  25                 	db	37
   441  00FF6A  30                 	db	48	;'0'
   442  00FF6B  32                 	db	50	;'2'
   443  00FF6C  64                 	db	100	;'d'
   444  00FF6D  28                 	db	40
   445  00FF6E  25                 	db	37
   446  00FF6F  73                 	db	115	;'s'
   447  00FF70  29                 	db	41
   448  00FF71  25                 	db	37
   449  00FF72  30                 	db	48	;'0'
   450  00FF73  32                 	db	50	;'2'
   451  00FF74  64                 	db	100	;'d'
   452  00FF75  3A                 	db	58	;':'
   453  00FF76  25                 	db	37
   454  00FF77  30                 	db	48	;'0'
   455  00FF78  32                 	db	50	;'2'
   456  00FF79  64                 	db	100	;'d'
   457  00FF7A  2D                 	db	45
   458  00FF7B  25                 	db	37
   459  00FF7C  30                 	db	48	;'0'
   460  00FF7D  32                 	db	50	;'2'
   461  00FF7E  64                 	db	100	;'d'
   462  00FF7F  0A                 	db	10
   463  00FF80  00                 	db	0
   464  00FF81  61                 	db	97	;'a'
   465  00FF82  64                 	db	100	;'d'
   466  00FF83  6A                 	db	106	;'j'
   467  00FF84  75                 	db	117	;'u'
   468  00FF85  73                 	db	115	;'s'
   469  00FF86  74                 	db	116	;'t'
   470  00FF87  5F                 	db	95	;'_'
   471  00FF88  74                 	db	116	;'t'
   472  00FF89  69                 	db	105	;'i'
   473  00FF8A  6D                 	db	109	;'m'
   474  00FF8B  65                 	db	101	;'e'
   475  00FF8C  00                 	db	0
   476  00FF8D  70                 	db	112	;'p'
   477  00FF8E  72                 	db	114	;'r'
   478  00FF8F  69                 	db	105	;'i'
   479  00FF90  6E                 	db	110	;'n'
   480  00FF91  74                 	db	116	;'t'
   481  00FF92  5F                 	db	95	;'_'
   482  00FF93  74                 	db	116	;'t'
   483  00FF94  69                 	db	105	;'i'
   484  00FF95  6D                 	db	109	;'m'
   485  00FF96  65                 	db	101	;'e'
   486  00FF97  00                 	db	0
   487  00FF98                     STR_17:
   488  00FF98  20                 	db	32
   489  00FF99  20                 	db	32
   490  00FF9A  20                 	db	32
   491  00FF9B  20                 	db	32
   492  00FF9C  20                 	db	32
   493  00FF9D  20                 	db	32
   494  00FF9E  20                 	db	32
   495  00FF9F  20                 	db	32
   496  00FFA0  00                 	db	0
   497  00FFA1                     STR_1:
   498  00FFA1  31                 	db	49	;'1'
   499  00FFA2  38                 	db	56	;'8'
   500  00FFA3  46                 	db	70	;'F'
   501  00FFA4  32                 	db	50	;'2'
   502  00FFA5  37                 	db	55	;'7'
   503  00FFA6  4A                 	db	74	;'J'
   504  00FFA7  35                 	db	53	;'5'
   505  00FFA8  33                 	db	51	;'3'
   506  00FFA9  00                 	db	0
   507  00FFAA                     STR_2:
   508  00FFAA  55                 	db	85	;'U'
   509  00FFAB  53                 	db	83	;'S'
   510  00FFAC  42                 	db	66	;'B'
   511  00FFAD  20                 	db	32
   512  00FFAE  55                 	db	85	;'U'
   513  00FFAF  41                 	db	65	;'A'
   514  00FFB0  52                 	db	82	;'R'
   515  00FFB1  54                 	db	84	;'T'
   516  00FFB2  00                 	db	0
   517  00FFB3  09                 	db	9
   518  00FFB4  65                 	db	101	;'e'
   519  00FFB5  72                 	db	114	;'r'
   520  00FFB6  72                 	db	114	;'r'
   521  00FFB7  6F                 	db	111	;'o'
   522  00FFB8  72                 	db	114	;'r'
   523  00FFB9  0A                 	db	10
   524  00FFBA  00                 	db	0
   525  00FFBB                     STR_43:
   526  00FFBB  28                 	db	40
   527  00FFBC  6E                 	db	110	;'n'
   528  00FFBD  75                 	db	117	;'u'
   529  00FFBE  6C                 	db	108	;'l'
   530  00FFBF  6C                 	db	108	;'l'
   531  00FFC0  29                 	db	41
   532  00FFC1  00                 	db	0
   533  00FFC2  73                 	db	115	;'s'
   534  00FFC3  65                 	db	101	;'e'
   535  00FFC4  63                 	db	99	;'c'
   536  00FFC5  6F                 	db	111	;'o'
   537  00FFC6  6E                 	db	110	;'n'
   538  00FFC7  64                 	db	100	;'d'
   539  00FFC8  00                 	db	0
   540  00FFC9  6D                 	db	109	;'m'
   541  00FFCA  69                 	db	105	;'i'
   542  00FFCB  6E                 	db	110	;'n'
   543  00FFCC  75                 	db	117	;'u'
   544  00FFCD  74                 	db	116	;'t'
   545  00FFCE  65                 	db	101	;'e'
   546  00FFCF  00                 	db	0
   547  00FFD0                     STR_34:
   548  00FFD0  6D                 	db	109	;'m'
   549  00FFD1  6F                 	db	111	;'o'
   550  00FFD2  6E                 	db	110	;'n'
   551  00FFD3  74                 	db	116	;'t'
   552  00FFD4  68                 	db	104	;'h'
   553  00FFD5  00                 	db	0
   554  00FFD6  79                 	db	121	;'y'
   555  00FFD7  65                 	db	101	;'e'
   556  00FFD8  61                 	db	97	;'a'
   557  00FFD9  72                 	db	114	;'r'
   558  00FFDA  00                 	db	0
   559  00FFDB  68                 	db	104	;'h'
   560  00FFDC  6F                 	db	111	;'o'
   561  00FFDD  75                 	db	117	;'u'
   562  00FFDE  72                 	db	114	;'r'
   563  00FFDF  00                 	db	0
   564  00FFE0                     STR_3:
   565  00FFE0  25                 	db	37
   566  00FFE1  30                 	db	48	;'0'
   567  00FFE2  32                 	db	50	;'2'
   568  00FFE3  64                 	db	100	;'d'
   569  00FFE4  00                 	db	0
   570  00FFE5                     STR_21:
   571  00FFE5  08                 	db	8
   572  00FFE6  20                 	db	32
   573  00FFE7  08                 	db	8
   574  00FFE8  00                 	db	0
   575  00FFE9                     STR_36:
   576  00FFE9  64                 	db	100	;'d'
   577  00FFEA  61                 	db	97	;'a'
   578  00FFEB  79                 	db	121	;'y'
   579  00FFEC  00                 	db	0
   580  00FFED                     STR_29:
   581  00FFED  61                 	db	97	;'a'
   582  00FFEE  74                 	db	116	;'t'
   583  00FFEF  00                 	db	0
   584  00FFF0  4D                 	db	77	;'M'
   585  00FFF1  00                 	db	0
   586  00FFF2  6D                 	db	109	;'m'
   587  00FFF3  00                 	db	0
   588  00FFF4  73                 	db	115	;'s'
   589  00FFF5  00                 	db	0
   590  00FFF6  28                 	db	40
   591  00FFF7  00                 	db	0
   592  00FFF8                     STR_11:
   593  00FFF8  2D                 	db	45
   594  00FFF9  00                 	db	0
   595  00FFFA                     STR_6:
   596  00FFFA  2F                 	db	47
   597  00FFFB  00                 	db	0
   598  00FFFC                     STR_9:
   599  00FFFC  3A                 	db	58	;':'
   600  00FFFD  00                 	db	0
   601  0000                     
   602                           ; #config settings
   603  00FFFE  00                 	db	0	; dummy byte at the end
   604  0000                     
   605                           	psect	cinit
   606  012D02                     __pcinit:
   607                           	opt stack 0
   608  012D02                     start_initialization:
   609                           	opt stack 0
   610  012D02                     __initialization:
   611                           	opt stack 0
   612                           
   613                           ; Clear objects allocated to BIGRAMl (1600 bytes)
   614  012D02  EE05  F0FA         	lfsr	0,__pbssBIGRAMl
   615  012D06  EE16 F040          	lfsr	1,1600
   616  012D0A                     clear_0:
   617  012D0A  6AEE               	clrf	postinc0,c
   618  012D0C  50E5               	movf	postdec1,w,c
   619  012D0E  50E1               	movf	fsr1l,w,c
   620  012D10  E1FC               	bnz	clear_0
   621  012D12  50E2               	movf	fsr1h,w,c
   622  012D14  E1FA               	bnz	clear_0
   623                           
   624                           ; Clear objects allocated to BANK5 (250 bytes)
   625  012D16  EE05  F000         	lfsr	0,__pbssBANK5
   626  012D1A  0EFA               	movlw	250
   627  012D1C                     clear_1:
   628  012D1C  6AEE               	clrf	postinc0,c
   629  012D1E  06E8               	decf	wreg,f,c
   630  012D20  E1FD               	bnz	clear_1
   631                           
   632                           ; Clear objects allocated to BANK4 (250 bytes)
   633  012D22  EE04  F000         	lfsr	0,__pbssBANK4
   634  012D26  0EFA               	movlw	250
   635  012D28                     clear_2:
   636  012D28  6AEE               	clrf	postinc0,c
   637  012D2A  06E8               	decf	wreg,f,c
   638  012D2C  E1FD               	bnz	clear_2
   639                           
   640                           ; Clear objects allocated to BANK3 (200 bytes)
   641  012D2E  EE03  F000         	lfsr	0,__pbssBANK3
   642  012D32  0EC8               	movlw	200
   643  012D34                     clear_3:
   644  012D34  6AEE               	clrf	postinc0,c
   645  012D36  06E8               	decf	wreg,f,c
   646  012D38  E1FD               	bnz	clear_3
   647                           
   648                           ; Clear objects allocated to BANK2 (192 bytes)
   649  012D3A  EE02  F000         	lfsr	0,__pbssBANK2
   650  012D3E  0EC0               	movlw	192
   651  012D40                     clear_4:
   652  012D40  6AEE               	clrf	postinc0,c
   653  012D42  06E8               	decf	wreg,f,c
   654  012D44  E1FD               	bnz	clear_4
   655                           
   656                           ; Clear objects allocated to BANK1 (243 bytes)
   657  012D46  EE01  F000         	lfsr	0,__pbssBANK1
   658  012D4A  0EF3               	movlw	243
   659  012D4C                     clear_5:
   660  012D4C  6AEE               	clrf	postinc0,c
   661  012D4E  06E8               	decf	wreg,f,c
   662  012D50  E1FD               	bnz	clear_5
   663                           
   664                           ; Clear objects allocated to BANK0 (57 bytes)
   665  012D52  EE00  F09E         	lfsr	0,__pbssBANK0
   666  012D56  0E39               	movlw	57
   667  012D58                     clear_6:
   668  012D58  6AEE               	clrf	postinc0,c
   669  012D5A  06E8               	decf	wreg,f,c
   670  012D5C  E1FD               	bnz	clear_6
   671                           
   672                           ; Clear objects allocated to COMRAM (45 bytes)
   673  012D5E  EE00  F001         	lfsr	0,__pbssCOMRAM
   674  012D62  0E2D               	movlw	45
   675  012D64                     clear_7:
   676  012D64  6AEE               	clrf	postinc0,c
   677  012D66  06E8               	decf	wreg,f,c
   678  012D68  E1FD               	bnz	clear_7
   679                           
   680                           ; Initialize objects allocated to BANK0 (5 bytes)
   681                           ; load TBLPTR registers with __pidataBANK0
   682  012D6A  0EA2               	movlw	low __pidataBANK0
   683  012D6C  6EF6               	movwf	tblptrl,c
   684  012D6E  0E39               	movlw	high __pidataBANK0
   685  012D70  6EF7               	movwf	tblptrh,c
   686  012D72  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   687  012D74  6EF8               	movwf	tblptru,c
   688  012D76  EE00  F0D7         	lfsr	0,__pdataBANK0
   689  012D7A  EE10 F005          	lfsr	1,5
   690  012D7E                     copy_data0:
   691  012D7E  0009               	tblrd		*+
   692  012D80  CFF5 FFEE          	movff	tablat,postinc0
   693  012D84  50E5               	movf	postdec1,w,c
   694  012D86  50E1               	movf	fsr1l,w,c
   695  012D88  E1FA               	bnz	copy_data0
   696  012D8A                     end_of_initialization:
   697                           	opt stack 0
   698  012D8A                     __end_of__initialization:
   699                           	opt stack 0
   700  012D8A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   701  012D8C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   702  012D8E  0100               	movlb	0
   703  012D90  EF7A  F087         	goto	_main	;jump to C main() function
   704                           tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           postdec1	equ	0xFE5
   711                           fsr1h	equ	0xFE2
   712                           fsr1l	equ	0xFE1
   713                           
   714                           	psect	bssCOMRAM
   715  000001                     __pbssCOMRAM:
   716                           	opt stack 0
   717  000001                     _outPipes:
   718                           	opt stack 0
   719  000001                     	ds	9
   720  00000A                     _inPipes:
   721                           	opt stack 0
   722  00000A                     	ds	6
   723  000010                     _pBDTEntryIn:
   724                           	opt stack 0
   725  000010                     	ds	6
   726  000016                     _ep_data_in:
   727                           	opt stack 0
   728  000016                     	ds	3
   729  000019                     _ep_data_out:
   730                           	opt stack 0
   731  000019                     	ds	3
   732  00001C                     _pBDTEntryEP0OutCurrent:
   733                           	opt stack 0
   734  00001C                     	ds	2
   735  00001E                     _pBDTEntryEP0OutNext:
   736                           	opt stack 0
   737  00001E                     	ds	2
   738  000020                     _BothEP0OutUOWNsSet:
   739                           	opt stack 0
   740  000020                     	ds	1
   741  000021                     _I2C_sent_flag:
   742                           	opt stack 0
   743  000021                     	ds	1
   744  000022                     _RemoteWakeup:
   745                           	opt stack 0
   746  000022                     	ds	1
   747  000023                     _USBDeferINDataStagePackets:
   748                           	opt stack 0
   749  000023                     	ds	1
   750  000024                     _USBDeferOUTDataStagePackets:
   751                           	opt stack 0
   752  000024                     	ds	1
   753  000025                     _USBDeferStatusStagePacket:
   754                           	opt stack 0
   755  000025                     	ds	1
   756  000026                     _USBStatusStageEnabledFlag1:
   757                           	opt stack 0
   758  000026                     	ds	1
   759  000027                     _USBStatusStageEnabledFlag2:
   760                           	opt stack 0
   761  000027                     	ds	1
   762  000028                     _USBStatusStageTimeoutCounter:
   763                           	opt stack 0
   764  000028                     	ds	1
   765  000029                     _controlTransferState:
   766                           	opt stack 0
   767  000029                     	ds	1
   768  00002A                     _endpoint_number:
   769                           	opt stack 0
   770  00002A                     	ds	1
   771  00002B                     _shortPacketStatus:
   772                           	opt stack 0
   773  00002B                     	ds	1
   774  00002C                     _USBActiveConfiguration:
   775                           	opt stack 0
   776  00002C                     	ds	1
   777  00002D                     _USTATcopy:
   778                           	opt stack 0
   779  00002D                     	ds	1
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           postinc0	equ	0xFEE
   785                           wreg	equ	0xFE8
   786                           postdec1	equ	0xFE5
   787                           fsr1h	equ	0xFE2
   788                           fsr1l	equ	0xFE1
   789                           
   790                           	psect	bssBANK0
   791  00009E                     __pbssBANK0:
   792                           	opt stack 0
   793  00009E                     _pBDTEntryOut:
   794                           	opt stack 0
   795  00009E                     	ds	6
   796  0000A4                     _pCDCDst:
   797                           	opt stack 0
   798  0000A4                     	ds	3
   799  0000A7                     _pCDCSrc:
   800                           	opt stack 0
   801  0000A7                     	ds	3
   802  0000AA                     ST7032_task@wait:
   803                           	opt stack 0
   804  0000AA                     	ds	2
   805  0000AC                     _CDCDataInHandle:
   806                           	opt stack 0
   807  0000AC                     	ds	2
   808  0000AE                     _CDCDataOutHandle:
   809                           	opt stack 0
   810  0000AE                     	ds	2
   811  0000B0                     _pDst:
   812                           	opt stack 0
   813  0000B0                     	ds	2
   814  0000B2                     epoch_to_caltime@day_cache:
   815                           	opt stack 0
   816  0000B2                     	ds	2
   817  0000B4                     millis_timer@cnt:
   818                           	opt stack 0
   819  0000B4                     	ds	2
   820  0000B6                     RTCC_task@prev_halfsec:
   821                           	opt stack 0
   822  0000B6                     	ds	1
   823  0000B7                     ST7032_task@st7032_state:
   824                           	opt stack 0
   825  0000B7                     	ds	1
   826  0000B8                     _I2C_busy:
   827                           	opt stack 0
   828  0000B8                     	ds	1
   829  0000B9                     _I2C_cfct_flag:
   830                           	opt stack 0
   831  0000B9                     	ds	1
   832  0000BA                     _USBBusIsSuspended:
   833                           	opt stack 0
   834  0000BA                     	ds	1
   835  0000BB                     _USBDeviceState:
   836                           	opt stack 0
   837  0000BB                     	ds	1
   838  0000BC                     _cdc_mem_type:
   839                           	opt stack 0
   840  0000BC                     	ds	1
   841  0000BD                     _cdc_rx_len:
   842                           	opt stack 0
   843  0000BD                     	ds	1
   844  0000BE                     _cdc_trf_state:
   845                           	opt stack 0
   846  0000BE                     	ds	1
   847  0000BF                     _cdc_tx_len:
   848                           	opt stack 0
   849  0000BF                     	ds	1
   850  0000C0                     _control_signal_bitmap:
   851                           	opt stack 0
   852  0000C0                     	ds	1
   853  0000C1                     _st7032_state:
   854                           	opt stack 0
   855  0000C1                     	ds	1
   856  0000C2                     _time_change_flag:
   857                           	opt stack 0
   858  0000C2                     	ds	1
   859  0000C3                     epoch_to_caltime@year_cache:
   860                           	opt stack 0
   861  0000C3                     	ds	1
   862  0000C4                     terminal_task@command_init:
   863                           	opt stack 0
   864  0000C4                     	ds	1
   865  0000C5                     _lcd_tx:
   866                           	opt stack 0
   867  0000C5                     	ds	8
   868  0000CD                     terminal_task@command:
   869                           	opt stack 0
   870  0000CD                     	ds	8
   871  0000D5                     _USBAlternateInterface:
   872                           	opt stack 0
   873  0000D5                     	ds	2
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           postinc0	equ	0xFEE
   879                           wreg	equ	0xFE8
   880                           postdec1	equ	0xFE5
   881                           fsr1h	equ	0xFE2
   882                           fsr1l	equ	0xFE1
   883                           
   884                           	psect	dataBANK0
   885  0000D7                     __pdataBANK0:
   886                           	opt stack 0
   887  0000D7                     I2C_LCD_SetCursor@F8685:
   888                           	opt stack 0
   889  0000D7                     	ds	2
   890  0000D9                     ST7032_cursor@F8640:
   891                           	opt stack 0
   892  0000D9                     	ds	2
   893  0000DB                     epoch_to_caltime@month_cache:
   894                           	opt stack 0
   895  0000DB                     	ds	1
   896                           tblptru	equ	0xFF8
   897                           tblptrh	equ	0xFF7
   898                           tblptrl	equ	0xFF6
   899                           tablat	equ	0xFF5
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           postdec1	equ	0xFE5
   903                           fsr1h	equ	0xFE2
   904                           fsr1l	equ	0xFE1
   905                           
   906                           	psect	bssBANK1
   907  000100                     __pbssBANK1:
   908                           	opt stack 0
   909  000100                     _cdc_notice:
   910                           	opt stack 0
   911  000100                     	ds	10
   912  00010A                     _BaudRateGen:
   913                           	opt stack 0
   914  00010A                     	ds	4
   915  00010E                     _ms:
   916                           	opt stack 0
   917  00010E                     	ds	4
   918  000112                     _cdc_data_rx:
   919                           	opt stack 0
   920  000112                     	ds	64
   921  000152                     terminal_task@op0:
   922                           	opt stack 0
   923  000152                     	ds	25
   924  00016B                     terminal_task@op1:
   925                           	opt stack 0
   926  00016B                     	ds	25
   927  000184                     terminal_task@op2:
   928                           	opt stack 0
   929  000184                     	ds	25
   930  00019D                     terminal_task@op3:
   931                           	opt stack 0
   932  00019D                     	ds	25
   933  0001B6                     _now:
   934                           	opt stack 0
   935  0001B6                     	ds	14
   936  0001C4                     _dummy_encapsulated_cmd_response:
   937                           	opt stack 0
   938  0001C4                     	ds	8
   939  0001CC                     _uart_rx:
   940                           	opt stack 0
   941  0001CC                     	ds	8
   942  0001D4                     _uart_tx:
   943                           	opt stack 0
   944  0001D4                     	ds	8
   945  0001DC                     _usb_rx:
   946                           	opt stack 0
   947  0001DC                     	ds	8
   948  0001E4                     _usb_tx:
   949                           	opt stack 0
   950  0001E4                     	ds	8
   951  0001EC                     _line_coding:
   952                           	opt stack 0
   953  0001EC                     	ds	7
   954                           tblptru	equ	0xFF8
   955                           tblptrh	equ	0xFF7
   956                           tblptrl	equ	0xFF6
   957                           tablat	equ	0xFF5
   958                           postinc0	equ	0xFEE
   959                           wreg	equ	0xFE8
   960                           postdec1	equ	0xFE5
   961                           fsr1h	equ	0xFE2
   962                           fsr1l	equ	0xFE1
   963                           
   964                           	psect	bssBANK2
   965  000200                     __pbssBANK2:
   966                           	opt stack 0
   967  000200                     _cdc_data_tx:
   968                           	opt stack 0
   969  000200                     	ds	64
   970  000240                     _readBuffer:
   971                           	opt stack 0
   972  000240                     	ds	64
   973  000280                     _writeBuffer:
   974                           	opt stack 0
   975  000280                     	ds	64
   976                           tblptru	equ	0xFF8
   977                           tblptrh	equ	0xFF7
   978                           tblptrl	equ	0xFF6
   979                           tablat	equ	0xFF5
   980                           postinc0	equ	0xFEE
   981                           wreg	equ	0xFE8
   982                           postdec1	equ	0xFE5
   983                           fsr1h	equ	0xFE2
   984                           fsr1l	equ	0xFE1
   985                           
   986                           	psect	bssBANK3
   987  000300                     __pbssBANK3:
   988                           	opt stack 0
   989  000300                     ST7032_init@buf:
   990                           	opt stack 0
   991  000300                     	ds	200
   992                           tblptru	equ	0xFF8
   993                           tblptrh	equ	0xFF7
   994                           tblptrl	equ	0xFF6
   995                           tablat	equ	0xFF5
   996                           postinc0	equ	0xFEE
   997                           wreg	equ	0xFE8
   998                           postdec1	equ	0xFE5
   999                           fsr1h	equ	0xFE2
  1000                           fsr1l	equ	0xFE1
  1001                           
  1002                           	psect	bssBANK4
  1003  000400                     __pbssBANK4:
  1004                           	opt stack 0
  1005  000400                     UART_buffer_init@uartrx:
  1006                           	opt stack 0
  1007  000400                     	ds	250
  1008                           tblptru	equ	0xFF8
  1009                           tblptrh	equ	0xFF7
  1010                           tblptrl	equ	0xFF6
  1011                           tablat	equ	0xFF5
  1012                           postinc0	equ	0xFEE
  1013                           wreg	equ	0xFE8
  1014                           postdec1	equ	0xFE5
  1015                           fsr1h	equ	0xFE2
  1016                           fsr1l	equ	0xFE1
  1017                           
  1018                           	psect	bssBANK5
  1019  000500                     __pbssBANK5:
  1020                           	opt stack 0
  1021  000500                     USB_CDC_buffer_init@rxbuf:
  1022                           	opt stack 0
  1023  000500                     	ds	250
  1024                           tblptru	equ	0xFF8
  1025                           tblptrh	equ	0xFF7
  1026                           tblptrl	equ	0xFF6
  1027                           tablat	equ	0xFF5
  1028                           postinc0	equ	0xFEE
  1029                           wreg	equ	0xFE8
  1030                           postdec1	equ	0xFE5
  1031                           fsr1h	equ	0xFE2
  1032                           fsr1l	equ	0xFE1
  1033                           
  1034                           	psect	bssBIGRAMl
  1035  0005FA                     __pbssBIGRAMl:
  1036                           	opt stack 0
  1037  0005FA                     UART_buffer_init@uarttx:
  1038                           	opt stack 0
  1039  0005FA                     	ds	800
  1040  00091A                     USB_CDC_buffer_init@txbuf:
  1041                           	opt stack 0
  1042  00091A                     	ds	800
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           postdec1	equ	0xFE5
  1050                           fsr1h	equ	0xFE2
  1051                           fsr1l	equ	0xFE1
  1052                           
  1053                           	psect	cstackBANK2
  1054  0002C0                     __pcstackBANK2:
  1055                           	opt stack 0
  1056  0002C0                     main@s:
  1057                           	opt stack 0
  1058                           
  1059                           ; 40 bytes @ 0x0
  1060  0002C0                     	ds	40
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           postdec1	equ	0xFE5
  1068                           fsr1h	equ	0xFE2
  1069                           fsr1l	equ	0xFE1
  1070                           
  1071                           	psect	cstackBANK0
  1072  000060                     __pcstackBANK0:
  1073                           	opt stack 0
  1074  000060                     ??_timer0_init:
  1075  000060                     ??_timer3_init:
  1076  000060                     ??_isdigit:
  1077  000060                     ??_I2C_IdleCheck:
  1078  000060                     ??_x_to_d:
  1079  000060                     ?_ringbuf_num:
  1080                           	opt stack 0
  1081  000060                     ?_USBTransferOnePacket:
  1082                           	opt stack 0
  1083  000060                     ?___wmul:
  1084                           	opt stack 0
  1085  000060                     ?___awdiv:
  1086                           	opt stack 0
  1087  000060                     ?___awmod:
  1088                           	opt stack 0
  1089  000060                     ?___lwdiv:
  1090                           	opt stack 0
  1091  000060                     ?___lldiv:
  1092                           	opt stack 0
  1093  000060                     timer1_init@clock_select:
  1094                           	opt stack 0
  1095  000060                     USBTransferOnePacket@dir:
  1096                           	opt stack 0
  1097  000060                     ringbuf_init@rb:
  1098                           	opt stack 0
  1099  000060                     ringbuf_num@rb:
  1100                           	opt stack 0
  1101  000060                     putUSBUSART@data:
  1102                           	opt stack 0
  1103  000060                     ___wmul@multiplier:
  1104                           	opt stack 0
  1105  000060                     ___awdiv@dividend:
  1106                           	opt stack 0
  1107  000060                     ___awmod@dividend:
  1108                           	opt stack 0
  1109  000060                     ___lwdiv@dividend:
  1110                           	opt stack 0
  1111  000060                     memset@p1:
  1112                           	opt stack 0
  1113  000060                     strcat@to:
  1114                           	opt stack 0
  1115  000060                     strcpy@to:
  1116                           	opt stack 0
  1117  000060                     ___lldiv@dividend:
  1118                           	opt stack 0
  1119                           
  1120                           ; 4 bytes @ 0x0
  1121  000060                     	ds	1
  1122  000061                     ??_timer1_init:
  1123  000061                     I2C_IdleCheck@mask:
  1124                           	opt stack 0
  1125  000061                     timer0_init@prescaler:
  1126                           	opt stack 0
  1127  000061                     timer3_init@prescaler:
  1128                           	opt stack 0
  1129  000061                     x_to_d@hex:
  1130                           	opt stack 0
  1131  000061                     _isdigit$5977:
  1132                           	opt stack 0
  1133  000061                     USBTransferOnePacket@data:
  1134                           	opt stack 0
  1135                           
  1136                           ; 2 bytes @ 0x1
  1137  000061                     	ds	1
  1138  000062                     ??_ringbuf_num:
  1139  000062                     I2C_Start@rw:
  1140                           	opt stack 0
  1141  000062                     I2C_Send@data:
  1142                           	opt stack 0
  1143  000062                     timer1_init@prescaler:
  1144                           	opt stack 0
  1145  000062                     putUSBUSART@length:
  1146                           	opt stack 0
  1147  000062                     isdigit@c:
  1148                           	opt stack 0
  1149  000062                     ringbuf_init@internal_buf:
  1150                           	opt stack 0
  1151  000062                     RTCC_to_caltime@tm:
  1152                           	opt stack 0
  1153  000062                     ___wmul@multiplicand:
  1154                           	opt stack 0
  1155  000062                     ___awdiv@divisor:
  1156                           	opt stack 0
  1157  000062                     ___awmod@divisor:
  1158                           	opt stack 0
  1159  000062                     ___lwdiv@divisor:
  1160                           	opt stack 0
  1161  000062                     memset@c:
  1162                           	opt stack 0
  1163  000062                     strcat@from:
  1164                           	opt stack 0
  1165  000062                     strcpy@from:
  1166                           	opt stack 0
  1167                           
  1168                           ; 2 bytes @ 0x2
  1169  000062                     	ds	1
  1170  000063                     I2C_Start@adrs:
  1171                           	opt stack 0
  1172  000063                     USBTransferOnePacket@len:
  1173                           	opt stack 0
  1174                           
  1175                           ; 1 bytes @ 0x3
  1176  000063                     	ds	1
  1177  000064                     RTCC_to_caltime@dumy:
  1178                           	opt stack 0
  1179  000064                     I2C_LCD_Command@c:
  1180                           	opt stack 0
  1181  000064                     USBTransferOnePacket@ep:
  1182                           	opt stack 0
  1183  000064                     ___awdiv@counter:
  1184                           	opt stack 0
  1185  000064                     ___awmod@counter:
  1186                           	opt stack 0
  1187  000064                     ___lwdiv@counter:
  1188                           	opt stack 0
  1189  000064                     ringbuf_init@bufsize:
  1190                           	opt stack 0
  1191  000064                     I2C_LCD_Puts@s:
  1192                           	opt stack 0
  1193  000064                     ___wmul@product:
  1194                           	opt stack 0
  1195  000064                     memset@n:
  1196                           	opt stack 0
  1197  000064                     strcat@cp:
  1198                           	opt stack 0
  1199  000064                     strcpy@cp:
  1200                           	opt stack 0
  1201  000064                     ___lldiv@divisor:
  1202                           	opt stack 0
  1203                           
  1204                           ; 4 bytes @ 0x4
  1205  000064                     	ds	1
  1206  000065                     I2C_LCD_Command@ans:
  1207                           	opt stack 0
  1208  000065                     ___awdiv@sign:
  1209                           	opt stack 0
  1210  000065                     ___awmod@sign:
  1211                           	opt stack 0
  1212  000065                     USBTransferOnePacket@handle:
  1213                           	opt stack 0
  1214  000065                     ___lwdiv@quotient:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x5
  1218  000065                     	ds	1
  1219  000066                     ??_I2C_LCD_Clear:
  1220  000066                     ??_I2C_LCD_Puts:
  1221  000066                     month_length@month:
  1222                           	opt stack 0
  1223  000066                     I2C_LCD_SetCursor@row:
  1224                           	opt stack 0
  1225  000066                     ___awdiv@quotient:
  1226                           	opt stack 0
  1227  000066                     memset@p:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x6
  1231  000066                     	ds	1
  1232  000067                     ??_I2C_LCD_init:
  1233  000067                     ??_CDCTxService:
  1234  000067                     ??_month_length:
  1235  000067                     ?___lwmod:
  1236                           	opt stack 0
  1237  000067                     I2C_LCD_SetCursor@row_offsets:
  1238                           	opt stack 0
  1239  000067                     I2C_LCD_Puts@ans:
  1240                           	opt stack 0
  1241  000067                     getsUSBUSART@buffer:
  1242                           	opt stack 0
  1243  000067                     ___lwmod@dividend:
  1244                           	opt stack 0
  1245                           
  1246                           ; 2 bytes @ 0x7
  1247  000067                     	ds	1
  1248  000068                     d_to_x@dec:
  1249                           	opt stack 0
  1250  000068                     I2C_LCD_init@i:
  1251                           	opt stack 0
  1252  000068                     USBDeviceInit@i:
  1253                           	opt stack 0
  1254  000068                     ringbuf_pop@rb:
  1255                           	opt stack 0
  1256  000068                     _CDCTxService$5724:
  1257                           	opt stack 0
  1258  000068                     ___lldiv@quotient:
  1259                           	opt stack 0
  1260                           
  1261                           ; 4 bytes @ 0x8
  1262  000068                     	ds	1
  1263  000069                     I2C_LCD_SetCursor@col:
  1264                           	opt stack 0
  1265  000069                     I2C_LCD_init@i_3143:
  1266                           	opt stack 0
  1267  000069                     getsUSBUSART@len:
  1268                           	opt stack 0
  1269  000069                     caltime_to_RTCC@tm:
  1270                           	opt stack 0
  1271  000069                     ___lwmod@divisor:
  1272                           	opt stack 0
  1273                           
  1274                           ; 2 bytes @ 0x9
  1275  000069                     	ds	1
  1276  00006A                     ??_ringbuf_pop:
  1277  00006A                     ??_getsUSBUSART:
  1278  00006A                     CDCTxService@i:
  1279                           	opt stack 0
  1280                           
  1281                           ; 1 bytes @ 0xA
  1282  00006A                     	ds	1
  1283  00006B                     month_length@year:
  1284                           	opt stack 0
  1285  00006B                     CDCTxService@byte_to_send:
  1286                           	opt stack 0
  1287  00006B                     ___lwmod@counter:
  1288                           	opt stack 0
  1289  00006B                     _getsUSBUSART$5676:
  1290                           	opt stack 0
  1291                           
  1292                           ; 2 bytes @ 0xB
  1293  00006B                     	ds	1
  1294  00006C                     ?_sprintf:
  1295                           	opt stack 0
  1296  00006C                     ___lldiv@counter:
  1297                           	opt stack 0
  1298  00006C                     USB_CDC_send@length:
  1299                           	opt stack 0
  1300  00006C                     sprintf@sp:
  1301                           	opt stack 0
  1302                           
  1303                           ; 2 bytes @ 0xC
  1304  00006C                     	ds	1
  1305  00006D                     ?___lmul:
  1306                           	opt stack 0
  1307  00006D                     USB_CDC_get@numBytesRead:
  1308                           	opt stack 0
  1309  00006D                     ___lmul@multiplier:
  1310                           	opt stack 0
  1311                           
  1312                           ; 4 bytes @ 0xD
  1313  00006D                     	ds	1
  1314  00006E                     ringbuf_pop@ret:
  1315                           	opt stack 0
  1316  00006E                     sprintf@f:
  1317                           	opt stack 0
  1318                           
  1319                           ; 2 bytes @ 0xE
  1320  00006E                     	ds	1
  1321  00006F                     ringbuf_put@rb:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0xF
  1325  00006F                     	ds	2
  1326  000071                     ringbuf_put@data:
  1327                           	opt stack 0
  1328  000071                     ___lmul@multiplicand:
  1329                           	opt stack 0
  1330                           
  1331                           ; 4 bytes @ 0x11
  1332  000071                     	ds	1
  1333  000072                     ??_ringbuf_put:
  1334                           
  1335                           ; 0 bytes @ 0x12
  1336  000072                     	ds	3
  1337  000075                     ___lmul@product:
  1338                           	opt stack 0
  1339                           
  1340                           ; 4 bytes @ 0x15
  1341  000075                     	ds	1
  1342  000076                     ??_USB_CDC_task:
  1343                           
  1344                           ; 0 bytes @ 0x16
  1345  000076                     	ds	1
  1346  000077                     USB_CDC_task@i:
  1347                           	opt stack 0
  1348                           
  1349                           ; 2 bytes @ 0x17
  1350  000077                     	ds	2
  1351  000079                     ?_get_quot_rem:
  1352                           	opt stack 0
  1353  000079                     get_quot_rem@quot:
  1354                           	opt stack 0
  1355  000079                     caltime_to_epoch@tm:
  1356                           	opt stack 0
  1357  000079                     USB_CDC_task@length:
  1358                           	opt stack 0
  1359                           
  1360                           ; 2 bytes @ 0x19
  1361  000079                     	ds	2
  1362  00007B                     ??_caltime_to_epoch:
  1363  00007B                     get_quot_rem@div:
  1364                           	opt stack 0
  1365                           
  1366                           ; 1 bytes @ 0x1B
  1367  00007B                     	ds	2
  1368  00007D                     get_quot_rem@num:
  1369                           	opt stack 0
  1370                           
  1371                           ; 4 bytes @ 0x1D
  1372  00007D                     	ds	1
  1373  00007E                     ??_sprintf:
  1374                           
  1375                           ; 0 bytes @ 0x1E
  1376  00007E                     	ds	1
  1377  00007F                     caltime_to_epoch@year:
  1378                           	opt stack 0
  1379                           
  1380                           ; 1 bytes @ 0x1F
  1381  00007F                     	ds	1
  1382  000080                     caltime_to_epoch@month_2681:
  1383                           	opt stack 0
  1384                           
  1385                           ; 1 bytes @ 0x20
  1386  000080                     	ds	1
  1387  000081                     epoch_to_caltime@tm:
  1388                           	opt stack 0
  1389  000081                     caltime_to_epoch@epoch:
  1390                           	opt stack 0
  1391                           
  1392                           ; 4 bytes @ 0x21
  1393  000081                     	ds	1
  1394  000082                     sprintf@prec:
  1395                           	opt stack 0
  1396                           
  1397                           ; 1 bytes @ 0x22
  1398  000082                     	ds	1
  1399  000083                     ??_epoch_to_caltime:
  1400  000083                     sprintf@ap:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x23
  1404  000083                     	ds	2
  1405  000085                     caltime_to_epoch@month:
  1406                           	opt stack 0
  1407  000085                     epoch_to_caltime@day_since_epoch:
  1408                           	opt stack 0
  1409  000085                     sprintf@cp:
  1410                           	opt stack 0
  1411                           
  1412                           ; 2 bytes @ 0x25
  1413  000085                     	ds	1
  1414  000086                     RTCC_from_RTCC@tm:
  1415                           	opt stack 0
  1416                           
  1417                           ; 2 bytes @ 0x26
  1418  000086                     	ds	1
  1419  000087                     epoch_to_caltime@day:
  1420                           	opt stack 0
  1421  000087                     sprintf@val:
  1422                           	opt stack 0
  1423                           
  1424                           ; 2 bytes @ 0x27
  1425  000087                     	ds	1
  1426  000088                     
  1427                           ; 0 bytes @ 0x28
  1428  000088                     	ds	1
  1429  000089                     epoch_to_caltime@year:
  1430                           	opt stack 0
  1431  000089                     sprintf@len:
  1432                           	opt stack 0
  1433                           
  1434                           ; 2 bytes @ 0x29
  1435  000089                     	ds	1
  1436  00008A                     epoch_to_caltime@month:
  1437                           	opt stack 0
  1438                           
  1439                           ; 1 bytes @ 0x2A
  1440  00008A                     	ds	1
  1441  00008B                     sprintf@flag:
  1442                           	opt stack 0
  1443  00008B                     epoch_to_caltime@num:
  1444                           	opt stack 0
  1445                           
  1446                           ; 4 bytes @ 0x2B
  1447  00008B                     	ds	1
  1448  00008C                     sprintf@c:
  1449                           	opt stack 0
  1450                           
  1451                           ; 1 bytes @ 0x2C
  1452  00008C                     	ds	1
  1453  00008D                     sprintf@width:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x2D
  1457  00008D                     	ds	2
  1458  00008F                     RTCC_from_epoch@tm:
  1459                           	opt stack 0
  1460  00008F                     display_dec@str:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x2F
  1464  00008F                     	ds	2
  1465  000091                     display_dec@dec:
  1466                           	opt stack 0
  1467                           
  1468                           ; 1 bytes @ 0x31
  1469  000091                     	ds	1
  1470  000092                     display_dec@edit:
  1471                           	opt stack 0
  1472                           
  1473                           ; 1 bytes @ 0x32
  1474  000092                     	ds	1
  1475  000093                     display_dec@s:
  1476                           	opt stack 0
  1477                           
  1478                           ; 4 bytes @ 0x33
  1479  000093                     	ds	4
  1480  000097                     display_time_0802@tm:
  1481                           	opt stack 0
  1482                           
  1483                           ; 2 bytes @ 0x37
  1484  000097                     	ds	2
  1485  000099                     display_time_0802@line0:
  1486                           	opt stack 0
  1487                           
  1488                           ; 2 bytes @ 0x39
  1489  000099                     	ds	2
  1490  00009B                     display_time_0802@line1:
  1491                           	opt stack 0
  1492                           
  1493                           ; 2 bytes @ 0x3B
  1494  00009B                     	ds	2
  1495  00009D                     ??_main:
  1496                           
  1497                           ; 0 bytes @ 0x3D
  1498  00009D                     	ds	1
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           postinc0	equ	0xFEE
  1504                           wreg	equ	0xFE8
  1505                           postdec1	equ	0xFE5
  1506                           fsr1h	equ	0xFE2
  1507                           fsr1l	equ	0xFE1
  1508                           
  1509                           	psect	cstackCOMRAM
  1510  00002E                     __pcstackCOMRAM:
  1511                           	opt stack 0
  1512  00002E                     ??_USBStdGetDscHandler:
  1513  00002E                     ??_USBStdGetStatusHandler:
  1514  00002E                     ?i2_ringbuf_num:
  1515                           	opt stack 0
  1516  00002E                     ?i2_USBTransferOnePacket:
  1517                           	opt stack 0
  1518  00002E                     USBConfigureEndpoint@direction:
  1519                           	opt stack 0
  1520  00002E                     USBCtrlTrfTxService@byteToSend:
  1521                           	opt stack 0
  1522  00002E                     USBCtrlTrfRxService@i:
  1523                           	opt stack 0
  1524  00002E                     i2USBTransferOnePacket@dir:
  1525                           	opt stack 0
  1526  00002E                     i2ringbuf_num@rb:
  1527                           	opt stack 0
  1528  00002E                     i2memset@p1:
  1529                           	opt stack 0
  1530                           
  1531                           ; 2 bytes @ 0x0
  1532  00002E                     	ds	1
  1533  00002F                     ??_USBConfigureEndpoint:
  1534  00002F                     USBCtrlTrfRxService@byteToRead:
  1535                           	opt stack 0
  1536  00002F                     USBCtrlTrfInHandler@lastDTS:
  1537                           	opt stack 0
  1538  00002F                     USBStdGetStatusHandler@p:
  1539                           	opt stack 0
  1540  00002F                     i2USBTransferOnePacket@data:
  1541                           	opt stack 0
  1542                           
  1543                           ; 2 bytes @ 0x1
  1544  00002F                     	ds	1
  1545  000030                     ??i2_ringbuf_num:
  1546  000030                     i2memset@c:
  1547                           	opt stack 0
  1548                           
  1549                           ; 2 bytes @ 0x2
  1550  000030                     	ds	1
  1551  000031                     i2USBTransferOnePacket@len:
  1552                           	opt stack 0
  1553                           
  1554                           ; 1 bytes @ 0x3
  1555  000031                     	ds	1
  1556  000032                     i2USBTransferOnePacket@ep:
  1557                           	opt stack 0
  1558  000032                     i2memset@n:
  1559                           	opt stack 0
  1560                           
  1561                           ; 2 bytes @ 0x4
  1562  000032                     	ds	1
  1563  000033                     USBConfigureEndpoint@EPNum:
  1564                           	opt stack 0
  1565  000033                     i2USBTransferOnePacket@handle:
  1566                           	opt stack 0
  1567                           
  1568                           ; 2 bytes @ 0x5
  1569  000033                     	ds	1
  1570  000034                     USBConfigureEndpoint@handle:
  1571                           	opt stack 0
  1572  000034                     i2memset@p:
  1573                           	opt stack 0
  1574                           
  1575                           ; 2 bytes @ 0x6
  1576  000034                     	ds	2
  1577  000036                     USBEnableEndpoint@options:
  1578                           	opt stack 0
  1579  000036                     i2USBDeviceInit@i:
  1580                           	opt stack 0
  1581  000036                     i2ringbuf_put@rb:
  1582                           	opt stack 0
  1583  000036                     i2ringbuf_pop@rb:
  1584                           	opt stack 0
  1585                           
  1586                           ; 2 bytes @ 0x8
  1587  000036                     	ds	1
  1588  000037                     USBEnableEndpoint@p:
  1589                           	opt stack 0
  1590                           
  1591                           ; 2 bytes @ 0x9
  1592  000037                     	ds	1
  1593  000038                     ??i2_ringbuf_pop:
  1594  000038                     i2ringbuf_put@data:
  1595                           	opt stack 0
  1596                           
  1597                           ; 1 bytes @ 0xA
  1598  000038                     	ds	1
  1599  000039                     ??i2_ringbuf_put:
  1600  000039                     USBEnableEndpoint@ep:
  1601                           	opt stack 0
  1602                           
  1603                           ; 1 bytes @ 0xB
  1604  000039                     	ds	1
  1605  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1606                           	opt stack 0
  1607                           
  1608                           ; 2 bytes @ 0xC
  1609  00003A                     	ds	2
  1610  00003C                     i2ringbuf_pop@ret:
  1611                           	opt stack 0
  1612  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1613                           	opt stack 0
  1614                           
  1615                           ; 2 bytes @ 0xE
  1616  00003C                     	ds	1
  1617  00003D                     UART_ISR@ascii:
  1618                           	opt stack 0
  1619                           
  1620                           ; 1 bytes @ 0xF
  1621  00003D                     	ds	1
  1622  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1623                           	opt stack 0
  1624                           
  1625                           ; 2 bytes @ 0x10
  1626  00003E                     	ds	2
  1627  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1628                           
  1629                           ; 0 bytes @ 0x12
  1630  000040                     	ds	2
  1631  000042                     ??_USBStdFeatureReqHandler:
  1632  000042                     USBStdSetCfgHandler@i:
  1633                           	opt stack 0
  1634                           
  1635                           ; 1 bytes @ 0x14
  1636  000042                     	ds	1
  1637  000043                     USBStdFeatureReqHandler@pUEP:
  1638                           	opt stack 0
  1639                           
  1640                           ; 2 bytes @ 0x15
  1641  000043                     	ds	2
  1642  000045                     USBStdFeatureReqHandler@current_ep_data:
  1643                           	opt stack 0
  1644                           
  1645                           ; 1 bytes @ 0x17
  1646  000045                     	ds	1
  1647  000046                     USBStdFeatureReqHandler@p:
  1648                           	opt stack 0
  1649                           
  1650                           ; 2 bytes @ 0x18
  1651  000046                     	ds	2
  1652  000048                     ??_USBCtrlEPService:
  1653  000048                     
  1654                           ; 0 bytes @ 0x1A
  1655  000048                     	ds	2
  1656  00004A                     USBCtrlEPService@setup_cnt:
  1657                           	opt stack 0
  1658                           
  1659                           ; 1 bytes @ 0x1C
  1660  00004A                     	ds	1
  1661  00004B                     USBDeviceTasks@i:
  1662                           	opt stack 0
  1663                           
  1664                           ; 1 bytes @ 0x1D
  1665  00004B                     	ds	1
  1666  00004C                     ??_ISR:
  1667                           
  1668                           ; 0 bytes @ 0x1E
  1669  00004C                     	ds	15
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           postinc0	equ	0xFEE
  1675                           wreg	equ	0xFE8
  1676                           postdec1	equ	0xFE5
  1677                           fsr1h	equ	0xFE2
  1678                           fsr1l	equ	0xFE1
  1679                           
  1680 ;;
  1681 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1682 ;;
  1683 ;; *************** function _main *****************
  1684 ;; Defined at:
  1685 ;;		line 90 in file "main.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  s              40    0[BANK2 ] unsigned char [20][2]
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  2   96[None  ] int 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1700 ;;      Locals:         0       0       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1701 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1702 ;;      Totals:         0       1       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1703 ;;Total ram usage:       41 bytes
  1704 ;; Hardware stack levels required when called:   18
  1705 ;; This function calls:
  1706 ;;		_I2C_LCD_Clear
  1707 ;;		_I2C_LCD_Puts
  1708 ;;		_I2C_LCD_SetCursor
  1709 ;;		_RTCC_task
  1710 ;;		_UART_task
  1711 ;;		_USB_CDC_task
  1712 ;;		_display_time_0802
  1713 ;;		_ringbuf_num
  1714 ;;		_ringbuf_pop
  1715 ;;		_ringbuf_put
  1716 ;;		_setup
  1717 ;; This function is called by:
  1718 ;;		Startup code after reset
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text0
  1723  010EF4                     __ptext0:
  1724                           	opt stack 0
  1725  010EF4                     _main:
  1726                           	opt stack 13
  1727                           
  1728                           ;main.c: 91: setup();
  1729                           
  1730                           ;incstack = 0
  1731  010EF4  EC67  F092         	call	_setup	;wreg free
  1732  010EF8  D0AB               	goto	l9837
  1733  010EFA                     l9785:
  1734                           
  1735                           ;main.c: 94: INTCONbits.GIE = 0;
  1736  010EFA  9EF2               	bcf	intcon,7,c	;volatile
  1737                           
  1738                           ;main.c: 95: USB_CDC_task();
  1739  010EFC  EC3A  F08B         	call	_USB_CDC_task	;wreg free
  1740                           
  1741                           ;main.c: 96: INTCONbits.GIE = 1;
  1742  010F00  8EF2               	bsf	intcon,7,c	;volatile
  1743                           
  1744                           ;main.c: 98: INTCONbits.GIE = 0;
  1745  010F02  9EF2               	bcf	intcon,7,c	;volatile
  1746                           
  1747                           ;main.c: 99: UART_task();
  1748  010F04  EC50  F09C         	call	_UART_task	;wreg free
  1749                           
  1750                           ;main.c: 100: INTCONbits.GIE = 1;
  1751  010F08  8EF2               	bsf	intcon,7,c	;volatile
  1752                           
  1753                           ;main.c: 102: INTCONbits.GIE = 0;
  1754  010F0A  9EF2               	bcf	intcon,7,c	;volatile
  1755                           
  1756                           ;main.c: 103: RTCC_task();
  1757  010F0C  EC76  F09A         	call	_RTCC_task	;wreg free
  1758                           
  1759                           ;main.c: 104: INTCONbits.GIE = 1;
  1760  010F10  8EF2               	bsf	intcon,7,c	;volatile
  1761                           
  1762                           ;main.c: 106: INTCONbits.GIE = 0;
  1763  010F12  9EF2               	bcf	intcon,7,c	;volatile
  1764                           
  1765                           ;main.c: 107: if (time_change_flag) {
  1766  010F14  0100               	movlb	0	; () banked
  1767  010F16  51C2               	movf	_time_change_flag& (0+255),w,b
  1768  010F18  B4D8               	btfsc	status,2,c
  1769  010F1A  D035               	goto	l9821
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;main.c: 108: time_change_flag = 0;
  1773  010F1C  0E00               	movlw	0
  1774  010F1E  0100               	movlb	0	; () banked
  1775  010F20  6FC2               	movwf	_time_change_flag& (0+255),b
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main.c: 109: char s[2][20];
  1779                           ;main.c: 110: display_time_0802(&now, s[0], s[1]);
  1780  010F22  0EB6               	movlw	low _now
  1781  010F24  0100               	movlb	0	; () banked
  1782  010F26  6F97               	movwf	display_time_0802@tm& (0+255),b
  1783  010F28  0E01               	movlw	high _now
  1784  010F2A  0100               	movlb	0	; () banked
  1785  010F2C  6F98               	movwf	(display_time_0802@tm+1)& (0+255),b
  1786  010F2E  0EC0               	movlw	low main@s
  1787  010F30  0100               	movlb	0	; () banked
  1788  010F32  6F99               	movwf	display_time_0802@line0& (0+255),b
  1789  010F34  0E02               	movlw	high main@s
  1790  010F36  0100               	movlb	0	; () banked
  1791  010F38  6F9A               	movwf	(display_time_0802@line0+1)& (0+255),b
  1792  010F3A  0ED4               	movlw	low (main@s+20)
  1793  010F3C  0100               	movlb	0	; () banked
  1794  010F3E  6F9B               	movwf	display_time_0802@line1& (0+255),b
  1795  010F40  0E02               	movlw	high (main@s+20)
  1796  010F42  0100               	movlb	0	; () banked
  1797  010F44  6F9C               	movwf	(display_time_0802@line1+1)& (0+255),b
  1798  010F46  ECB3  F084         	call	_display_time_0802	;wreg free
  1799                           
  1800                           ;main.c: 111: I2C_LCD_Clear();
  1801  010F4A  EC8C  F09C         	call	_I2C_LCD_Clear	;wreg free
  1802                           
  1803                           ;main.c: 112: I2C_LCD_SetCursor(0, 0);
  1804  010F4E  0E00               	movlw	0
  1805  010F50  0100               	movlb	0	; () banked
  1806  010F52  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1807  010F54  0E00               	movlw	0
  1808  010F56  EC83  F09B         	call	_I2C_LCD_SetCursor
  1809                           
  1810                           ;main.c: 113: I2C_LCD_Puts(s[0]);
  1811  010F5A  0EC0               	movlw	low main@s
  1812  010F5C  0100               	movlb	0	; () banked
  1813  010F5E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  1814  010F60  0E02               	movlw	high main@s
  1815  010F62  0100               	movlb	0	; () banked
  1816  010F64  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1817  010F66  EC12  F097         	call	_I2C_LCD_Puts	;wreg free
  1818                           
  1819                           ;main.c: 114: I2C_LCD_SetCursor(0, 1);
  1820  010F6A  0E01               	movlw	1
  1821  010F6C  0100               	movlb	0	; () banked
  1822  010F6E  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1823  010F70  0E00               	movlw	0
  1824  010F72  EC83  F09B         	call	_I2C_LCD_SetCursor
  1825                           
  1826                           ;main.c: 115: I2C_LCD_Puts(s[1]);
  1827  010F76  0ED4               	movlw	low (main@s+20)
  1828  010F78  0100               	movlb	0	; () banked
  1829  010F7A  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  1830  010F7C  0E02               	movlw	high (main@s+20)
  1831  010F7E  0100               	movlb	0	; () banked
  1832  010F80  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1833  010F82  EC12  F097         	call	_I2C_LCD_Puts	;wreg free
  1834  010F86                     l9821:
  1835                           
  1836                           ;main.c: 116: }
  1837                           ;main.c: 117: INTCONbits.GIE = 1;
  1838  010F86  8EF2               	bsf	intcon,7,c	;volatile
  1839                           
  1840                           ;main.c: 119: INTCONbits.GIE = 0;
  1841  010F88  9EF2               	bcf	intcon,7,c	;volatile
  1842                           
  1843                           ;main.c: 120: if (ringbuf_num(&usb_rx)) {
  1844  010F8A  0EDC               	movlw	low _usb_rx
  1845  010F8C  0100               	movlb	0	; () banked
  1846  010F8E  6F60               	movwf	ringbuf_num@rb& (0+255),b
  1847  010F90  0E01               	movlw	high _usb_rx
  1848  010F92  0100               	movlb	0	; () banked
  1849  010F94  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  1850  010F96  EC2E  F08C         	call	_ringbuf_num	;wreg free
  1851  010F9A  0100               	movlb	0	; () banked
  1852  010F9C  5160               	movf	?_ringbuf_num& (0+255),w,b
  1853  010F9E  0100               	movlb	0	; () banked
  1854  010FA0  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1855  010FA2  B4D8               	btfsc	status,2,c
  1856  010FA4  D023               	goto	l9831
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;main.c: 121: ringbuf_put(&usb_tx, ringbuf_pop(&usb_rx));
  1860  010FA6  0EE4               	movlw	low _usb_tx
  1861  010FA8  0100               	movlb	0	; () banked
  1862  010FAA  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  1863  010FAC  0E01               	movlw	high _usb_tx
  1864  010FAE  0100               	movlb	0	; () banked
  1865  010FB0  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1866  010FB2  0EDC               	movlw	low _usb_rx
  1867  010FB4  0100               	movlb	0	; () banked
  1868  010FB6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  1869  010FB8  0E01               	movlw	high _usb_rx
  1870  010FBA  0100               	movlb	0	; () banked
  1871  010FBC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1872  010FBE  ECE2  F090         	call	_ringbuf_pop	;wreg free
  1873  010FC2  0100               	movlb	0	; () banked
  1874  010FC4  6F71               	movwf	ringbuf_put@data& (0+255),b
  1875  010FC6  ECA8  F08F         	call	_ringbuf_put	;wreg free
  1876                           
  1877                           ;main.c: 122: LATBbits.LATB7 = !LATBbits.LATB7;
  1878  010FCA  BE8A               	btfsc	3978,7,c	;volatile
  1879  010FCC  D004               	goto	u9550
  1880  010FCE  0100               	movlb	0	; () banked
  1881  010FD0  6B9D               	clrf	??_main& (0+255),b
  1882  010FD2  2B9D               	incf	??_main& (0+255),f,b
  1883  010FD4  D002               	goto	u9568
  1884  010FD6                     u9550:
  1885  010FD6  0100               	movlb	0	; () banked
  1886  010FD8  6B9D               	clrf	??_main& (0+255),b
  1887  010FDA                     u9568:
  1888  010FDA  0100               	movlb	0	; () banked
  1889  010FDC  339D               	rrcf	??_main& (0+255),f,b
  1890  010FDE  339D               	rrcf	??_main& (0+255),f,b
  1891  010FE0  508A               	movf	3978,w,c	;volatile
  1892  010FE2  0100               	movlb	0	; () banked
  1893  010FE4  199D               	xorwf	??_main& (0+255),w,b
  1894  010FE6  0B7F               	andlw	-129
  1895  010FE8  199D               	xorwf	??_main& (0+255),w,b
  1896  010FEA  6E8A               	movwf	3978,c	;volatile
  1897  010FEC                     l9831:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;main.c: 123: }
  1901                           ;main.c: 124: if (ringbuf_num(&uart_rx)) {
  1902  010FEC  0ECC               	movlw	low _uart_rx
  1903  010FEE  0100               	movlb	0	; () banked
  1904  010FF0  6F60               	movwf	ringbuf_num@rb& (0+255),b
  1905  010FF2  0E01               	movlw	high _uart_rx
  1906  010FF4  0100               	movlb	0	; () banked
  1907  010FF6  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  1908  010FF8  EC2E  F08C         	call	_ringbuf_num	;wreg free
  1909  010FFC  0100               	movlb	0	; () banked
  1910  010FFE  5160               	movf	?_ringbuf_num& (0+255),w,b
  1911  011000  0100               	movlb	0	; () banked
  1912  011002  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1913  011004  B4D8               	btfsc	status,2,c
  1914  011006  D024               	goto	l9837
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 125: ringbuf_put(&uart_tx, ringbuf_pop(&uart_rx));
  1918  011008  0ED4               	movlw	low _uart_tx
  1919  01100A  0100               	movlb	0	; () banked
  1920  01100C  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  1921  01100E  0E01               	movlw	high _uart_tx
  1922  011010  0100               	movlb	0	; () banked
  1923  011012  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1924  011014  0ECC               	movlw	low _uart_rx
  1925  011016  0100               	movlb	0	; () banked
  1926  011018  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  1927  01101A  0E01               	movlw	high _uart_rx
  1928  01101C  0100               	movlb	0	; () banked
  1929  01101E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1930  011020  ECE2  F090         	call	_ringbuf_pop	;wreg free
  1931  011024  0100               	movlb	0	; () banked
  1932  011026  6F71               	movwf	ringbuf_put@data& (0+255),b
  1933  011028  ECA8  F08F         	call	_ringbuf_put	;wreg free
  1934                           
  1935                           ;main.c: 126: LATBbits.LATB6 = !LATBbits.LATB6;
  1936  01102C  BC8A               	btfsc	3978,6,c	;volatile
  1937  01102E  D004               	goto	u9580
  1938  011030  0100               	movlb	0	; () banked
  1939  011032  6B9D               	clrf	??_main& (0+255),b
  1940  011034  2B9D               	incf	??_main& (0+255),f,b
  1941  011036  D002               	goto	u9598
  1942  011038                     u9580:
  1943  011038  0100               	movlb	0	; () banked
  1944  01103A  6B9D               	clrf	??_main& (0+255),b
  1945  01103C                     u9598:
  1946  01103C  0100               	movlb	0	; () banked
  1947  01103E  3B9D               	swapf	??_main& (0+255),f,b
  1948  011040  479D               	rlncf	??_main& (0+255),f,b
  1949  011042  479D               	rlncf	??_main& (0+255),f,b
  1950  011044  508A               	movf	3978,w,c	;volatile
  1951  011046  0100               	movlb	0	; () banked
  1952  011048  199D               	xorwf	??_main& (0+255),w,b
  1953  01104A  0BBF               	andlw	-65
  1954  01104C  199D               	xorwf	??_main& (0+255),w,b
  1955  01104E  6E8A               	movwf	3978,c	;volatile
  1956  011050                     l9837:
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;main.c: 127: }
  1960                           ;main.c: 128: INTCONbits.GIE = 1;
  1961  011050  8EF2               	bsf	intcon,7,c	;volatile
  1962                           
  1963                           ; BSR set to: 0
  1964  011052  D753               	goto	l9785
  1965  011054                     __end_of_main:
  1966                           	opt stack 0
  1967                           tblptru	equ	0xFF8
  1968                           tblptrh	equ	0xFF7
  1969                           tblptrl	equ	0xFF6
  1970                           tablat	equ	0xFF5
  1971                           intcon	equ	0xFF2
  1972                           postinc0	equ	0xFEE
  1973                           wreg	equ	0xFE8
  1974                           postdec1	equ	0xFE5
  1975                           fsr1h	equ	0xFE2
  1976                           fsr1l	equ	0xFE1
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _setup *****************
  1980 ;; Defined at:
  1981 ;;		line 60 in file "main.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;		None               void
  1988 ;; Registers used:
  1989 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1999 ;;Total ram usage:        0 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:   17
  2002 ;; This function calls:
  2003 ;;		_I2C_LCD_Clear
  2004 ;;		_I2C_LCD_Puts
  2005 ;;		_I2C_LCD_SetCursor
  2006 ;;		_I2C_LCD_init
  2007 ;;		_OSC_init
  2008 ;;		_RTCC_from_RTCC
  2009 ;;		_RTCC_from_epoch
  2010 ;;		_RTCC_init
  2011 ;;		_UART_init
  2012 ;;		_USB_CDC_init
  2013 ;;		_timer0_init
  2014 ;;		_timer1_init
  2015 ;;		_timer3_init
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text1
  2022  0124CE                     __ptext1:
  2023                           	opt stack 0
  2024  0124CE                     _setup:
  2025                           	opt stack 13
  2026                           
  2027                           ;main.c: 61: OSC_init();
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;incstack = 0
  2031  0124CE  ECC2  F09C         	call	_OSC_init	;wreg free
  2032                           
  2033                           ;main.c: 62: TRISA = 0b00010000;
  2034  0124D2  0E10               	movlw	16
  2035  0124D4  6E92               	movwf	3986,c	;volatile
  2036                           
  2037                           ;main.c: 63: TRISB = 0b00111111;
  2038  0124D6  0E3F               	movlw	63
  2039  0124D8  6E93               	movwf	3987,c	;volatile
  2040                           
  2041                           ;main.c: 64: TRISC = 0b10111010;
  2042  0124DA  0EBA               	movlw	186
  2043  0124DC  6E94               	movwf	3988,c	;volatile
  2044                           
  2045                           ;main.c: 65: ANCON0 = 0b11111111;
  2046  0124DE  010F               	movlb	15	; () banked
  2047  0124E0  6948               	setf	72,b	;volatile
  2048                           
  2049                           ; BSR set to: 15
  2050                           ;main.c: 66: ANCON1 = 0b00011111;
  2051  0124E2  0E1F               	movlw	31
  2052  0124E4  010F               	movlb	15	; () banked
  2053  0124E6  6F49               	movwf	73,b	;volatile
  2054                           
  2055                           ; BSR set to: 15
  2056                           ;main.c: 67: INTCON2bits.RBPU = 0;
  2057  0124E8  9EF1               	bcf	intcon2,7,c	;volatile
  2058                           
  2059                           ; BSR set to: 15
  2060                           ;main.c: 69: timer0_init(6);
  2061  0124EA  0E06               	movlw	6
  2062  0124EC  ECB2  F09A         	call	_timer0_init
  2063                           
  2064                           ;main.c: 70: timer1_init(0, 2);
  2065  0124F0  0E02               	movlw	2
  2066  0124F2  0100               	movlb	0	; () banked
  2067  0124F4  6F60               	movwf	timer1_init@clock_select& (0+255),b
  2068  0124F6  0E00               	movlw	0
  2069  0124F8  EC9A  F099         	call	_timer1_init
  2070                           
  2071                           ;main.c: 71: timer3_init(2);
  2072  0124FC  0E02               	movlw	2
  2073  0124FE  EC6D  F09B         	call	_timer3_init
  2074                           
  2075                           ;main.c: 72: I2C_LCD_init();
  2076  012502  ECCA  F096         	call	_I2C_LCD_init	;wreg free
  2077                           
  2078                           ;main.c: 73: RTCC_init();
  2079  012506  EC49  F098         	call	_RTCC_init	;wreg free
  2080                           
  2081                           ;main.c: 74: USB_CDC_init();
  2082  01250A  ECBB  F09C         	call	_USB_CDC_init	;wreg free
  2083                           
  2084                           ;main.c: 75: UART_init();
  2085  01250E  EC19  F09C         	call	_UART_init	;wreg free
  2086                           
  2087                           ;main.c: 77: RTCC_from_RTCC(&now);
  2088  012512  0EB6               	movlw	low _now
  2089  012514  0100               	movlb	0	; () banked
  2090  012516  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  2091  012518  0E01               	movlw	high _now
  2092  01251A  0100               	movlb	0	; () banked
  2093  01251C  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  2094  01251E  EC99  F09C         	call	_RTCC_from_RTCC	;wreg free
  2095                           
  2096                           ;main.c: 78: if (now.DD == 0) {
  2097  012522  0101               	movlb	1	; () banked
  2098  012524  51BE               	movf	(_now+8)& (0+255),w,b
  2099  012526  A4D8               	btfss	status,2,c
  2100  012528  D011               	goto	l9541
  2101                           
  2102                           ; BSR set to: 1
  2103                           ;main.c: 79: now.epoch = 0;
  2104  01252A  0E00               	movlw	0
  2105  01252C  0101               	movlb	1	; () banked
  2106  01252E  6FB6               	movwf	_now& (0+255),b
  2107  012530  0E00               	movlw	0
  2108  012532  6FB7               	movwf	(_now+1)& (0+255),b
  2109  012534  0E00               	movlw	0
  2110  012536  6FB8               	movwf	(_now+2)& (0+255),b
  2111  012538  0E00               	movlw	0
  2112  01253A  6FB9               	movwf	(_now+3)& (0+255),b
  2113                           
  2114                           ; BSR set to: 1
  2115                           ;main.c: 80: RTCC_from_epoch(&now);
  2116  01253C  0EB6               	movlw	low _now
  2117  01253E  0100               	movlb	0	; () banked
  2118  012540  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  2119  012542  0E01               	movlw	high _now
  2120  012544  0100               	movlb	0	; () banked
  2121  012546  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  2122  012548  EC7F  F09C         	call	_RTCC_from_epoch	;wreg free
  2123  01254C                     l9541:
  2124                           
  2125                           ;main.c: 81: }
  2126                           ;main.c: 83: I2C_LCD_Clear();
  2127  01254C  EC8C  F09C         	call	_I2C_LCD_Clear	;wreg free
  2128                           
  2129                           ;main.c: 84: I2C_LCD_SetCursor(0, 0);
  2130  012550  0E00               	movlw	0
  2131  012552  0100               	movlb	0	; () banked
  2132  012554  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2133  012556  0E00               	movlw	0
  2134  012558  EC83  F09B         	call	_I2C_LCD_SetCursor
  2135                           
  2136                           ;main.c: 85: I2C_LCD_Puts("18F27J53");
  2137  01255C  0EA1               	movlw	low STR_1
  2138  01255E  0100               	movlb	0	; () banked
  2139  012560  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2140  012562  0EFF               	movlw	high STR_1
  2141  012564  0100               	movlb	0	; () banked
  2142  012566  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2143  012568  EC12  F097         	call	_I2C_LCD_Puts	;wreg free
  2144                           
  2145                           ;main.c: 86: I2C_LCD_SetCursor(0, 1);
  2146  01256C  0E01               	movlw	1
  2147  01256E  0100               	movlb	0	; () banked
  2148  012570  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2149  012572  0E00               	movlw	0
  2150  012574  EC83  F09B         	call	_I2C_LCD_SetCursor
  2151                           
  2152                           ;main.c: 87: I2C_LCD_Puts("USB UART");
  2153  012578  0EAA               	movlw	low STR_2
  2154  01257A  0100               	movlb	0	; () banked
  2155  01257C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2156  01257E  0EFF               	movlw	high STR_2
  2157  012580  0100               	movlb	0	; () banked
  2158  012582  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2159  012584  EC12  F097         	call	_I2C_LCD_Puts	;wreg free
  2160  012588  0012               	return		;funcret
  2161  01258A                     __end_of_setup:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           tblptrh	equ	0xFF7
  2165                           tblptrl	equ	0xFF6
  2166                           tablat	equ	0xFF5
  2167                           intcon	equ	0xFF2
  2168                           intcon2	equ	0xFF1
  2169                           postinc0	equ	0xFEE
  2170                           wreg	equ	0xFE8
  2171                           postdec1	equ	0xFE5
  2172                           fsr1h	equ	0xFE2
  2173                           fsr1l	equ	0xFE1
  2174                           status	equ	0xFD8
  2175                           
  2176 ;; *************** function _timer3_init *****************
  2177 ;; Defined at:
  2178 ;;		line 101 in file "../My_library/My_PIC.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  prescaler       1    wreg     unsigned char 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;		None               void
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;Total ram usage:        2 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:   12
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_setup
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text2
  2207  0136DA                     __ptext2:
  2208                           	opt stack 0
  2209  0136DA                     _timer3_init:
  2210                           	opt stack 17
  2211                           
  2212                           ;incstack = 0
  2213                           ;timer3_init@prescaler stored from wreg
  2214  0136DA  0100               	movlb	0	; () banked
  2215  0136DC  6F61               	movwf	timer3_init@prescaler& (0+255),b
  2216                           
  2217                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  2218  0136DE  0E3F               	movlw	-193
  2219  0136E0  1679               	andwf	3961,f,c	;volatile
  2220                           
  2221                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  2222  0136E2  9679               	bcf	3961,3,c	;volatile
  2223                           
  2224                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  2225  0136E4  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  2226  0136E8  0100               	movlb	0	; () banked
  2227  0136EA  3B60               	swapf	??_timer3_init& (0+255),f,b
  2228  0136EC  5079               	movf	3961,w,c	;volatile
  2229  0136EE  0100               	movlb	0	; () banked
  2230  0136F0  1960               	xorwf	??_timer3_init& (0+255),w,b
  2231  0136F2  0BCF               	andlw	-49
  2232  0136F4  1960               	xorwf	??_timer3_init& (0+255),w,b
  2233  0136F6  6E79               	movwf	3961,c	;volatile
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  2237  0136F8  9E79               	bcf	3961,7,c	;volatile
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  2241  0136FA  8079               	bsf	3961,0,c	;volatile
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  2245  0136FC  92A2               	bcf	4002,1,c	;volatile
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  2249  0136FE  92A1               	bcf	4001,1,c	;volatile
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  2253  013700  82A0               	bsf	4000,1,c	;volatile
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  2257  013702  8CF2               	bsf	intcon,6,c	;volatile
  2258                           
  2259                           ; BSR set to: 0
  2260  013704  0012               	return		;funcret
  2261  013706                     __end_of_timer3_init:
  2262                           	opt stack 0
  2263                           tblptru	equ	0xFF8
  2264                           tblptrh	equ	0xFF7
  2265                           tblptrl	equ	0xFF6
  2266                           tablat	equ	0xFF5
  2267                           intcon	equ	0xFF2
  2268                           intcon2	equ	0xFF1
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           postdec1	equ	0xFE5
  2272                           fsr1h	equ	0xFE2
  2273                           fsr1l	equ	0xFE1
  2274                           status	equ	0xFD8
  2275                           
  2276 ;; *************** function _timer1_init *****************
  2277 ;; Defined at:
  2278 ;;		line 70 in file "../My_library/My_PIC.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  prescaler       1    wreg     unsigned char 
  2281 ;;  clock_select    1    0[BANK0 ] unsigned char 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  prescaler       1    2[BANK0 ] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;		None               void
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2293 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2295 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2296 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2297 ;;Total ram usage:        3 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:   12
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_setup
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text3
  2308  013334                     __ptext3:
  2309                           	opt stack 0
  2310  013334                     _timer1_init:
  2311                           	opt stack 17
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;incstack = 0
  2315                           ;timer1_init@prescaler stored from wreg
  2316  013334  0100               	movlb	0	; () banked
  2317  013336  6F62               	movwf	timer1_init@prescaler& (0+255),b
  2318                           
  2319                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  2320  013338  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  2321  01333C  0100               	movlb	0	; () banked
  2322  01333E  3B61               	swapf	??_timer1_init& (0+255),f,b
  2323  013340  4761               	rlncf	??_timer1_init& (0+255),f,b
  2324  013342  4761               	rlncf	??_timer1_init& (0+255),f,b
  2325  013344  50CD               	movf	4045,w,c	;volatile
  2326  013346  0100               	movlb	0	; () banked
  2327  013348  1961               	xorwf	??_timer1_init& (0+255),w,b
  2328  01334A  0B3F               	andlw	-193
  2329  01334C  1961               	xorwf	??_timer1_init& (0+255),w,b
  2330  01334E  6ECD               	movwf	4045,c	;volatile
  2331                           
  2332                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  2333  013350  0E02               	movlw	2
  2334  013352  0100               	movlb	0	; () banked
  2335  013354  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  2336  013356  A4D8               	btfss	status,2,c
  2337  013358  D002               	goto	l369
  2338                           
  2339                           ; BSR set to: 0
  2340  01335A  86CD               	bsf	4045,3,c	;volatile
  2341  01335C  D001               	goto	l9309
  2342  01335E                     l369:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  2346  01335E  96CD               	bcf	4045,3,c	;volatile
  2347  013360                     l9309:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  2351  013360  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  2352  013364  0100               	movlb	0	; () banked
  2353  013366  3B61               	swapf	??_timer1_init& (0+255),f,b
  2354  013368  50CD               	movf	4045,w,c	;volatile
  2355  01336A  0100               	movlb	0	; () banked
  2356  01336C  1961               	xorwf	??_timer1_init& (0+255),w,b
  2357  01336E  0BCF               	andlw	-49
  2358  013370  1961               	xorwf	??_timer1_init& (0+255),w,b
  2359  013372  6ECD               	movwf	4045,c	;volatile
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  2363  013374  84CD               	bsf	4045,2,c	;volatile
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  2367  013376  92CD               	bcf	4045,1,c	;volatile
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  2371  013378  80CD               	bsf	4045,0,c	;volatile
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  2375  01337A  909F               	bcf	3999,0,c	;volatile
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  2379  01337C  909E               	bcf	3998,0,c	;volatile
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  2383  01337E  809D               	bsf	3997,0,c	;volatile
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  2387  013380  8CF2               	bsf	intcon,6,c	;volatile
  2388                           
  2389                           ; BSR set to: 0
  2390  013382  0012               	return		;funcret
  2391  013384                     __end_of_timer1_init:
  2392                           	opt stack 0
  2393                           tblptru	equ	0xFF8
  2394                           tblptrh	equ	0xFF7
  2395                           tblptrl	equ	0xFF6
  2396                           tablat	equ	0xFF5
  2397                           intcon	equ	0xFF2
  2398                           intcon2	equ	0xFF1
  2399                           postinc0	equ	0xFEE
  2400                           wreg	equ	0xFE8
  2401                           postdec1	equ	0xFE5
  2402                           fsr1h	equ	0xFE2
  2403                           fsr1l	equ	0xFE1
  2404                           status	equ	0xFD8
  2405                           
  2406 ;; *************** function _timer0_init *****************
  2407 ;; Defined at:
  2408 ;;		line 34 in file "../My_library/My_PIC.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  prescaler       1    wreg     unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;		None               void
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2423 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;Total ram usage:        2 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:   12
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_setup
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text4
  2437  013564                     __ptext4:
  2438                           	opt stack 0
  2439  013564                     _timer0_init:
  2440                           	opt stack 17
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;incstack = 0
  2444                           ;timer0_init@prescaler stored from wreg
  2445  013564  0100               	movlb	0	; () banked
  2446  013566  6F61               	movwf	timer0_init@prescaler& (0+255),b
  2447                           
  2448                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  2449  013568  8ED5               	bsf	4053,7,c	;volatile
  2450                           
  2451                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  2452  01356A  8CD5               	bsf	4053,6,c	;volatile
  2453                           
  2454                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  2455  01356C  9AD5               	bcf	4053,5,c	;volatile
  2456                           
  2457                           ;My_PIC.c: 38: if (prescaler == 0) {
  2458  01356E  0100               	movlb	0	; () banked
  2459  013570  5161               	movf	timer0_init@prescaler& (0+255),w,b
  2460  013572  0100               	movlb	0	; () banked
  2461  013574  A4D8               	btfss	status,2,c
  2462  013576  D002               	goto	l364
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  2466  013578  86D5               	bsf	4053,3,c	;volatile
  2467                           
  2468                           ;My_PIC.c: 40: } else {
  2469  01357A  D00C               	goto	l9297
  2470  01357C                     l364:
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  2474  01357C  96D5               	bcf	4053,3,c	;volatile
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  2478  01357E  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  2479  013582  0EFF               	movlw	255
  2480  013584  0100               	movlb	0	; () banked
  2481  013586  2760               	addwf	??_timer0_init& (0+255),f,b
  2482  013588  50D5               	movf	4053,w,c	;volatile
  2483  01358A  0100               	movlb	0	; () banked
  2484  01358C  1960               	xorwf	??_timer0_init& (0+255),w,b
  2485  01358E  0BF8               	andlw	-8
  2486  013590  1960               	xorwf	??_timer0_init& (0+255),w,b
  2487  013592  6ED5               	movwf	4053,c	;volatile
  2488  013594                     l9297:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;My_PIC.c: 43: }
  2492                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  2493  013594  8AF2               	bsf	intcon,5,c	;volatile
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  2497  013596  94F2               	bcf	intcon,2,c	;volatile
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  2501  013598  94F1               	bcf	intcon2,2,c	;volatile
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  2505  01359A  8CF2               	bsf	intcon,6,c	;volatile
  2506                           
  2507                           ; BSR set to: 0
  2508  01359C  0012               	return		;funcret
  2509  01359E                     __end_of_timer0_init:
  2510                           	opt stack 0
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           intcon	equ	0xFF2
  2516                           intcon2	equ	0xFF1
  2517                           postinc0	equ	0xFEE
  2518                           wreg	equ	0xFE8
  2519                           postdec1	equ	0xFE5
  2520                           fsr1h	equ	0xFE2
  2521                           fsr1l	equ	0xFE1
  2522                           status	equ	0xFD8
  2523                           
  2524 ;; *************** function _USB_CDC_init *****************
  2525 ;; Defined at:
  2526 ;;		line 20 in file "../My_library/My_USB_CDC.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:   14
  2547 ;; This function calls:
  2548 ;;		_USBDeviceAttach
  2549 ;;		_USBDeviceInit
  2550 ;;		_USB_CDC_buffer_init
  2551 ;; This function is called by:
  2552 ;;		_setup
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text5
  2557  013976                     __ptext5:
  2558                           	opt stack 0
  2559  013976                     _USB_CDC_init:
  2560                           	opt stack 15
  2561                           
  2562                           ;My_USB_CDC.c: 21: USBDeviceInit();
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;incstack = 0
  2566  013976  EC2A  F088         	call	_USBDeviceInit	;wreg free
  2567                           
  2568                           ;My_USB_CDC.c: 22: USBDeviceAttach();
  2569  01397A  EC58  F09A         	call	_USBDeviceAttach	;wreg free
  2570                           
  2571                           ;My_USB_CDC.c: 23: USB_CDC_buffer_init();
  2572  01397E  ECC2  F099         	call	_USB_CDC_buffer_init	;wreg free
  2573  013982  0012               	return		;funcret
  2574  013984                     __end_of_USB_CDC_init:
  2575                           	opt stack 0
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           intcon	equ	0xFF2
  2581                           intcon2	equ	0xFF1
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           postdec1	equ	0xFE5
  2585                           fsr1h	equ	0xFE2
  2586                           fsr1l	equ	0xFE1
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _USB_CDC_buffer_init *****************
  2590 ;; Defined at:
  2591 ;;		line 26 in file "../My_library/My_USB_CDC.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;		None               void
  2598 ;; Registers used:
  2599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2609 ;;Total ram usage:        0 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:   13
  2612 ;; This function calls:
  2613 ;;		_ringbuf_init
  2614 ;; This function is called by:
  2615 ;;		_USB_CDC_init
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text6
  2620  013384                     __ptext6:
  2621                           	opt stack 0
  2622  013384                     _USB_CDC_buffer_init:
  2623                           	opt stack 15
  2624                           
  2625                           ;My_USB_CDC.c: 27: static uint8_t txbuf[800];
  2626                           ;My_USB_CDC.c: 28: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
  2627                           
  2628                           ;incstack = 0
  2629  013384  0EE4               	movlw	low _usb_tx
  2630  013386  0100               	movlb	0	; () banked
  2631  013388  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2632  01338A  0E01               	movlw	high _usb_tx
  2633  01338C  0100               	movlb	0	; () banked
  2634  01338E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2635  013390  0E1A               	movlw	low USB_CDC_buffer_init@txbuf
  2636  013392  0100               	movlb	0	; () banked
  2637  013394  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2638  013396  0E09               	movlw	high USB_CDC_buffer_init@txbuf
  2639  013398  0100               	movlb	0	; () banked
  2640  01339A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2641  01339C  0E03               	movlw	3
  2642  01339E  0100               	movlb	0	; () banked
  2643  0133A0  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2644  0133A2  0E20               	movlw	32
  2645  0133A4  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2646  0133A6  EC70  F099         	call	_ringbuf_init	;wreg free
  2647                           
  2648                           ;My_USB_CDC.c: 29: static uint8_t rxbuf[250];
  2649                           ;My_USB_CDC.c: 30: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
  2650  0133AA  0EDC               	movlw	low _usb_rx
  2651  0133AC  0100               	movlb	0	; () banked
  2652  0133AE  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2653  0133B0  0E01               	movlw	high _usb_rx
  2654  0133B2  0100               	movlb	0	; () banked
  2655  0133B4  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2656  0133B6  0E00               	movlw	low USB_CDC_buffer_init@rxbuf
  2657  0133B8  0100               	movlb	0	; () banked
  2658  0133BA  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2659  0133BC  0E05               	movlw	high USB_CDC_buffer_init@rxbuf
  2660  0133BE  0100               	movlb	0	; () banked
  2661  0133C0  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2662  0133C2  0E00               	movlw	0
  2663  0133C4  0100               	movlb	0	; () banked
  2664  0133C6  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2665  0133C8  0EFA               	movlw	250
  2666  0133CA  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2667  0133CC  EC70  F099         	call	_ringbuf_init	;wreg free
  2668  0133D0  0012               	return		;funcret
  2669  0133D2                     __end_of_USB_CDC_buffer_init:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           tblptrh	equ	0xFF7
  2673                           tblptrl	equ	0xFF6
  2674                           tablat	equ	0xFF5
  2675                           intcon	equ	0xFF2
  2676                           intcon2	equ	0xFF1
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           postdec1	equ	0xFE5
  2680                           fsr1h	equ	0xFE2
  2681                           fsr1l	equ	0xFE1
  2682                           status	equ	0xFD8
  2683                           
  2684 ;; *************** function _USBDeviceInit *****************
  2685 ;; Defined at:
  2686 ;;		line 299 in file "../My_library/usb/usb_device.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  i               1    8[BANK0 ] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;		None               void
  2693 ;; Registers used:
  2694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;Total ram usage:        1 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:   13
  2707 ;; This function calls:
  2708 ;;		_memset
  2709 ;; This function is called by:
  2710 ;;		_USB_CDC_init
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text7
  2715  011054                     __ptext7:
  2716                           	opt stack 0
  2717  011054                     _USBDeviceInit:
  2718                           	opt stack 15
  2719                           
  2720                           ;usb_device.c: 301: uint8_t i;
  2721                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
  2722                           
  2723                           ;incstack = 0
  2724  011054  98A0               	bcf	4000,4,c	;volatile
  2725                           
  2726                           ;usb_device.c: 306: {UEIR = 0;};
  2727  011056  0E00               	movlw	0
  2728  011058  6E63               	movwf	3939,c	;volatile
  2729                           
  2730                           ;usb_device.c: 309: {UIR = 0;};
  2731  01105A  0E00               	movlw	0
  2732  01105C  6E62               	movwf	3938,c	;volatile
  2733                           
  2734                           ;usb_device.c: 312: UEP0 = 0;
  2735  01105E  0E00               	movlw	0
  2736  011060  010F               	movlb	15	; () banked
  2737  011062  6F26               	movwf	38,b	;volatile
  2738                           
  2739                           ; BSR set to: 15
  2740                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  2741  011064  0E27               	movlw	39
  2742  011066  0100               	movlb	0	; () banked
  2743  011068  6F60               	movwf	memset@p1& (0+255),b
  2744  01106A  0E0F               	movlw	15
  2745  01106C  0100               	movlb	0	; () banked
  2746  01106E  6F61               	movwf	(memset@p1+1)& (0+255),b
  2747  011070  0E00               	movlw	0
  2748  011072  0100               	movlb	0	; () banked
  2749  011074  6F63               	movwf	(memset@c+1)& (0+255),b
  2750  011076  0E00               	movlw	0
  2751  011078  6F62               	movwf	memset@c& (0+255),b
  2752  01107A  0E00               	movlw	0
  2753  01107C  0100               	movlb	0	; () banked
  2754  01107E  6F65               	movwf	(memset@n+1)& (0+255),b
  2755  011080  0E02               	movlw	2
  2756  011082  6F64               	movwf	memset@n& (0+255),b
  2757  011084  EC22  F09B         	call	_memset	;wreg free
  2758                           
  2759                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2760  011088  0E16               	movlw	22
  2761  01108A  010F               	movlb	15	; () banked
  2762  01108C  6F39               	movwf	57,b	;volatile
  2763                           
  2764                           ; BSR set to: 15
  2765  01108E  0E9F               	movlw	159
  2766  011090  010F               	movlb	15	; () banked
  2767  011092  6F37               	movwf	55,b	;volatile
  2768                           
  2769                           ; BSR set to: 15
  2770  011094  0E7B               	movlw	123
  2771  011096  010F               	movlb	15	; () banked
  2772  011098  6F36               	movwf	54,b	;volatile
  2773                           
  2774                           ; BSR set to: 15
  2775                           ;usb_device.c: 319: ;
  2776                           ;usb_device.c: 322: ;
  2777                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  2778  01109A  0E00               	movlw	0
  2779  01109C  0100               	movlb	0	; () banked
  2780  01109E  6F68               	movwf	USBDeviceInit@i& (0+255),b
  2781  0110A0                     l9103:
  2782                           
  2783                           ; BSR set to: 0
  2784  0110A0  0E0B               	movlw	11
  2785  0110A2  0100               	movlb	0	; () banked
  2786  0110A4  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  2787  0110A6  D001               	goto	l9107
  2788  0110A8  D010               	goto	l1217
  2789  0110AA                     l9107:
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;usb_device.c: 326: {
  2793                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  2794  0110AA  0100               	movlb	0	; () banked
  2795  0110AC  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2796  0110AE  0D04               	mullw	4
  2797  0110B0  0E00               	movlw	0
  2798  0110B2  24F3               	addwf	prodl,w,c
  2799  0110B4  6ED9               	movwf	fsr2l,c
  2800  0110B6  0E0D               	movlw	13
  2801  0110B8  20F4               	addwfc	prodh,w,c
  2802  0110BA  6EDA               	movwf	fsr2h,c
  2803  0110BC  6ADE               	clrf	postinc2,c
  2804  0110BE  6ADE               	clrf	postinc2,c
  2805  0110C0  6ADE               	clrf	postinc2,c
  2806  0110C2  6ADD               	clrf	postdec2,c
  2807                           
  2808                           ; BSR set to: 0
  2809  0110C4  0100               	movlb	0	; () banked
  2810  0110C6  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  2811  0110C8  D7EB               	goto	l9103
  2812  0110CA                     l1217:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;usb_device.c: 328: }
  2816                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  2817  0110CA  8C65               	bsf	3941,6,c	;volatile
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;usb_device.c: 334: UADDR = 0x00;
  2821  0110CC  0E00               	movlw	0
  2822  0110CE  010F               	movlb	15	; () banked
  2823  0110D0  6F38               	movwf	56,b	;volatile
  2824                           
  2825                           ; BSR set to: 15
  2826                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  2827  0110D2  9865               	bcf	3941,4,c	;volatile
  2828                           
  2829                           ; BSR set to: 15
  2830                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  2831  0110D4  9C65               	bcf	3941,6,c	;volatile
  2832                           
  2833                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
  2834  0110D6  D009               	goto	l9127
  2835  0110D8                     l9119:
  2836                           
  2837                           ;usb_device.c: 344: {
  2838                           ;usb_device.c: 345: (UIR &= 0xF7);
  2839  0110D8  9662               	bcf	3938,3,c	;volatile
  2840                           
  2841                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  2842  0110DA  0E00               	movlw	0
  2843  0110DC  6E0D               	movwf	_inPipes+3,c	;volatile
  2844                           
  2845                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  2846  0110DE  0E00               	movlw	0
  2847  0110E0  6E04               	movwf	_outPipes+3,c	;volatile
  2848                           
  2849                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  2850  0110E2  0E00               	movlw	0
  2851  0110E4  6E06               	movwf	_outPipes+5,c	;volatile
  2852  0110E6  0E00               	movlw	0
  2853  0110E8  6E05               	movwf	_outPipes+4,c	;volatile
  2854  0110EA                     l9127:
  2855  0110EA  B662               	btfsc	3938,3,c	;volatile
  2856  0110EC  D7F5               	goto	l9119
  2857                           
  2858                           ;usb_device.c: 350: }
  2859                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  2860  0110EE  0E01               	movlw	1
  2861  0110F0  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  2862                           
  2863                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  2864  0110F2  0E01               	movlw	1
  2865  0110F4  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  2866                           
  2867                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  2868  0110F6  0E00               	movlw	0
  2869  0110F8  6E23               	movwf	_USBDeferINDataStagePackets,c	;volatile
  2870                           
  2871                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  2872  0110FA  0E00               	movlw	0
  2873  0110FC  6E24               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  2874                           
  2875                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  2876  0110FE  0E00               	movlw	0
  2877  011100  0100               	movlb	0	; () banked
  2878  011102  6FBA               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  2879                           
  2880                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  2881  011104  0E00               	movlw	0
  2882  011106  0100               	movlb	0	; () banked
  2883  011108  6F68               	movwf	USBDeviceInit@i& (0+255),b
  2884  01110A                     l9131:
  2885                           
  2886                           ; BSR set to: 0
  2887  01110A  0E02               	movlw	2
  2888  01110C  0100               	movlb	0	; () banked
  2889  01110E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  2890  011110  D001               	goto	l9135
  2891  011112  D033               	goto	l9141
  2892  011114                     l9135:
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;usb_device.c: 364: {
  2896                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  2897  011114  0100               	movlb	0	; () banked
  2898  011116  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2899  011118  0D02               	mullw	2
  2900  01111A  0E10               	movlw	low _pBDTEntryIn
  2901  01111C  24F3               	addwf	prodl,w,c
  2902  01111E  6ED9               	movwf	fsr2l,c
  2903  011120  0E00               	movlw	high _pBDTEntryIn
  2904  011122  20F4               	addwfc	prodh,w,c
  2905  011124  6EDA               	movwf	fsr2h,c
  2906  011126  0E00               	movlw	0
  2907  011128  6EDE               	movwf	postinc2,c
  2908  01112A  0E00               	movlw	0
  2909  01112C  6EDD               	movwf	postdec2,c
  2910                           
  2911                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  2912  01112E  0100               	movlb	0	; () banked
  2913  011130  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2914  011132  0D02               	mullw	2
  2915  011134  0E9E               	movlw	low _pBDTEntryOut
  2916  011136  24F3               	addwf	prodl,w,c
  2917  011138  6ED9               	movwf	fsr2l,c
  2918  01113A  0E00               	movlw	high _pBDTEntryOut
  2919  01113C  20F4               	addwfc	prodh,w,c
  2920  01113E  6EDA               	movwf	fsr2h,c
  2921  011140  0E00               	movlw	0
  2922  011142  6EDE               	movwf	postinc2,c
  2923  011144  0E00               	movlw	0
  2924  011146  6EDD               	movwf	postdec2,c
  2925                           
  2926                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  2927  011148  0100               	movlb	0	; () banked
  2928  01114A  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2929  01114C  0D01               	mullw	1
  2930  01114E  0E16               	movlw	low _ep_data_in
  2931  011150  24F3               	addwf	prodl,w,c
  2932  011152  6ED9               	movwf	fsr2l,c
  2933  011154  0E00               	movlw	high _ep_data_in
  2934  011156  20F4               	addwfc	prodh,w,c
  2935  011158  6EDA               	movwf	fsr2h,c
  2936  01115A  0E00               	movlw	0
  2937  01115C  6EDF               	movwf	indf2,c
  2938                           
  2939                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  2940  01115E  0100               	movlb	0	; () banked
  2941  011160  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2942  011162  0D01               	mullw	1
  2943  011164  0E19               	movlw	low _ep_data_out
  2944  011166  24F3               	addwf	prodl,w,c
  2945  011168  6ED9               	movwf	fsr2l,c
  2946  01116A  0E00               	movlw	high _ep_data_out
  2947  01116C  20F4               	addwfc	prodh,w,c
  2948  01116E  6EDA               	movwf	fsr2h,c
  2949  011170  0E00               	movlw	0
  2950  011172  6EDF               	movwf	indf2,c
  2951                           
  2952                           ; BSR set to: 0
  2953  011174  0100               	movlb	0	; () banked
  2954  011176  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  2955  011178  D7C8               	goto	l9131
  2956  01117A                     l9141:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;usb_device.c: 369: }
  2960                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  2961  01117A  0E08               	movlw	8
  2962  01117C  6E10               	movwf	_pBDTEntryIn,c
  2963  01117E  0E0D               	movlw	13
  2964  011180  6E11               	movwf	_pBDTEntryIn+1,c
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  2968  011182  0E16               	movlw	22
  2969  011184  010F               	movlb	15	; () banked
  2970  011186  6F26               	movwf	38,b	;volatile
  2971                           
  2972                           ; BSR set to: 15
  2973                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  2974  011188  0E0D               	movlw	13
  2975  01118A  010D               	movlb	13	; () banked
  2976  01118C  6F03               	movwf	3,b	;volatile
  2977  01118E  0E30               	movlw	48
  2978  011190  6F02               	movwf	2,b	;volatile
  2979                           
  2980                           ; BSR set to: 13
  2981                           ;usb_device.c: 377: BDT[0].CNT = 8;
  2982  011192  0E08               	movlw	8
  2983  011194  010D               	movlb	13	; () banked
  2984  011196  6F01               	movwf	1,b	;volatile
  2985                           
  2986                           ; BSR set to: 13
  2987                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  2988  011198  0E04               	movlw	4
  2989  01119A  010D               	movlb	13	; () banked
  2990  01119C  6F00               	movwf	0,b	;volatile
  2991                           
  2992                           ; BSR set to: 13
  2993                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  2994  01119E  010D               	movlb	13	; () banked
  2995  0111A0  8F00               	bsf	0,7,b	;volatile
  2996                           
  2997                           ; BSR set to: 13
  2998                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  2999  0111A2  0E00               	movlw	0
  3000  0111A4  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  3001                           
  3002                           ; BSR set to: 13
  3003                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
  3004  0111A6  0E00               	movlw	0
  3005  0111A8  0100               	movlb	0	; () banked
  3006  0111AA  6FBB               	movwf	_USBDeviceState& (0+255),b	;volatile
  3007                           
  3008                           ; BSR set to: 0
  3009  0111AC  0012               	return		;funcret
  3010  0111AE                     __end_of_USBDeviceInit:
  3011                           	opt stack 0
  3012                           tblptru	equ	0xFF8
  3013                           tblptrh	equ	0xFF7
  3014                           tblptrl	equ	0xFF6
  3015                           tablat	equ	0xFF5
  3016                           prodh	equ	0xFF4
  3017                           prodl	equ	0xFF3
  3018                           intcon	equ	0xFF2
  3019                           intcon2	equ	0xFF1
  3020                           postinc0	equ	0xFEE
  3021                           wreg	equ	0xFE8
  3022                           postdec1	equ	0xFE5
  3023                           fsr1h	equ	0xFE2
  3024                           fsr1l	equ	0xFE1
  3025                           indf2	equ	0xFDF
  3026                           postinc2	equ	0xFDE
  3027                           postdec2	equ	0xFDD
  3028                           fsr2h	equ	0xFDA
  3029                           fsr2l	equ	0xFD9
  3030                           status	equ	0xFD8
  3031                           
  3032 ;; *************** function _memset *****************
  3033 ;; Defined at:
  3034 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  p1              2    0[BANK0 ] PTR void 
  3037 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  3038 ;;  c               2    2[BANK0 ] int 
  3039 ;;  n               2    4[BANK0 ] unsigned int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  p               2    6[BANK0 ] PTR unsigned char 
  3042 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  2    0[BANK0 ] PTR void 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3052 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;Total ram usage:        8 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:   12
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_USBDeviceInit
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text8
  3067  013644                     __ptext8:
  3068                           	opt stack 0
  3069  013644                     _memset:
  3070                           	opt stack 15
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;incstack = 0
  3074  013644  C060  F066         	movff	memset@p1,memset@p
  3075  013648  C061  F067         	movff	memset@p1+1,memset@p+1
  3076  01364C  D009               	goto	l8803
  3077  01364E                     l8799:
  3078  01364E  C066  FFD9         	movff	memset@p,fsr2l
  3079  013652  C067  FFDA         	movff	memset@p+1,fsr2h
  3080  013656  C062  FFDF         	movff	memset@c,indf2
  3081  01365A  0100               	movlb	0	; () banked
  3082  01365C  4B66               	infsnz	memset@p& (0+255),f,b
  3083  01365E  2B67               	incf	(memset@p+1)& (0+255),f,b
  3084  013660                     l8803:
  3085  013660  0100               	movlb	0	; () banked
  3086  013662  0764               	decf	memset@n& (0+255),f,b
  3087  013664  A0D8               	btfss	status,0,c
  3088  013666  0765               	decf	(memset@n+1)& (0+255),f,b
  3089  013668  0100               	movlb	0	; () banked
  3090  01366A  2964               	incf	memset@n& (0+255),w,b
  3091  01366C  E1F0               	bnz	l8799
  3092  01366E  0100               	movlb	0	; () banked
  3093  013670  2965               	incf	(memset@n+1)& (0+255),w,b
  3094  013672  B4D8               	btfsc	status,2,c
  3095  013674  0012               	return	
  3096  013676  D7EB               	goto	l8799
  3097  013678                     __end_of_memset:
  3098                           	opt stack 0
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           prodh	equ	0xFF4
  3104                           prodl	equ	0xFF3
  3105                           intcon	equ	0xFF2
  3106                           intcon2	equ	0xFF1
  3107                           postinc0	equ	0xFEE
  3108                           wreg	equ	0xFE8
  3109                           postdec1	equ	0xFE5
  3110                           fsr1h	equ	0xFE2
  3111                           fsr1l	equ	0xFE1
  3112                           indf2	equ	0xFDF
  3113                           postinc2	equ	0xFDE
  3114                           postdec2	equ	0xFDD
  3115                           fsr2h	equ	0xFDA
  3116                           fsr2l	equ	0xFD9
  3117                           status	equ	0xFD8
  3118                           
  3119 ;; *************** function _USBDeviceAttach *****************
  3120 ;; Defined at:
  3121 ;;		line 1353 in file "../My_library/usb/usb_device.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;		None               void
  3128 ;; Registers used:
  3129 ;;		wreg, status,2
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3139 ;;Total ram usage:        0 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:   12
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_USB_CDC_init
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text9
  3150  0134B0                     __ptext9:
  3151                           	opt stack 0
  3152  0134B0                     _USBDeviceAttach:
  3153                           	opt stack 16
  3154                           
  3155                           ;usb_device.c: 1357: {
  3156                           ;usb_device.c: 1358: if(1 == 1)
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;incstack = 0
  3160  0134B0  0100               	movlb	0	; () banked
  3161  0134B2  51BB               	movf	_USBDeviceState& (0+255),w,b	;volatile
  3162  0134B4  A4D8               	btfss	status,2,c
  3163  0134B6  0012               	return	
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;usb_device.c: 1359: {
  3167                           ;usb_device.c: 1361: UCON = 0;
  3168  0134B8  0E00               	movlw	0
  3169  0134BA  6E65               	movwf	3941,c	;volatile
  3170                           
  3171                           ;usb_device.c: 1364: UIE = 0;
  3172  0134BC  0E00               	movlw	0
  3173  0134BE  010F               	movlb	15	; () banked
  3174  0134C0  6F36               	movwf	54,b	;volatile
  3175                           
  3176                           ;usb_device.c: 1368: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  3177  0134C2  0E16               	movlw	22
  3178  0134C4  010F               	movlb	15	; () banked
  3179  0134C6  6F39               	movwf	57,b	;volatile
  3180  0134C8  0E9F               	movlw	159
  3181  0134CA  010F               	movlb	15	; () banked
  3182  0134CC  6F37               	movwf	55,b	;volatile
  3183  0134CE  0E7B               	movlw	123
  3184  0134D0  010F               	movlb	15	; () banked
  3185  0134D2  6F36               	movwf	54,b	;volatile
  3186                           
  3187                           ; BSR set to: 15
  3188                           ;usb_device.c: 1370: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  3189  0134D4  8ED0               	bsf	4048,7,c	;volatile
  3190                           
  3191                           ; BSR set to: 15
  3192  0134D6  88A2               	bsf	4002,4,c	;volatile
  3193                           
  3194                           ; BSR set to: 15
  3195  0134D8  88A0               	bsf	4000,4,c	;volatile
  3196                           
  3197                           ; BSR set to: 15
  3198  0134DA  8EF2               	bsf	intcon,7,c	;volatile
  3199                           
  3200                           ;usb_device.c: 1373: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3201  0134DC  D001               	goto	l1278
  3202  0134DE                     l1279:
  3203  0134DE  8665               	bsf	3941,3,c	;volatile
  3204  0134E0                     l1278:
  3205  0134E0  A665               	btfss	3941,3,c	;volatile
  3206  0134E2  D7FD               	goto	l1279
  3207                           
  3208                           ;usb_device.c: 1376: USBDeviceState = ATTACHED_STATE;
  3209  0134E4  0E01               	movlw	1
  3210  0134E6  0100               	movlb	0	; () banked
  3211  0134E8  6FBB               	movwf	_USBDeviceState& (0+255),b	;volatile
  3212                           
  3213                           ; BSR set to: 0
  3214  0134EA  0012               	return	
  3215  0134EC                     __end_of_USBDeviceAttach:
  3216                           	opt stack 0
  3217                           tblptru	equ	0xFF8
  3218                           tblptrh	equ	0xFF7
  3219                           tblptrl	equ	0xFF6
  3220                           tablat	equ	0xFF5
  3221                           prodh	equ	0xFF4
  3222                           prodl	equ	0xFF3
  3223                           intcon	equ	0xFF2
  3224                           intcon2	equ	0xFF1
  3225                           postinc0	equ	0xFEE
  3226                           wreg	equ	0xFE8
  3227                           postdec1	equ	0xFE5
  3228                           fsr1h	equ	0xFE2
  3229                           fsr1l	equ	0xFE1
  3230                           indf2	equ	0xFDF
  3231                           postinc2	equ	0xFDE
  3232                           postdec2	equ	0xFDD
  3233                           fsr2h	equ	0xFDA
  3234                           fsr2l	equ	0xFD9
  3235                           status	equ	0xFD8
  3236                           
  3237 ;; *************** function _UART_init *****************
  3238 ;; Defined at:
  3239 ;;		line 10 in file "../My_library/My_UART.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;		None               void
  3246 ;; Registers used:
  3247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3257 ;;Total ram usage:        0 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:   14
  3260 ;; This function calls:
  3261 ;;		_UART_buffer_init
  3262 ;; This function is called by:
  3263 ;;		_setup
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text10
  3268  013832                     __ptext10:
  3269                           	opt stack 0
  3270  013832                     _UART_init:
  3271                           	opt stack 15
  3272                           
  3273                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;incstack = 0
  3277  013832  9CAD               	bcf	4013,6,c	;volatile
  3278                           
  3279                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  3280  013834  8AAD               	bsf	4013,5,c	;volatile
  3281                           
  3282                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  3283  013836  98AD               	bcf	4013,4,c	;volatile
  3284                           
  3285                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  3286  013838  94AD               	bcf	4013,2,c	;volatile
  3287                           
  3288                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  3289  01383A  8EAC               	bsf	4012,7,c	;volatile
  3290                           
  3291                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  3292  01383C  9CAC               	bcf	4012,6,c	;volatile
  3293                           
  3294                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  3295  01383E  88AC               	bsf	4012,4,c	;volatile
  3296                           
  3297                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  3298  013840  867E               	bsf	3966,3,c	;volatile
  3299                           
  3300                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  3301  013842  0E19               	movlw	25
  3302  013844  6EB0               	movwf	4016,c	;volatile
  3303                           
  3304                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  3305  013846  0E00               	movlw	0
  3306  013848  6E7F               	movwf	3967,c	;volatile
  3307                           
  3308                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  3309  01384A  9A9F               	bcf	3999,5,c	;volatile
  3310                           
  3311                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  3312  01384C  989F               	bcf	3999,4,c	;volatile
  3313                           
  3314                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  3315  01384E  8A9D               	bsf	3997,5,c	;volatile
  3316                           
  3317                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  3318  013850  8CF2               	bsf	intcon,6,c	;volatile
  3319                           
  3320                           ;My_UART.c: 27: UART_buffer_init();
  3321  013852  ECE9  F099         	call	_UART_buffer_init	;wreg free
  3322  013856  0012               	return		;funcret
  3323  013858                     __end_of_UART_init:
  3324                           	opt stack 0
  3325                           tblptru	equ	0xFF8
  3326                           tblptrh	equ	0xFF7
  3327                           tblptrl	equ	0xFF6
  3328                           tablat	equ	0xFF5
  3329                           prodh	equ	0xFF4
  3330                           prodl	equ	0xFF3
  3331                           intcon	equ	0xFF2
  3332                           intcon2	equ	0xFF1
  3333                           postinc0	equ	0xFEE
  3334                           wreg	equ	0xFE8
  3335                           postdec1	equ	0xFE5
  3336                           fsr1h	equ	0xFE2
  3337                           fsr1l	equ	0xFE1
  3338                           indf2	equ	0xFDF
  3339                           postinc2	equ	0xFDE
  3340                           postdec2	equ	0xFDD
  3341                           fsr2h	equ	0xFDA
  3342                           fsr2l	equ	0xFD9
  3343                           status	equ	0xFD8
  3344                           
  3345 ;; *************** function _UART_buffer_init *****************
  3346 ;; Defined at:
  3347 ;;		line 30 in file "../My_library/My_UART.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:   13
  3368 ;; This function calls:
  3369 ;;		_ringbuf_init
  3370 ;; This function is called by:
  3371 ;;		_UART_init
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text11
  3376  0133D2                     __ptext11:
  3377                           	opt stack 0
  3378  0133D2                     _UART_buffer_init:
  3379                           	opt stack 15
  3380                           
  3381                           ;My_UART.c: 31: static uint8_t uarttx[800];
  3382                           ;My_UART.c: 32: ringbuf_init(&uart_tx, uarttx, sizeof (uarttx));
  3383                           
  3384                           ;incstack = 0
  3385  0133D2  0ED4               	movlw	low _uart_tx
  3386  0133D4  0100               	movlb	0	; () banked
  3387  0133D6  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3388  0133D8  0E01               	movlw	high _uart_tx
  3389  0133DA  0100               	movlb	0	; () banked
  3390  0133DC  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3391  0133DE  0EFA               	movlw	low UART_buffer_init@uarttx
  3392  0133E0  0100               	movlb	0	; () banked
  3393  0133E2  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3394  0133E4  0E05               	movlw	high UART_buffer_init@uarttx
  3395  0133E6  0100               	movlb	0	; () banked
  3396  0133E8  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3397  0133EA  0E03               	movlw	3
  3398  0133EC  0100               	movlb	0	; () banked
  3399  0133EE  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3400  0133F0  0E20               	movlw	32
  3401  0133F2  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3402  0133F4  EC70  F099         	call	_ringbuf_init	;wreg free
  3403                           
  3404                           ;My_UART.c: 33: static uint8_t uartrx[250];
  3405                           ;My_UART.c: 34: ringbuf_init(&uart_rx, uartrx, sizeof (uartrx));
  3406  0133F8  0ECC               	movlw	low _uart_rx
  3407  0133FA  0100               	movlb	0	; () banked
  3408  0133FC  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3409  0133FE  0E01               	movlw	high _uart_rx
  3410  013400  0100               	movlb	0	; () banked
  3411  013402  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3412  013404  0E00               	movlw	low UART_buffer_init@uartrx
  3413  013406  0100               	movlb	0	; () banked
  3414  013408  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3415  01340A  0E04               	movlw	high UART_buffer_init@uartrx
  3416  01340C  0100               	movlb	0	; () banked
  3417  01340E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3418  013410  0E00               	movlw	0
  3419  013412  0100               	movlb	0	; () banked
  3420  013414  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3421  013416  0EFA               	movlw	250
  3422  013418  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3423  01341A  EC70  F099         	call	_ringbuf_init	;wreg free
  3424  01341E  0012               	return		;funcret
  3425  013420                     __end_of_UART_buffer_init:
  3426                           	opt stack 0
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           prodh	equ	0xFF4
  3432                           prodl	equ	0xFF3
  3433                           intcon	equ	0xFF2
  3434                           intcon2	equ	0xFF1
  3435                           postinc0	equ	0xFEE
  3436                           wreg	equ	0xFE8
  3437                           postdec1	equ	0xFE5
  3438                           fsr1h	equ	0xFE2
  3439                           fsr1l	equ	0xFE1
  3440                           indf2	equ	0xFDF
  3441                           postinc2	equ	0xFDE
  3442                           postdec2	equ	0xFDD
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447 ;; *************** function _ringbuf_init *****************
  3448 ;; Defined at:
  3449 ;;		line 5 in file "../My_library/My_ringbuf.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  3452 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_tx(8), uart_rx(8), 
  3453 ;;		 -> usb_tx(8), usb_rx(8), 
  3454 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  3455 ;;		 -> USB_CDC_buffer_init@rxbuf(250), USB_CDC_buffer_init@txbuf(800), UART_buffer_init@uartrx(250), UART_buffer_init@u
      +arttx(800), 
  3456 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
  3457 ;;  bufsize         2    4[BANK0 ] unsigned int 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;		None               void
  3462 ;; Registers used:
  3463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3469 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3472 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;Total ram usage:        6 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:   12
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_UART_buffer_init
  3480 ;;		_USB_CDC_buffer_init
  3481 ;;		_ST7032_init
  3482 ;;		_terminal_task
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text12
  3487  0132E0                     __ptext12:
  3488                           	opt stack 0
  3489  0132E0                     _ringbuf_init:
  3490                           	opt stack 15
  3491                           
  3492                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  3493                           
  3494                           ;incstack = 0
  3495  0132E0  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  3496  0132E4  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  3497  0132E8  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  3498  0132EC  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  3499                           
  3500                           ;My_ringbuf.c: 7: rb->size = bufsize;
  3501  0132F0  0100               	movlb	0	; () banked
  3502  0132F2  EE20 F002          	lfsr	2,2
  3503  0132F6  5160               	movf	ringbuf_init@rb& (0+255),w,b
  3504  0132F8  26D9               	addwf	fsr2l,f,c
  3505  0132FA  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  3506  0132FC  22DA               	addwfc	fsr2h,f,c
  3507  0132FE  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  3508  013302  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;My_ringbuf.c: 8: rb->head = 0;
  3512  013306  0100               	movlb	0	; () banked
  3513  013308  EE20 F004          	lfsr	2,4
  3514  01330C  5160               	movf	ringbuf_init@rb& (0+255),w,b
  3515  01330E  26D9               	addwf	fsr2l,f,c
  3516  013310  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  3517  013312  22DA               	addwfc	fsr2h,f,c
  3518  013314  0E00               	movlw	0
  3519  013316  6EDE               	movwf	postinc2,c
  3520  013318  0E00               	movlw	0
  3521  01331A  6EDD               	movwf	postdec2,c
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;My_ringbuf.c: 9: rb->tail = 0;
  3525  01331C  0100               	movlb	0	; () banked
  3526  01331E  EE20 F006          	lfsr	2,6
  3527  013322  5160               	movf	ringbuf_init@rb& (0+255),w,b
  3528  013324  26D9               	addwf	fsr2l,f,c
  3529  013326  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  3530  013328  22DA               	addwfc	fsr2h,f,c
  3531  01332A  0E00               	movlw	0
  3532  01332C  6EDE               	movwf	postinc2,c
  3533  01332E  0E00               	movlw	0
  3534  013330  6EDD               	movwf	postdec2,c
  3535                           
  3536                           ; BSR set to: 0
  3537  013332  0012               	return		;funcret
  3538  013334                     __end_of_ringbuf_init:
  3539                           	opt stack 0
  3540                           tblptru	equ	0xFF8
  3541                           tblptrh	equ	0xFF7
  3542                           tblptrl	equ	0xFF6
  3543                           tablat	equ	0xFF5
  3544                           prodh	equ	0xFF4
  3545                           prodl	equ	0xFF3
  3546                           intcon	equ	0xFF2
  3547                           intcon2	equ	0xFF1
  3548                           postinc0	equ	0xFEE
  3549                           wreg	equ	0xFE8
  3550                           postdec1	equ	0xFE5
  3551                           fsr1h	equ	0xFE2
  3552                           fsr1l	equ	0xFE1
  3553                           indf2	equ	0xFDF
  3554                           postinc2	equ	0xFDE
  3555                           postdec2	equ	0xFDD
  3556                           fsr2h	equ	0xFDA
  3557                           fsr2l	equ	0xFD9
  3558                           status	equ	0xFD8
  3559                           
  3560 ;; *************** function _RTCC_init *****************
  3561 ;; Defined at:
  3562 ;;		line 17 in file "../My_library/My_RTCC.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;		None               void
  3569 ;; Registers used:
  3570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3580 ;;Total ram usage:        0 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:   16
  3583 ;; This function calls:
  3584 ;;		_RTCC_from_RTCC
  3585 ;;		_RTCC_from_epoch
  3586 ;; This function is called by:
  3587 ;;		_setup
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text13
  3592  013092                     __ptext13:
  3593                           	opt stack 0
  3594  013092                     _RTCC_init:
  3595                           	opt stack 13
  3596                           
  3597                           ;My_RTCC.c: 18: RTCCFGbits.RTCWREN = 1;
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;incstack = 0
  3601  013092  010F               	movlb	15	; () banked
  3602  013094  8B3F               	bsf	63,5,b	;volatile
  3603                           
  3604                           ;My_RTCC.c: 19: if (RTCCFGbits.RTCWREN != 1) {
  3605  013096  010F               	movlb	15	; () banked
  3606  013098  BB3F               	btfsc	63,5,b	;volatile
  3607  01309A  D006               	goto	l9375
  3608                           
  3609                           ; BSR set to: 15
  3610                           ;My_RTCC.c: 20: EECON2 = 0x55;
  3611  01309C  0E55               	movlw	85
  3612  01309E  6EA7               	movwf	4007,c	;volatile
  3613                           
  3614                           ;My_RTCC.c: 21: EECON2 = 0xAA;
  3615  0130A0  0EAA               	movlw	170
  3616  0130A2  6EA7               	movwf	4007,c	;volatile
  3617                           
  3618                           ; BSR set to: 15
  3619                           ;My_RTCC.c: 22: RTCCFGbits.RTCWREN = 1;
  3620  0130A4  010F               	movlb	15	; () banked
  3621  0130A6  8B3F               	bsf	63,5,b	;volatile
  3622  0130A8                     l9375:
  3623                           
  3624                           ; BSR set to: 15
  3625                           ;My_RTCC.c: 23: }
  3626                           ;My_RTCC.c: 24: RTCCFGbits.RTCEN = 1;
  3627  0130A8  010F               	movlb	15	; () banked
  3628  0130AA  8F3F               	bsf	63,7,b	;volatile
  3629                           
  3630                           ; BSR set to: 15
  3631                           ;My_RTCC.c: 25: RTCCFGbits.RTCOE = 0;
  3632  0130AC  010F               	movlb	15	; () banked
  3633  0130AE  953F               	bcf	63,2,b	;volatile
  3634                           
  3635                           ; BSR set to: 15
  3636                           ;My_RTCC.c: 26: PADCFG1bits.RTSECSEL0 = 1;
  3637  0130B0  010F               	movlb	15	; () banked
  3638  0130B2  833C               	bsf	60,1,b	;volatile
  3639                           
  3640                           ; BSR set to: 15
  3641                           ;My_RTCC.c: 27: PADCFG1bits.RTSECSEL1 = 1;
  3642  0130B4  010F               	movlb	15	; () banked
  3643  0130B6  853C               	bsf	60,2,b	;volatile
  3644                           
  3645                           ;My_RTCC.c: 28: RTCCAL = 0x00;
  3646  0130B8  0E00               	movlw	0
  3647  0130BA  010F               	movlb	15	; () banked
  3648  0130BC  6F3E               	movwf	62,b	;volatile
  3649                           
  3650                           ; BSR set to: 15
  3651                           ;My_RTCC.c: 29: T1CONbits.T1OSCEN = 1;
  3652  0130BE  86CD               	bsf	4045,3,c	;volatile
  3653                           
  3654                           ; BSR set to: 15
  3655                           ;My_RTCC.c: 31: RTCC_from_RTCC(&now);
  3656  0130C0  0EB6               	movlw	low _now
  3657  0130C2  0100               	movlb	0	; () banked
  3658  0130C4  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3659  0130C6  0E01               	movlw	high _now
  3660  0130C8  0100               	movlb	0	; () banked
  3661  0130CA  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3662  0130CC  EC99  F09C         	call	_RTCC_from_RTCC	;wreg free
  3663                           
  3664                           ;My_RTCC.c: 32: if (now.DD == 0) {
  3665  0130D0  0101               	movlb	1	; () banked
  3666  0130D2  51BE               	movf	(_now+8)& (0+255),w,b
  3667  0130D4  A4D8               	btfss	status,2,c
  3668  0130D6  0012               	return	
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;My_RTCC.c: 33: now.epoch = 0;
  3672  0130D8  0E00               	movlw	0
  3673  0130DA  0101               	movlb	1	; () banked
  3674  0130DC  6FB6               	movwf	_now& (0+255),b
  3675  0130DE  0E00               	movlw	0
  3676  0130E0  6FB7               	movwf	(_now+1)& (0+255),b
  3677  0130E2  0E00               	movlw	0
  3678  0130E4  6FB8               	movwf	(_now+2)& (0+255),b
  3679  0130E6  0E00               	movlw	0
  3680  0130E8  6FB9               	movwf	(_now+3)& (0+255),b
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;My_RTCC.c: 34: RTCC_from_epoch(&now);
  3684  0130EA  0EB6               	movlw	low _now
  3685  0130EC  0100               	movlb	0	; () banked
  3686  0130EE  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  3687  0130F0  0E01               	movlw	high _now
  3688  0130F2  0100               	movlb	0	; () banked
  3689  0130F4  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  3690  0130F6  EC7F  F09C         	call	_RTCC_from_epoch	;wreg free
  3691  0130FA  0012               	return	
  3692  0130FC                     __end_of_RTCC_init:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           tblptrh	equ	0xFF7
  3696                           tblptrl	equ	0xFF6
  3697                           tablat	equ	0xFF5
  3698                           prodh	equ	0xFF4
  3699                           prodl	equ	0xFF3
  3700                           intcon	equ	0xFF2
  3701                           intcon2	equ	0xFF1
  3702                           postinc0	equ	0xFEE
  3703                           wreg	equ	0xFE8
  3704                           postdec1	equ	0xFE5
  3705                           fsr1h	equ	0xFE2
  3706                           fsr1l	equ	0xFE1
  3707                           indf2	equ	0xFDF
  3708                           postinc2	equ	0xFDE
  3709                           postdec2	equ	0xFDD
  3710                           fsr2h	equ	0xFDA
  3711                           fsr2l	equ	0xFD9
  3712                           status	equ	0xFD8
  3713                           
  3714 ;; *************** function _RTCC_from_epoch *****************
  3715 ;; Defined at:
  3716 ;;		line 63 in file "../My_library/My_RTCC.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  tm              2   47[BANK0 ] PTR struct .
  3719 ;;		 -> now(14), 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;		None               void
  3724 ;; Registers used:
  3725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3735 ;;Total ram usage:        2 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:   15
  3738 ;; This function calls:
  3739 ;;		_caltime_to_RTCC
  3740 ;;		_epoch_to_caltime
  3741 ;; This function is called by:
  3742 ;;		_setup
  3743 ;;		_RTCC_init
  3744 ;;		_RTCC_adjust_time_inc
  3745 ;;		_RTCC_adjust_time_dec
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text14
  3750  0138FE                     __ptext14:
  3751                           	opt stack 0
  3752  0138FE                     _RTCC_from_epoch:
  3753                           	opt stack 13
  3754                           
  3755                           ;My_RTCC.c: 64: epoch_to_caltime(tm);
  3756                           
  3757                           ;incstack = 0
  3758  0138FE  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  3759  013902  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  3760  013906  ECBD  F085         	call	_epoch_to_caltime	;wreg free
  3761                           
  3762                           ;My_RTCC.c: 65: caltime_to_RTCC(tm);
  3763  01390A  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  3764  01390E  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  3765  013912  ECD3  F08E         	call	_caltime_to_RTCC	;wreg free
  3766  013916  0012               	return		;funcret
  3767  013918                     __end_of_RTCC_from_epoch:
  3768                           	opt stack 0
  3769                           tblptru	equ	0xFF8
  3770                           tblptrh	equ	0xFF7
  3771                           tblptrl	equ	0xFF6
  3772                           tablat	equ	0xFF5
  3773                           prodh	equ	0xFF4
  3774                           prodl	equ	0xFF3
  3775                           intcon	equ	0xFF2
  3776                           intcon2	equ	0xFF1
  3777                           postinc0	equ	0xFEE
  3778                           wreg	equ	0xFE8
  3779                           postdec1	equ	0xFE5
  3780                           fsr1h	equ	0xFE2
  3781                           fsr1l	equ	0xFE1
  3782                           indf2	equ	0xFDF
  3783                           postinc2	equ	0xFDE
  3784                           postdec2	equ	0xFDD
  3785                           fsr2h	equ	0xFDA
  3786                           fsr2l	equ	0xFD9
  3787                           status	equ	0xFD8
  3788                           
  3789 ;; *************** function _epoch_to_caltime *****************
  3790 ;; Defined at:
  3791 ;;		line 289 in file "../My_library/My_RTCC.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  tm              2   33[BANK0 ] PTR struct .
  3794 ;;		 -> now(14), 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  num             4   43[BANK0 ] unsigned long 
  3797 ;;  day             2   39[BANK0 ] unsigned int 
  3798 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  3799 ;;  month           1   42[BANK0 ] unsigned char 
  3800 ;;  year            1   41[BANK0 ] unsigned char 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;		None               void
  3803 ;; Registers used:
  3804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;Total ram usage:       14 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:   14
  3817 ;; This function calls:
  3818 ;;		_get_quot_rem
  3819 ;;		_month_length
  3820 ;; This function is called by:
  3821 ;;		_RTCC_from_epoch
  3822 ;;		_RTCC_from_caltime
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text15
  3827  010B7A                     __ptext15:
  3828                           	opt stack 0
  3829  010B7A                     _epoch_to_caltime:
  3830                           	opt stack 13
  3831                           
  3832                           ;My_RTCC.c: 292: static uint16_t day_cache = 0;
  3833                           ;My_RTCC.c: 293: static uint8_t month_cache = 1;
  3834                           ;My_RTCC.c: 294: static uint8_t year_cache = 0;
  3835                           ;My_RTCC.c: 295: uint16_t day_since_epoch;
  3836                           ;My_RTCC.c: 296: uint16_t day;
  3837                           ;My_RTCC.c: 297: uint8_t year = 0;
  3838                           
  3839                           ;incstack = 0
  3840  010B7A  0E00               	movlw	0
  3841  010B7C  0100               	movlb	0	; () banked
  3842  010B7E  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  3843                           
  3844                           ;My_RTCC.c: 298: uint8_t month = 1;
  3845  010B80  0E01               	movlw	1
  3846  010B82  0100               	movlb	0	; () banked
  3847  010B84  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;My_RTCC.c: 299: epoch_t num;
  3851                           ;My_RTCC.c: 301: num = tm->epoch;
  3852  010B86  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  3853  010B8A  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  3854  010B8E  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  3855  010B92  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  3856  010B96  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  3857  010B9A  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;My_RTCC.c: 302: tm->ss = get_quot_rem(&num, 60);
  3861  010B9E  0E8B               	movlw	low epoch_to_caltime@num
  3862  010BA0  0100               	movlb	0	; () banked
  3863  010BA2  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3864  010BA4  0E00               	movlw	high epoch_to_caltime@num
  3865  010BA6  0100               	movlb	0	; () banked
  3866  010BA8  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3867  010BAA  0E3C               	movlw	60
  3868  010BAC  0100               	movlb	0	; () banked
  3869  010BAE  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3870  010BB0  EC3E  F08F         	call	_get_quot_rem	;wreg free
  3871  010BB4  0100               	movlb	0	; () banked
  3872  010BB6  EE20 F004          	lfsr	2,4
  3873  010BBA  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3874  010BBC  26D9               	addwf	fsr2l,f,c
  3875  010BBE  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3876  010BC0  22DA               	addwfc	fsr2h,f,c
  3877  010BC2  0100               	movlb	0	; () banked
  3878  010BC4  C079  FFDF         	movff	?_get_quot_rem,indf2
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;My_RTCC.c: 303: tm->mm = get_quot_rem(&num, 60);
  3882  010BC8  0E8B               	movlw	low epoch_to_caltime@num
  3883  010BCA  0100               	movlb	0	; () banked
  3884  010BCC  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3885  010BCE  0E00               	movlw	high epoch_to_caltime@num
  3886  010BD0  0100               	movlb	0	; () banked
  3887  010BD2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3888  010BD4  0E3C               	movlw	60
  3889  010BD6  0100               	movlb	0	; () banked
  3890  010BD8  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3891  010BDA  EC3E  F08F         	call	_get_quot_rem	;wreg free
  3892  010BDE  0100               	movlb	0	; () banked
  3893  010BE0  EE20 F005          	lfsr	2,5
  3894  010BE4  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3895  010BE6  26D9               	addwf	fsr2l,f,c
  3896  010BE8  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3897  010BEA  22DA               	addwfc	fsr2h,f,c
  3898  010BEC  0100               	movlb	0	; () banked
  3899  010BEE  C079  FFDF         	movff	?_get_quot_rem,indf2
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;My_RTCC.c: 304: tm->hh = get_quot_rem(&num, 24);
  3903  010BF2  0E8B               	movlw	low epoch_to_caltime@num
  3904  010BF4  0100               	movlb	0	; () banked
  3905  010BF6  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3906  010BF8  0E00               	movlw	high epoch_to_caltime@num
  3907  010BFA  0100               	movlb	0	; () banked
  3908  010BFC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3909  010BFE  0E18               	movlw	24
  3910  010C00  0100               	movlb	0	; () banked
  3911  010C02  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3912  010C04  EC3E  F08F         	call	_get_quot_rem	;wreg free
  3913  010C08  0100               	movlb	0	; () banked
  3914  010C0A  EE20 F006          	lfsr	2,6
  3915  010C0E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3916  010C10  26D9               	addwf	fsr2l,f,c
  3917  010C12  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3918  010C14  22DA               	addwfc	fsr2h,f,c
  3919  010C16  0100               	movlb	0	; () banked
  3920  010C18  C079  FFDF         	movff	?_get_quot_rem,indf2
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;My_RTCC.c: 305: day = num;
  3924  010C1C  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  3925  010C20  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;My_RTCC.c: 306: day_since_epoch = day;
  3929  010C24  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  3930  010C28  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;My_RTCC.c: 308: num += 6;
  3934  010C2C  0E06               	movlw	6
  3935  010C2E  0100               	movlb	0	; () banked
  3936  010C30  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  3937  010C32  0E00               	movlw	0
  3938  010C34  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  3939  010C36  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  3940  010C38  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;My_RTCC.c: 309: tm->EE = get_quot_rem(&num, 7);
  3944  010C3A  0E8B               	movlw	low epoch_to_caltime@num
  3945  010C3C  0100               	movlb	0	; () banked
  3946  010C3E  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3947  010C40  0E00               	movlw	high epoch_to_caltime@num
  3948  010C42  0100               	movlb	0	; () banked
  3949  010C44  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3950  010C46  0E07               	movlw	7
  3951  010C48  0100               	movlb	0	; () banked
  3952  010C4A  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3953  010C4C  EC3E  F08F         	call	_get_quot_rem	;wreg free
  3954  010C50  0100               	movlb	0	; () banked
  3955  010C52  EE20 F007          	lfsr	2,7
  3956  010C56  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3957  010C58  26D9               	addwf	fsr2l,f,c
  3958  010C5A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3959  010C5C  22DA               	addwfc	fsr2h,f,c
  3960  010C5E  0100               	movlb	0	; () banked
  3961  010C60  C079  FFDF         	movff	?_get_quot_rem,indf2
  3962                           
  3963                           ;My_RTCC.c: 318: while (day >= month_length(year, month)) {
  3964  010C64  D03F               	goto	l8747
  3965  010C66                     l630:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;My_RTCC.c: 319: LATB2 = 1;
  3969  010C66  848A               	bsf	3978,2,c	;volatile
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;My_RTCC.c: 320: day = day - month_length(year, month);
  3973  010C68  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  3974  010C6C  0100               	movlb	0	; () banked
  3975  010C6E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  3976  010C70  EC8A  F08D         	call	_month_length
  3977  010C74  0100               	movlb	0	; () banked
  3978  010C76  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  3979  010C78  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  3980  010C7A  0100               	movlb	0	; () banked
  3981  010C7C  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  3982  010C7E  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3983  010C80  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3984  010C82  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3985  010C84  0100               	movlb	0	; () banked
  3986  010C86  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  3987  010C88  0100               	movlb	0	; () banked
  3988  010C8A  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  3989  010C8C  0100               	movlb	0	; () banked
  3990  010C8E  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  3991  010C90  0100               	movlb	0	; () banked
  3992  010C92  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  3993  010C94  0100               	movlb	0	; () banked
  3994  010C96  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3995  010C98  0100               	movlb	0	; () banked
  3996  010C9A  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;My_RTCC.c: 321: if (month == 12) {
  4000  010C9C  0E0C               	movlw	12
  4001  010C9E  0100               	movlb	0	; () banked
  4002  010CA0  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  4003  010CA2  A4D8               	btfss	status,2,c
  4004  010CA4  D019               	goto	l8741
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;My_RTCC.c: 322: month = 1;
  4008  010CA6  0E01               	movlw	1
  4009  010CA8  0100               	movlb	0	; () banked
  4010  010CAA  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;My_RTCC.c: 323: year++;
  4014  010CAC  0100               	movlb	0	; () banked
  4015  010CAE  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;My_RTCC.c: 325: if (year >= 100) {
  4019  010CB0  0E63               	movlw	99
  4020  010CB2  0100               	movlb	0	; () banked
  4021  010CB4  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  4022  010CB6  D012               	goto	l8743
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;My_RTCC.c: 326: tm->epoch -= 3155760000;
  4026  010CB8  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  4027  010CBC  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  4028  010CC0  0E80               	movlw	128
  4029  010CC2  5EDE               	subwf	postinc2,f,c
  4030  010CC4  0E13               	movlw	19
  4031  010CC6  5ADE               	subwfb	postinc2,f,c
  4032  010CC8  0E19               	movlw	25
  4033  010CCA  5ADE               	subwfb	postinc2,f,c
  4034  010CCC  0EBC               	movlw	188
  4035  010CCE  5ADE               	subwfb	postinc2,f,c
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;My_RTCC.c: 327: year = 0;
  4039  010CD0  0E00               	movlw	0
  4040  010CD2  0100               	movlb	0	; () banked
  4041  010CD4  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;My_RTCC.c: 328: }
  4045                           ;My_RTCC.c: 329: } else {
  4046  010CD6  D002               	goto	l8743
  4047  010CD8                     l8741:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;My_RTCC.c: 330: month++;
  4051  010CD8  0100               	movlb	0	; () banked
  4052  010CDA  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  4053  010CDC                     l8743:
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;My_RTCC.c: 331: }
  4057                           ;My_RTCC.c: 332: month_cache = month;
  4058  010CDC  C08A  F0DB         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;My_RTCC.c: 333: year_cache = year;
  4062  010CE0  C089  F0C3         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  4063  010CE4                     l8747:
  4064                           
  4065                           ; BSR set to: 0
  4066  010CE4  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  4067  010CE8  0100               	movlb	0	; () banked
  4068  010CEA  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  4069  010CEC  EC8A  F08D         	call	_month_length
  4070  010CF0  0100               	movlb	0	; () banked
  4071  010CF2  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  4072  010CF4  0100               	movlb	0	; () banked
  4073  010CF6  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  4074  010CF8  0100               	movlb	0	; () banked
  4075  010CFA  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  4076  010CFC  0E00               	movlw	0
  4077  010CFE  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  4078  010D00  B0D8               	btfsc	status,0,c
  4079  010D02  D7B1               	goto	l630
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;My_RTCC.c: 334: }
  4083                           ;My_RTCC.c: 335: day_cache = day_since_epoch - day;
  4084                           
  4085                           ; BSR set to: 0
  4086  010D04  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  4087  010D08  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  4088  010D0C  0100               	movlb	0	; () banked
  4089  010D0E  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  4090  010D10  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  4091  010D12  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  4092  010D14  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  4093  010D16  0100               	movlb	0	; () banked
  4094  010D18  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  4095  010D1A  0100               	movlb	0	; () banked
  4096  010D1C  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  4097  010D1E  0100               	movlb	0	; () banked
  4098  010D20  6FB2               	movwf	epoch_to_caltime@day_cache& (0+255),b
  4099  010D22  0100               	movlb	0	; () banked
  4100  010D24  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  4101  010D26  0100               	movlb	0	; () banked
  4102  010D28  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  4103  010D2A  0100               	movlb	0	; () banked
  4104  010D2C  6FB3               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;My_RTCC.c: 336: day++;
  4108  010D2E  0100               	movlb	0	; () banked
  4109  010D30  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  4110  010D32  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;My_RTCC.c: 338: tm->YY = year;
  4114  010D34  0100               	movlb	0	; () banked
  4115  010D36  EE20 F00A          	lfsr	2,10
  4116  010D3A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4117  010D3C  26D9               	addwf	fsr2l,f,c
  4118  010D3E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4119  010D40  22DA               	addwfc	fsr2h,f,c
  4120  010D42  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;My_RTCC.c: 339: tm->MM = month;
  4124  010D46  0100               	movlb	0	; () banked
  4125  010D48  EE20 F009          	lfsr	2,9
  4126  010D4C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4127  010D4E  26D9               	addwf	fsr2l,f,c
  4128  010D50  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4129  010D52  22DA               	addwfc	fsr2h,f,c
  4130  010D54  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;My_RTCC.c: 340: tm->DD = day;
  4134  010D58  0100               	movlb	0	; () banked
  4135  010D5A  EE20 F008          	lfsr	2,8
  4136  010D5E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4137  010D60  26D9               	addwf	fsr2l,f,c
  4138  010D62  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4139  010D64  22DA               	addwfc	fsr2h,f,c
  4140  010D66  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  4141                           
  4142                           ; BSR set to: 0
  4143  010D6A  0012               	return		;funcret
  4144  010D6C                     __end_of_epoch_to_caltime:
  4145                           	opt stack 0
  4146                           tblptru	equ	0xFF8
  4147                           tblptrh	equ	0xFF7
  4148                           tblptrl	equ	0xFF6
  4149                           tablat	equ	0xFF5
  4150                           prodh	equ	0xFF4
  4151                           prodl	equ	0xFF3
  4152                           intcon	equ	0xFF2
  4153                           intcon2	equ	0xFF1
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           postdec1	equ	0xFE5
  4157                           fsr1h	equ	0xFE2
  4158                           fsr1l	equ	0xFE1
  4159                           indf2	equ	0xFDF
  4160                           postinc2	equ	0xFDE
  4161                           postdec2	equ	0xFDD
  4162                           fsr2h	equ	0xFDA
  4163                           fsr2l	equ	0xFD9
  4164                           status	equ	0xFD8
  4165                           
  4166 ;; *************** function _get_quot_rem *****************
  4167 ;; Defined at:
  4168 ;;		line 244 in file "../My_library/My_RTCC.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  4171 ;;		 -> epoch_to_caltime@num(4), 
  4172 ;;  div             1   27[BANK0 ] unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  num             4   29[BANK0 ] unsigned long 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  4   25[BANK0 ] unsigned long 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4184 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;Total ram usage:        8 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:   13
  4191 ;; This function calls:
  4192 ;;		___lldiv
  4193 ;;		___lmul
  4194 ;; This function is called by:
  4195 ;;		_epoch_to_caltime
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text16
  4200  011E7C                     __ptext16:
  4201                           	opt stack 0
  4202  011E7C                     _get_quot_rem:
  4203                           	opt stack 13
  4204                           
  4205                           ;My_RTCC.c: 247: epoch_t num = *quot;
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;incstack = 0
  4209  011E7C  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  4210  011E80  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  4211  011E84  CFDE F07D          	movff	postinc2,get_quot_rem@num
  4212  011E88  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  4213  011E8C  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  4214  011E90  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  4215                           
  4216                           ;My_RTCC.c: 248: return num - (*quot = num / div) * div;
  4217  011E94  0100               	movlb	0	; () banked
  4218  011E96  517B               	movf	get_quot_rem@div& (0+255),w,b
  4219  011E98  0100               	movlb	0	; () banked
  4220  011E9A  6F64               	movwf	___lldiv@divisor& (0+255),b
  4221  011E9C  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  4222  011E9E  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  4223  011EA0  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  4224  011EA2  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  4225  011EA6  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  4226  011EAA  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  4227  011EAE  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  4228  011EB2  ECC5  F092         	call	___lldiv	;wreg free
  4229  011EB6  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  4230  011EBA  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  4231  011EBE  0100               	movlb	0	; () banked
  4232  011EC0  C060  FFDE         	movff	?___lldiv,postinc2
  4233  011EC4  0100               	movlb	0	; () banked
  4234  011EC6  C061  FFDE         	movff	?___lldiv+1,postinc2
  4235  011ECA  0100               	movlb	0	; () banked
  4236  011ECC  C062  FFDE         	movff	?___lldiv+2,postinc2
  4237  011ED0  0100               	movlb	0	; () banked
  4238  011ED2  C063  FFDD         	movff	?___lldiv+3,postdec2
  4239  011ED6  52DD               	movf	postdec2,f,c
  4240  011ED8  52DD               	movf	postdec2,f,c
  4241  011EDA  CFDE F06D          	movff	postinc2,___lmul@multiplier
  4242  011EDE  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  4243  011EE2  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  4244  011EE6  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  4245  011EEA  0100               	movlb	0	; () banked
  4246  011EEC  517B               	movf	get_quot_rem@div& (0+255),w,b
  4247  011EEE  0100               	movlb	0	; () banked
  4248  011EF0  6F71               	movwf	___lmul@multiplicand& (0+255),b
  4249  011EF2  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  4250  011EF4  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4251  011EF6  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4252  011EF8  ECD6  F097         	call	___lmul	;wreg free
  4253  011EFC  0100               	movlb	0	; () banked
  4254  011EFE  1F6D               	comf	?___lmul& (0+255),f,b
  4255  011F00  0100               	movlb	0	; () banked
  4256  011F02  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  4257  011F04  0100               	movlb	0	; () banked
  4258  011F06  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  4259  011F08  0100               	movlb	0	; () banked
  4260  011F0A  1F70               	comf	(?___lmul+3)& (0+255),f,b
  4261  011F0C  0100               	movlb	0	; () banked
  4262  011F0E  2B6D               	incf	?___lmul& (0+255),f,b
  4263  011F10  0E00               	movlw	0
  4264  011F12  0100               	movlb	0	; () banked
  4265  011F14  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  4266  011F16  0100               	movlb	0	; () banked
  4267  011F18  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  4268  011F1A  0100               	movlb	0	; () banked
  4269  011F1C  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  4270  011F1E  0100               	movlb	0	; () banked
  4271  011F20  517D               	movf	get_quot_rem@num& (0+255),w,b
  4272  011F22  0100               	movlb	0	; () banked
  4273  011F24  256D               	addwf	?___lmul& (0+255),w,b
  4274  011F26  0100               	movlb	0	; () banked
  4275  011F28  6F79               	movwf	?_get_quot_rem& (0+255),b
  4276  011F2A  0100               	movlb	0	; () banked
  4277  011F2C  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  4278  011F2E  0100               	movlb	0	; () banked
  4279  011F30  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  4280  011F32  0100               	movlb	0	; () banked
  4281  011F34  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  4282  011F36  0100               	movlb	0	; () banked
  4283  011F38  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  4284  011F3A  0100               	movlb	0	; () banked
  4285  011F3C  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  4286  011F3E  0100               	movlb	0	; () banked
  4287  011F40  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  4288  011F42  0100               	movlb	0	; () banked
  4289  011F44  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  4290  011F46  0100               	movlb	0	; () banked
  4291  011F48  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  4292  011F4A  0100               	movlb	0	; () banked
  4293  011F4C  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  4294  011F4E  0012               	return	
  4295  011F50                     __end_of_get_quot_rem:
  4296                           	opt stack 0
  4297                           tblptru	equ	0xFF8
  4298                           tblptrh	equ	0xFF7
  4299                           tblptrl	equ	0xFF6
  4300                           tablat	equ	0xFF5
  4301                           prodh	equ	0xFF4
  4302                           prodl	equ	0xFF3
  4303                           intcon	equ	0xFF2
  4304                           intcon2	equ	0xFF1
  4305                           postinc0	equ	0xFEE
  4306                           wreg	equ	0xFE8
  4307                           postdec1	equ	0xFE5
  4308                           fsr1h	equ	0xFE2
  4309                           fsr1l	equ	0xFE1
  4310                           indf2	equ	0xFDF
  4311                           postinc2	equ	0xFDE
  4312                           postdec2	equ	0xFDD
  4313                           fsr2h	equ	0xFDA
  4314                           fsr2l	equ	0xFD9
  4315                           status	equ	0xFD8
  4316                           
  4317 ;; *************** function ___lldiv *****************
  4318 ;; Defined at:
  4319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  dividend        4    0[BANK0 ] unsigned long 
  4322 ;;  divisor         4    4[BANK0 ] unsigned long 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  quotient        4    8[BANK0 ] unsigned long 
  4325 ;;  counter         1   12[BANK0 ] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  4    0[BANK0 ] unsigned long 
  4328 ;; Registers used:
  4329 ;;		wreg, status,2, status,0
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4335 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4336 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4338 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4339 ;;Total ram usage:       13 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; Hardware stack levels required when called:   12
  4342 ;; This function calls:
  4343 ;;		Nothing
  4344 ;; This function is called by:
  4345 ;;		_get_quot_rem
  4346 ;;		_CTMU_read
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text17
  4351  01258A                     __ptext17:
  4352                           	opt stack 0
  4353  01258A                     ___lldiv:
  4354                           	opt stack 13
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;incstack = 0
  4358  01258A  0E00               	movlw	0
  4359  01258C  0100               	movlb	0	; () banked
  4360  01258E  6F68               	movwf	___lldiv@quotient& (0+255),b
  4361  012590  0E00               	movlw	0
  4362  012592  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  4363  012594  0E00               	movlw	0
  4364  012596  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  4365  012598  0E00               	movlw	0
  4366  01259A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  4367                           
  4368                           ; BSR set to: 0
  4369  01259C  0100               	movlb	0	; () banked
  4370  01259E  5164               	movf	___lldiv@divisor& (0+255),w,b
  4371  0125A0  0100               	movlb	0	; () banked
  4372  0125A2  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4373  0125A4  0100               	movlb	0	; () banked
  4374  0125A6  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4375  0125A8  0100               	movlb	0	; () banked
  4376  0125AA  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  4377  0125AC  B4D8               	btfsc	status,2,c
  4378  0125AE  D042               	goto	l2026
  4379                           
  4380                           ; BSR set to: 0
  4381  0125B0  0E01               	movlw	1
  4382  0125B2  0100               	movlb	0	; () banked
  4383  0125B4  6F6C               	movwf	___lldiv@counter& (0+255),b
  4384  0125B6  D008               	goto	l8597
  4385  0125B8                     l8595:
  4386                           
  4387                           ; BSR set to: 0
  4388  0125B8  0100               	movlb	0	; () banked
  4389  0125BA  90D8               	bcf	status,0,c
  4390  0125BC  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  4391  0125BE  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4392  0125C0  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4393  0125C2  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4394  0125C4  0100               	movlb	0	; () banked
  4395  0125C6  2B6C               	incf	___lldiv@counter& (0+255),f,b
  4396  0125C8                     l8597:
  4397                           
  4398                           ; BSR set to: 0
  4399  0125C8  0100               	movlb	0	; () banked
  4400  0125CA  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4401  0125CC  D7F5               	goto	l8595
  4402  0125CE                     l8599:
  4403                           
  4404                           ; BSR set to: 0
  4405  0125CE  0100               	movlb	0	; () banked
  4406  0125D0  90D8               	bcf	status,0,c
  4407  0125D2  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  4408  0125D4  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4409  0125D6  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4410  0125D8  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4411                           
  4412                           ; BSR set to: 0
  4413  0125DA  0100               	movlb	0	; () banked
  4414  0125DC  5164               	movf	___lldiv@divisor& (0+255),w,b
  4415  0125DE  0100               	movlb	0	; () banked
  4416  0125E0  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  4417  0125E2  0100               	movlb	0	; () banked
  4418  0125E4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4419  0125E6  0100               	movlb	0	; () banked
  4420  0125E8  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4421  0125EA  0100               	movlb	0	; () banked
  4422  0125EC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4423  0125EE  0100               	movlb	0	; () banked
  4424  0125F0  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4425  0125F2  0100               	movlb	0	; () banked
  4426  0125F4  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4427  0125F6  0100               	movlb	0	; () banked
  4428  0125F8  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4429  0125FA  A0D8               	btfss	status,0,c
  4430  0125FC  D012               	goto	l8607
  4431                           
  4432                           ; BSR set to: 0
  4433  0125FE  0100               	movlb	0	; () banked
  4434  012600  5164               	movf	___lldiv@divisor& (0+255),w,b
  4435  012602  0100               	movlb	0	; () banked
  4436  012604  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  4437  012606  0100               	movlb	0	; () banked
  4438  012608  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4439  01260A  0100               	movlb	0	; () banked
  4440  01260C  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4441  01260E  0100               	movlb	0	; () banked
  4442  012610  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4443  012612  0100               	movlb	0	; () banked
  4444  012614  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4445  012616  0100               	movlb	0	; () banked
  4446  012618  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4447  01261A  0100               	movlb	0	; () banked
  4448  01261C  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4449                           
  4450                           ; BSR set to: 0
  4451  01261E  0100               	movlb	0	; () banked
  4452  012620  8168               	bsf	___lldiv@quotient& (0+255),0,b
  4453  012622                     l8607:
  4454                           
  4455                           ; BSR set to: 0
  4456  012622  0100               	movlb	0	; () banked
  4457  012624  90D8               	bcf	status,0,c
  4458  012626  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4459  012628  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4460  01262A  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4461  01262C  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  4462                           
  4463                           ; BSR set to: 0
  4464  01262E  0100               	movlb	0	; () banked
  4465  012630  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  4466  012632  D7CD               	goto	l8599
  4467  012634                     l2026:
  4468                           
  4469                           ; BSR set to: 0
  4470  012634  C068  F060         	movff	___lldiv@quotient,?___lldiv
  4471  012638  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  4472  01263C  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  4473  012640  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  4474                           
  4475                           ; BSR set to: 0
  4476  012644  0012               	return		;funcret
  4477  012646                     __end_of___lldiv:
  4478                           	opt stack 0
  4479                           tblptru	equ	0xFF8
  4480                           tblptrh	equ	0xFF7
  4481                           tblptrl	equ	0xFF6
  4482                           tablat	equ	0xFF5
  4483                           prodh	equ	0xFF4
  4484                           prodl	equ	0xFF3
  4485                           intcon	equ	0xFF2
  4486                           intcon2	equ	0xFF1
  4487                           postinc0	equ	0xFEE
  4488                           wreg	equ	0xFE8
  4489                           postdec1	equ	0xFE5
  4490                           fsr1h	equ	0xFE2
  4491                           fsr1l	equ	0xFE1
  4492                           indf2	equ	0xFDF
  4493                           postinc2	equ	0xFDE
  4494                           postdec2	equ	0xFDD
  4495                           fsr2h	equ	0xFDA
  4496                           fsr2l	equ	0xFD9
  4497                           status	equ	0xFD8
  4498                           
  4499 ;; *************** function _caltime_to_RTCC *****************
  4500 ;; Defined at:
  4501 ;;		line 269 in file "../My_library/My_RTCC.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  tm              2    9[BANK0 ] PTR struct .
  4504 ;;		 -> now(14), 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;		None
  4507 ;; Return value:  Size  Location     Type
  4508 ;;		None               void
  4509 ;; Registers used:
  4510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4516 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4519 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4520 ;;Total ram usage:        2 bytes
  4521 ;; Hardware stack levels used:    1
  4522 ;; Hardware stack levels required when called:   14
  4523 ;; This function calls:
  4524 ;;		_d_to_x
  4525 ;; This function is called by:
  4526 ;;		_RTCC_from_epoch
  4527 ;;		_RTCC_from_caltime
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text18
  4532  011DA6                     __ptext18:
  4533                           	opt stack 0
  4534  011DA6                     _caltime_to_RTCC:
  4535                           	opt stack 13
  4536  011DA6                     l617:
  4537  011DA6  010F               	movlb	15	; () banked
  4538  011DA8  B93F               	btfsc	63,4,b	;volatile
  4539  011DAA  D7FD               	goto	l617
  4540                           
  4541                           ; BSR set to: 15
  4542                           ;My_RTCC.c: 271: RTCCFGbits.RTCPTR0 = 1;
  4543  011DAC  010F               	movlb	15	; () banked
  4544  011DAE  813F               	bsf	63,0,b	;volatile
  4545                           
  4546                           ;My_RTCC.c: 272: RTCCFGbits.RTCPTR1 = 1;
  4547  011DB0  010F               	movlb	15	; () banked
  4548  011DB2  833F               	bsf	63,1,b	;volatile
  4549                           
  4550                           ; BSR set to: 15
  4551                           ;My_RTCC.c: 273: RTCVALL = d_to_x(tm->YY);
  4552  011DB4  0100               	movlb	0	; () banked
  4553  011DB6  EE20 F00A          	lfsr	2,10
  4554  011DBA  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4555  011DBC  26D9               	addwf	fsr2l,f,c
  4556  011DBE  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4557  011DC0  22DA               	addwfc	fsr2h,f,c
  4558  011DC2  50DF               	movf	indf2,w,c
  4559  011DC4  EC05  F09C         	call	_d_to_x
  4560  011DC8  010F               	movlb	15	; () banked
  4561  011DCA  6F3A               	movwf	58,b	;volatile
  4562                           
  4563                           ; BSR set to: 15
  4564                           ;My_RTCC.c: 274: RTCVALH = 0x00;
  4565  011DCC  0E00               	movlw	0
  4566  011DCE  010F               	movlb	15	; () banked
  4567  011DD0  6F3B               	movwf	59,b	;volatile
  4568                           
  4569                           ; BSR set to: 15
  4570                           ;My_RTCC.c: 275: RTCCFGbits.RTCPTR0 = 0;
  4571  011DD2  010F               	movlb	15	; () banked
  4572  011DD4  913F               	bcf	63,0,b	;volatile
  4573                           
  4574                           ; BSR set to: 15
  4575                           ;My_RTCC.c: 276: RTCCFGbits.RTCPTR1 = 1;
  4576  011DD6  010F               	movlb	15	; () banked
  4577  011DD8  833F               	bsf	63,1,b	;volatile
  4578                           
  4579                           ; BSR set to: 15
  4580                           ;My_RTCC.c: 277: RTCVALL = d_to_x(tm->DD);
  4581  011DDA  0100               	movlb	0	; () banked
  4582  011DDC  EE20 F008          	lfsr	2,8
  4583  011DE0  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4584  011DE2  26D9               	addwf	fsr2l,f,c
  4585  011DE4  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4586  011DE6  22DA               	addwfc	fsr2h,f,c
  4587  011DE8  50DF               	movf	indf2,w,c
  4588  011DEA  EC05  F09C         	call	_d_to_x
  4589  011DEE  010F               	movlb	15	; () banked
  4590  011DF0  6F3A               	movwf	58,b	;volatile
  4591                           
  4592                           ; BSR set to: 15
  4593                           ;My_RTCC.c: 278: RTCVALH = d_to_x(tm->MM);
  4594  011DF2  0100               	movlb	0	; () banked
  4595  011DF4  EE20 F009          	lfsr	2,9
  4596  011DF8  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4597  011DFA  26D9               	addwf	fsr2l,f,c
  4598  011DFC  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4599  011DFE  22DA               	addwfc	fsr2h,f,c
  4600  011E00  50DF               	movf	indf2,w,c
  4601  011E02  EC05  F09C         	call	_d_to_x
  4602  011E06  010F               	movlb	15	; () banked
  4603  011E08  6F3B               	movwf	59,b	;volatile
  4604                           
  4605                           ; BSR set to: 15
  4606                           ;My_RTCC.c: 279: RTCCFGbits.RTCPTR0 = 1;
  4607  011E0A  010F               	movlb	15	; () banked
  4608  011E0C  813F               	bsf	63,0,b	;volatile
  4609                           
  4610                           ; BSR set to: 15
  4611                           ;My_RTCC.c: 280: RTCCFGbits.RTCPTR1 = 0;
  4612  011E0E  010F               	movlb	15	; () banked
  4613  011E10  933F               	bcf	63,1,b	;volatile
  4614                           
  4615                           ; BSR set to: 15
  4616                           ;My_RTCC.c: 281: RTCVALL = d_to_x(tm->hh);
  4617  011E12  0100               	movlb	0	; () banked
  4618  011E14  EE20 F006          	lfsr	2,6
  4619  011E18  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4620  011E1A  26D9               	addwf	fsr2l,f,c
  4621  011E1C  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4622  011E1E  22DA               	addwfc	fsr2h,f,c
  4623  011E20  50DF               	movf	indf2,w,c
  4624  011E22  EC05  F09C         	call	_d_to_x
  4625  011E26  010F               	movlb	15	; () banked
  4626  011E28  6F3A               	movwf	58,b	;volatile
  4627                           
  4628                           ; BSR set to: 15
  4629                           ;My_RTCC.c: 282: RTCVALH = d_to_x(tm->EE);
  4630  011E2A  0100               	movlb	0	; () banked
  4631  011E2C  EE20 F007          	lfsr	2,7
  4632  011E30  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4633  011E32  26D9               	addwf	fsr2l,f,c
  4634  011E34  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4635  011E36  22DA               	addwfc	fsr2h,f,c
  4636  011E38  50DF               	movf	indf2,w,c
  4637  011E3A  EC05  F09C         	call	_d_to_x
  4638  011E3E  010F               	movlb	15	; () banked
  4639  011E40  6F3B               	movwf	59,b	;volatile
  4640                           
  4641                           ; BSR set to: 15
  4642                           ;My_RTCC.c: 283: RTCCFGbits.RTCPTR0 = 0;
  4643  011E42  010F               	movlb	15	; () banked
  4644  011E44  913F               	bcf	63,0,b	;volatile
  4645                           
  4646                           ; BSR set to: 15
  4647                           ;My_RTCC.c: 284: RTCCFGbits.RTCPTR1 = 0;
  4648  011E46  010F               	movlb	15	; () banked
  4649  011E48  933F               	bcf	63,1,b	;volatile
  4650                           
  4651                           ; BSR set to: 15
  4652                           ;My_RTCC.c: 285: RTCVALL = d_to_x(tm->ss);
  4653  011E4A  0100               	movlb	0	; () banked
  4654  011E4C  EE20 F004          	lfsr	2,4
  4655  011E50  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4656  011E52  26D9               	addwf	fsr2l,f,c
  4657  011E54  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4658  011E56  22DA               	addwfc	fsr2h,f,c
  4659  011E58  50DF               	movf	indf2,w,c
  4660  011E5A  EC05  F09C         	call	_d_to_x
  4661  011E5E  010F               	movlb	15	; () banked
  4662  011E60  6F3A               	movwf	58,b	;volatile
  4663                           
  4664                           ; BSR set to: 15
  4665                           ;My_RTCC.c: 286: RTCVALH = d_to_x(tm->mm);
  4666  011E62  0100               	movlb	0	; () banked
  4667  011E64  EE20 F005          	lfsr	2,5
  4668  011E68  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4669  011E6A  26D9               	addwf	fsr2l,f,c
  4670  011E6C  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4671  011E6E  22DA               	addwfc	fsr2h,f,c
  4672  011E70  50DF               	movf	indf2,w,c
  4673  011E72  EC05  F09C         	call	_d_to_x
  4674  011E76  010F               	movlb	15	; () banked
  4675  011E78  6F3B               	movwf	59,b	;volatile
  4676                           
  4677                           ; BSR set to: 15
  4678  011E7A  0012               	return		;funcret
  4679  011E7C                     __end_of_caltime_to_RTCC:
  4680                           	opt stack 0
  4681                           tblptru	equ	0xFF8
  4682                           tblptrh	equ	0xFF7
  4683                           tblptrl	equ	0xFF6
  4684                           tablat	equ	0xFF5
  4685                           prodh	equ	0xFF4
  4686                           prodl	equ	0xFF3
  4687                           intcon	equ	0xFF2
  4688                           intcon2	equ	0xFF1
  4689                           postinc0	equ	0xFEE
  4690                           wreg	equ	0xFE8
  4691                           postdec1	equ	0xFE5
  4692                           fsr1h	equ	0xFE2
  4693                           fsr1l	equ	0xFE1
  4694                           indf2	equ	0xFDF
  4695                           postinc2	equ	0xFDE
  4696                           postdec2	equ	0xFDD
  4697                           fsr2h	equ	0xFDA
  4698                           fsr2l	equ	0xFD9
  4699                           status	equ	0xFD8
  4700                           
  4701 ;; *************** function _d_to_x *****************
  4702 ;; Defined at:
  4703 ;;		line 234 in file "../My_library/My_RTCC.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  dec             1    wreg     unsigned char 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  dec             1    8[BANK0 ] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      unsigned char 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4718 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4720 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4721 ;;Total ram usage:        1 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:   13
  4724 ;; This function calls:
  4725 ;;		___awdiv
  4726 ;; This function is called by:
  4727 ;;		_caltime_to_RTCC
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text19
  4732  01380A                     __ptext19:
  4733                           	opt stack 0
  4734  01380A                     _d_to_x:
  4735                           	opt stack 13
  4736                           
  4737                           ; BSR set to: 15
  4738                           ;incstack = 0
  4739                           ;d_to_x@dec stored from wreg
  4740  01380A  0100               	movlb	0	; () banked
  4741  01380C  6F68               	movwf	d_to_x@dec& (0+255),b
  4742                           
  4743                           ;My_RTCC.c: 237: return dec / 10 * 6 + dec;
  4744  01380E  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  4745  013812  0100               	movlb	0	; () banked
  4746  013814  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4747  013816  0E00               	movlw	0
  4748  013818  0100               	movlb	0	; () banked
  4749  01381A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4750  01381C  0E0A               	movlw	10
  4751  01381E  6F62               	movwf	___awdiv@divisor& (0+255),b
  4752  013820  ECA9  F091         	call	___awdiv	;wreg free
  4753  013824  0100               	movlb	0	; () banked
  4754  013826  5160               	movf	?___awdiv& (0+255),w,b
  4755  013828  0D06               	mullw	6
  4756  01382A  50F3               	movf	prodl,w,c
  4757  01382C  0100               	movlb	0	; () banked
  4758  01382E  2568               	addwf	d_to_x@dec& (0+255),w,b
  4759  013830  0012               	return	
  4760  013832                     __end_of_d_to_x:
  4761                           	opt stack 0
  4762                           tblptru	equ	0xFF8
  4763                           tblptrh	equ	0xFF7
  4764                           tblptrl	equ	0xFF6
  4765                           tablat	equ	0xFF5
  4766                           prodh	equ	0xFF4
  4767                           prodl	equ	0xFF3
  4768                           intcon	equ	0xFF2
  4769                           intcon2	equ	0xFF1
  4770                           postinc0	equ	0xFEE
  4771                           wreg	equ	0xFE8
  4772                           postdec1	equ	0xFE5
  4773                           fsr1h	equ	0xFE2
  4774                           fsr1l	equ	0xFE1
  4775                           indf2	equ	0xFDF
  4776                           postinc2	equ	0xFDE
  4777                           postdec2	equ	0xFDD
  4778                           fsr2h	equ	0xFDA
  4779                           fsr2l	equ	0xFD9
  4780                           status	equ	0xFD8
  4781                           
  4782 ;; *************** function ___awdiv *****************
  4783 ;; Defined at:
  4784 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  dividend        2    0[BANK0 ] int 
  4787 ;;  divisor         2    2[BANK0 ] int 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  quotient        2    6[BANK0 ] int 
  4790 ;;  sign            1    5[BANK0 ] unsigned char 
  4791 ;;  counter         1    4[BANK0 ] unsigned char 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  2    0[BANK0 ] int 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4801 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4802 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4804 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4805 ;;Total ram usage:        8 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:   12
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_d_to_x
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text20
  4816  012352                     __ptext20:
  4817                           	opt stack 0
  4818  012352                     ___awdiv:
  4819                           	opt stack 13
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;incstack = 0
  4823  012352  0E00               	movlw	0
  4824  012354  0100               	movlb	0	; () banked
  4825  012356  6F65               	movwf	___awdiv@sign& (0+255),b
  4826                           
  4827                           ; BSR set to: 0
  4828  012358  0100               	movlb	0	; () banked
  4829  01235A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4830  01235C  D008               	goto	l8517
  4831                           
  4832                           ; BSR set to: 0
  4833  01235E  0100               	movlb	0	; () banked
  4834  012360  6D62               	negf	___awdiv@divisor& (0+255),b
  4835  012362  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4836  012364  B0D8               	btfsc	status,0,c
  4837  012366  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4838                           
  4839                           ; BSR set to: 0
  4840  012368  0E01               	movlw	1
  4841  01236A  0100               	movlb	0	; () banked
  4842  01236C  6F65               	movwf	___awdiv@sign& (0+255),b
  4843  01236E                     l8517:
  4844                           
  4845                           ; BSR set to: 0
  4846  01236E  0100               	movlb	0	; () banked
  4847  012370  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4848  012372  D008               	goto	l8523
  4849                           
  4850                           ; BSR set to: 0
  4851  012374  0100               	movlb	0	; () banked
  4852  012376  6D60               	negf	___awdiv@dividend& (0+255),b
  4853  012378  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4854  01237A  B0D8               	btfsc	status,0,c
  4855  01237C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4856                           
  4857                           ; BSR set to: 0
  4858  01237E  0E01               	movlw	1
  4859  012380  0100               	movlb	0	; () banked
  4860  012382  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  4861  012384                     l8523:
  4862                           
  4863                           ; BSR set to: 0
  4864  012384  0E00               	movlw	0
  4865  012386  0100               	movlb	0	; () banked
  4866  012388  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  4867  01238A  0E00               	movlw	0
  4868  01238C  6F66               	movwf	___awdiv@quotient& (0+255),b
  4869                           
  4870                           ; BSR set to: 0
  4871  01238E  0100               	movlb	0	; () banked
  4872  012390  5162               	movf	___awdiv@divisor& (0+255),w,b
  4873  012392  0100               	movlb	0	; () banked
  4874  012394  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4875  012396  B4D8               	btfsc	status,2,c
  4876  012398  D02C               	goto	l8545
  4877                           
  4878                           ; BSR set to: 0
  4879  01239A  0E01               	movlw	1
  4880  01239C  0100               	movlb	0	; () banked
  4881  01239E  6F64               	movwf	___awdiv@counter& (0+255),b
  4882  0123A0  D006               	goto	l8531
  4883  0123A2                     l8529:
  4884                           
  4885                           ; BSR set to: 0
  4886  0123A2  0100               	movlb	0	; () banked
  4887  0123A4  90D8               	bcf	status,0,c
  4888  0123A6  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  4889  0123A8  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4890  0123AA  0100               	movlb	0	; () banked
  4891  0123AC  2B64               	incf	___awdiv@counter& (0+255),f,b
  4892  0123AE                     l8531:
  4893                           
  4894                           ; BSR set to: 0
  4895  0123AE  0100               	movlb	0	; () banked
  4896  0123B0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4897  0123B2  D7F7               	goto	l8529
  4898  0123B4                     l8533:
  4899                           
  4900                           ; BSR set to: 0
  4901  0123B4  0100               	movlb	0	; () banked
  4902  0123B6  90D8               	bcf	status,0,c
  4903  0123B8  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  4904  0123BA  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4905                           
  4906                           ; BSR set to: 0
  4907  0123BC  0100               	movlb	0	; () banked
  4908  0123BE  5162               	movf	___awdiv@divisor& (0+255),w,b
  4909  0123C0  0100               	movlb	0	; () banked
  4910  0123C2  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  4911  0123C4  0100               	movlb	0	; () banked
  4912  0123C6  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4913  0123C8  0100               	movlb	0	; () banked
  4914  0123CA  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4915  0123CC  A0D8               	btfss	status,0,c
  4916  0123CE  D00A               	goto	l8541
  4917                           
  4918                           ; BSR set to: 0
  4919  0123D0  0100               	movlb	0	; () banked
  4920  0123D2  5162               	movf	___awdiv@divisor& (0+255),w,b
  4921  0123D4  0100               	movlb	0	; () banked
  4922  0123D6  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  4923  0123D8  0100               	movlb	0	; () banked
  4924  0123DA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4925  0123DC  0100               	movlb	0	; () banked
  4926  0123DE  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4927                           
  4928                           ; BSR set to: 0
  4929  0123E0  0100               	movlb	0	; () banked
  4930  0123E2  8166               	bsf	___awdiv@quotient& (0+255),0,b
  4931  0123E4                     l8541:
  4932                           
  4933                           ; BSR set to: 0
  4934  0123E4  0100               	movlb	0	; () banked
  4935  0123E6  90D8               	bcf	status,0,c
  4936  0123E8  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4937  0123EA  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  4938                           
  4939                           ; BSR set to: 0
  4940  0123EC  0100               	movlb	0	; () banked
  4941  0123EE  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  4942  0123F0  D7E1               	goto	l8533
  4943  0123F2                     l8545:
  4944                           
  4945                           ; BSR set to: 0
  4946  0123F2  0100               	movlb	0	; () banked
  4947  0123F4  5165               	movf	___awdiv@sign& (0+255),w,b
  4948  0123F6  0100               	movlb	0	; () banked
  4949  0123F8  B4D8               	btfsc	status,2,c
  4950  0123FA  D005               	goto	l8549
  4951                           
  4952                           ; BSR set to: 0
  4953  0123FC  0100               	movlb	0	; () banked
  4954  0123FE  6D66               	negf	___awdiv@quotient& (0+255),b
  4955  012400  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4956  012402  B0D8               	btfsc	status,0,c
  4957  012404  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4958  012406                     l8549:
  4959                           
  4960                           ; BSR set to: 0
  4961  012406  C066  F060         	movff	___awdiv@quotient,?___awdiv
  4962  01240A  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  4963  01240E  0012               	return	
  4964  012410                     __end_of___awdiv:
  4965                           	opt stack 0
  4966                           tblptru	equ	0xFF8
  4967                           tblptrh	equ	0xFF7
  4968                           tblptrl	equ	0xFF6
  4969                           tablat	equ	0xFF5
  4970                           prodh	equ	0xFF4
  4971                           prodl	equ	0xFF3
  4972                           intcon	equ	0xFF2
  4973                           intcon2	equ	0xFF1
  4974                           postinc0	equ	0xFEE
  4975                           wreg	equ	0xFE8
  4976                           postdec1	equ	0xFE5
  4977                           fsr1h	equ	0xFE2
  4978                           fsr1l	equ	0xFE1
  4979                           indf2	equ	0xFDF
  4980                           postinc2	equ	0xFDE
  4981                           postdec2	equ	0xFDD
  4982                           fsr2h	equ	0xFDA
  4983                           fsr2l	equ	0xFD9
  4984                           status	equ	0xFD8
  4985                           
  4986 ;; *************** function _OSC_init *****************
  4987 ;; Defined at:
  4988 ;;		line 8 in file "../My_library/My_PIC.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;		None               void
  4995 ;; Registers used:
  4996 ;;		wreg, status,2
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5006 ;;Total ram usage:        0 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:   12
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_setup
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text21
  5017  013984                     __ptext21:
  5018                           	opt stack 0
  5019  013984                     _OSC_init:
  5020                           	opt stack 17
  5021                           
  5022                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;incstack = 0
  5026  013984  88D3               	bsf	4051,4,c	;volatile
  5027  013986  8AD3               	bsf	4051,5,c	;volatile
  5028  013988  8CD3               	bsf	4051,6,c	;volatile
  5029                           
  5030                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  5031  01398A  8C9B               	bsf	3995,6,c	;volatile
  5032                           
  5033                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  5034  01398C  0EFC               	movlw	-4
  5035  01398E  16D3               	andwf	4051,f,c	;volatile
  5036  013990  0012               	return		;funcret
  5037  013992                     __end_of_OSC_init:
  5038                           	opt stack 0
  5039                           tblptru	equ	0xFF8
  5040                           tblptrh	equ	0xFF7
  5041                           tblptrl	equ	0xFF6
  5042                           tablat	equ	0xFF5
  5043                           prodh	equ	0xFF4
  5044                           prodl	equ	0xFF3
  5045                           intcon	equ	0xFF2
  5046                           intcon2	equ	0xFF1
  5047                           postinc0	equ	0xFEE
  5048                           wreg	equ	0xFE8
  5049                           postdec1	equ	0xFE5
  5050                           fsr1h	equ	0xFE2
  5051                           fsr1l	equ	0xFE1
  5052                           indf2	equ	0xFDF
  5053                           postinc2	equ	0xFDE
  5054                           postdec2	equ	0xFDD
  5055                           fsr2h	equ	0xFDA
  5056                           fsr2l	equ	0xFD9
  5057                           status	equ	0xFD8
  5058                           
  5059 ;; *************** function _I2C_LCD_init *****************
  5060 ;; Defined at:
  5061 ;;		line 211 in file "../My_library/My_ST7032.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;		None
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  i               1    9[BANK0 ] unsigned char 
  5066 ;;  i               1    8[BANK0 ] unsigned char 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;		None               void
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5077 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5078 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5079 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5080 ;;Total ram usage:        3 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:   16
  5083 ;; This function calls:
  5084 ;;		_I2C_LCD_Clear
  5085 ;;		_I2C_LCD_Command
  5086 ;;		_I2C_init_old
  5087 ;; This function is called by:
  5088 ;;		_setup
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text22
  5093  012D94                     __ptext22:
  5094                           	opt stack 0
  5095  012D94                     _I2C_LCD_init:
  5096                           	opt stack 13
  5097                           
  5098                           ;My_ST7032.c: 212: I2C_init_old();
  5099                           
  5100                           ;incstack = 0
  5101  012D94  ECB2  F09C         	call	_I2C_init_old	;wreg free
  5102                           
  5103                           ;My_ST7032.c: 214: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  5104  012D98  0E00               	movlw	0
  5105  012D9A  0100               	movlb	0	; () banked
  5106  012D9C  6F68               	movwf	I2C_LCD_init@i& (0+255),b
  5107  012D9E                     l9347:
  5108                           
  5109                           ; BSR set to: 0
  5110  012D9E  0E27               	movlw	39
  5111  012DA0  0100               	movlb	0	; () banked
  5112  012DA2  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
  5113  012DA4  D001               	goto	l9351
  5114  012DA6  D00C               	goto	l9355
  5115  012DA8                     l9351:
  5116                           
  5117                           ; BSR set to: 0
  5118  012DA8  0E10               	movlw	16
  5119  012DAA  0100               	movlb	0	; () banked
  5120  012DAC  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  5121  012DAE  0E94               	movlw	148
  5122  012DB0                     u10317:
  5123  012DB0  2EE8               	decfsz	wreg,f,c
  5124  012DB2  D7FE               	goto	u10317
  5125  012DB4  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  5126  012DB6  D7FC               	goto	u10317
  5127  012DB8  D000               	nop2	
  5128  012DBA  0100               	movlb	0	; () banked
  5129  012DBC  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
  5130  012DBE  D7EF               	goto	l9347
  5131  012DC0                     l9355:
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;My_ST7032.c: 215: I2C_LCD_Command(0x38);
  5135  012DC0  0E38               	movlw	56
  5136  012DC2  ECCF  F09A         	call	_I2C_LCD_Command
  5137                           
  5138                           ;My_ST7032.c: 216: I2C_LCD_Command(0x39);
  5139  012DC6  0E39               	movlw	57
  5140  012DC8  ECCF  F09A         	call	_I2C_LCD_Command
  5141                           
  5142                           ;My_ST7032.c: 217: I2C_LCD_Command(0x14);
  5143  012DCC  0E14               	movlw	20
  5144  012DCE  ECCF  F09A         	call	_I2C_LCD_Command
  5145                           
  5146                           ;My_ST7032.c: 218: I2C_LCD_Command(0x70);
  5147  012DD2  0E70               	movlw	112
  5148  012DD4  ECCF  F09A         	call	_I2C_LCD_Command
  5149                           
  5150                           ;My_ST7032.c: 219: I2C_LCD_Command(0x56);
  5151  012DD8  0E56               	movlw	86
  5152  012DDA  ECCF  F09A         	call	_I2C_LCD_Command
  5153                           
  5154                           ;My_ST7032.c: 220: I2C_LCD_Command(0x6C);
  5155  012DDE  0E6C               	movlw	108
  5156  012DE0  ECCF  F09A         	call	_I2C_LCD_Command
  5157                           
  5158                           ;My_ST7032.c: 221: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  5159  012DE4  0E00               	movlw	0
  5160  012DE6  0100               	movlb	0	; () banked
  5161  012DE8  6F69               	movwf	I2C_LCD_init@i_3143& (0+255),b
  5162  012DEA                     l9359:
  5163                           
  5164                           ; BSR set to: 0
  5165  012DEA  0E27               	movlw	39
  5166  012DEC  0100               	movlb	0	; () banked
  5167  012DEE  6569               	cpfsgt	I2C_LCD_init@i_3143& (0+255),b
  5168  012DF0  D001               	goto	l9363
  5169  012DF2  D00C               	goto	l9367
  5170  012DF4                     l9363:
  5171                           
  5172                           ; BSR set to: 0
  5173  012DF4  0E10               	movlw	16
  5174  012DF6  0100               	movlb	0	; () banked
  5175  012DF8  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  5176  012DFA  0E94               	movlw	148
  5177  012DFC                     u10327:
  5178  012DFC  2EE8               	decfsz	wreg,f,c
  5179  012DFE  D7FE               	goto	u10327
  5180  012E00  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  5181  012E02  D7FC               	goto	u10327
  5182  012E04  D000               	nop2	
  5183  012E06  0100               	movlb	0	; () banked
  5184  012E08  2B69               	incf	I2C_LCD_init@i_3143& (0+255),f,b
  5185  012E0A  D7EF               	goto	l9359
  5186  012E0C                     l9367:
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;My_ST7032.c: 222: I2C_LCD_Command(0x38);
  5190  012E0C  0E38               	movlw	56
  5191  012E0E  ECCF  F09A         	call	_I2C_LCD_Command
  5192                           
  5193                           ;My_ST7032.c: 223: I2C_LCD_Command(0x0C);
  5194  012E12  0E0C               	movlw	12
  5195  012E14  ECCF  F09A         	call	_I2C_LCD_Command
  5196                           
  5197                           ;My_ST7032.c: 224: I2C_LCD_Command(0x06);
  5198  012E18  0E06               	movlw	6
  5199  012E1A  ECCF  F09A         	call	_I2C_LCD_Command
  5200                           
  5201                           ;My_ST7032.c: 225: I2C_LCD_Clear();
  5202  012E1E  EC8C  F09C         	call	_I2C_LCD_Clear	;wreg free
  5203  012E22  0012               	return		;funcret
  5204  012E24                     __end_of_I2C_LCD_init:
  5205                           	opt stack 0
  5206                           tblptru	equ	0xFF8
  5207                           tblptrh	equ	0xFF7
  5208                           tblptrl	equ	0xFF6
  5209                           tablat	equ	0xFF5
  5210                           prodh	equ	0xFF4
  5211                           prodl	equ	0xFF3
  5212                           intcon	equ	0xFF2
  5213                           intcon2	equ	0xFF1
  5214                           postinc0	equ	0xFEE
  5215                           wreg	equ	0xFE8
  5216                           postdec1	equ	0xFE5
  5217                           fsr1h	equ	0xFE2
  5218                           fsr1l	equ	0xFE1
  5219                           indf2	equ	0xFDF
  5220                           postinc2	equ	0xFDE
  5221                           postdec2	equ	0xFDD
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8
  5225                           
  5226 ;; *************** function _I2C_init_old *****************
  5227 ;; Defined at:
  5228 ;;		line 62 in file "../My_library/My_I2C.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;		None               void
  5235 ;; Registers used:
  5236 ;;		wreg, status,2
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5246 ;;Total ram usage:        0 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:   12
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_I2C_LCD_init
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text23
  5257  013964                     __ptext23:
  5258                           	opt stack 0
  5259  013964                     _I2C_init_old:
  5260                           	opt stack 16
  5261                           
  5262                           ;My_I2C.c: 63: SSP1STAT = 0b10000000;
  5263                           
  5264                           ;incstack = 0
  5265  013964  0E80               	movlw	128
  5266  013966  6EC7               	movwf	4039,c	;volatile
  5267                           
  5268                           ;My_I2C.c: 64: SSP1CON1 = 0b00101000;
  5269  013968  0E28               	movlw	40
  5270  01396A  6EC6               	movwf	4038,c	;volatile
  5271                           
  5272                           ;My_I2C.c: 65: SSP1ADD = 0x13;
  5273  01396C  0E13               	movlw	19
  5274  01396E  6EC8               	movwf	4040,c	;volatile
  5275                           
  5276                           ;My_I2C.c: 68: SSP1IF = 0;
  5277  013970  969E               	bcf	3998,3,c	;volatile
  5278                           
  5279                           ;My_I2C.c: 69: BCL1IF = 0;
  5280  013972  96A1               	bcf	4001,3,c	;volatile
  5281  013974  0012               	return		;funcret
  5282  013976                     __end_of_I2C_init_old:
  5283                           	opt stack 0
  5284                           tblptru	equ	0xFF8
  5285                           tblptrh	equ	0xFF7
  5286                           tblptrl	equ	0xFF6
  5287                           tablat	equ	0xFF5
  5288                           prodh	equ	0xFF4
  5289                           prodl	equ	0xFF3
  5290                           intcon	equ	0xFF2
  5291                           intcon2	equ	0xFF1
  5292                           postinc0	equ	0xFEE
  5293                           wreg	equ	0xFE8
  5294                           postdec1	equ	0xFE5
  5295                           fsr1h	equ	0xFE2
  5296                           fsr1l	equ	0xFE1
  5297                           indf2	equ	0xFDF
  5298                           postinc2	equ	0xFDE
  5299                           postdec2	equ	0xFDD
  5300                           fsr2h	equ	0xFDA
  5301                           fsr2l	equ	0xFD9
  5302                           status	equ	0xFD8
  5303                           
  5304 ;; *************** function _I2C_LCD_Clear *****************
  5305 ;; Defined at:
  5306 ;;		line 154 in file "../My_library/My_ST7032.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;		None
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;		None               void
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5323 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5324 ;;Total ram usage:        1 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:   15
  5327 ;; This function calls:
  5328 ;;		_I2C_LCD_Command
  5329 ;; This function is called by:
  5330 ;;		_setup
  5331 ;;		_main
  5332 ;;		_I2C_LCD_init
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text24
  5337  013918                     __ptext24:
  5338                           	opt stack 0
  5339  013918                     _I2C_LCD_Clear:
  5340                           	opt stack 13
  5341                           
  5342                           ;My_ST7032.c: 155: I2C_LCD_Command(0x01);
  5343                           
  5344                           ;incstack = 0
  5345  013918  0E01               	movlw	1
  5346  01391A  ECCF  F09A         	call	_I2C_LCD_Command
  5347                           
  5348                           ;My_ST7032.c: 156: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  5349  01391E  0E12               	movlw	18
  5350  013920  0100               	movlb	0	; () banked
  5351  013922  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
  5352  013924  0E23               	movlw	35
  5353  013926                     u10337:
  5354  013926  2EE8               	decfsz	wreg,f,c
  5355  013928  D7FE               	goto	u10337
  5356  01392A  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  5357  01392C  D7FC               	goto	u10337
  5358  01392E  F000               	nop	
  5359  013930  0012               	return		;funcret
  5360  013932                     __end_of_I2C_LCD_Clear:
  5361                           	opt stack 0
  5362                           tblptru	equ	0xFF8
  5363                           tblptrh	equ	0xFF7
  5364                           tblptrl	equ	0xFF6
  5365                           tablat	equ	0xFF5
  5366                           prodh	equ	0xFF4
  5367                           prodl	equ	0xFF3
  5368                           intcon	equ	0xFF2
  5369                           intcon2	equ	0xFF1
  5370                           postinc0	equ	0xFEE
  5371                           wreg	equ	0xFE8
  5372                           postdec1	equ	0xFE5
  5373                           fsr1h	equ	0xFE2
  5374                           fsr1l	equ	0xFE1
  5375                           indf2	equ	0xFDF
  5376                           postinc2	equ	0xFDE
  5377                           postdec2	equ	0xFDD
  5378                           fsr2h	equ	0xFDA
  5379                           fsr2l	equ	0xFD9
  5380                           status	equ	0xFD8
  5381                           
  5382 ;; *************** function _I2C_LCD_SetCursor *****************
  5383 ;; Defined at:
  5384 ;;		line 159 in file "../My_library/My_ST7032.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;  col             1    wreg     unsigned char 
  5387 ;;  row             1    6[BANK0 ] unsigned char 
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  col             1    9[BANK0 ] unsigned char 
  5390 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
  5391 ;; Return value:  Size  Location     Type
  5392 ;;		None               void
  5393 ;; Registers used:
  5394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5400 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5401 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5403 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;Total ram usage:        4 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:   15
  5407 ;; This function calls:
  5408 ;;		_I2C_LCD_Command
  5409 ;; This function is called by:
  5410 ;;		_setup
  5411 ;;		_main
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           	psect	text25
  5416  013706                     __ptext25:
  5417                           	opt stack 0
  5418  013706                     _I2C_LCD_SetCursor:
  5419                           	opt stack 14
  5420                           
  5421                           ;incstack = 0
  5422                           ;I2C_LCD_SetCursor@col stored from wreg
  5423  013706  0100               	movlb	0	; () banked
  5424  013708  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  5425                           
  5426                           ;My_ST7032.c: 160: uint8_t row_offsets[] = {0x00, 0x40};
  5427  01370A  C0D7  F067         	movff	I2C_LCD_SetCursor@F8685,I2C_LCD_SetCursor@row_offsets
  5428  01370E  C0D8  F068         	movff	I2C_LCD_SetCursor@F8685+1,I2C_LCD_SetCursor@row_offsets+1
  5429                           
  5430                           ;My_ST7032.c: 162: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  5431  013712  0100               	movlb	0	; () banked
  5432  013714  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  5433  013716  0D01               	mullw	1
  5434  013718  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
  5435  01371A  24F3               	addwf	prodl,w,c
  5436  01371C  6ED9               	movwf	fsr2l,c
  5437  01371E  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  5438  013720  20F4               	addwfc	prodh,w,c
  5439  013722  6EDA               	movwf	fsr2h,c
  5440  013724  50DF               	movf	indf2,w,c
  5441  013726  0100               	movlb	0	; () banked
  5442  013728  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  5443  01372A  0980               	iorlw	128
  5444  01372C  ECCF  F09A         	call	_I2C_LCD_Command
  5445  013730  0012               	return		;funcret
  5446  013732                     __end_of_I2C_LCD_SetCursor:
  5447                           	opt stack 0
  5448                           tblptru	equ	0xFF8
  5449                           tblptrh	equ	0xFF7
  5450                           tblptrl	equ	0xFF6
  5451                           tablat	equ	0xFF5
  5452                           prodh	equ	0xFF4
  5453                           prodl	equ	0xFF3
  5454                           intcon	equ	0xFF2
  5455                           intcon2	equ	0xFF1
  5456                           postinc0	equ	0xFEE
  5457                           wreg	equ	0xFE8
  5458                           postdec1	equ	0xFE5
  5459                           fsr1h	equ	0xFE2
  5460                           fsr1l	equ	0xFE1
  5461                           indf2	equ	0xFDF
  5462                           postinc2	equ	0xFDE
  5463                           postdec2	equ	0xFDD
  5464                           fsr2h	equ	0xFDA
  5465                           fsr2l	equ	0xFD9
  5466                           status	equ	0xFD8
  5467                           
  5468 ;; *************** function _I2C_LCD_Command *****************
  5469 ;; Defined at:
  5470 ;;		line 141 in file "../My_library/My_ST7032.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  c               1    wreg     unsigned char 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  c               1    4[BANK0 ] unsigned char 
  5475 ;;  ans             1    5[BANK0 ] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;		None               void
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5486 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5488 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5489 ;;Total ram usage:        2 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:   14
  5492 ;; This function calls:
  5493 ;;		_I2C_Send
  5494 ;;		_I2C_Start
  5495 ;;		_I2C_Stop
  5496 ;; This function is called by:
  5497 ;;		_I2C_LCD_Clear
  5498 ;;		_I2C_LCD_SetCursor
  5499 ;;		_I2C_LCD_init
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text26
  5504  01359E                     __ptext26:
  5505                           	opt stack 0
  5506  01359E                     _I2C_LCD_Command:
  5507                           	opt stack 14
  5508                           
  5509                           ;incstack = 0
  5510                           ;I2C_LCD_Command@c stored from wreg
  5511  01359E  0100               	movlb	0	; () banked
  5512  0135A0  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
  5513                           
  5514                           ;My_ST7032.c: 142: uint8_t ans;
  5515                           ;My_ST7032.c: 144: ans = I2C_Start(0x3E, 0);
  5516  0135A2  0E00               	movlw	0
  5517  0135A4  0100               	movlb	0	; () banked
  5518  0135A6  6F62               	movwf	I2C_Start@rw& (0+255),b
  5519  0135A8  0E3E               	movlw	62
  5520  0135AA  EC55  F09B         	call	_I2C_Start
  5521  0135AE  0100               	movlb	0	; () banked
  5522  0135B0  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;My_ST7032.c: 145: if (ans == 0) {
  5526  0135B2  0100               	movlb	0	; () banked
  5527  0135B4  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
  5528  0135B6  0100               	movlb	0	; () banked
  5529  0135B8  A4D8               	btfss	status,2,c
  5530  0135BA  D007               	goto	l766
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;My_ST7032.c: 147: I2C_Send(0b10000000);
  5534  0135BC  0E80               	movlw	128
  5535  0135BE  ECA6  F09C         	call	_I2C_Send
  5536                           
  5537                           ;My_ST7032.c: 148: I2C_Send(c);
  5538  0135C2  0100               	movlb	0	; () banked
  5539  0135C4  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
  5540  0135C6  ECA6  F09C         	call	_I2C_Send
  5541  0135CA                     l766:
  5542                           
  5543                           ;My_ST7032.c: 149: }
  5544                           ;My_ST7032.c: 150: I2C_Stop();
  5545  0135CA  ECC9  F09C         	call	_I2C_Stop	;wreg free
  5546                           
  5547                           ;My_ST7032.c: 151: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5548  0135CE  0E68               	movlw	104
  5549  0135D0                     u10347:
  5550  0135D0  2EE8               	decfsz	wreg,f,c
  5551  0135D2  D7FE               	goto	u10347
  5552  0135D4  0012               	return		;funcret
  5553  0135D6                     __end_of_I2C_LCD_Command:
  5554                           	opt stack 0
  5555                           tblptru	equ	0xFF8
  5556                           tblptrh	equ	0xFF7
  5557                           tblptrl	equ	0xFF6
  5558                           tablat	equ	0xFF5
  5559                           prodh	equ	0xFF4
  5560                           prodl	equ	0xFF3
  5561                           intcon	equ	0xFF2
  5562                           intcon2	equ	0xFF1
  5563                           postinc0	equ	0xFEE
  5564                           wreg	equ	0xFE8
  5565                           postdec1	equ	0xFE5
  5566                           fsr1h	equ	0xFE2
  5567                           fsr1l	equ	0xFE1
  5568                           indf2	equ	0xFDF
  5569                           postinc2	equ	0xFDE
  5570                           postdec2	equ	0xFDD
  5571                           fsr2h	equ	0xFDA
  5572                           fsr2l	equ	0xFD9
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function _I2C_LCD_Puts *****************
  5576 ;; Defined at:
  5577 ;;		line 178 in file "../My_library/My_ST7032.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  5580 ;;		 -> main@s(40), STR_2(9), STR_1(9), 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  ans             2    7[BANK0 ] int 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;		None               void
  5585 ;; Registers used:
  5586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5592 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5595 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5596 ;;Total ram usage:        5 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:   14
  5599 ;; This function calls:
  5600 ;;		_I2C_Send
  5601 ;;		_I2C_Start
  5602 ;;		_I2C_Stop
  5603 ;; This function is called by:
  5604 ;;		_setup
  5605 ;;		_main
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text27
  5610  012E24                     __ptext27:
  5611                           	opt stack 0
  5612  012E24                     _I2C_LCD_Puts:
  5613                           	opt stack 15
  5614                           
  5615                           ;My_ST7032.c: 179: int ans;
  5616                           ;My_ST7032.c: 181: ans = I2C_Start(0x3E, 0);
  5617                           
  5618                           ;incstack = 0
  5619  012E24  0E00               	movlw	0
  5620  012E26  0100               	movlb	0	; () banked
  5621  012E28  6F62               	movwf	I2C_Start@rw& (0+255),b
  5622  012E2A  0E3E               	movlw	62
  5623  012E2C  EC55  F09B         	call	_I2C_Start
  5624  012E30  0100               	movlb	0	; () banked
  5625  012E32  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
  5626  012E34  0100               	movlb	0	; () banked
  5627  012E36  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
  5628  012E38  0100               	movlb	0	; () banked
  5629  012E3A  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
  5630  012E3C  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;My_ST7032.c: 182: if (ans == 0) {
  5634  012E3E  0100               	movlb	0	; () banked
  5635  012E40  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  5636  012E42  0100               	movlb	0	; () banked
  5637  012E44  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  5638  012E46  A4D8               	btfss	status,2,c
  5639  012E48  D031               	goto	l9431
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;My_ST7032.c: 183: I2C_Send(0b01000000);
  5643  012E4A  0E40               	movlw	64
  5644  012E4C  ECA6  F09C         	call	_I2C_Send
  5645                           
  5646                           ;My_ST7032.c: 184: while (*s) {
  5647  012E50  D019               	goto	l9429
  5648  012E52                     l9423:
  5649                           
  5650                           ;My_ST7032.c: 185: I2C_Send(*s++);
  5651  012E52  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5652  012E56  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5653  012E5A  0E00               	movlw	low (__mediumconst shr (0+16))
  5654  012E5C  6EF8               	movwf	tblptru,c
  5655  012E5E  0E0E               	movlw	(high __ramtop+-1)
  5656  012E60  64F7               	cpfsgt	tblptrh,c
  5657  012E62  D003               	bra	u9107
  5658  012E64  0008               	tblrd		*
  5659  012E66  50F5               	movf	tablat,w,c
  5660  012E68  D005               	bra	u9100
  5661  012E6A                     u9107:
  5662  012E6A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5663  012E6E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5664  012E72  50EF               	movf	indf0,w,c
  5665  012E74                     u9100:
  5666  012E74  ECA6  F09C         	call	_I2C_Send
  5667  012E78  0100               	movlb	0	; () banked
  5668  012E7A  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  5669  012E7C  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;My_ST7032.c: 186: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5673  012E7E  0E68               	movlw	104
  5674  012E80                     u10357:
  5675  012E80  2EE8               	decfsz	wreg,f,c
  5676  012E82  D7FE               	goto	u10357
  5677  012E84                     l9429:
  5678  012E84  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5679  012E88  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5680  012E8C  0E00               	movlw	low (__mediumconst shr (0+16))
  5681  012E8E  6EF8               	movwf	tblptru,c
  5682  012E90  0E0E               	movlw	(high __ramtop+-1)
  5683  012E92  64F7               	cpfsgt	tblptrh,c
  5684  012E94  D003               	bra	u9117
  5685  012E96  0008               	tblrd		*
  5686  012E98  50F5               	movf	tablat,w,c
  5687  012E9A  D005               	bra	u9110
  5688  012E9C                     u9117:
  5689  012E9C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5690  012EA0  CFF7 FFEA          	movff	tblptrh,fsr0h
  5691  012EA4  50EF               	movf	indf0,w,c
  5692  012EA6                     u9110:
  5693  012EA6  0900               	iorlw	0
  5694  012EA8  A4D8               	btfss	status,2,c
  5695  012EAA  D7D3               	goto	l9423
  5696  012EAC                     l9431:
  5697                           
  5698                           ;My_ST7032.c: 187: }
  5699                           ;My_ST7032.c: 188: }
  5700                           ;My_ST7032.c: 189: I2C_Stop();
  5701  012EAC  ECC9  F09C         	call	_I2C_Stop	;wreg free
  5702  012EB0  0012               	return		;funcret
  5703  012EB2                     __end_of_I2C_LCD_Puts:
  5704                           	opt stack 0
  5705                           tblptru	equ	0xFF8
  5706                           tblptrh	equ	0xFF7
  5707                           tblptrl	equ	0xFF6
  5708                           tablat	equ	0xFF5
  5709                           prodh	equ	0xFF4
  5710                           prodl	equ	0xFF3
  5711                           intcon	equ	0xFF2
  5712                           intcon2	equ	0xFF1
  5713                           indf0	equ	0xFEF
  5714                           postinc0	equ	0xFEE
  5715                           fsr0h	equ	0xFEA
  5716                           fsr0l	equ	0xFE9
  5717                           wreg	equ	0xFE8
  5718                           postdec1	equ	0xFE5
  5719                           fsr1h	equ	0xFE2
  5720                           fsr1l	equ	0xFE1
  5721                           indf2	equ	0xFDF
  5722                           postinc2	equ	0xFDE
  5723                           postdec2	equ	0xFDD
  5724                           fsr2h	equ	0xFDA
  5725                           fsr2l	equ	0xFD9
  5726                           status	equ	0xFD8
  5727                           
  5728 ;; *************** function _I2C_Stop *****************
  5729 ;; Defined at:
  5730 ;;		line 96 in file "../My_library/My_I2C.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;		None               void
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5748 ;;Total ram usage:        0 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:   13
  5751 ;; This function calls:
  5752 ;;		_I2C_IdleCheck
  5753 ;; This function is called by:
  5754 ;;		_I2C_LCD_Command
  5755 ;;		_I2C_LCD_Puts
  5756 ;;		_RTC_Write
  5757 ;;		_RTC_Read
  5758 ;;		_EEP_write
  5759 ;;		_EEP_read
  5760 ;;		_EEP_read16
  5761 ;;		_EEP_read32
  5762 ;;		_EEP_write16
  5763 ;;		_EEP_write32
  5764 ;;		_TM_init
  5765 ;;		_TM_Read
  5766 ;;		_I2C_LCD_Putc
  5767 ;;		_I2C_LCD_CreateChar
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text28
  5772  013992                     __ptext28:
  5773                           	opt stack 0
  5774  013992                     _I2C_Stop:
  5775                           	opt stack 14
  5776                           
  5777                           ;My_I2C.c: 98: I2C_IdleCheck(0x5);
  5778                           
  5779                           ;incstack = 0
  5780  013992  0E05               	movlw	5
  5781  013994  EC70  F09C         	call	_I2C_IdleCheck
  5782                           
  5783                           ;My_I2C.c: 99: SSP1CON2bits.PEN = 1;
  5784  013998  84C5               	bsf	4037,2,c	;volatile
  5785  01399A  0012               	return		;funcret
  5786  01399C                     __end_of_I2C_Stop:
  5787                           	opt stack 0
  5788                           tblptru	equ	0xFF8
  5789                           tblptrh	equ	0xFF7
  5790                           tblptrl	equ	0xFF6
  5791                           tablat	equ	0xFF5
  5792                           prodh	equ	0xFF4
  5793                           prodl	equ	0xFF3
  5794                           intcon	equ	0xFF2
  5795                           intcon2	equ	0xFF1
  5796                           indf0	equ	0xFEF
  5797                           postinc0	equ	0xFEE
  5798                           fsr0h	equ	0xFEA
  5799                           fsr0l	equ	0xFE9
  5800                           wreg	equ	0xFE8
  5801                           postdec1	equ	0xFE5
  5802                           fsr1h	equ	0xFE2
  5803                           fsr1l	equ	0xFE1
  5804                           indf2	equ	0xFDF
  5805                           postinc2	equ	0xFDE
  5806                           postdec2	equ	0xFDD
  5807                           fsr2h	equ	0xFDA
  5808                           fsr2l	equ	0xFD9
  5809                           status	equ	0xFD8
  5810                           
  5811 ;; *************** function _I2C_Start *****************
  5812 ;; Defined at:
  5813 ;;		line 72 in file "../My_library/My_I2C.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  adrs            1    wreg     unsigned char 
  5816 ;;  rw              1    2[BANK0 ] unsigned char 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;  adrs            1    3[BANK0 ] unsigned char 
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      unsigned char 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, status,0, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5828 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5831 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5832 ;;Total ram usage:        2 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:   13
  5835 ;; This function calls:
  5836 ;;		_I2C_IdleCheck
  5837 ;; This function is called by:
  5838 ;;		_I2C_LCD_Command
  5839 ;;		_I2C_LCD_Puts
  5840 ;;		_RTC_Write
  5841 ;;		_RTC_Read
  5842 ;;		_EEP_write
  5843 ;;		_EEP_read
  5844 ;;		_EEP_read16
  5845 ;;		_EEP_read32
  5846 ;;		_EEP_write16
  5847 ;;		_EEP_write32
  5848 ;;		_TM_init
  5849 ;;		_TM_Read
  5850 ;;		_I2C_LCD_Putc
  5851 ;;		_I2C_LCD_CreateChar
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text29
  5856  0136AA                     __ptext29:
  5857                           	opt stack 0
  5858  0136AA                     _I2C_Start:
  5859                           	opt stack 14
  5860                           
  5861                           ;incstack = 0
  5862                           ;I2C_Start@adrs stored from wreg
  5863  0136AA  0100               	movlb	0	; () banked
  5864  0136AC  6F63               	movwf	I2C_Start@adrs& (0+255),b
  5865                           
  5866                           ;My_I2C.c: 74: I2C_IdleCheck(0x5);
  5867  0136AE  0E05               	movlw	5
  5868  0136B0  EC70  F09C         	call	_I2C_IdleCheck
  5869                           
  5870                           ;My_I2C.c: 75: SSP1CON2bits.SEN = 1;
  5871  0136B4  80C5               	bsf	4037,0,c	;volatile
  5872                           
  5873                           ;My_I2C.c: 77: I2C_IdleCheck(0x5);
  5874  0136B6  0E05               	movlw	5
  5875  0136B8  EC70  F09C         	call	_I2C_IdleCheck
  5876                           
  5877                           ;My_I2C.c: 78: SSP1IF = 0;
  5878  0136BC  969E               	bcf	3998,3,c	;volatile
  5879                           
  5880                           ;My_I2C.c: 79: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  5881  0136BE  0100               	movlb	0	; () banked
  5882  0136C0  5163               	movf	I2C_Start@adrs& (0+255),w,b
  5883  0136C2  2563               	addwf	I2C_Start@adrs& (0+255),w,b
  5884  0136C4  0100               	movlb	0	; () banked
  5885  0136C6  2562               	addwf	I2C_Start@rw& (0+255),w,b
  5886  0136C8  6EC9               	movwf	4041,c	;volatile
  5887  0136CA                     l266:
  5888  0136CA  A69E               	btfss	3998,3,c	;volatile
  5889  0136CC  D7FE               	goto	l266
  5890                           
  5891                           ;My_I2C.c: 81: return SSP1CON2bits.ACKSTAT;
  5892  0136CE  ACC5               	btfss	4037,6,c	;volatile
  5893  0136D0  D002               	goto	u8110
  5894  0136D2  0E01               	movlw	1
  5895  0136D4  0012               	return	
  5896  0136D6                     u8110:
  5897  0136D6  0E00               	movlw	0
  5898  0136D8  0012               	return	
  5899  0136DA                     __end_of_I2C_Start:
  5900                           	opt stack 0
  5901                           tblptru	equ	0xFF8
  5902                           tblptrh	equ	0xFF7
  5903                           tblptrl	equ	0xFF6
  5904                           tablat	equ	0xFF5
  5905                           prodh	equ	0xFF4
  5906                           prodl	equ	0xFF3
  5907                           intcon	equ	0xFF2
  5908                           intcon2	equ	0xFF1
  5909                           indf0	equ	0xFEF
  5910                           postinc0	equ	0xFEE
  5911                           fsr0h	equ	0xFEA
  5912                           fsr0l	equ	0xFE9
  5913                           wreg	equ	0xFE8
  5914                           postdec1	equ	0xFE5
  5915                           fsr1h	equ	0xFE2
  5916                           fsr1l	equ	0xFE1
  5917                           indf2	equ	0xFDF
  5918                           postinc2	equ	0xFDE
  5919                           postdec2	equ	0xFDD
  5920                           fsr2h	equ	0xFDA
  5921                           fsr2l	equ	0xFD9
  5922                           status	equ	0xFD8
  5923                           
  5924 ;; *************** function _I2C_Send *****************
  5925 ;; Defined at:
  5926 ;;		line 102 in file "../My_library/My_I2C.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  data            1    wreg     unsigned char 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  data            1    2[BANK0 ] unsigned char 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      unsigned char 
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5943 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5944 ;;Total ram usage:        1 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:   13
  5947 ;; This function calls:
  5948 ;;		_I2C_IdleCheck
  5949 ;; This function is called by:
  5950 ;;		_I2C_LCD_Command
  5951 ;;		_I2C_LCD_Puts
  5952 ;;		_RTC_Write
  5953 ;;		_RTC_Read
  5954 ;;		_EEP_write
  5955 ;;		_EEP_read
  5956 ;;		_EEP_read16
  5957 ;;		_EEP_read32
  5958 ;;		_EEP_write16
  5959 ;;		_EEP_write32
  5960 ;;		_TM_init
  5961 ;;		_TM_Read
  5962 ;;		_I2C_LCD_Putc
  5963 ;;		_I2C_LCD_CreateChar
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text30
  5968  01394C                     __ptext30:
  5969                           	opt stack 0
  5970  01394C                     _I2C_Send:
  5971                           	opt stack 14
  5972                           
  5973                           ;incstack = 0
  5974                           ;I2C_Send@data stored from wreg
  5975  01394C  0100               	movlb	0	; () banked
  5976  01394E  6F62               	movwf	I2C_Send@data& (0+255),b
  5977                           
  5978                           ;My_I2C.c: 103: I2C_IdleCheck(0x5);
  5979  013950  0E05               	movlw	5
  5980  013952  EC70  F09C         	call	_I2C_IdleCheck
  5981                           
  5982                           ;My_I2C.c: 104: SSP1IF = 0;
  5983  013956  969E               	bcf	3998,3,c	;volatile
  5984                           
  5985                           ;My_I2C.c: 105: SSP1BUF = data;
  5986  013958  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
  5987  01395C                     l281:
  5988  01395C  A69E               	btfss	3998,3,c	;volatile
  5989  01395E  D7FE               	goto	l281
  5990                           
  5991                           ;My_I2C.c: 107: return SSP1CON2bits.ACKSTAT;
  5992                           ;	Return value of _I2C_Send is never used
  5993  013960  50C5               	movf	4037,w,c	;volatile
  5994  013962  0012               	return	
  5995  013964                     __end_of_I2C_Send:
  5996                           	opt stack 0
  5997                           tblptru	equ	0xFF8
  5998                           tblptrh	equ	0xFF7
  5999                           tblptrl	equ	0xFF6
  6000                           tablat	equ	0xFF5
  6001                           prodh	equ	0xFF4
  6002                           prodl	equ	0xFF3
  6003                           intcon	equ	0xFF2
  6004                           intcon2	equ	0xFF1
  6005                           indf0	equ	0xFEF
  6006                           postinc0	equ	0xFEE
  6007                           fsr0h	equ	0xFEA
  6008                           fsr0l	equ	0xFE9
  6009                           wreg	equ	0xFE8
  6010                           postdec1	equ	0xFE5
  6011                           fsr1h	equ	0xFE2
  6012                           fsr1l	equ	0xFE1
  6013                           indf2	equ	0xFDF
  6014                           postinc2	equ	0xFDE
  6015                           postdec2	equ	0xFDD
  6016                           fsr2h	equ	0xFDA
  6017                           fsr2l	equ	0xFD9
  6018                           status	equ	0xFD8
  6019                           
  6020 ;; *************** function _I2C_IdleCheck *****************
  6021 ;; Defined at:
  6022 ;;		line 58 in file "../My_library/My_I2C.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  mask            1    wreg     unsigned char 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  mask            1    1[BANK0 ] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;		None               void
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6038 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6039 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6040 ;;Total ram usage:        2 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:   12
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_I2C_Start
  6047 ;;		_I2C_Stop
  6048 ;;		_I2C_Send
  6049 ;;		_I2C_rStart
  6050 ;;		_I2C_Receive
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           	psect	text31
  6055  0138E0                     __ptext31:
  6056                           	opt stack 0
  6057  0138E0                     _I2C_IdleCheck:
  6058                           	opt stack 14
  6059                           
  6060                           ;incstack = 0
  6061                           ;I2C_IdleCheck@mask stored from wreg
  6062  0138E0  0100               	movlb	0	; () banked
  6063  0138E2  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
  6064  0138E4                     l8497:
  6065  0138E4  50C7               	movf	4039,w,c	;volatile
  6066  0138E6  0100               	movlb	0	; () banked
  6067  0138E8  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
  6068  0138EA  0100               	movlb	0	; () banked
  6069  0138EC  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
  6070  0138EE  50C5               	movf	4037,w,c	;volatile
  6071  0138F0  0B1F               	andlw	31
  6072  0138F2  0100               	movlb	0	; () banked
  6073  0138F4  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
  6074  0138F6  0900               	iorlw	0
  6075  0138F8  B4D8               	btfsc	status,2,c
  6076  0138FA  0012               	return	
  6077  0138FC  D7F3               	goto	l8497
  6078  0138FE                     __end_of_I2C_IdleCheck:
  6079                           	opt stack 0
  6080                           tblptru	equ	0xFF8
  6081                           tblptrh	equ	0xFF7
  6082                           tblptrl	equ	0xFF6
  6083                           tablat	equ	0xFF5
  6084                           prodh	equ	0xFF4
  6085                           prodl	equ	0xFF3
  6086                           intcon	equ	0xFF2
  6087                           intcon2	equ	0xFF1
  6088                           indf0	equ	0xFEF
  6089                           postinc0	equ	0xFEE
  6090                           fsr0h	equ	0xFEA
  6091                           fsr0l	equ	0xFE9
  6092                           wreg	equ	0xFE8
  6093                           postdec1	equ	0xFE5
  6094                           fsr1h	equ	0xFE2
  6095                           fsr1l	equ	0xFE1
  6096                           indf2	equ	0xFDF
  6097                           postinc2	equ	0xFDE
  6098                           postdec2	equ	0xFDD
  6099                           fsr2h	equ	0xFDA
  6100                           fsr2l	equ	0xFD9
  6101                           status	equ	0xFD8
  6102                           
  6103 ;; *************** function _display_time_0802 *****************
  6104 ;; Defined at:
  6105 ;;		line 102 in file "../My_library/My_RTCC.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  tm              2   55[BANK0 ] PTR struct .
  6108 ;;		 -> now(14), 
  6109 ;;  line0           2   57[BANK0 ] PTR unsigned char 
  6110 ;;		 -> main@s(40), 
  6111 ;;  line1           2   59[BANK0 ] PTR unsigned char 
  6112 ;;		 -> main@s(40), 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;		None               void
  6117 ;; Registers used:
  6118 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6124 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6127 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6128 ;;Total ram usage:        6 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:   16
  6131 ;; This function calls:
  6132 ;;		_RTCC_from_RTCC
  6133 ;;		_display_dec
  6134 ;;		_strcat
  6135 ;;		_strcpy
  6136 ;; This function is called by:
  6137 ;;		_main
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text32
  6142  010966                     __ptext32:
  6143                           	opt stack 0
  6144  010966                     _display_time_0802:
  6145                           	opt stack 14
  6146                           
  6147                           ;My_RTCC.c: 103: RTCC_from_RTCC(&now);
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;incstack = 0
  6151  010966  0EB6               	movlw	low _now
  6152  010968  0100               	movlb	0	; () banked
  6153  01096A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  6154  01096C  0E01               	movlw	high _now
  6155  01096E  0100               	movlb	0	; () banked
  6156  010970  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  6157  010972  EC99  F09C         	call	_RTCC_from_RTCC	;wreg free
  6158                           
  6159                           ;My_RTCC.c: 105: strcpy(line0, "");
  6160  010976  C099  F060         	movff	display_time_0802@line0,strcpy@to
  6161  01097A  C09A  F061         	movff	display_time_0802@line0+1,strcpy@to+1
  6162  01097E  0EE8               	movlw	low (STR_21+3)
  6163  010980  0100               	movlb	0	; () banked
  6164  010982  6F62               	movwf	strcpy@from& (0+255),b
  6165  010984  0EFF               	movlw	high (STR_21+3)
  6166  010986  0100               	movlb	0	; () banked
  6167  010988  6F63               	movwf	(strcpy@from+1)& (0+255),b
  6168  01098A  ECEB  F09A         	call	_strcpy	;wreg free
  6169                           
  6170                           ;My_RTCC.c: 106: display_dec(line0, tm->YY, tm->edit.flag.YY);
  6171  01098E  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  6172  010992  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  6173  010996  0100               	movlb	0	; () banked
  6174  010998  EE20 F00A          	lfsr	2,10
  6175  01099C  5197               	movf	display_time_0802@tm& (0+255),w,b
  6176  01099E  26D9               	addwf	fsr2l,f,c
  6177  0109A0  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6178  0109A2  22DA               	addwfc	fsr2h,f,c
  6179  0109A4  50DF               	movf	indf2,w,c
  6180  0109A6  0100               	movlb	0	; () banked
  6181  0109A8  6F91               	movwf	display_dec@dec& (0+255),b
  6182  0109AA  0100               	movlb	0	; () banked
  6183  0109AC  EE20 F00D          	lfsr	2,13
  6184  0109B0  5197               	movf	display_time_0802@tm& (0+255),w,b
  6185  0109B2  26D9               	addwf	fsr2l,f,c
  6186  0109B4  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6187  0109B6  22DA               	addwfc	fsr2h,f,c
  6188  0109B8  0E00               	movlw	0
  6189  0109BA  BADF               	btfsc	indf2,5,c
  6190  0109BC  0E01               	movlw	1
  6191  0109BE  0100               	movlb	0	; () banked
  6192  0109C0  6F92               	movwf	display_dec@edit& (0+255),b
  6193  0109C2  EC7E  F098         	call	_display_dec	;wreg free
  6194                           
  6195                           ;My_RTCC.c: 107: strcat(line0, "/");
  6196  0109C6  C099  F060         	movff	display_time_0802@line0,strcat@to
  6197  0109CA  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  6198  0109CE  0EFA               	movlw	low STR_6
  6199  0109D0  0100               	movlb	0	; () banked
  6200  0109D2  6F62               	movwf	strcat@from& (0+255),b
  6201  0109D4  0EFF               	movlw	high STR_6
  6202  0109D6  0100               	movlb	0	; () banked
  6203  0109D8  6F63               	movwf	(strcat@from+1)& (0+255),b
  6204  0109DA  ECE4  F098         	call	_strcat	;wreg free
  6205                           
  6206                           ;My_RTCC.c: 108: display_dec(line0, tm->MM, tm->edit.flag.MM);
  6207  0109DE  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  6208  0109E2  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  6209  0109E6  0100               	movlb	0	; () banked
  6210  0109E8  EE20 F009          	lfsr	2,9
  6211  0109EC  5197               	movf	display_time_0802@tm& (0+255),w,b
  6212  0109EE  26D9               	addwf	fsr2l,f,c
  6213  0109F0  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6214  0109F2  22DA               	addwfc	fsr2h,f,c
  6215  0109F4  50DF               	movf	indf2,w,c
  6216  0109F6  0100               	movlb	0	; () banked
  6217  0109F8  6F91               	movwf	display_dec@dec& (0+255),b
  6218  0109FA  0100               	movlb	0	; () banked
  6219  0109FC  EE20 F00D          	lfsr	2,13
  6220  010A00  5197               	movf	display_time_0802@tm& (0+255),w,b
  6221  010A02  26D9               	addwf	fsr2l,f,c
  6222  010A04  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6223  010A06  22DA               	addwfc	fsr2h,f,c
  6224  010A08  0E00               	movlw	0
  6225  010A0A  B8DF               	btfsc	indf2,4,c
  6226  010A0C  0E01               	movlw	1
  6227  010A0E  0100               	movlb	0	; () banked
  6228  010A10  6F92               	movwf	display_dec@edit& (0+255),b
  6229  010A12  EC7E  F098         	call	_display_dec	;wreg free
  6230                           
  6231                           ;My_RTCC.c: 109: strcat(line0, "/");
  6232  010A16  C099  F060         	movff	display_time_0802@line0,strcat@to
  6233  010A1A  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  6234  010A1E  0EFA               	movlw	low STR_6
  6235  010A20  0100               	movlb	0	; () banked
  6236  010A22  6F62               	movwf	strcat@from& (0+255),b
  6237  010A24  0EFF               	movlw	high STR_6
  6238  010A26  0100               	movlb	0	; () banked
  6239  010A28  6F63               	movwf	(strcat@from+1)& (0+255),b
  6240  010A2A  ECE4  F098         	call	_strcat	;wreg free
  6241                           
  6242                           ;My_RTCC.c: 110: display_dec(line0, tm->DD, tm->edit.flag.DD);
  6243  010A2E  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  6244  010A32  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  6245  010A36  0100               	movlb	0	; () banked
  6246  010A38  EE20 F008          	lfsr	2,8
  6247  010A3C  5197               	movf	display_time_0802@tm& (0+255),w,b
  6248  010A3E  26D9               	addwf	fsr2l,f,c
  6249  010A40  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6250  010A42  22DA               	addwfc	fsr2h,f,c
  6251  010A44  50DF               	movf	indf2,w,c
  6252  010A46  0100               	movlb	0	; () banked
  6253  010A48  6F91               	movwf	display_dec@dec& (0+255),b
  6254  010A4A  0100               	movlb	0	; () banked
  6255  010A4C  EE20 F00D          	lfsr	2,13
  6256  010A50  5197               	movf	display_time_0802@tm& (0+255),w,b
  6257  010A52  26D9               	addwf	fsr2l,f,c
  6258  010A54  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6259  010A56  22DA               	addwfc	fsr2h,f,c
  6260  010A58  0E00               	movlw	0
  6261  010A5A  B6DF               	btfsc	indf2,3,c
  6262  010A5C  0E01               	movlw	1
  6263  010A5E  0100               	movlb	0	; () banked
  6264  010A60  6F92               	movwf	display_dec@edit& (0+255),b
  6265  010A62  EC7E  F098         	call	_display_dec	;wreg free
  6266                           
  6267                           ;My_RTCC.c: 112: strcpy(line1, "");
  6268  010A66  C09B  F060         	movff	display_time_0802@line1,strcpy@to
  6269  010A6A  C09C  F061         	movff	display_time_0802@line1+1,strcpy@to+1
  6270  010A6E  0EE8               	movlw	low (STR_21+3)
  6271  010A70  0100               	movlb	0	; () banked
  6272  010A72  6F62               	movwf	strcpy@from& (0+255),b
  6273  010A74  0EFF               	movlw	high (STR_21+3)
  6274  010A76  0100               	movlb	0	; () banked
  6275  010A78  6F63               	movwf	(strcpy@from+1)& (0+255),b
  6276  010A7A  ECEB  F09A         	call	_strcpy	;wreg free
  6277                           
  6278                           ;My_RTCC.c: 113: display_dec(line1, tm->hh, tm->edit.flag.hh);
  6279  010A7E  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  6280  010A82  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  6281  010A86  0100               	movlb	0	; () banked
  6282  010A88  EE20 F006          	lfsr	2,6
  6283  010A8C  5197               	movf	display_time_0802@tm& (0+255),w,b
  6284  010A8E  26D9               	addwf	fsr2l,f,c
  6285  010A90  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6286  010A92  22DA               	addwfc	fsr2h,f,c
  6287  010A94  50DF               	movf	indf2,w,c
  6288  010A96  0100               	movlb	0	; () banked
  6289  010A98  6F91               	movwf	display_dec@dec& (0+255),b
  6290  010A9A  0100               	movlb	0	; () banked
  6291  010A9C  EE20 F00D          	lfsr	2,13
  6292  010AA0  5197               	movf	display_time_0802@tm& (0+255),w,b
  6293  010AA2  26D9               	addwf	fsr2l,f,c
  6294  010AA4  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6295  010AA6  22DA               	addwfc	fsr2h,f,c
  6296  010AA8  0E00               	movlw	0
  6297  010AAA  B4DF               	btfsc	indf2,2,c
  6298  010AAC  0E01               	movlw	1
  6299  010AAE  0100               	movlb	0	; () banked
  6300  010AB0  6F92               	movwf	display_dec@edit& (0+255),b
  6301  010AB2  EC7E  F098         	call	_display_dec	;wreg free
  6302                           
  6303                           ;My_RTCC.c: 114: if (now.colon) strcat(line1, ":");
  6304  010AB6  0101               	movlb	1	; () banked
  6305  010AB8  51C1               	movf	(_now+11)& (0+255),w,b
  6306  010ABA  B4D8               	btfsc	status,2,c
  6307  010ABC  D00D               	goto	l9623
  6308                           
  6309                           ; BSR set to: 1
  6310  010ABE  C09B  F060         	movff	display_time_0802@line1,strcat@to
  6311  010AC2  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  6312  010AC6  0EFC               	movlw	low STR_9
  6313  010AC8  0100               	movlb	0	; () banked
  6314  010ACA  6F62               	movwf	strcat@from& (0+255),b
  6315  010ACC  0EFF               	movlw	high STR_9
  6316  010ACE  0100               	movlb	0	; () banked
  6317  010AD0  6F63               	movwf	(strcat@from+1)& (0+255),b
  6318  010AD2  ECE4  F098         	call	_strcat	;wreg free
  6319  010AD6  D00C               	goto	l9625
  6320  010AD8                     l9623:
  6321                           
  6322                           ;My_RTCC.c: 115: else strcat(line1, " ");
  6323  010AD8  C09B  F060         	movff	display_time_0802@line1,strcat@to
  6324  010ADC  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  6325  010AE0  0E9F               	movlw	low (STR_17+7)
  6326  010AE2  0100               	movlb	0	; () banked
  6327  010AE4  6F62               	movwf	strcat@from& (0+255),b
  6328  010AE6  0EFF               	movlw	high (STR_17+7)
  6329  010AE8  0100               	movlb	0	; () banked
  6330  010AEA  6F63               	movwf	(strcat@from+1)& (0+255),b
  6331  010AEC  ECE4  F098         	call	_strcat	;wreg free
  6332  010AF0                     l9625:
  6333                           
  6334                           ;My_RTCC.c: 116: display_dec(line1, tm->mm, tm->edit.flag.mm);
  6335  010AF0  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  6336  010AF4  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  6337  010AF8  0100               	movlb	0	; () banked
  6338  010AFA  EE20 F005          	lfsr	2,5
  6339  010AFE  5197               	movf	display_time_0802@tm& (0+255),w,b
  6340  010B00  26D9               	addwf	fsr2l,f,c
  6341  010B02  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6342  010B04  22DA               	addwfc	fsr2h,f,c
  6343  010B06  50DF               	movf	indf2,w,c
  6344  010B08  0100               	movlb	0	; () banked
  6345  010B0A  6F91               	movwf	display_dec@dec& (0+255),b
  6346  010B0C  0100               	movlb	0	; () banked
  6347  010B0E  EE20 F00D          	lfsr	2,13
  6348  010B12  5197               	movf	display_time_0802@tm& (0+255),w,b
  6349  010B14  26D9               	addwf	fsr2l,f,c
  6350  010B16  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6351  010B18  22DA               	addwfc	fsr2h,f,c
  6352  010B1A  0E00               	movlw	0
  6353  010B1C  B2DF               	btfsc	indf2,1,c
  6354  010B1E  0E01               	movlw	1
  6355  010B20  0100               	movlb	0	; () banked
  6356  010B22  6F92               	movwf	display_dec@edit& (0+255),b
  6357  010B24  EC7E  F098         	call	_display_dec	;wreg free
  6358                           
  6359                           ;My_RTCC.c: 117: strcat(line1, "-");
  6360  010B28  C09B  F060         	movff	display_time_0802@line1,strcat@to
  6361  010B2C  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  6362  010B30  0EF8               	movlw	low STR_11
  6363  010B32  0100               	movlb	0	; () banked
  6364  010B34  6F62               	movwf	strcat@from& (0+255),b
  6365  010B36  0EFF               	movlw	high STR_11
  6366  010B38  0100               	movlb	0	; () banked
  6367  010B3A  6F63               	movwf	(strcat@from+1)& (0+255),b
  6368  010B3C  ECE4  F098         	call	_strcat	;wreg free
  6369                           
  6370                           ;My_RTCC.c: 118: display_dec(line1, tm->ss, tm->edit.flag.ss);
  6371  010B40  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  6372  010B44  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  6373  010B48  0100               	movlb	0	; () banked
  6374  010B4A  EE20 F004          	lfsr	2,4
  6375  010B4E  5197               	movf	display_time_0802@tm& (0+255),w,b
  6376  010B50  26D9               	addwf	fsr2l,f,c
  6377  010B52  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6378  010B54  22DA               	addwfc	fsr2h,f,c
  6379  010B56  50DF               	movf	indf2,w,c
  6380  010B58  0100               	movlb	0	; () banked
  6381  010B5A  6F91               	movwf	display_dec@dec& (0+255),b
  6382  010B5C  0100               	movlb	0	; () banked
  6383  010B5E  EE20 F00D          	lfsr	2,13
  6384  010B62  5197               	movf	display_time_0802@tm& (0+255),w,b
  6385  010B64  26D9               	addwf	fsr2l,f,c
  6386  010B66  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  6387  010B68  22DA               	addwfc	fsr2h,f,c
  6388  010B6A  0E00               	movlw	0
  6389  010B6C  B0DF               	btfsc	indf2,0,c
  6390  010B6E  0E01               	movlw	1
  6391  010B70  0100               	movlb	0	; () banked
  6392  010B72  6F92               	movwf	display_dec@edit& (0+255),b
  6393  010B74  EC7E  F098         	call	_display_dec	;wreg free
  6394  010B78  0012               	return		;funcret
  6395  010B7A                     __end_of_display_time_0802:
  6396                           	opt stack 0
  6397                           tblptru	equ	0xFF8
  6398                           tblptrh	equ	0xFF7
  6399                           tblptrl	equ	0xFF6
  6400                           tablat	equ	0xFF5
  6401                           prodh	equ	0xFF4
  6402                           prodl	equ	0xFF3
  6403                           intcon	equ	0xFF2
  6404                           intcon2	equ	0xFF1
  6405                           indf0	equ	0xFEF
  6406                           postinc0	equ	0xFEE
  6407                           fsr0h	equ	0xFEA
  6408                           fsr0l	equ	0xFE9
  6409                           wreg	equ	0xFE8
  6410                           postdec1	equ	0xFE5
  6411                           fsr1h	equ	0xFE2
  6412                           fsr1l	equ	0xFE1
  6413                           indf2	equ	0xFDF
  6414                           postinc2	equ	0xFDE
  6415                           postdec2	equ	0xFDD
  6416                           fsr2h	equ	0xFDA
  6417                           fsr2l	equ	0xFD9
  6418                           status	equ	0xFD8
  6419                           
  6420 ;; *************** function _strcpy *****************
  6421 ;; Defined at:
  6422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  to              2    0[BANK0 ] PTR unsigned char 
  6425 ;;		 -> main@s(40), 
  6426 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  6427 ;;		 -> STR_17(9), STR_12(1), STR_8(1), STR_5(1), 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  6430 ;;		 -> main@s(40), 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  2    0[BANK0 ] PTR unsigned char 
  6433 ;; Registers used:
  6434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6440 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6441 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6443 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6444 ;;Total ram usage:        6 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:   12
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_display_time_0802
  6451 ;;		_display_time_1602
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text33
  6456  0135D6                     __ptext33:
  6457                           	opt stack 0
  6458  0135D6                     _strcpy:
  6459                           	opt stack 17
  6460                           
  6461                           ;incstack = 0
  6462  0135D6  C060  F064         	movff	strcpy@to,strcpy@cp
  6463  0135DA  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  6464  0135DE  D006               	goto	l9481
  6465  0135E0                     l9479:
  6466  0135E0  0100               	movlb	0	; () banked
  6467  0135E2  4B64               	infsnz	strcpy@cp& (0+255),f,b
  6468  0135E4  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  6469  0135E6  0100               	movlb	0	; () banked
  6470  0135E8  4B62               	infsnz	strcpy@from& (0+255),f,b
  6471  0135EA  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  6472  0135EC                     l9481:
  6473  0135EC  C062  FFF6         	movff	strcpy@from,tblptrl
  6474  0135F0  C063  FFF7         	movff	strcpy@from+1,tblptrh
  6475  0135F4                     	if	0	;tblptru may be non-zero
  6476  0135F4                     	endif
  6477  0135F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6478  0135F4  0E00               	movlw	low (__mediumconst shr (0+16))
  6479  0135F6  6EF8               	movwf	tblptru,c
  6480  0135F8                     	endif
  6481  0135F8  C064  FFD9         	movff	strcpy@cp,fsr2l
  6482  0135FC  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  6483  013600  0008               	tblrd		*
  6484  013602  CFF5 FFDF          	movff	tablat,indf2
  6485  013606  50DF               	movf	indf2,w,c
  6486  013608  B4D8               	btfsc	status,2,c
  6487  01360A  0012               	return	
  6488  01360C  D7E9               	goto	l9479
  6489  01360E                     __end_of_strcpy:
  6490                           	opt stack 0
  6491                           tblptru	equ	0xFF8
  6492                           tblptrh	equ	0xFF7
  6493                           tblptrl	equ	0xFF6
  6494                           tablat	equ	0xFF5
  6495                           prodh	equ	0xFF4
  6496                           prodl	equ	0xFF3
  6497                           intcon	equ	0xFF2
  6498                           intcon2	equ	0xFF1
  6499                           indf0	equ	0xFEF
  6500                           postinc0	equ	0xFEE
  6501                           fsr0h	equ	0xFEA
  6502                           fsr0l	equ	0xFE9
  6503                           wreg	equ	0xFE8
  6504                           postdec1	equ	0xFE5
  6505                           fsr1h	equ	0xFE2
  6506                           fsr1l	equ	0xFE1
  6507                           indf2	equ	0xFDF
  6508                           postinc2	equ	0xFDE
  6509                           postdec2	equ	0xFDD
  6510                           fsr2h	equ	0xFDA
  6511                           fsr2l	equ	0xFD9
  6512                           status	equ	0xFD8
  6513                           
  6514 ;; *************** function _display_dec *****************
  6515 ;; Defined at:
  6516 ;;		line 95 in file "../My_library/My_RTCC.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;  str             2   47[BANK0 ] PTR unsigned char 
  6519 ;;		 -> main@s(40), 
  6520 ;;  dec             1   49[BANK0 ] unsigned char 
  6521 ;;  edit            1   50[BANK0 ] unsigned char 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  s               4   51[BANK0 ] unsigned char [4]
  6524 ;; Return value:  Size  Location     Type
  6525 ;;		None               void
  6526 ;; Registers used:
  6527 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6533 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6534 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6536 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6537 ;;Total ram usage:        8 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:   14
  6540 ;; This function calls:
  6541 ;;		_sprintf
  6542 ;;		_strcat
  6543 ;; This function is called by:
  6544 ;;		_display_time_0802
  6545 ;;		_display_time_1602
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text34
  6550  0130FC                     __ptext34:
  6551                           	opt stack 0
  6552  0130FC                     _display_dec:
  6553                           	opt stack 15
  6554                           
  6555                           ;My_RTCC.c: 96: char s[4];
  6556                           ;My_RTCC.c: 97: sprintf(s, "%02d", dec);
  6557                           
  6558                           ;incstack = 0
  6559  0130FC  0E93               	movlw	low display_dec@s
  6560  0130FE  0100               	movlb	0	; () banked
  6561  013100  6F6C               	movwf	sprintf@sp& (0+255),b
  6562  013102  0E00               	movlw	high display_dec@s
  6563  013104  0100               	movlb	0	; () banked
  6564  013106  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  6565  013108  0EE0               	movlw	low STR_3
  6566  01310A  0100               	movlb	0	; () banked
  6567  01310C  6F6E               	movwf	sprintf@f& (0+255),b
  6568  01310E  0EFF               	movlw	high STR_3
  6569  013110  0100               	movlb	0	; () banked
  6570  013112  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  6571  013114  C091  F070         	movff	display_dec@dec,?_sprintf+4
  6572  013118  0100               	movlb	0	; () banked
  6573  01311A  6B71               	clrf	(?_sprintf+5)& (0+255),b
  6574  01311C  EC00  F080         	call	_sprintf	;wreg free
  6575                           
  6576                           ;My_RTCC.c: 98: if (edit && now.halfsec)strcat(str, "  ");
  6577  013120  0100               	movlb	0	; () banked
  6578  013122  5192               	movf	display_dec@edit& (0+255),w,b
  6579  013124  0100               	movlb	0	; () banked
  6580  013126  B4D8               	btfsc	status,2,c
  6581  013128  D011               	goto	l9475
  6582                           
  6583                           ; BSR set to: 0
  6584  01312A  0101               	movlb	1	; () banked
  6585  01312C  51C2               	movf	(_now+12)& (0+255),w,b
  6586  01312E  B4D8               	btfsc	status,2,c
  6587  013130  D00D               	goto	l9475
  6588                           
  6589                           ; BSR set to: 1
  6590  013132  C08F  F060         	movff	display_dec@str,strcat@to
  6591  013136  C090  F061         	movff	display_dec@str+1,strcat@to+1
  6592  01313A  0E9E               	movlw	low (STR_17+6)
  6593  01313C  0100               	movlb	0	; () banked
  6594  01313E  6F62               	movwf	strcat@from& (0+255),b
  6595  013140  0EFF               	movlw	high (STR_17+6)
  6596  013142  0100               	movlb	0	; () banked
  6597  013144  6F63               	movwf	(strcat@from+1)& (0+255),b
  6598  013146  ECE4  F098         	call	_strcat	;wreg free
  6599  01314A  0012               	return	
  6600  01314C                     l9475:
  6601                           
  6602                           ;My_RTCC.c: 99: else strcat(str, s);
  6603  01314C  C08F  F060         	movff	display_dec@str,strcat@to
  6604  013150  C090  F061         	movff	display_dec@str+1,strcat@to+1
  6605  013154  0E93               	movlw	low display_dec@s
  6606  013156  0100               	movlb	0	; () banked
  6607  013158  6F62               	movwf	strcat@from& (0+255),b
  6608  01315A  0E00               	movlw	high display_dec@s
  6609  01315C  0100               	movlb	0	; () banked
  6610  01315E  6F63               	movwf	(strcat@from+1)& (0+255),b
  6611  013160  ECE4  F098         	call	_strcat	;wreg free
  6612  013164  0012               	return	
  6613  013166                     __end_of_display_dec:
  6614                           	opt stack 0
  6615                           tblptru	equ	0xFF8
  6616                           tblptrh	equ	0xFF7
  6617                           tblptrl	equ	0xFF6
  6618                           tablat	equ	0xFF5
  6619                           prodh	equ	0xFF4
  6620                           prodl	equ	0xFF3
  6621                           intcon	equ	0xFF2
  6622                           intcon2	equ	0xFF1
  6623                           indf0	equ	0xFEF
  6624                           postinc0	equ	0xFEE
  6625                           fsr0h	equ	0xFEA
  6626                           fsr0l	equ	0xFE9
  6627                           wreg	equ	0xFE8
  6628                           postdec1	equ	0xFE5
  6629                           fsr1h	equ	0xFE2
  6630                           fsr1l	equ	0xFE1
  6631                           indf2	equ	0xFDF
  6632                           postinc2	equ	0xFDE
  6633                           postdec2	equ	0xFDD
  6634                           fsr2h	equ	0xFDA
  6635                           fsr2l	equ	0xFD9
  6636                           status	equ	0xFD8
  6637                           
  6638 ;; *************** function _strcat *****************
  6639 ;; Defined at:
  6640 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  to              2    0[BANK0 ] PTR unsigned char 
  6643 ;;		 -> main@s(40), 
  6644 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  6645 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_16(2), 
  6646 ;;		 -> weekday_3char(28), STR_15(2), STR_14(2), STR_13(2), 
  6647 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_7(2), 
  6648 ;;		 -> STR_6(2), STR_4(3), display_dec@s(4), 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  6651 ;;		 -> main@s(40), 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  2    0[BANK0 ] PTR unsigned char 
  6654 ;; Registers used:
  6655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6661 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6665 ;;Total ram usage:        6 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:   12
  6668 ;; This function calls:
  6669 ;;		Nothing
  6670 ;; This function is called by:
  6671 ;;		_display_dec
  6672 ;;		_display_time_0802
  6673 ;;		_display_time_1602
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text35
  6678  0131C8                     __ptext35:
  6679                           	opt stack 0
  6680  0131C8                     _strcat:
  6681                           	opt stack 17
  6682                           
  6683                           ;incstack = 0
  6684  0131C8  C060  F064         	movff	strcat@to,strcat@cp
  6685  0131CC  C061  F065         	movff	strcat@to+1,strcat@cp+1
  6686  0131D0  D003               	goto	l9081
  6687  0131D2                     l9079:
  6688  0131D2  0100               	movlb	0	; () banked
  6689  0131D4  4B64               	infsnz	strcat@cp& (0+255),f,b
  6690  0131D6  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  6691  0131D8                     l9081:
  6692  0131D8  C064  FFD9         	movff	strcat@cp,fsr2l
  6693  0131DC  C065  FFDA         	movff	strcat@cp+1,fsr2h
  6694  0131E0  50DF               	movf	indf2,w,c
  6695  0131E2  B4D8               	btfsc	status,2,c
  6696  0131E4  D007               	goto	l9085
  6697  0131E6  D7F5               	goto	l9079
  6698  0131E8                     l9083:
  6699  0131E8  0100               	movlb	0	; () banked
  6700  0131EA  4B64               	infsnz	strcat@cp& (0+255),f,b
  6701  0131EC  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  6702  0131EE  0100               	movlb	0	; () banked
  6703  0131F0  4B62               	infsnz	strcat@from& (0+255),f,b
  6704  0131F2  2B63               	incf	(strcat@from+1)& (0+255),f,b
  6705  0131F4                     l9085:
  6706  0131F4  C062  FFF6         	movff	strcat@from,tblptrl
  6707  0131F8  C063  FFF7         	movff	strcat@from+1,tblptrh
  6708  0131FC  0E00               	movlw	low (__mediumconst shr (0+16))
  6709  0131FE  6EF8               	movwf	tblptru,c
  6710  013200  C064  FFD9         	movff	strcat@cp,fsr2l
  6711  013204  C065  FFDA         	movff	strcat@cp+1,fsr2h
  6712  013208  0E0E               	movlw	(high __ramtop+-1)
  6713  01320A  64F7               	cpfsgt	tblptrh,c
  6714  01320C  D003               	bra	u8737
  6715  01320E  0008               	tblrd		*
  6716  013210  50F5               	movf	tablat,w,c
  6717  013212  D005               	bra	u8730
  6718  013214                     u8737:
  6719  013214  CFF6 FFE9          	movff	tblptrl,fsr0l
  6720  013218  CFF7 FFEA          	movff	tblptrh,fsr0h
  6721  01321C  50EF               	movf	indf0,w,c
  6722  01321E                     u8730:
  6723  01321E  6EDF               	movwf	indf2,c
  6724  013220  50DF               	movf	indf2,w,c
  6725  013222  B4D8               	btfsc	status,2,c
  6726  013224  0012               	return	
  6727  013226  D7E0               	goto	l9083
  6728  013228                     __end_of_strcat:
  6729                           	opt stack 0
  6730                           tblptru	equ	0xFF8
  6731                           tblptrh	equ	0xFF7
  6732                           tblptrl	equ	0xFF6
  6733                           tablat	equ	0xFF5
  6734                           prodh	equ	0xFF4
  6735                           prodl	equ	0xFF3
  6736                           intcon	equ	0xFF2
  6737                           intcon2	equ	0xFF1
  6738                           indf0	equ	0xFEF
  6739                           postinc0	equ	0xFEE
  6740                           fsr0h	equ	0xFEA
  6741                           fsr0l	equ	0xFE9
  6742                           wreg	equ	0xFE8
  6743                           postdec1	equ	0xFE5
  6744                           fsr1h	equ	0xFE2
  6745                           fsr1l	equ	0xFE1
  6746                           indf2	equ	0xFDF
  6747                           postinc2	equ	0xFDE
  6748                           postdec2	equ	0xFDD
  6749                           fsr2h	equ	0xFDA
  6750                           fsr2l	equ	0xFD9
  6751                           status	equ	0xFD8
  6752                           
  6753 ;; *************** function _sprintf *****************
  6754 ;; Defined at:
  6755 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  6758 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  6759 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  6760 ;;		 -> STR_25(37), STR_23(5), STR_3(5), 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  tmpval          4    0        struct .
  6763 ;;  width           2   45[BANK0 ] int 
  6764 ;;  len             2   41[BANK0 ] unsigned int 
  6765 ;;  val             2   39[BANK0 ] unsigned int 
  6766 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  6767 ;;		 -> STR_43(7), weekday_3char(28), 
  6768 ;;  ap              2   35[BANK0 ] PTR void [1]
  6769 ;;		 -> ?_sprintf(2), 
  6770 ;;  c               1   44[BANK0 ] char 
  6771 ;;  flag            1   43[BANK0 ] unsigned char 
  6772 ;;  prec            1   34[BANK0 ] char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  2   12[BANK0 ] int 
  6775 ;; Registers used:
  6776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6782 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6783 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6784 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6785 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6786 ;;Total ram usage:       35 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:   13
  6789 ;; This function calls:
  6790 ;;		___lwdiv
  6791 ;;		___lwmod
  6792 ;;		___wmul
  6793 ;;		_isdigit
  6794 ;; This function is called by:
  6795 ;;		_display_dec
  6796 ;;		_print_time_dec
  6797 ;;		_print_time
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text36
  6802  010000                     __ptext36:
  6803                           	opt stack 0
  6804  010000                     _sprintf:
  6805                           	opt stack 15
  6806                           
  6807                           ;doprnt.c: 494: va_list ap;
  6808                           ;doprnt.c: 499: signed char c;
  6809                           ;doprnt.c: 501: int width;
  6810                           ;doprnt.c: 506: signed char prec;
  6811                           ;doprnt.c: 508: unsigned char flag;
  6812                           ;doprnt.c: 523: union {
  6813                           ;doprnt.c: 524: unsigned long vd;
  6814                           ;doprnt.c: 525: double integ;
  6815                           ;doprnt.c: 526: } tmpval;
  6816                           ;doprnt.c: 528: unsigned int val;
  6817                           ;doprnt.c: 529: unsigned len;
  6818                           ;doprnt.c: 530: const char * cp;
  6819                           ;doprnt.c: 533: *ap = __va_start();
  6820                           
  6821                           ;incstack = 0
  6822  010000  0E70               	movlw	low (?_sprintf+4)
  6823  010002  0100               	movlb	0	; () banked
  6824  010004  6F83               	movwf	sprintf@ap& (0+255),b
  6825  010006  0E00               	movlw	high (?_sprintf+4)
  6826  010008  0100               	movlb	0	; () banked
  6827  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  6828                           
  6829                           ;doprnt.c: 536: while(c = *f++) {
  6830  01000C  D20F               	goto	l9071
  6831  01000E                     l8931:
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;doprnt.c: 538: if(c != '%')
  6835  01000E  0E25               	movlw	37
  6836  010010  0100               	movlb	0	; () banked
  6837  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  6838  010014  B4D8               	btfsc	status,2,c
  6839  010016  D00A               	goto	l8937
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;doprnt.c: 540: {
  6843                           ;doprnt.c: 541: ((*sp++ = (c)));
  6844  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6845  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6846  010020  C08C  FFDF         	movff	sprintf@c,indf2
  6847                           
  6848                           ; BSR set to: 0
  6849  010024  0100               	movlb	0	; () banked
  6850  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6851  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6852                           
  6853                           ;doprnt.c: 542: continue;
  6854  01002A  D200               	goto	l9071
  6855  01002C                     l8937:
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;doprnt.c: 543: }
  6859                           ;doprnt.c: 546: width = 0;
  6860  01002C  0E00               	movlw	0
  6861  01002E  0100               	movlb	0	; () banked
  6862  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6863  010032  0E00               	movlw	0
  6864  010034  6F8D               	movwf	sprintf@width& (0+255),b
  6865                           
  6866                           ;doprnt.c: 548: flag = 0;
  6867  010036  0E00               	movlw	0
  6868  010038  0100               	movlb	0	; () banked
  6869  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;doprnt.c: 551: switch(*f) {
  6873                           
  6874                           ;doprnt.c: 550: for(;;) {
  6875  01003C  D005               	goto	l8943
  6876  01003E                     l8939:
  6877                           
  6878                           ;doprnt.c: 580: flag |= 0x04;
  6879  01003E  0100               	movlb	0	; () banked
  6880  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  6881                           
  6882                           ;doprnt.c: 581: f++;
  6883  010042  0100               	movlb	0	; () banked
  6884  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6885  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6886  010048                     l8943:
  6887  010048  C06E  FFF6         	movff	sprintf@f,tblptrl
  6888  01004C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6889  010050                     	if	0	;tblptru may be non-zero
  6890  010050                     	endif
  6891  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6892  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  6893  010052  6EF8               	movwf	tblptru,c
  6894  010054                     	endif
  6895  010054  0008               	tblrd		*
  6896  010056  50F5               	movf	tablat,w,c
  6897                           
  6898                           ; Switch size 1, requested type "space"
  6899                           ; Number of cases is 1, Range of values is 48 to 48
  6900                           ; switch strategies available:
  6901                           ; Name         Instructions Cycles
  6902                           ; simple_byte            4     3 (average)
  6903                           ;	Chosen strategy is simple_byte
  6904  010058  0A30               	xorlw	48	; case 48
  6905  01005A  B4D8               	btfsc	status,2,c
  6906  01005C  D7F0               	goto	l8939
  6907                           
  6908                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6909                           
  6910                           ;doprnt.c: 586: }
  6911                           
  6912                           ;doprnt.c: 585: break;
  6913  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
  6914  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6915  010066                     	if	0	;tblptru may be non-zero
  6916  010066                     	endif
  6917  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6918  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  6919  010068  6EF8               	movwf	tblptru,c
  6920  01006A                     	endif
  6921  01006A  0008               	tblrd		*
  6922  01006C  50F5               	movf	tablat,w,c
  6923  01006E  ECDB  F09B         	call	_isdigit
  6924  010072  A0D8               	btfss	status,0,c
  6925  010074  D0CB               	goto	l8993
  6926                           
  6927                           ;doprnt.c: 598: width = 0;
  6928  010076  0E00               	movlw	0
  6929  010078  0100               	movlb	0	; () banked
  6930  01007A  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6931  01007C  0E00               	movlw	0
  6932  01007E  6F8D               	movwf	sprintf@width& (0+255),b
  6933  010080                     l8949:
  6934                           
  6935                           ;doprnt.c: 600: width *= 10;
  6936  010080  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  6937  010084  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  6938  010088  0E00               	movlw	0
  6939  01008A  0100               	movlb	0	; () banked
  6940  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6941  01008E  0E0A               	movlw	10
  6942  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6943  010092  EC07  F09B         	call	___wmul	;wreg free
  6944  010096  C060  F08D         	movff	?___wmul,sprintf@width
  6945  01009A  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  6946                           
  6947                           ;doprnt.c: 601: width += *f++ - '0';
  6948  01009E  0ED0               	movlw	208
  6949  0100A0  0100               	movlb	0	; () banked
  6950  0100A2  6F7E               	movwf	??_sprintf& (0+255),b
  6951  0100A4  0EFF               	movlw	255
  6952  0100A6  0100               	movlb	0	; () banked
  6953  0100A8  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  6954  0100AA  C06E  FFF6         	movff	sprintf@f,tblptrl
  6955  0100AE  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6956  0100B2                     	if	0	;tblptru may be non-zero
  6957  0100B2                     	endif
  6958  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6959  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  6960  0100B4  6EF8               	movwf	tblptru,c
  6961  0100B6                     	endif
  6962  0100B6  0008               	tblrd		*
  6963  0100B8  50F5               	movf	tablat,w,c
  6964  0100BA  0100               	movlb	0	; () banked
  6965  0100BC  6F80               	movwf	(??_sprintf+2)& (0+255),b
  6966  0100BE  6B81               	clrf	(??_sprintf+3)& (0+255),b
  6967  0100C0  0100               	movlb	0	; () banked
  6968  0100C2  517E               	movf	??_sprintf& (0+255),w,b
  6969  0100C4  0100               	movlb	0	; () banked
  6970  0100C6  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  6971  0100C8  0100               	movlb	0	; () banked
  6972  0100CA  517F               	movf	(??_sprintf+1)& (0+255),w,b
  6973  0100CC  0100               	movlb	0	; () banked
  6974  0100CE  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  6975  0100D0  0100               	movlb	0	; () banked
  6976  0100D2  5180               	movf	(??_sprintf+2)& (0+255),w,b
  6977  0100D4  0100               	movlb	0	; () banked
  6978  0100D6  278D               	addwf	sprintf@width& (0+255),f,b
  6979  0100D8  0100               	movlb	0	; () banked
  6980  0100DA  5181               	movf	(??_sprintf+3)& (0+255),w,b
  6981  0100DC  0100               	movlb	0	; () banked
  6982  0100DE  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  6983                           
  6984                           ; BSR set to: 0
  6985  0100E0  0100               	movlb	0	; () banked
  6986  0100E2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6987  0100E4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6991  0100E6  C06E  FFF6         	movff	sprintf@f,tblptrl
  6992  0100EA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6993  0100EE                     	if	0	;tblptru may be non-zero
  6994  0100EE                     	endif
  6995  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6996  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  6997  0100F0  6EF8               	movwf	tblptru,c
  6998  0100F2                     	endif
  6999  0100F2  0008               	tblrd		*
  7000  0100F4  50F5               	movf	tablat,w,c
  7001  0100F6  ECDB  F09B         	call	_isdigit
  7002  0100FA  A0D8               	btfss	status,0,c
  7003  0100FC  D087               	goto	l8993
  7004  0100FE  D7C0               	goto	l8949
  7005  010100                     l8957:
  7006                           
  7007                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  7008  010100  C083  FFD9         	movff	sprintf@ap,fsr2l
  7009  010104  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  7010  010108  CFDE F085          	movff	postinc2,sprintf@cp
  7011  01010C  CFDD F086          	movff	postdec2,sprintf@cp+1
  7012  010110  0E02               	movlw	2
  7013  010112  0100               	movlb	0	; () banked
  7014  010114  2783               	addwf	sprintf@ap& (0+255),f,b
  7015  010116  0E00               	movlw	0
  7016  010118  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;doprnt.c: 740: if(!cp)
  7020  01011A  0100               	movlb	0	; () banked
  7021  01011C  5185               	movf	sprintf@cp& (0+255),w,b
  7022  01011E  0100               	movlb	0	; () banked
  7023  010120  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  7024  010122  A4D8               	btfss	status,2,c
  7025  010124  D006               	goto	l8965
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;doprnt.c: 741: cp = "(null)";
  7029  010126  0EBB               	movlw	low STR_43
  7030  010128  0100               	movlb	0	; () banked
  7031  01012A  6F85               	movwf	sprintf@cp& (0+255),b
  7032  01012C  0EFF               	movlw	high STR_43
  7033  01012E  0100               	movlb	0	; () banked
  7034  010130  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  7035  010132                     l8965:
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;doprnt.c: 745: len = 0;
  7039  010132  0E00               	movlw	0
  7040  010134  0100               	movlb	0	; () banked
  7041  010136  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  7042  010138  0E00               	movlw	0
  7043  01013A  6F89               	movwf	sprintf@len& (0+255),b
  7044                           
  7045                           ;doprnt.c: 746: while(cp[len])
  7046  01013C  D003               	goto	l8969
  7047  01013E                     l8967:
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;doprnt.c: 747: len++;
  7051  01013E  0100               	movlb	0	; () banked
  7052  010140  4B89               	infsnz	sprintf@len& (0+255),f,b
  7053  010142  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  7054  010144                     l8969:
  7055                           
  7056                           ; BSR set to: 0
  7057  010144  0100               	movlb	0	; () banked
  7058  010146  5189               	movf	sprintf@len& (0+255),w,b
  7059  010148  0100               	movlb	0	; () banked
  7060  01014A  2585               	addwf	sprintf@cp& (0+255),w,b
  7061  01014C  0100               	movlb	0	; () banked
  7062  01014E  6F7E               	movwf	??_sprintf& (0+255),b
  7063  010150  0100               	movlb	0	; () banked
  7064  010152  518A               	movf	(sprintf@len+1)& (0+255),w,b
  7065  010154  0100               	movlb	0	; () banked
  7066  010156  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  7067  010158  0100               	movlb	0	; () banked
  7068  01015A  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  7069  01015C  C07E  FFF6         	movff	??_sprintf,tblptrl
  7070  010160  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  7071  010164                     	if	0	;tblptru may be non-zero
  7072  010164                     	endif
  7073  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7074  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  7075  010166  6EF8               	movwf	tblptru,c
  7076  010168                     	endif
  7077  010168  0008               	tblrd		*
  7078  01016A  50F5               	movf	tablat,w,c
  7079  01016C  0900               	iorlw	0
  7080  01016E  A4D8               	btfss	status,2,c
  7081  010170  D7E6               	goto	l8967
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;doprnt.c: 757: if(width > len)
  7085                           
  7086                           ; BSR set to: 0
  7087  010172  0100               	movlb	0	; () banked
  7088  010174  518D               	movf	sprintf@width& (0+255),w,b
  7089  010176  0100               	movlb	0	; () banked
  7090  010178  5D89               	subwf	sprintf@len& (0+255),w,b
  7091  01017A  0100               	movlb	0	; () banked
  7092  01017C  518E               	movf	(sprintf@width+1)& (0+255),w,b
  7093  01017E  0100               	movlb	0	; () banked
  7094  010180  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  7095  010182  B0D8               	btfsc	status,0,c
  7096  010184  D009               	goto	l8975
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;doprnt.c: 758: width -= len;
  7100  010186  0100               	movlb	0	; () banked
  7101  010188  5189               	movf	sprintf@len& (0+255),w,b
  7102  01018A  0100               	movlb	0	; () banked
  7103  01018C  5F8D               	subwf	sprintf@width& (0+255),f,b
  7104  01018E  0100               	movlb	0	; () banked
  7105  010190  518A               	movf	(sprintf@len+1)& (0+255),w,b
  7106  010192  0100               	movlb	0	; () banked
  7107  010194  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  7108  010196  D00F               	goto	l8981
  7109  010198                     l8975:
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;doprnt.c: 759: else
  7113                           ;doprnt.c: 760: width = 0;
  7114  010198  0E00               	movlw	0
  7115  01019A  0100               	movlb	0	; () banked
  7116  01019C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  7117  01019E  0E00               	movlw	0
  7118  0101A0  6F8D               	movwf	sprintf@width& (0+255),b
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;doprnt.c: 764: while(width--)
  7122  0101A2  D009               	goto	l8981
  7123  0101A4                     l8977:
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;doprnt.c: 765: ((*sp++ = (' ')));
  7127  0101A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  7128  0101A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  7129  0101AC  0E20               	movlw	32
  7130  0101AE  6EDF               	movwf	indf2,c
  7131                           
  7132                           ; BSR set to: 0
  7133  0101B0  0100               	movlb	0	; () banked
  7134  0101B2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  7135  0101B4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  7136  0101B6                     l8981:
  7137                           
  7138                           ; BSR set to: 0
  7139  0101B6  0100               	movlb	0	; () banked
  7140  0101B8  078D               	decf	sprintf@width& (0+255),f,b
  7141  0101BA  A0D8               	btfss	status,0,c
  7142  0101BC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  7143  0101BE  0100               	movlb	0	; () banked
  7144  0101C0  298D               	incf	sprintf@width& (0+255),w,b
  7145  0101C2  E1F0               	bnz	l8977
  7146  0101C4  0100               	movlb	0	; () banked
  7147  0101C6  298E               	incf	(sprintf@width+1)& (0+255),w,b
  7148  0101C8  B4D8               	btfsc	status,2,c
  7149  0101CA  D014               	goto	l8989
  7150  0101CC  D7EB               	goto	l8977
  7151  0101CE                     l8983:
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  7155  0101CE  C085  FFF6         	movff	sprintf@cp,tblptrl
  7156  0101D2  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  7157  0101D6                     	if	0	;tblptru may be non-zero
  7158  0101D6                     	endif
  7159  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7160  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  7161  0101D8  6EF8               	movwf	tblptru,c
  7162  0101DA                     	endif
  7163  0101DA  C06C  FFD9         	movff	sprintf@sp,fsr2l
  7164  0101DE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  7165  0101E2  0008               	tblrd		*
  7166  0101E4  CFF5 FFDF          	movff	tablat,indf2
  7167                           
  7168                           ; BSR set to: 0
  7169  0101E8  0100               	movlb	0	; () banked
  7170  0101EA  4B85               	infsnz	sprintf@cp& (0+255),f,b
  7171  0101EC  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  7172                           
  7173                           ; BSR set to: 0
  7174  0101EE  0100               	movlb	0	; () banked
  7175  0101F0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  7176  0101F2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  7177  0101F4                     l8989:
  7178                           
  7179                           ; BSR set to: 0
  7180  0101F4  0100               	movlb	0	; () banked
  7181  0101F6  0789               	decf	sprintf@len& (0+255),f,b
  7182  0101F8  A0D8               	btfss	status,0,c
  7183  0101FA  078A               	decf	(sprintf@len+1)& (0+255),f,b
  7184  0101FC  0100               	movlb	0	; () banked
  7185  0101FE  2989               	incf	sprintf@len& (0+255),w,b
  7186  010200  E1E6               	bnz	l8983
  7187  010202  0100               	movlb	0	; () banked
  7188  010204  298A               	incf	(sprintf@len+1)& (0+255),w,b
  7189  010206  B4D8               	btfsc	status,2,c
  7190  010208  D111               	goto	l9071
  7191  01020A  D7E1               	goto	l8983
  7192  01020C                     l8993:
  7193  01020C  C06E  FFF6         	movff	sprintf@f,tblptrl
  7194  010210  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  7195  010214  0100               	movlb	0	; () banked
  7196  010216  4B6E               	infsnz	sprintf@f& (0+255),f,b
  7197  010218  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  7198  01021A                     	if	0	;tblptru may be non-zero
  7199  01021A                     	endif
  7200  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7201  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  7202  01021C  6EF8               	movwf	tblptru,c
  7203  01021E                     	endif
  7204  01021E  0008               	tblrd		*
  7205  010220  CFF5 F08C          	movff	tablat,sprintf@c
  7206  010224  0100               	movlb	0	; () banked
  7207  010226  518C               	movf	sprintf@c& (0+255),w,b
  7208                           
  7209                           ; Switch size 1, requested type "space"
  7210                           ; Number of cases is 4, Range of values is 0 to 115
  7211                           ; switch strategies available:
  7212                           ; Name         Instructions Cycles
  7213                           ; simple_byte           13     7 (average)
  7214                           ;	Chosen strategy is simple_byte
  7215  010228  0A00               	xorlw	0	; case 0
  7216  01022A  B4D8               	btfsc	status,2,c
  7217  01022C  D10F               	goto	l9073
  7218  01022E  0A64               	xorlw	100	; case 100
  7219  010230  B4D8               	btfsc	status,2,c
  7220  010232  D007               	goto	l8995
  7221  010234  0A0D               	xorlw	13	; case 105
  7222  010236  B4D8               	btfsc	status,2,c
  7223  010238  D004               	goto	l8995
  7224  01023A  0A1A               	xorlw	26	; case 115
  7225  01023C  B4D8               	btfsc	status,2,c
  7226  01023E  D760               	goto	l8957
  7227  010240  D0F5               	goto	l9071
  7228  010242                     l8995:
  7229                           
  7230                           ;doprnt.c: 1253: {
  7231                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7232  010242  C083  FFD9         	movff	sprintf@ap,fsr2l
  7233  010246  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  7234  01024A  CFDE F087          	movff	postinc2,sprintf@val
  7235  01024E  CFDD F088          	movff	postdec2,sprintf@val+1
  7236  010252  0E02               	movlw	2
  7237  010254  0100               	movlb	0	; () banked
  7238  010256  2783               	addwf	sprintf@ap& (0+255),f,b
  7239  010258  0E00               	movlw	0
  7240  01025A  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;doprnt.c: 1261: if((int)val < 0) {
  7244  01025C  0100               	movlb	0	; () banked
  7245  01025E  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  7246  010260  D008               	goto	l9005
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;doprnt.c: 1262: flag |= 0x03;
  7250  010262  0E03               	movlw	3
  7251  010264  0100               	movlb	0	; () banked
  7252  010266  138B               	iorwf	sprintf@flag& (0+255),f,b
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;doprnt.c: 1263: val = -val;
  7256  010268  0100               	movlb	0	; () banked
  7257  01026A  6D87               	negf	sprintf@val& (0+255),b
  7258  01026C  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  7259  01026E  B0D8               	btfsc	status,0,c
  7260  010270  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  7261  010272                     l9005:
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;doprnt.c: 1264: }
  7265                           ;doprnt.c: 1266: }
  7266                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7267  010272  0E01               	movlw	1
  7268  010274  0100               	movlb	0	; () banked
  7269  010276  6F8C               	movwf	sprintf@c& (0+255),b
  7270  010278                     l9007:
  7271                           
  7272                           ; BSR set to: 0
  7273  010278  0E05               	movlw	5
  7274  01027A  0100               	movlb	0	; () banked
  7275  01027C  198C               	xorwf	sprintf@c& (0+255),w,b
  7276  01027E  B4D8               	btfsc	status,2,c
  7277  010280  D019               	goto	l9019
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;doprnt.c: 1306: if(val < dpowers[c])
  7281                           
  7282                           ; BSR set to: 0
  7283                           
  7284                           ; BSR set to: 0
  7285  010282  0100               	movlb	0	; () banked
  7286  010284  518C               	movf	sprintf@c& (0+255),w,b
  7287  010286  0D02               	mullw	2
  7288  010288  0E6D               	movlw	low _dpowers
  7289  01028A  24F3               	addwf	prodl,w,c
  7290  01028C  6EF6               	movwf	tblptrl,c
  7291  01028E  0EFE               	movlw	high _dpowers
  7292  010290  20F4               	addwfc	prodh,w,c
  7293  010292  6EF7               	movwf	tblptrh,c
  7294  010294                     	if	1	;There are 3 active tblptr bytes
  7295  010294  6AF8               	clrf	tblptru,c
  7296  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  7297  010298  22F8               	addwfc	tblptru,f,c
  7298  01029A                     	endif
  7299  01029A  0009               	tblrd		*+
  7300  01029C  50F5               	movf	tablat,w,c
  7301  01029E  0100               	movlb	0	; () banked
  7302  0102A0  5D87               	subwf	sprintf@val& (0+255),w,b
  7303  0102A2  0009               	tblrd		*+
  7304  0102A4  50F5               	movf	tablat,w,c
  7305  0102A6  0100               	movlb	0	; () banked
  7306  0102A8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  7307  0102AA  A0D8               	btfss	status,0,c
  7308  0102AC  D003               	goto	l9019
  7309                           
  7310                           ; BSR set to: 0
  7311                           
  7312                           ; BSR set to: 0
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;doprnt.c: 1307: break;
  7316  0102AE  0100               	movlb	0	; () banked
  7317  0102B0  2B8C               	incf	sprintf@c& (0+255),f,b
  7318  0102B2  D7E2               	goto	l9007
  7319  0102B4                     l9019:
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7323  0102B4  0100               	movlb	0	; () banked
  7324  0102B6  518D               	movf	sprintf@width& (0+255),w,b
  7325  0102B8  0100               	movlb	0	; () banked
  7326  0102BA  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  7327  0102BC  B4D8               	btfsc	status,2,c
  7328  0102BE  D00B               	goto	l9025
  7329                           
  7330                           ; BSR set to: 0
  7331  0102C0  C08B  F07E         	movff	sprintf@flag,??_sprintf
  7332  0102C4  0E03               	movlw	3
  7333  0102C6  0100               	movlb	0	; () banked
  7334  0102C8  177E               	andwf	??_sprintf& (0+255),f,b
  7335  0102CA  B4D8               	btfsc	status,2,c
  7336  0102CC  D004               	goto	l9025
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;doprnt.c: 1346: width--;
  7340  0102CE  0100               	movlb	0	; () banked
  7341  0102D0  078D               	decf	sprintf@width& (0+255),f,b
  7342  0102D2  A0D8               	btfss	status,0,c
  7343  0102D4  078E               	decf	(sprintf@width+1)& (0+255),f,b
  7344  0102D6                     l9025:
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;doprnt.c: 1381: if(width > c)
  7348  0102D6  0E80               	movlw	128
  7349  0102D8  0100               	movlb	0	; () banked
  7350  0102DA  BF8C               	btfsc	sprintf@c& (0+255),7,b
  7351  0102DC  0E7F               	movlw	127
  7352  0102DE  0100               	movlb	0	; () banked
  7353  0102E0  6F7E               	movwf	??_sprintf& (0+255),b
  7354  0102E2  0100               	movlb	0	; () banked
  7355  0102E4  518D               	movf	sprintf@width& (0+255),w,b
  7356  0102E6  0100               	movlb	0	; () banked
  7357  0102E8  5D8C               	subwf	sprintf@c& (0+255),w,b
  7358  0102EA  0100               	movlb	0	; () banked
  7359  0102EC  518E               	movf	(sprintf@width+1)& (0+255),w,b
  7360  0102EE  0A80               	xorlw	128
  7361  0102F0  0100               	movlb	0	; () banked
  7362  0102F2  597E               	subwfb	??_sprintf& (0+255),w,b
  7363  0102F4  B0D8               	btfsc	status,0,c
  7364  0102F6  D00B               	goto	l9029
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;doprnt.c: 1382: width -= c;
  7368  0102F8  0100               	movlb	0	; () banked
  7369  0102FA  518C               	movf	sprintf@c& (0+255),w,b
  7370  0102FC  0100               	movlb	0	; () banked
  7371  0102FE  5F8D               	subwf	sprintf@width& (0+255),f,b
  7372  010300  0E00               	movlw	0
  7373  010302  0100               	movlb	0	; () banked
  7374  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  7375  010306  0EFF               	movlw	255
  7376  010308  0100               	movlb	0	; () banked
  7377  01030A  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  7378  01030C  D005               	goto	l9031
  7379  01030E                     l9029:
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;doprnt.c: 1383: else
  7383                           ;doprnt.c: 1384: width = 0;
  7384  01030E  0E00               	movlw	0
  7385  010310  0100               	movlb	0	; () banked
  7386  010312  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  7387  010314  0E00               	movlw	0
  7388  010316  6F8D               	movwf	sprintf@width& (0+255),b
  7389  010318                     l9031:
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;doprnt.c: 1387: if(flag & 0x04) {
  7393  010318  0100               	movlb	0	; () banked
  7394  01031A  A58B               	btfss	sprintf@flag& (0+255),2,b
  7395  01031C  D024               	goto	l9047
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;doprnt.c: 1392: if(flag & 0x03)
  7399  01031E  C08B  F07E         	movff	sprintf@flag,??_sprintf
  7400  010322  0E03               	movlw	3
  7401  010324  0100               	movlb	0	; () banked
  7402  010326  177E               	andwf	??_sprintf& (0+255),f,b
  7403  010328  B4D8               	btfsc	status,2,c
  7404  01032A  D009               	goto	l9039
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  7408  01032C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  7409  010330  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  7410  010334  0E2D               	movlw	45
  7411  010336  6EDF               	movwf	indf2,c
  7412                           
  7413                           ; BSR set to: 0
  7414  010338  0100               	movlb	0	; () banked
  7415  01033A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  7416  01033C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  7417  01033E                     l9039:
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;doprnt.c: 1415: if(width)
  7421  01033E  0100               	movlb	0	; () banked
  7422  010340  518D               	movf	sprintf@width& (0+255),w,b
  7423  010342  0100               	movlb	0	; () banked
  7424  010344  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  7425  010346  B4D8               	btfsc	status,2,c
  7426  010348  D037               	goto	l9061
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  7430                           
  7431                           ; BSR set to: 0
  7432                           
  7433                           ;doprnt.c: 1416: do
  7434  01034A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  7435  01034E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  7436  010352  0E30               	movlw	48
  7437  010354  6EDF               	movwf	indf2,c
  7438                           
  7439                           ; BSR set to: 0
  7440  010356  0100               	movlb	0	; () banked
  7441  010358  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  7442  01035A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;doprnt.c: 1418: while(--width);
  7446  01035C  0100               	movlb	0	; () banked
  7447  01035E  078D               	decf	sprintf@width& (0+255),f,b
  7448  010360  A0D8               	btfss	status,0,c
  7449  010362  078E               	decf	(sprintf@width+1)& (0+255),f,b
  7450  010364  D7EC               	goto	l9039
  7451  010366                     l9047:
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;doprnt.c: 1422: {
  7455                           ;doprnt.c: 1424: if(width
  7456                           ;doprnt.c: 1428: )
  7457  010366  0100               	movlb	0	; () banked
  7458  010368  518D               	movf	sprintf@width& (0+255),w,b
  7459  01036A  0100               	movlb	0	; () banked
  7460  01036C  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  7461  01036E  B4D8               	btfsc	status,2,c
  7462  010370  D013               	goto	l9055
  7463  010372                     l9049:
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  7467  010372  C06C  FFD9         	movff	sprintf@sp,fsr2l
  7468  010376  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  7469  01037A  0E20               	movlw	32
  7470  01037C  6EDF               	movwf	indf2,c
  7471                           
  7472                           ; BSR set to: 0
  7473  01037E  0100               	movlb	0	; () banked
  7474  010380  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  7475  010382  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;doprnt.c: 1431: while(--width);
  7479  010384  0100               	movlb	0	; () banked
  7480  010386  078D               	decf	sprintf@width& (0+255),f,b
  7481  010388  A0D8               	btfss	status,0,c
  7482  01038A  078E               	decf	(sprintf@width+1)& (0+255),f,b
  7483  01038C  0100               	movlb	0	; () banked
  7484  01038E  518D               	movf	sprintf@width& (0+255),w,b
  7485  010390  0100               	movlb	0	; () banked
  7486  010392  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  7487  010394  A4D8               	btfss	status,2,c
  7488  010396  D7ED               	goto	l9049
  7489  010398                     l9055:
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;doprnt.c: 1438: if(flag & 0x03)
  7493  010398  C08B  F07E         	movff	sprintf@flag,??_sprintf
  7494  01039C  0E03               	movlw	3
  7495  01039E  0100               	movlb	0	; () banked
  7496  0103A0  177E               	andwf	??_sprintf& (0+255),f,b
  7497  0103A2  B4D8               	btfsc	status,2,c
  7498  0103A4  D009               	goto	l9061
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7502  0103A6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  7503  0103AA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  7504  0103AE  0E2D               	movlw	45
  7505  0103B0  6EDF               	movwf	indf2,c
  7506                           
  7507                           ; BSR set to: 0
  7508  0103B2  0100               	movlb	0	; () banked
  7509  0103B4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  7510  0103B6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  7511  0103B8                     l9061:
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;doprnt.c: 1469: }
  7515                           ;doprnt.c: 1472: prec = c;
  7516  0103B8  C08C  F082         	movff	sprintf@c,sprintf@prec
  7517                           
  7518                           ;doprnt.c: 1474: while(prec--) {
  7519  0103BC  D031               	goto	l9069
  7520  0103BE                     l9063:
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;doprnt.c: 1478: {
  7524                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7525  0103BE  0100               	movlb	0	; () banked
  7526  0103C0  5182               	movf	sprintf@prec& (0+255),w,b
  7527  0103C2  0D02               	mullw	2
  7528  0103C4  0E6D               	movlw	low _dpowers
  7529  0103C6  24F3               	addwf	prodl,w,c
  7530  0103C8  6EF6               	movwf	tblptrl,c
  7531  0103CA  0EFE               	movlw	high _dpowers
  7532  0103CC  20F4               	addwfc	prodh,w,c
  7533  0103CE  6EF7               	movwf	tblptrh,c
  7534  0103D0                     	if	1	;There are 3 active tblptr bytes
  7535  0103D0  6AF8               	clrf	tblptru,c
  7536  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  7537  0103D4  22F8               	addwfc	tblptru,f,c
  7538  0103D6                     	endif
  7539  0103D6  0009               	tblrd		*+
  7540  0103D8  CFF5 F062          	movff	tablat,___lwdiv@divisor
  7541  0103DC  000A               	tblrd		*-
  7542  0103DE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  7543  0103E2  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  7544  0103E6  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  7545  0103EA  EC9A  F097         	call	___lwdiv	;wreg free
  7546  0103EE  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  7547  0103F2  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  7548  0103F6  0E00               	movlw	0
  7549  0103F8  0100               	movlb	0	; () banked
  7550  0103FA  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  7551  0103FC  0E0A               	movlw	10
  7552  0103FE  6F69               	movwf	___lwmod@divisor& (0+255),b
  7553  010400  ECB3  F098         	call	___lwmod	;wreg free
  7554  010404  0100               	movlb	0	; () banked
  7555  010406  5167               	movf	?___lwmod& (0+255),w,b
  7556  010408  0F30               	addlw	48
  7557  01040A  0100               	movlb	0	; () banked
  7558  01040C  6F8C               	movwf	sprintf@c& (0+255),b
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;doprnt.c: 1523: }
  7562                           ;doprnt.c: 1524: ((*sp++ = (c)));
  7563  01040E  C06C  FFD9         	movff	sprintf@sp,fsr2l
  7564  010412  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  7565  010416  C08C  FFDF         	movff	sprintf@c,indf2
  7566                           
  7567                           ; BSR set to: 0
  7568  01041A  0100               	movlb	0	; () banked
  7569  01041C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  7570  01041E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  7571  010420                     l9069:
  7572                           
  7573                           ; BSR set to: 0
  7574  010420  0100               	movlb	0	; () banked
  7575  010422  0782               	decf	sprintf@prec& (0+255),f,b
  7576  010424  0100               	movlb	0	; () banked
  7577  010426  2982               	incf	sprintf@prec& (0+255),w,b
  7578  010428  A4D8               	btfss	status,2,c
  7579  01042A  D7C9               	goto	l9063
  7580  01042C                     l9071:
  7581                           
  7582                           ; BSR set to: 0
  7583  01042C  C06E  FFF6         	movff	sprintf@f,tblptrl
  7584  010430  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  7585  010434  0100               	movlb	0	; () banked
  7586  010436  4B6E               	infsnz	sprintf@f& (0+255),f,b
  7587  010438  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  7588  01043A                     	if	0	;tblptru may be non-zero
  7589  01043A                     	endif
  7590  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7591  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  7592  01043C  6EF8               	movwf	tblptru,c
  7593  01043E                     	endif
  7594  01043E  0008               	tblrd		*
  7595  010440  CFF5 F08C          	movff	tablat,sprintf@c
  7596  010444  0100               	movlb	0	; () banked
  7597  010446  518C               	movf	sprintf@c& (0+255),w,b
  7598  010448  A4D8               	btfss	status,2,c
  7599  01044A  D5E1               	goto	l8931
  7600  01044C                     l9073:
  7601                           
  7602                           ;doprnt.c: 1538: *sp = 0;
  7603  01044C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  7604  010450  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  7605  010454  0E00               	movlw	0
  7606  010456  6EDF               	movwf	indf2,c
  7607  010458  0012               	return	
  7608  01045A                     __end_of_sprintf:
  7609                           	opt stack 0
  7610                           tblptru	equ	0xFF8
  7611                           tblptrh	equ	0xFF7
  7612                           tblptrl	equ	0xFF6
  7613                           tablat	equ	0xFF5
  7614                           prodh	equ	0xFF4
  7615                           prodl	equ	0xFF3
  7616                           intcon	equ	0xFF2
  7617                           intcon2	equ	0xFF1
  7618                           indf0	equ	0xFEF
  7619                           postinc0	equ	0xFEE
  7620                           fsr0h	equ	0xFEA
  7621                           fsr0l	equ	0xFE9
  7622                           wreg	equ	0xFE8
  7623                           postdec1	equ	0xFE5
  7624                           fsr1h	equ	0xFE2
  7625                           fsr1l	equ	0xFE1
  7626                           indf2	equ	0xFDF
  7627                           postinc2	equ	0xFDE
  7628                           postdec2	equ	0xFDD
  7629                           fsr2h	equ	0xFDA
  7630                           fsr2l	equ	0xFD9
  7631                           status	equ	0xFD8
  7632                           
  7633 ;; *************** function _isdigit *****************
  7634 ;; Defined at:
  7635 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  c               1    wreg     unsigned char 
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;  c               1    2[BANK0 ] unsigned char 
  7640 ;; Return value:  Size  Location     Type
  7641 ;;		None               void
  7642 ;; Registers used:
  7643 ;;		wreg, status,2, status,0
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7652 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7653 ;;Total ram usage:        3 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; Hardware stack levels required when called:   12
  7656 ;; This function calls:
  7657 ;;		Nothing
  7658 ;; This function is called by:
  7659 ;;		_sprintf
  7660 ;;		_atoi
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           	psect	text37
  7665  0137B6                     __ptext37:
  7666                           	opt stack 0
  7667  0137B6                     _isdigit:
  7668                           	opt stack 15
  7669                           
  7670                           ;incstack = 0
  7671                           ;isdigit@c stored from wreg
  7672  0137B6  0100               	movlb	0	; () banked
  7673  0137B8  6F62               	movwf	isdigit@c& (0+255),b
  7674  0137BA  0E00               	movlw	0
  7675  0137BC  0100               	movlb	0	; () banked
  7676  0137BE  6F61               	movwf	_isdigit$5977& (0+255),b
  7677                           
  7678                           ; BSR set to: 0
  7679  0137C0  0E3A               	movlw	58
  7680  0137C2  0100               	movlb	0	; () banked
  7681  0137C4  6162               	cpfslt	isdigit@c& (0+255),b
  7682  0137C6  D007               	goto	l8843
  7683                           
  7684                           ; BSR set to: 0
  7685  0137C8  0E2F               	movlw	47
  7686  0137CA  0100               	movlb	0	; () banked
  7687  0137CC  6562               	cpfsgt	isdigit@c& (0+255),b
  7688  0137CE  D003               	goto	l8843
  7689                           
  7690                           ; BSR set to: 0
  7691  0137D0  0E01               	movlw	1
  7692  0137D2  0100               	movlb	0	; () banked
  7693  0137D4  6F61               	movwf	_isdigit$5977& (0+255),b
  7694  0137D6                     l8843:
  7695                           
  7696                           ; BSR set to: 0
  7697  0137D6  C061  F060         	movff	_isdigit$5977,??_isdigit
  7698  0137DA  0100               	movlb	0	; () banked
  7699  0137DC  3160               	rrcf	??_isdigit& (0+255),w,b
  7700  0137DE  0012               	return	
  7701  0137E0                     __end_of_isdigit:
  7702                           	opt stack 0
  7703                           tblptru	equ	0xFF8
  7704                           tblptrh	equ	0xFF7
  7705                           tblptrl	equ	0xFF6
  7706                           tablat	equ	0xFF5
  7707                           prodh	equ	0xFF4
  7708                           prodl	equ	0xFF3
  7709                           intcon	equ	0xFF2
  7710                           intcon2	equ	0xFF1
  7711                           indf0	equ	0xFEF
  7712                           postinc0	equ	0xFEE
  7713                           fsr0h	equ	0xFEA
  7714                           fsr0l	equ	0xFE9
  7715                           wreg	equ	0xFE8
  7716                           postdec1	equ	0xFE5
  7717                           fsr1h	equ	0xFE2
  7718                           fsr1l	equ	0xFE1
  7719                           indf2	equ	0xFDF
  7720                           postinc2	equ	0xFDE
  7721                           postdec2	equ	0xFDD
  7722                           fsr2h	equ	0xFDA
  7723                           fsr2l	equ	0xFD9
  7724                           status	equ	0xFD8
  7725                           
  7726 ;; *************** function ___wmul *****************
  7727 ;; Defined at:
  7728 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7731 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  product         2    4[BANK0 ] unsigned int 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  2    0[BANK0 ] unsigned int 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0, prodl, prodh
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7743 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7746 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7747 ;;Total ram usage:        6 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:   12
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_sprintf
  7754 ;;		_atoi
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text38
  7759  01360E                     __ptext38:
  7760                           	opt stack 0
  7761  01360E                     ___wmul:
  7762                           	opt stack 15
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;incstack = 0
  7766  01360E  0100               	movlb	0	; () banked
  7767  013610  5160               	movf	___wmul@multiplier& (0+255),w,b
  7768  013612  0100               	movlb	0	; () banked
  7769  013614  0362               	mulwf	___wmul@multiplicand& (0+255),b
  7770  013616  CFF3 F064          	movff	prodl,___wmul@product
  7771  01361A  CFF4 F065          	movff	prodh,___wmul@product+1
  7772  01361E  0100               	movlb	0	; () banked
  7773  013620  5160               	movf	___wmul@multiplier& (0+255),w,b
  7774  013622  0100               	movlb	0	; () banked
  7775  013624  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7776  013626  50F3               	movf	prodl,w,c
  7777  013628  0100               	movlb	0	; () banked
  7778  01362A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  7779  01362C  0100               	movlb	0	; () banked
  7780  01362E  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7781  013630  0100               	movlb	0	; () banked
  7782  013632  0362               	mulwf	___wmul@multiplicand& (0+255),b
  7783  013634  50F3               	movf	prodl,w,c
  7784  013636  0100               	movlb	0	; () banked
  7785  013638  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  7786                           
  7787                           ; BSR set to: 0
  7788  01363A  C064  F060         	movff	___wmul@product,?___wmul
  7789  01363E  C065  F061         	movff	___wmul@product+1,?___wmul+1
  7790  013642  0012               	return	
  7791  013644                     __end_of___wmul:
  7792                           	opt stack 0
  7793                           tblptru	equ	0xFF8
  7794                           tblptrh	equ	0xFF7
  7795                           tblptrl	equ	0xFF6
  7796                           tablat	equ	0xFF5
  7797                           prodh	equ	0xFF4
  7798                           prodl	equ	0xFF3
  7799                           intcon	equ	0xFF2
  7800                           intcon2	equ	0xFF1
  7801                           indf0	equ	0xFEF
  7802                           postinc0	equ	0xFEE
  7803                           fsr0h	equ	0xFEA
  7804                           fsr0l	equ	0xFE9
  7805                           wreg	equ	0xFE8
  7806                           postdec1	equ	0xFE5
  7807                           fsr1h	equ	0xFE2
  7808                           fsr1l	equ	0xFE1
  7809                           indf2	equ	0xFDF
  7810                           postinc2	equ	0xFDE
  7811                           postdec2	equ	0xFDD
  7812                           fsr2h	equ	0xFDA
  7813                           fsr2l	equ	0xFD9
  7814                           status	equ	0xFD8
  7815                           
  7816 ;; *************** function ___lwmod *****************
  7817 ;; Defined at:
  7818 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;  dividend        2    7[BANK0 ] unsigned int 
  7821 ;;  divisor         2    9[BANK0 ] unsigned int 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  counter         1   11[BANK0 ] unsigned char 
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  2    7[BANK0 ] unsigned int 
  7826 ;; Registers used:
  7827 ;;		wreg, status,2, status,0
  7828 ;; Tracked objects:
  7829 ;;		On entry : 0/0
  7830 ;;		On exit  : 0/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7833 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7837 ;;Total ram usage:        5 bytes
  7838 ;; Hardware stack levels used:    1
  7839 ;; Hardware stack levels required when called:   12
  7840 ;; This function calls:
  7841 ;;		Nothing
  7842 ;; This function is called by:
  7843 ;;		_sprintf
  7844 ;;		_ringbuf_put_num
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text39
  7849  013166                     __ptext39:
  7850                           	opt stack 0
  7851  013166                     ___lwmod:
  7852                           	opt stack 15
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;incstack = 0
  7856  013166  0100               	movlb	0	; () banked
  7857  013168  5169               	movf	___lwmod@divisor& (0+255),w,b
  7858  01316A  0100               	movlb	0	; () banked
  7859  01316C  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7860  01316E  B4D8               	btfsc	status,2,c
  7861  013170  D026               	goto	l2089
  7862                           
  7863                           ; BSR set to: 0
  7864  013172  0E01               	movlw	1
  7865  013174  0100               	movlb	0	; () banked
  7866  013176  6F6B               	movwf	___lwmod@counter& (0+255),b
  7867  013178  D006               	goto	l8881
  7868  01317A                     l8879:
  7869                           
  7870                           ; BSR set to: 0
  7871  01317A  0100               	movlb	0	; () banked
  7872  01317C  90D8               	bcf	status,0,c
  7873  01317E  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  7874  013180  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7875  013182  0100               	movlb	0	; () banked
  7876  013184  2B6B               	incf	___lwmod@counter& (0+255),f,b
  7877  013186                     l8881:
  7878                           
  7879                           ; BSR set to: 0
  7880  013186  0100               	movlb	0	; () banked
  7881  013188  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7882  01318A  D7F7               	goto	l8879
  7883  01318C                     l8883:
  7884                           
  7885                           ; BSR set to: 0
  7886  01318C  0100               	movlb	0	; () banked
  7887  01318E  5169               	movf	___lwmod@divisor& (0+255),w,b
  7888  013190  0100               	movlb	0	; () banked
  7889  013192  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  7890  013194  0100               	movlb	0	; () banked
  7891  013196  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7892  013198  0100               	movlb	0	; () banked
  7893  01319A  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7894  01319C  A0D8               	btfss	status,0,c
  7895  01319E  D008               	goto	l8887
  7896                           
  7897                           ; BSR set to: 0
  7898  0131A0  0100               	movlb	0	; () banked
  7899  0131A2  5169               	movf	___lwmod@divisor& (0+255),w,b
  7900  0131A4  0100               	movlb	0	; () banked
  7901  0131A6  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  7902  0131A8  0100               	movlb	0	; () banked
  7903  0131AA  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7904  0131AC  0100               	movlb	0	; () banked
  7905  0131AE  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7906  0131B0                     l8887:
  7907                           
  7908                           ; BSR set to: 0
  7909  0131B0  0100               	movlb	0	; () banked
  7910  0131B2  90D8               	bcf	status,0,c
  7911  0131B4  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7912  0131B6  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  7913                           
  7914                           ; BSR set to: 0
  7915  0131B8  0100               	movlb	0	; () banked
  7916  0131BA  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  7917  0131BC  D7E7               	goto	l8883
  7918  0131BE                     l2089:
  7919                           
  7920                           ; BSR set to: 0
  7921  0131BE  C067  F067         	movff	___lwmod@dividend,?___lwmod
  7922  0131C2  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  7923                           
  7924                           ; BSR set to: 0
  7925  0131C6  0012               	return		;funcret
  7926  0131C8                     __end_of___lwmod:
  7927                           	opt stack 0
  7928                           tblptru	equ	0xFF8
  7929                           tblptrh	equ	0xFF7
  7930                           tblptrl	equ	0xFF6
  7931                           tablat	equ	0xFF5
  7932                           prodh	equ	0xFF4
  7933                           prodl	equ	0xFF3
  7934                           intcon	equ	0xFF2
  7935                           intcon2	equ	0xFF1
  7936                           indf0	equ	0xFEF
  7937                           postinc0	equ	0xFEE
  7938                           fsr0h	equ	0xFEA
  7939                           fsr0l	equ	0xFE9
  7940                           wreg	equ	0xFE8
  7941                           postdec1	equ	0xFE5
  7942                           fsr1h	equ	0xFE2
  7943                           fsr1l	equ	0xFE1
  7944                           indf2	equ	0xFDF
  7945                           postinc2	equ	0xFDE
  7946                           postdec2	equ	0xFDD
  7947                           fsr2h	equ	0xFDA
  7948                           fsr2l	equ	0xFD9
  7949                           status	equ	0xFD8
  7950                           
  7951 ;; *************** function ___lwdiv *****************
  7952 ;; Defined at:
  7953 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  dividend        2    0[BANK0 ] unsigned int 
  7956 ;;  divisor         2    2[BANK0 ] unsigned int 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  quotient        2    5[BANK0 ] unsigned int 
  7959 ;;  counter         1    4[BANK0 ] unsigned char 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  2    0[BANK0 ] unsigned int 
  7962 ;; Registers used:
  7963 ;;		wreg, status,2, status,0
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7969 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7970 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7972 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7973 ;;Total ram usage:        7 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:   12
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_sprintf
  7980 ;;		_ringbuf_put_num
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text40
  7985  012F34                     __ptext40:
  7986                           	opt stack 0
  7987  012F34                     ___lwdiv:
  7988                           	opt stack 15
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;incstack = 0
  7992  012F34  0E00               	movlw	0
  7993  012F36  0100               	movlb	0	; () banked
  7994  012F38  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7995  012F3A  0E00               	movlw	0
  7996  012F3C  6F65               	movwf	___lwdiv@quotient& (0+255),b
  7997                           
  7998                           ; BSR set to: 0
  7999  012F3E  0100               	movlb	0	; () banked
  8000  012F40  5162               	movf	___lwdiv@divisor& (0+255),w,b
  8001  012F42  0100               	movlb	0	; () banked
  8002  012F44  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  8003  012F46  B4D8               	btfsc	status,2,c
  8004  012F48  D02C               	goto	l2079
  8005                           
  8006                           ; BSR set to: 0
  8007  012F4A  0E01               	movlw	1
  8008  012F4C  0100               	movlb	0	; () banked
  8009  012F4E  6F64               	movwf	___lwdiv@counter& (0+255),b
  8010  012F50  D006               	goto	l8861
  8011  012F52                     l8859:
  8012                           
  8013                           ; BSR set to: 0
  8014  012F52  0100               	movlb	0	; () banked
  8015  012F54  90D8               	bcf	status,0,c
  8016  012F56  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  8017  012F58  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  8018  012F5A  0100               	movlb	0	; () banked
  8019  012F5C  2B64               	incf	___lwdiv@counter& (0+255),f,b
  8020  012F5E                     l8861:
  8021                           
  8022                           ; BSR set to: 0
  8023  012F5E  0100               	movlb	0	; () banked
  8024  012F60  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  8025  012F62  D7F7               	goto	l8859
  8026  012F64                     l8863:
  8027                           
  8028                           ; BSR set to: 0
  8029  012F64  0100               	movlb	0	; () banked
  8030  012F66  90D8               	bcf	status,0,c
  8031  012F68  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  8032  012F6A  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  8033                           
  8034                           ; BSR set to: 0
  8035  012F6C  0100               	movlb	0	; () banked
  8036  012F6E  5162               	movf	___lwdiv@divisor& (0+255),w,b
  8037  012F70  0100               	movlb	0	; () banked
  8038  012F72  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  8039  012F74  0100               	movlb	0	; () banked
  8040  012F76  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8041  012F78  0100               	movlb	0	; () banked
  8042  012F7A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  8043  012F7C  A0D8               	btfss	status,0,c
  8044  012F7E  D00A               	goto	l8871
  8045                           
  8046                           ; BSR set to: 0
  8047  012F80  0100               	movlb	0	; () banked
  8048  012F82  5162               	movf	___lwdiv@divisor& (0+255),w,b
  8049  012F84  0100               	movlb	0	; () banked
  8050  012F86  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  8051  012F88  0100               	movlb	0	; () banked
  8052  012F8A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8053  012F8C  0100               	movlb	0	; () banked
  8054  012F8E  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  8055                           
  8056                           ; BSR set to: 0
  8057  012F90  0100               	movlb	0	; () banked
  8058  012F92  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  8059  012F94                     l8871:
  8060                           
  8061                           ; BSR set to: 0
  8062  012F94  0100               	movlb	0	; () banked
  8063  012F96  90D8               	bcf	status,0,c
  8064  012F98  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  8065  012F9A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  8066                           
  8067                           ; BSR set to: 0
  8068  012F9C  0100               	movlb	0	; () banked
  8069  012F9E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  8070  012FA0  D7E1               	goto	l8863
  8071  012FA2                     l2079:
  8072                           
  8073                           ; BSR set to: 0
  8074  012FA2  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  8075  012FA6  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8076                           
  8077                           ; BSR set to: 0
  8078  012FAA  0012               	return		;funcret
  8079  012FAC                     __end_of___lwdiv:
  8080                           	opt stack 0
  8081                           tblptru	equ	0xFF8
  8082                           tblptrh	equ	0xFF7
  8083                           tblptrl	equ	0xFF6
  8084                           tablat	equ	0xFF5
  8085                           prodh	equ	0xFF4
  8086                           prodl	equ	0xFF3
  8087                           intcon	equ	0xFF2
  8088                           intcon2	equ	0xFF1
  8089                           indf0	equ	0xFEF
  8090                           postinc0	equ	0xFEE
  8091                           fsr0h	equ	0xFEA
  8092                           fsr0l	equ	0xFE9
  8093                           wreg	equ	0xFE8
  8094                           postdec1	equ	0xFE5
  8095                           fsr1h	equ	0xFE2
  8096                           fsr1l	equ	0xFE1
  8097                           indf2	equ	0xFDF
  8098                           postinc2	equ	0xFDE
  8099                           postdec2	equ	0xFDD
  8100                           fsr2h	equ	0xFDA
  8101                           fsr2l	equ	0xFD9
  8102                           status	equ	0xFD8
  8103                           
  8104 ;; *************** function _USB_CDC_task *****************
  8105 ;; Defined at:
  8106 ;;		line 39 in file "../My_library/My_USB_CDC.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;		None
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  i               2   23[BANK0 ] unsigned int 
  8111 ;;  length          2   25[BANK0 ] unsigned int 
  8112 ;; Return value:  Size  Location     Type
  8113 ;;		None               void
  8114 ;; Registers used:
  8115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8122 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8123 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8124 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8125 ;;Total ram usage:        5 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:   15
  8128 ;; This function calls:
  8129 ;;		_USB_CDC_get
  8130 ;;		_USB_CDC_send
  8131 ;;		_ringbuf_num
  8132 ;;		_ringbuf_pop
  8133 ;;		_ringbuf_put
  8134 ;; This function is called by:
  8135 ;;		_main
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text41
  8140  011674                     __ptext41:
  8141                           	opt stack 0
  8142  011674                     _USB_CDC_task:
  8143                           	opt stack 15
  8144                           
  8145                           ;My_USB_CDC.c: 60: if (USBDeviceState < CONFIGURED_STATE) {
  8146                           
  8147                           ; BSR set to: 0
  8148                           ;incstack = 0
  8149  011674  0E20               	movlw	32
  8150  011676  0100               	movlb	0	; () banked
  8151  011678  61BB               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  8152  01167A  D001               	goto	l1034
  8153  01167C  0012               	return	
  8154  01167E                     l1034:
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;My_USB_CDC.c: 63: }
  8158                           ;My_USB_CDC.c: 69: if (UCONbits.SUSPND == 1) {
  8159  01167E  B265               	btfsc	3941,1,c	;volatile
  8160  011680  0012               	return	
  8161                           
  8162                           ; BSR set to: 0
  8163                           ;My_USB_CDC.c: 72: }
  8164                           ;My_USB_CDC.c: 75: uint16_t length = 0;
  8165                           
  8166                           ; BSR set to: 0
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;My_USB_CDC.c: 71: return;
  8170  011682  0E00               	movlw	0
  8171  011684  0100               	movlb	0	; () banked
  8172  011686  6F7A               	movwf	(USB_CDC_task@length+1)& (0+255),b
  8173  011688  0E00               	movlw	0
  8174  01168A  6F79               	movwf	USB_CDC_task@length& (0+255),b
  8175                           
  8176                           ;My_USB_CDC.c: 76: while (ringbuf_num(&usb_tx)) {
  8177  01168C  D01F               	goto	l9567
  8178  01168E                     l9559:
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;My_USB_CDC.c: 77: writeBuffer[length++] = ringbuf_pop(&usb_tx);
  8182  01168E  0EE4               	movlw	low _usb_tx
  8183  011690  0100               	movlb	0	; () banked
  8184  011692  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  8185  011694  0E01               	movlw	high _usb_tx
  8186  011696  0100               	movlb	0	; () banked
  8187  011698  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  8188  01169A  ECE2  F090         	call	_ringbuf_pop	;wreg free
  8189  01169E  0100               	movlb	0	; () banked
  8190  0116A0  6F76               	movwf	??_USB_CDC_task& (0+255),b
  8191  0116A2  0E80               	movlw	low _writeBuffer
  8192  0116A4  0100               	movlb	0	; () banked
  8193  0116A6  2579               	addwf	USB_CDC_task@length& (0+255),w,b
  8194  0116A8  6ED9               	movwf	fsr2l,c
  8195  0116AA  0E02               	movlw	high _writeBuffer
  8196  0116AC  0100               	movlb	0	; () banked
  8197  0116AE  217A               	addwfc	(USB_CDC_task@length+1)& (0+255),w,b
  8198  0116B0  6EDA               	movwf	fsr2h,c
  8199  0116B2  C076  FFDF         	movff	??_USB_CDC_task,indf2
  8200                           
  8201                           ; BSR set to: 0
  8202  0116B6  0100               	movlb	0	; () banked
  8203  0116B8  4B79               	infsnz	USB_CDC_task@length& (0+255),f,b
  8204  0116BA  2B7A               	incf	(USB_CDC_task@length+1)& (0+255),f,b
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;My_USB_CDC.c: 78: if (length >= 64) {
  8208  0116BC  0100               	movlb	0	; () banked
  8209  0116BE  517A               	movf	(USB_CDC_task@length+1)& (0+255),w,b
  8210  0116C0  E113               	bnz	l9569
  8211  0116C2  0E40               	movlw	64
  8212  0116C4  0100               	movlb	0	; () banked
  8213  0116C6  5D79               	subwf	USB_CDC_task@length& (0+255),w,b
  8214  0116C8  B0D8               	btfsc	status,0,c
  8215  0116CA  D00E               	goto	l9569
  8216  0116CC                     l9567:
  8217                           
  8218                           ; BSR set to: 0
  8219  0116CC  0EE4               	movlw	low _usb_tx
  8220  0116CE  0100               	movlb	0	; () banked
  8221  0116D0  6F60               	movwf	ringbuf_num@rb& (0+255),b
  8222  0116D2  0E01               	movlw	high _usb_tx
  8223  0116D4  0100               	movlb	0	; () banked
  8224  0116D6  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  8225  0116D8  EC2E  F08C         	call	_ringbuf_num	;wreg free
  8226  0116DC  0100               	movlb	0	; () banked
  8227  0116DE  5160               	movf	?_ringbuf_num& (0+255),w,b
  8228  0116E0  0100               	movlb	0	; () banked
  8229  0116E2  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  8230  0116E4  A4D8               	btfss	status,2,c
  8231  0116E6  D7D3               	goto	l9559
  8232  0116E8                     l9569:
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;My_USB_CDC.c: 80: }
  8236                           ;My_USB_CDC.c: 81: }
  8237                           ;My_USB_CDC.c: 82: if (length) {
  8238  0116E8  0100               	movlb	0	; () banked
  8239  0116EA  5179               	movf	USB_CDC_task@length& (0+255),w,b
  8240  0116EC  0100               	movlb	0	; () banked
  8241  0116EE  117A               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
  8242  0116F0  B4D8               	btfsc	status,2,c
  8243  0116F2  D006               	goto	l1041
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;My_USB_CDC.c: 83: USB_CDC_send(length);
  8247  0116F4  C079  F06C         	movff	USB_CDC_task@length,USB_CDC_send@length
  8248  0116F8  C07A  F06D         	movff	USB_CDC_task@length+1,USB_CDC_send@length+1
  8249  0116FC  EC3F  F09C         	call	_USB_CDC_send	;wreg free
  8250  011700                     l1041:
  8251                           
  8252                           ;My_USB_CDC.c: 84: }
  8253                           ;My_USB_CDC.c: 86: length = USB_CDC_get();
  8254  011700  EC99  F09B         	call	_USB_CDC_get	;wreg free
  8255  011704  0100               	movlb	0	; () banked
  8256  011706  6F76               	movwf	??_USB_CDC_task& (0+255),b
  8257  011708  0100               	movlb	0	; () banked
  8258  01170A  5176               	movf	??_USB_CDC_task& (0+255),w,b
  8259  01170C  0100               	movlb	0	; () banked
  8260  01170E  6F79               	movwf	USB_CDC_task@length& (0+255),b
  8261  011710  6B7A               	clrf	(USB_CDC_task@length+1)& (0+255),b
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;My_USB_CDC.c: 87: if (length) {
  8265  011712  0100               	movlb	0	; () banked
  8266  011714  5179               	movf	USB_CDC_task@length& (0+255),w,b
  8267  011716  0100               	movlb	0	; () banked
  8268  011718  117A               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
  8269  01171A  B4D8               	btfsc	status,2,c
  8270  01171C  0012               	return	
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;My_USB_CDC.c: 88: for (uint16_t i = 0; i < length; i++) {
  8274  01171E  0E00               	movlw	0
  8275  011720  0100               	movlb	0	; () banked
  8276  011722  6F78               	movwf	(USB_CDC_task@i+1)& (0+255),b
  8277  011724  0E00               	movlw	0
  8278  011726  6F77               	movwf	USB_CDC_task@i& (0+255),b
  8279  011728  D016               	goto	l9581
  8280  01172A                     l9577:
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;My_USB_CDC.c: 89: ringbuf_put(&usb_rx, readBuffer[i]);
  8284  01172A  0EDC               	movlw	low _usb_rx
  8285  01172C  0100               	movlb	0	; () banked
  8286  01172E  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  8287  011730  0E01               	movlw	high _usb_rx
  8288  011732  0100               	movlb	0	; () banked
  8289  011734  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  8290  011736  0E40               	movlw	low _readBuffer
  8291  011738  0100               	movlb	0	; () banked
  8292  01173A  2577               	addwf	USB_CDC_task@i& (0+255),w,b
  8293  01173C  6ED9               	movwf	fsr2l,c
  8294  01173E  0E02               	movlw	high _readBuffer
  8295  011740  0100               	movlb	0	; () banked
  8296  011742  2178               	addwfc	(USB_CDC_task@i+1)& (0+255),w,b
  8297  011744  6EDA               	movwf	fsr2h,c
  8298  011746  50DF               	movf	indf2,w,c
  8299  011748  0100               	movlb	0	; () banked
  8300  01174A  6F71               	movwf	ringbuf_put@data& (0+255),b
  8301  01174C  ECA8  F08F         	call	_ringbuf_put	;wreg free
  8302  011750  0100               	movlb	0	; () banked
  8303  011752  4B77               	infsnz	USB_CDC_task@i& (0+255),f,b
  8304  011754  2B78               	incf	(USB_CDC_task@i+1)& (0+255),f,b
  8305  011756                     l9581:
  8306                           
  8307                           ; BSR set to: 0
  8308  011756  0100               	movlb	0	; () banked
  8309  011758  5179               	movf	USB_CDC_task@length& (0+255),w,b
  8310  01175A  0100               	movlb	0	; () banked
  8311  01175C  5D77               	subwf	USB_CDC_task@i& (0+255),w,b
  8312  01175E  0100               	movlb	0	; () banked
  8313  011760  517A               	movf	(USB_CDC_task@length+1)& (0+255),w,b
  8314  011762  0100               	movlb	0	; () banked
  8315  011764  5978               	subwfb	(USB_CDC_task@i+1)& (0+255),w,b
  8316  011766  B0D8               	btfsc	status,0,c
  8317  011768  0012               	return	
  8318  01176A  D7DF               	goto	l9577
  8319  01176C                     __end_of_USB_CDC_task:
  8320                           	opt stack 0
  8321                           tblptru	equ	0xFF8
  8322                           tblptrh	equ	0xFF7
  8323                           tblptrl	equ	0xFF6
  8324                           tablat	equ	0xFF5
  8325                           prodh	equ	0xFF4
  8326                           prodl	equ	0xFF3
  8327                           intcon	equ	0xFF2
  8328                           intcon2	equ	0xFF1
  8329                           indf0	equ	0xFEF
  8330                           postinc0	equ	0xFEE
  8331                           fsr0h	equ	0xFEA
  8332                           fsr0l	equ	0xFE9
  8333                           wreg	equ	0xFE8
  8334                           postdec1	equ	0xFE5
  8335                           fsr1h	equ	0xFE2
  8336                           fsr1l	equ	0xFE1
  8337                           indf2	equ	0xFDF
  8338                           postinc2	equ	0xFDE
  8339                           postdec2	equ	0xFDD
  8340                           fsr2h	equ	0xFDA
  8341                           fsr2l	equ	0xFD9
  8342                           status	equ	0xFD8
  8343                           
  8344 ;; *************** function _ringbuf_put *****************
  8345 ;; Defined at:
  8346 ;;		line 20 in file "../My_library/My_ringbuf.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  8349 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_tx(8), uart_rx(8), 
  8350 ;;		 -> usb_tx(8), usb_rx(8), 
  8351 ;;  data            1   17[BANK0 ] unsigned char 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;		None               void
  8356 ;; Registers used:
  8357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8363 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8365 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8366 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8367 ;;Total ram usage:        7 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; Hardware stack levels required when called:   13
  8370 ;; This function calls:
  8371 ;;		_ringbuf_num
  8372 ;; This function is called by:
  8373 ;;		_main
  8374 ;;		_USB_CDC_task
  8375 ;;		_ringbuf_put_num
  8376 ;;		_ringbuf_put_str
  8377 ;;		_ST7032_command
  8378 ;;		_ST7032_put
  8379 ;;		_ST7032_create_char
  8380 ;;		_ST7032_init
  8381 ;;		_terminal_task
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           	psect	text42
  8386  011F50                     __ptext42:
  8387                           	opt stack 0
  8388  011F50                     _ringbuf_put:
  8389                           	opt stack 17
  8390                           
  8391                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;incstack = 0
  8395  011F50  C06F  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  8396  011F54  C070  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  8397  011F58  EC2E  F08C         	call	_ringbuf_num	;wreg free
  8398  011F5C  0100               	movlb	0	; () banked
  8399  011F5E  EE20 F002          	lfsr	2,2
  8400  011F62  516F               	movf	ringbuf_put@rb& (0+255),w,b
  8401  011F64  26D9               	addwf	fsr2l,f,c
  8402  011F66  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  8403  011F68  22DA               	addwfc	fsr2h,f,c
  8404  011F6A  50DE               	movf	postinc2,w,c
  8405  011F6C  0100               	movlb	0	; () banked
  8406  011F6E  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  8407  011F70  50DE               	movf	postinc2,w,c
  8408  011F72  0100               	movlb	0	; () banked
  8409  011F74  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  8410  011F76  B0D8               	btfsc	status,0,c
  8411  011F78  0012               	return	
  8412                           
  8413                           ; BSR set to: 0
  8414                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
  8415  011F7A  0100               	movlb	0	; () banked
  8416  011F7C  EE20 F004          	lfsr	2,4
  8417  011F80  516F               	movf	ringbuf_put@rb& (0+255),w,b
  8418  011F82  26D9               	addwf	fsr2l,f,c
  8419  011F84  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  8420  011F86  22DA               	addwfc	fsr2h,f,c
  8421  011F88  CFDE F072          	movff	postinc2,??_ringbuf_put
  8422  011F8C  CFDD F073          	movff	postdec2,??_ringbuf_put+1
  8423  011F90  C06F  FFD9         	movff	ringbuf_put@rb,fsr2l
  8424  011F94  C070  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  8425  011F98  CFDE F074          	movff	postinc2,??_ringbuf_put+2
  8426  011F9C  CFDD F075          	movff	postdec2,??_ringbuf_put+3
  8427  011FA0  0100               	movlb	0	; () banked
  8428  011FA2  5172               	movf	??_ringbuf_put& (0+255),w,b
  8429  011FA4  0100               	movlb	0	; () banked
  8430  011FA6  2574               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  8431  011FA8  6ED9               	movwf	fsr2l,c
  8432  011FAA  0100               	movlb	0	; () banked
  8433  011FAC  5173               	movf	(??_ringbuf_put+1)& (0+255),w,b
  8434  011FAE  0100               	movlb	0	; () banked
  8435  011FB0  2175               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  8436  011FB2  6EDA               	movwf	fsr2h,c
  8437  011FB4  C071  FFDF         	movff	ringbuf_put@data,indf2
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  8441  011FB8  0100               	movlb	0	; () banked
  8442  011FBA  EE20 F002          	lfsr	2,2
  8443  011FBE  516F               	movf	ringbuf_put@rb& (0+255),w,b
  8444  011FC0  26D9               	addwf	fsr2l,f,c
  8445  011FC2  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  8446  011FC4  22DA               	addwfc	fsr2h,f,c
  8447  011FC6  0100               	movlb	0	; () banked
  8448  011FC8  EE10 F004          	lfsr	1,4
  8449  011FCC  516F               	movf	ringbuf_put@rb& (0+255),w,b
  8450  011FCE  26E1               	addwf	fsr1l,f,c
  8451  011FD0  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  8452  011FD2  22E2               	addwfc	fsr1h,f,c
  8453  011FD4  CFE6 F074          	movff	postinc1,??_ringbuf_put+2
  8454  011FD8  CFE5 F075          	movff	postdec1,??_ringbuf_put+3
  8455  011FDC  0E01               	movlw	1
  8456  011FDE  0100               	movlb	0	; () banked
  8457  011FE0  2774               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  8458  011FE2  0E00               	movlw	0
  8459  011FE4  2375               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  8460  011FE6  50DE               	movf	postinc2,w,c
  8461  011FE8  0100               	movlb	0	; () banked
  8462  011FEA  5D74               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  8463  011FEC  50DE               	movf	postinc2,w,c
  8464  011FEE  0100               	movlb	0	; () banked
  8465  011FF0  5975               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  8466  011FF2  B0D8               	btfsc	status,0,c
  8467  011FF4  D00B               	goto	l9461
  8468                           
  8469                           ; BSR set to: 0
  8470  011FF6  0100               	movlb	0	; () banked
  8471  011FF8  EE20 F004          	lfsr	2,4
  8472  011FFC  516F               	movf	ringbuf_put@rb& (0+255),w,b
  8473  011FFE  26D9               	addwf	fsr2l,f,c
  8474  012000  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  8475  012002  22DA               	addwfc	fsr2h,f,c
  8476  012004  2ADE               	incf	postinc2,f,c
  8477  012006  0E00               	movlw	0
  8478  012008  22DD               	addwfc	postdec2,f,c
  8479  01200A  0012               	return	
  8480  01200C                     l9461:
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;My_ringbuf.c: 24: else rb->head = 0;
  8484  01200C  0100               	movlb	0	; () banked
  8485  01200E  EE20 F004          	lfsr	2,4
  8486  012012  516F               	movf	ringbuf_put@rb& (0+255),w,b
  8487  012014  26D9               	addwf	fsr2l,f,c
  8488  012016  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  8489  012018  22DA               	addwfc	fsr2h,f,c
  8490  01201A  0E00               	movlw	0
  8491  01201C  6EDE               	movwf	postinc2,c
  8492  01201E  0E00               	movlw	0
  8493  012020  6EDD               	movwf	postdec2,c
  8494                           
  8495                           ; BSR set to: 0
  8496  012022  0012               	return	
  8497  012024                     __end_of_ringbuf_put:
  8498                           	opt stack 0
  8499                           tblptru	equ	0xFF8
  8500                           tblptrh	equ	0xFF7
  8501                           tblptrl	equ	0xFF6
  8502                           tablat	equ	0xFF5
  8503                           prodh	equ	0xFF4
  8504                           prodl	equ	0xFF3
  8505                           intcon	equ	0xFF2
  8506                           intcon2	equ	0xFF1
  8507                           indf0	equ	0xFEF
  8508                           postinc0	equ	0xFEE
  8509                           fsr0h	equ	0xFEA
  8510                           fsr0l	equ	0xFE9
  8511                           wreg	equ	0xFE8
  8512                           postinc1	equ	0xFE6
  8513                           postdec1	equ	0xFE5
  8514                           fsr1h	equ	0xFE2
  8515                           fsr1l	equ	0xFE1
  8516                           indf2	equ	0xFDF
  8517                           postinc2	equ	0xFDE
  8518                           postdec2	equ	0xFDD
  8519                           fsr2h	equ	0xFDA
  8520                           fsr2l	equ	0xFD9
  8521                           status	equ	0xFD8
  8522                           
  8523 ;; *************** function _ringbuf_pop *****************
  8524 ;; Defined at:
  8525 ;;		line 45 in file "../My_library/My_ringbuf.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  8528 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_tx(8), uart_rx(8), 
  8529 ;;		 -> usb_tx(8), usb_rx(8), 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  ret             1   14[BANK0 ] unsigned char 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  1    wreg      unsigned char 
  8534 ;; Registers used:
  8535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8541 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8542 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8543 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8544 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8545 ;;Total ram usage:        7 bytes
  8546 ;; Hardware stack levels used:    1
  8547 ;; Hardware stack levels required when called:   13
  8548 ;; This function calls:
  8549 ;;		_ringbuf_num
  8550 ;; This function is called by:
  8551 ;;		_main
  8552 ;;		_USB_CDC_task
  8553 ;;		_ST7032_task
  8554 ;;		_terminal_task
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text43
  8559  0121C4                     __ptext43:
  8560                           	opt stack 0
  8561  0121C4                     _ringbuf_pop:
  8562                           	opt stack 17
  8563                           
  8564                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;incstack = 0
  8568  0121C4  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  8569  0121C8  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  8570  0121CC  EC2E  F08C         	call	_ringbuf_num	;wreg free
  8571  0121D0  0100               	movlb	0	; () banked
  8572  0121D2  5160               	movf	?_ringbuf_num& (0+255),w,b
  8573  0121D4  0100               	movlb	0	; () banked
  8574  0121D6  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  8575  0121D8  B4D8               	btfsc	status,2,c
  8576  0121DA  D058               	goto	l9449
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  8580  0121DC  0100               	movlb	0	; () banked
  8581  0121DE  EE20 F006          	lfsr	2,6
  8582  0121E2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  8583  0121E4  26D9               	addwf	fsr2l,f,c
  8584  0121E6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  8585  0121E8  22DA               	addwfc	fsr2h,f,c
  8586  0121EA  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  8587  0121EE  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  8588  0121F2  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  8589  0121F6  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  8590  0121FA  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  8591  0121FE  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  8592  012202  0100               	movlb	0	; () banked
  8593  012204  516A               	movf	??_ringbuf_pop& (0+255),w,b
  8594  012206  0100               	movlb	0	; () banked
  8595  012208  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  8596  01220A  6ED9               	movwf	fsr2l,c
  8597  01220C  0100               	movlb	0	; () banked
  8598  01220E  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  8599  012210  0100               	movlb	0	; () banked
  8600  012212  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  8601  012214  6EDA               	movwf	fsr2h,c
  8602  012216  50DF               	movf	indf2,w,c
  8603  012218  0100               	movlb	0	; () banked
  8604  01221A  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  8608  01221C  0100               	movlb	0	; () banked
  8609  01221E  EE20 F002          	lfsr	2,2
  8610  012222  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  8611  012224  26D9               	addwf	fsr2l,f,c
  8612  012226  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  8613  012228  22DA               	addwfc	fsr2h,f,c
  8614  01222A  0100               	movlb	0	; () banked
  8615  01222C  EE10 F006          	lfsr	1,6
  8616  012230  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  8617  012232  26E1               	addwf	fsr1l,f,c
  8618  012234  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  8619  012236  22E2               	addwfc	fsr1h,f,c
  8620  012238  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  8621  01223C  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  8622  012240  0E01               	movlw	1
  8623  012242  0100               	movlb	0	; () banked
  8624  012244  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  8625  012246  0E00               	movlw	0
  8626  012248  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  8627  01224A  50DE               	movf	postinc2,w,c
  8628  01224C  0100               	movlb	0	; () banked
  8629  01224E  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  8630  012250  50DE               	movf	postinc2,w,c
  8631  012252  0100               	movlb	0	; () banked
  8632  012254  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  8633  012256  B0D8               	btfsc	status,0,c
  8634  012258  D00B               	goto	l9441
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;My_ringbuf.c: 49: rb->tail++;
  8638  01225A  0100               	movlb	0	; () banked
  8639  01225C  EE20 F006          	lfsr	2,6
  8640  012260  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  8641  012262  26D9               	addwf	fsr2l,f,c
  8642  012264  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  8643  012266  22DA               	addwfc	fsr2h,f,c
  8644  012268  2ADE               	incf	postinc2,f,c
  8645  01226A  0E00               	movlw	0
  8646  01226C  22DD               	addwfc	postdec2,f,c
  8647                           
  8648                           ;My_ringbuf.c: 50: } else {
  8649  01226E  D00B               	goto	l9443
  8650  012270                     l9441:
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;My_ringbuf.c: 51: rb->tail = 0;
  8654  012270  0100               	movlb	0	; () banked
  8655  012272  EE20 F006          	lfsr	2,6
  8656  012276  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  8657  012278  26D9               	addwf	fsr2l,f,c
  8658  01227A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  8659  01227C  22DA               	addwfc	fsr2h,f,c
  8660  01227E  0E00               	movlw	0
  8661  012280  6EDE               	movwf	postinc2,c
  8662  012282  0E00               	movlw	0
  8663  012284  6EDD               	movwf	postdec2,c
  8664  012286                     l9443:
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;My_ringbuf.c: 52: }
  8668                           ;My_ringbuf.c: 53: return ret;
  8669  012286  0100               	movlb	0	; () banked
  8670  012288  516E               	movf	ringbuf_pop@ret& (0+255),w,b
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;My_ringbuf.c: 54: } else {
  8674                           
  8675                           ; BSR set to: 0
  8676  01228A  0012               	return	
  8677  01228C                     l9449:
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;My_ringbuf.c: 55: return 0;
  8681  01228C  0E00               	movlw	0
  8682                           
  8683                           ; BSR set to: 0
  8684  01228E  0012               	return	
  8685  012290                     __end_of_ringbuf_pop:
  8686                           	opt stack 0
  8687                           tblptru	equ	0xFF8
  8688                           tblptrh	equ	0xFF7
  8689                           tblptrl	equ	0xFF6
  8690                           tablat	equ	0xFF5
  8691                           prodh	equ	0xFF4
  8692                           prodl	equ	0xFF3
  8693                           intcon	equ	0xFF2
  8694                           intcon2	equ	0xFF1
  8695                           indf0	equ	0xFEF
  8696                           postinc0	equ	0xFEE
  8697                           fsr0h	equ	0xFEA
  8698                           fsr0l	equ	0xFE9
  8699                           wreg	equ	0xFE8
  8700                           postinc1	equ	0xFE6
  8701                           postdec1	equ	0xFE5
  8702                           fsr1h	equ	0xFE2
  8703                           fsr1l	equ	0xFE1
  8704                           indf2	equ	0xFDF
  8705                           postinc2	equ	0xFDE
  8706                           postdec2	equ	0xFDD
  8707                           fsr2h	equ	0xFDA
  8708                           fsr2l	equ	0xFD9
  8709                           status	equ	0xFD8
  8710                           
  8711 ;; *************** function _USB_CDC_send *****************
  8712 ;; Defined at:
  8713 ;;		line 94 in file "../My_library/My_USB_CDC.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  length          2   12[BANK0 ] unsigned int 
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;		None
  8718 ;; Return value:  Size  Location     Type
  8719 ;;		None               void
  8720 ;; Registers used:
  8721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8727 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8730 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8731 ;;Total ram usage:        2 bytes
  8732 ;; Hardware stack levels used:    1
  8733 ;; Hardware stack levels required when called:   14
  8734 ;; This function calls:
  8735 ;;		_CDCTxService
  8736 ;;		_putUSBUSART
  8737 ;; This function is called by:
  8738 ;;		_USB_CDC_task
  8739 ;; This function uses a non-reentrant model
  8740 ;;
  8741                           
  8742                           	psect	text44
  8743  01387E                     __ptext44:
  8744                           	opt stack 0
  8745  01387E                     _USB_CDC_send:
  8746                           	opt stack 15
  8747                           
  8748                           ;My_USB_CDC.c: 95: if ((cdc_trf_state == 0) == 1) {
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;incstack = 0
  8752  01387E  0100               	movlb	0	; () banked
  8753  013880  51BE               	movf	_cdc_trf_state& (0+255),w,b
  8754  013882  A4D8               	btfss	status,2,c
  8755  013884  D00A               	goto	l9495
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;My_USB_CDC.c: 96: putUSBUSART(writeBuffer, length);
  8759  013886  0E80               	movlw	low _writeBuffer
  8760  013888  0100               	movlb	0	; () banked
  8761  01388A  6F60               	movwf	putUSBUSART@data& (0+255),b
  8762  01388C  0E02               	movlw	high _writeBuffer
  8763  01388E  0100               	movlb	0	; () banked
  8764  013890  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
  8765  013892  C06C  F062         	movff	USB_CDC_send@length,putUSBUSART@length
  8766  013896  EC2C  F09C         	call	_putUSBUSART	;wreg free
  8767  01389A                     l9495:
  8768                           
  8769                           ;My_USB_CDC.c: 97: }
  8770                           ;My_USB_CDC.c: 98: CDCTxService();
  8771  01389A  ECB6  F086         	call	_CDCTxService	;wreg free
  8772  01389E  0012               	return		;funcret
  8773  0138A0                     __end_of_USB_CDC_send:
  8774                           	opt stack 0
  8775                           tblptru	equ	0xFF8
  8776                           tblptrh	equ	0xFF7
  8777                           tblptrl	equ	0xFF6
  8778                           tablat	equ	0xFF5
  8779                           prodh	equ	0xFF4
  8780                           prodl	equ	0xFF3
  8781                           intcon	equ	0xFF2
  8782                           intcon2	equ	0xFF1
  8783                           indf0	equ	0xFEF
  8784                           postinc0	equ	0xFEE
  8785                           fsr0h	equ	0xFEA
  8786                           fsr0l	equ	0xFE9
  8787                           wreg	equ	0xFE8
  8788                           postinc1	equ	0xFE6
  8789                           postdec1	equ	0xFE5
  8790                           fsr1h	equ	0xFE2
  8791                           fsr1l	equ	0xFE1
  8792                           indf2	equ	0xFDF
  8793                           postinc2	equ	0xFDE
  8794                           postdec2	equ	0xFDD
  8795                           fsr2h	equ	0xFDA
  8796                           fsr2l	equ	0xFD9
  8797                           status	equ	0xFD8
  8798                           
  8799 ;; *************** function _putUSBUSART *****************
  8800 ;; Defined at:
  8801 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  data            2    0[BANK0 ] PTR unsigned char 
  8804 ;;		 -> writeBuffer(64), 
  8805 ;;  length          1    2[BANK0 ] unsigned char 
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;		None
  8808 ;; Return value:  Size  Location     Type
  8809 ;;		None               void
  8810 ;; Registers used:
  8811 ;;		wreg, status,2, status,0
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8817 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8820 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8821 ;;Total ram usage:        3 bytes
  8822 ;; Hardware stack levels used:    1
  8823 ;; Hardware stack levels required when called:   12
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_USB_CDC_send
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text45
  8832  013858                     __ptext45:
  8833                           	opt stack 0
  8834  013858                     _putUSBUSART:
  8835                           	opt stack 16
  8836                           
  8837                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
  8838                           
  8839                           ;incstack = 0
  8840  013858  98A0               	bcf	4000,4,c	;volatile
  8841                           
  8842                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  8843  01385A  0100               	movlb	0	; () banked
  8844  01385C  51BE               	movf	_cdc_trf_state& (0+255),w,b
  8845  01385E  A4D8               	btfss	status,2,c
  8846  013860  D00C               	goto	l9185
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;usb_device_cdc.c: 640: {
  8850                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  8851  013862  C060  F0A7         	movff	putUSBUSART@data,_pCDCSrc
  8852  013866  C061  F0A8         	movff	putUSBUSART@data+1,_pCDCSrc+1
  8853                           
  8854                           ; BSR set to: 0
  8855  01386A  C062  F0BF         	movff	putUSBUSART@length,_cdc_tx_len
  8856                           
  8857                           ; BSR set to: 0
  8858  01386E  0E01               	movlw	1
  8859  013870  0100               	movlb	0	; () banked
  8860  013872  6FBC               	movwf	_cdc_mem_type& (0+255),b
  8861                           
  8862                           ; BSR set to: 0
  8863  013874  0E01               	movlw	1
  8864  013876  0100               	movlb	0	; () banked
  8865  013878  6FBE               	movwf	_cdc_trf_state& (0+255),b
  8866  01387A                     l9185:
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;usb_device_cdc.c: 642: }
  8870                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
  8871  01387A  88A0               	bsf	4000,4,c	;volatile
  8872                           
  8873                           ; BSR set to: 0
  8874  01387C  0012               	return		;funcret
  8875  01387E                     __end_of_putUSBUSART:
  8876                           	opt stack 0
  8877                           tblptru	equ	0xFF8
  8878                           tblptrh	equ	0xFF7
  8879                           tblptrl	equ	0xFF6
  8880                           tablat	equ	0xFF5
  8881                           prodh	equ	0xFF4
  8882                           prodl	equ	0xFF3
  8883                           intcon	equ	0xFF2
  8884                           intcon2	equ	0xFF1
  8885                           indf0	equ	0xFEF
  8886                           postinc0	equ	0xFEE
  8887                           fsr0h	equ	0xFEA
  8888                           fsr0l	equ	0xFE9
  8889                           wreg	equ	0xFE8
  8890                           postinc1	equ	0xFE6
  8891                           postdec1	equ	0xFE5
  8892                           fsr1h	equ	0xFE2
  8893                           fsr1l	equ	0xFE1
  8894                           indf2	equ	0xFDF
  8895                           postinc2	equ	0xFDE
  8896                           postdec2	equ	0xFDD
  8897                           fsr2h	equ	0xFDA
  8898                           fsr2l	equ	0xFD9
  8899                           status	equ	0xFD8
  8900                           
  8901 ;; *************** function _USB_CDC_get *****************
  8902 ;; Defined at:
  8903 ;;		line 101 in file "../My_library/My_USB_CDC.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;		None
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  numBytesRead    1   13[BANK0 ] unsigned char 
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      unsigned char 
  8910 ;; Registers used:
  8911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8920 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8921 ;;Total ram usage:        1 bytes
  8922 ;; Hardware stack levels used:    1
  8923 ;; Hardware stack levels required when called:   14
  8924 ;; This function calls:
  8925 ;;		_CDCTxService
  8926 ;;		_getsUSBUSART
  8927 ;; This function is called by:
  8928 ;;		_USB_CDC_task
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text46
  8933  013732                     __ptext46:
  8934                           	opt stack 0
  8935  013732                     _USB_CDC_get:
  8936                           	opt stack 15
  8937                           
  8938                           ;My_USB_CDC.c: 102: uint8_t numBytesRead;
  8939                           ;My_USB_CDC.c: 103: if ((cdc_trf_state == 0) == 1) {
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;incstack = 0
  8943  013732  0100               	movlb	0	; () banked
  8944  013734  51BE               	movf	_cdc_trf_state& (0+255),w,b
  8945  013736  A4D8               	btfss	status,2,c
  8946  013738  D00D               	goto	l1052
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;My_USB_CDC.c: 104: numBytesRead = getsUSBUSART(readBuffer, sizeof (readBuffer));
  8950  01373A  0E40               	movlw	low _readBuffer
  8951  01373C  0100               	movlb	0	; () banked
  8952  01373E  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
  8953  013740  0E02               	movlw	high _readBuffer
  8954  013742  0100               	movlb	0	; () banked
  8955  013744  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
  8956  013746  0E40               	movlw	64
  8957  013748  0100               	movlb	0	; () banked
  8958  01374A  6F69               	movwf	getsUSBUSART@len& (0+255),b
  8959  01374C  ECA5  F08C         	call	_getsUSBUSART	;wreg free
  8960  013750  0100               	movlb	0	; () banked
  8961  013752  6F6D               	movwf	USB_CDC_get@numBytesRead& (0+255),b
  8962  013754                     l1052:
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;My_USB_CDC.c: 105: }
  8966                           ;My_USB_CDC.c: 106: CDCTxService();
  8967  013754  ECB6  F086         	call	_CDCTxService	;wreg free
  8968                           
  8969                           ;My_USB_CDC.c: 107: return numBytesRead;
  8970  013758  0100               	movlb	0	; () banked
  8971  01375A  516D               	movf	USB_CDC_get@numBytesRead& (0+255),w,b
  8972  01375C  0012               	return	
  8973  01375E                     __end_of_USB_CDC_get:
  8974                           	opt stack 0
  8975                           tblptru	equ	0xFF8
  8976                           tblptrh	equ	0xFF7
  8977                           tblptrl	equ	0xFF6
  8978                           tablat	equ	0xFF5
  8979                           prodh	equ	0xFF4
  8980                           prodl	equ	0xFF3
  8981                           intcon	equ	0xFF2
  8982                           intcon2	equ	0xFF1
  8983                           indf0	equ	0xFEF
  8984                           postinc0	equ	0xFEE
  8985                           fsr0h	equ	0xFEA
  8986                           fsr0l	equ	0xFE9
  8987                           wreg	equ	0xFE8
  8988                           postinc1	equ	0xFE6
  8989                           postdec1	equ	0xFE5
  8990                           fsr1h	equ	0xFE2
  8991                           fsr1l	equ	0xFE1
  8992                           indf2	equ	0xFDF
  8993                           postinc2	equ	0xFDE
  8994                           postdec2	equ	0xFDD
  8995                           fsr2h	equ	0xFDA
  8996                           fsr2l	equ	0xFD9
  8997                           status	equ	0xFD8
  8998                           
  8999 ;; *************** function _getsUSBUSART *****************
  9000 ;; Defined at:
  9001 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
  9004 ;;		 -> readBuffer(64), 
  9005 ;;  len             1    9[BANK0 ] unsigned char 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      unsigned char 
  9010 ;; Registers used:
  9011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9017 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9018 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9019 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9020 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9021 ;;Total ram usage:        6 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:   13
  9024 ;; This function calls:
  9025 ;;		_USBTransferOnePacket
  9026 ;; This function is called by:
  9027 ;;		_USB_CDC_get
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text47
  9032  01194A                     __ptext47:
  9033                           	opt stack 0
  9034  01194A                     _getsUSBUSART:
  9035                           	opt stack 15
  9036                           
  9037                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;incstack = 0
  9041  01194A  0E00               	movlw	0
  9042  01194C  0100               	movlb	0	; () banked
  9043  01194E  6FBD               	movwf	_cdc_rx_len& (0+255),b
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  9047  011950  0100               	movlb	0	; () banked
  9048  011952  51AE               	movf	_CDCDataOutHandle& (0+255),w,b
  9049  011954  0100               	movlb	0	; () banked
  9050  011956  11AF               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  9051  011958  B4D8               	btfsc	status,2,c
  9052  01195A  D013               	goto	l9263
  9053                           
  9054                           ; BSR set to: 0
  9055  01195C  C0AE  FFD9         	movff	_CDCDataOutHandle,fsr2l
  9056  011960  C0AF  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  9057  011964  0100               	movlb	0	; () banked
  9058  011966  AEDF               	btfss	indf2,7,c
  9059  011968  D004               	goto	u8970
  9060  01196A  0100               	movlb	0	; () banked
  9061  01196C  6B6A               	clrf	??_getsUSBUSART& (0+255),b
  9062  01196E  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
  9063  011970  D002               	goto	u8978
  9064  011972                     u8970:
  9065  011972  0100               	movlb	0	; () banked
  9066  011974  6B6A               	clrf	??_getsUSBUSART& (0+255),b
  9067  011976                     u8978:
  9068  011976  0100               	movlb	0	; () banked
  9069  011978  516A               	movf	??_getsUSBUSART& (0+255),w,b
  9070  01197A  0100               	movlb	0	; () banked
  9071  01197C  6F6B               	movwf	_getsUSBUSART$5676& (0+255),b
  9072  01197E  6B6C               	clrf	(_getsUSBUSART$5676+1)& (0+255),b
  9073  011980  D005               	goto	l9265
  9074  011982                     l9263:
  9075                           
  9076                           ; BSR set to: 0
  9077  011982  0E00               	movlw	0
  9078  011984  0100               	movlb	0	; () banked
  9079  011986  6F6C               	movwf	(_getsUSBUSART$5676+1)& (0+255),b
  9080  011988  0E00               	movlw	0
  9081  01198A  6F6B               	movwf	_getsUSBUSART$5676& (0+255),b
  9082  01198C                     l9265:
  9083                           
  9084                           ; BSR set to: 0
  9085  01198C  0100               	movlb	0	; () banked
  9086  01198E  516B               	movf	_getsUSBUSART$5676& (0+255),w,b
  9087  011990  0100               	movlb	0	; () banked
  9088  011992  116C               	iorwf	(_getsUSBUSART$5676+1)& (0+255),w,b
  9089  011994  A4D8               	btfss	status,2,c
  9090  011996  D04B               	goto	l9281
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;usb_device_cdc.c: 547: {
  9094                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  9095  011998  0100               	movlb	0	; () banked
  9096  01199A  EE20 F001          	lfsr	2,1
  9097  01199E  51AE               	movf	_CDCDataOutHandle& (0+255),w,b
  9098  0119A0  26D9               	addwf	fsr2l,f,c
  9099  0119A2  51AF               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  9100  0119A4  22DA               	addwfc	fsr2h,f,c
  9101  0119A6  0100               	movlb	0	; () banked
  9102  0119A8  5169               	movf	getsUSBUSART@len& (0+255),w,b
  9103  0119AA  5CDE               	subwf	postinc2,w,c
  9104  0119AC  B0D8               	btfsc	status,0,c
  9105  0119AE  D00A               	goto	l9271
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  9109  0119B0  0100               	movlb	0	; () banked
  9110  0119B2  EE20 F001          	lfsr	2,1
  9111  0119B6  51AE               	movf	_CDCDataOutHandle& (0+255),w,b
  9112  0119B8  26D9               	addwf	fsr2l,f,c
  9113  0119BA  51AF               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  9114  0119BC  22DA               	addwfc	fsr2h,f,c
  9115  0119BE  50DF               	movf	indf2,w,c
  9116  0119C0  0100               	movlb	0	; () banked
  9117  0119C2  6F69               	movwf	getsUSBUSART@len& (0+255),b
  9118  0119C4                     l9271:
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  9122  0119C4  0E00               	movlw	0
  9123  0119C6  0100               	movlb	0	; () banked
  9124  0119C8  6FBD               	movwf	_cdc_rx_len& (0+255),b
  9125  0119CA  D018               	goto	l9277
  9126  0119CC                     l9273:
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  9130  0119CC  0100               	movlb	0	; () banked
  9131  0119CE  51BD               	movf	_cdc_rx_len& (0+255),w,b
  9132  0119D0  0D01               	mullw	1
  9133  0119D2  0E12               	movlw	low _cdc_data_rx
  9134  0119D4  24F3               	addwf	prodl,w,c
  9135  0119D6  6ED9               	movwf	fsr2l,c
  9136  0119D8  0E01               	movlw	high _cdc_data_rx
  9137  0119DA  20F4               	addwfc	prodh,w,c
  9138  0119DC  6EDA               	movwf	fsr2h,c
  9139  0119DE  0100               	movlb	0	; () banked
  9140  0119E0  51BD               	movf	_cdc_rx_len& (0+255),w,b
  9141  0119E2  0D01               	mullw	1
  9142  0119E4  50F3               	movf	prodl,w,c
  9143  0119E6  0100               	movlb	0	; () banked
  9144  0119E8  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
  9145  0119EA  6EE1               	movwf	fsr1l,c
  9146  0119EC  50F4               	movf	prodh,w,c
  9147  0119EE  0100               	movlb	0	; () banked
  9148  0119F0  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
  9149  0119F2  6EE2               	movwf	fsr1h,c
  9150  0119F4  CFDF FFE7          	movff	indf2,indf1
  9151                           
  9152                           ; BSR set to: 0
  9153  0119F8  0100               	movlb	0	; () banked
  9154  0119FA  2BBD               	incf	_cdc_rx_len& (0+255),f,b
  9155  0119FC                     l9277:
  9156                           
  9157                           ; BSR set to: 0
  9158  0119FC  0100               	movlb	0	; () banked
  9159  0119FE  5169               	movf	getsUSBUSART@len& (0+255),w,b
  9160  011A00  0100               	movlb	0	; () banked
  9161  011A02  5DBD               	subwf	_cdc_rx_len& (0+255),w,b
  9162  011A04  A0D8               	btfss	status,0,c
  9163  011A06  D7E2               	goto	l9273
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  9167                           
  9168                           ; BSR set to: 0
  9169  011A08  0E00               	movlw	0
  9170  011A0A  0100               	movlb	0	; () banked
  9171  011A0C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  9172  011A0E  0E12               	movlw	low _cdc_data_rx
  9173  011A10  0100               	movlb	0	; () banked
  9174  011A12  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  9175  011A14  0E01               	movlw	high _cdc_data_rx
  9176  011A16  0100               	movlb	0	; () banked
  9177  011A18  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  9178  011A1A  0E40               	movlw	64
  9179  011A1C  0100               	movlb	0	; () banked
  9180  011A1E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  9181  011A20  0E02               	movlw	2
  9182  011A22  EC67  F08E         	call	_USBTransferOnePacket
  9183  011A26  C060  F0AE         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  9184  011A2A  C061  F0AF         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  9185  011A2E                     l9281:
  9186                           
  9187                           ;usb_device_cdc.c: 567: }
  9188                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  9189  011A2E  0100               	movlb	0	; () banked
  9190  011A30  51BD               	movf	_cdc_rx_len& (0+255),w,b
  9191  011A32  0012               	return	
  9192  011A34                     __end_of_getsUSBUSART:
  9193                           	opt stack 0
  9194                           tblptru	equ	0xFF8
  9195                           tblptrh	equ	0xFF7
  9196                           tblptrl	equ	0xFF6
  9197                           tablat	equ	0xFF5
  9198                           prodh	equ	0xFF4
  9199                           prodl	equ	0xFF3
  9200                           intcon	equ	0xFF2
  9201                           intcon2	equ	0xFF1
  9202                           indf0	equ	0xFEF
  9203                           postinc0	equ	0xFEE
  9204                           fsr0h	equ	0xFEA
  9205                           fsr0l	equ	0xFE9
  9206                           wreg	equ	0xFE8
  9207                           indf1	equ	0xFE7
  9208                           postinc1	equ	0xFE6
  9209                           postdec1	equ	0xFE5
  9210                           fsr1h	equ	0xFE2
  9211                           fsr1l	equ	0xFE1
  9212                           indf2	equ	0xFDF
  9213                           postinc2	equ	0xFDE
  9214                           postdec2	equ	0xFDD
  9215                           fsr2h	equ	0xFDA
  9216                           fsr2l	equ	0xFD9
  9217                           status	equ	0xFD8
  9218                           
  9219 ;; *************** function _CDCTxService *****************
  9220 ;; Defined at:
  9221 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;		None
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
  9226 ;;  i               1   10[BANK0 ] unsigned char 
  9227 ;; Return value:  Size  Location     Type
  9228 ;;		None               void
  9229 ;; Registers used:
  9230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9231 ;; Tracked objects:
  9232 ;;		On entry : 0/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9237 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9238 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9239 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9240 ;;Total ram usage:        5 bytes
  9241 ;; Hardware stack levels used:    1
  9242 ;; Hardware stack levels required when called:   13
  9243 ;; This function calls:
  9244 ;;		_USBTransferOnePacket
  9245 ;; This function is called by:
  9246 ;;		_USB_CDC_send
  9247 ;;		_USB_CDC_get
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           	psect	text48
  9252  010D6C                     __ptext48:
  9253                           	opt stack 0
  9254  010D6C                     _CDCTxService:
  9255                           	opt stack 15
  9256                           
  9257                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  9258                           ;usb_device_cdc.c: 896: uint8_t i;
  9259                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;incstack = 0
  9263  010D6C  98A0               	bcf	4000,4,c	;volatile
  9264                           
  9265                           ;usb_device_cdc.c: 900: {};
  9266                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  9267  010D6E  0100               	movlb	0	; () banked
  9268  010D70  51AC               	movf	_CDCDataInHandle& (0+255),w,b
  9269  010D72  0100               	movlb	0	; () banked
  9270  010D74  11AD               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  9271  010D76  B4D8               	btfsc	status,2,c
  9272  010D78  D013               	goto	l9193
  9273                           
  9274                           ; BSR set to: 0
  9275  010D7A  C0AC  FFD9         	movff	_CDCDataInHandle,fsr2l
  9276  010D7E  C0AD  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  9277  010D82  0100               	movlb	0	; () banked
  9278  010D84  AEDF               	btfss	indf2,7,c
  9279  010D86  D004               	goto	u8840
  9280  010D88  0100               	movlb	0	; () banked
  9281  010D8A  6B67               	clrf	??_CDCTxService& (0+255),b
  9282  010D8C  2B67               	incf	??_CDCTxService& (0+255),f,b
  9283  010D8E  D002               	goto	u8848
  9284  010D90                     u8840:
  9285  010D90  0100               	movlb	0	; () banked
  9286  010D92  6B67               	clrf	??_CDCTxService& (0+255),b
  9287  010D94                     u8848:
  9288  010D94  0100               	movlb	0	; () banked
  9289  010D96  5167               	movf	??_CDCTxService& (0+255),w,b
  9290  010D98  0100               	movlb	0	; () banked
  9291  010D9A  6F68               	movwf	_CDCTxService$5724& (0+255),b
  9292  010D9C  6B69               	clrf	(_CDCTxService$5724+1)& (0+255),b
  9293  010D9E  D005               	goto	l9195
  9294  010DA0                     l9193:
  9295                           
  9296                           ; BSR set to: 0
  9297  010DA0  0E00               	movlw	0
  9298  010DA2  0100               	movlb	0	; () banked
  9299  010DA4  6F69               	movwf	(_CDCTxService$5724+1)& (0+255),b
  9300  010DA6  0E00               	movlw	0
  9301  010DA8  6F68               	movwf	_CDCTxService$5724& (0+255),b
  9302  010DAA                     l9195:
  9303                           
  9304                           ; BSR set to: 0
  9305  010DAA  0100               	movlb	0	; () banked
  9306  010DAC  5168               	movf	_CDCTxService$5724& (0+255),w,b
  9307  010DAE  0100               	movlb	0	; () banked
  9308  010DB0  1169               	iorwf	(_CDCTxService$5724+1)& (0+255),w,b
  9309  010DB2  B4D8               	btfsc	status,2,c
  9310  010DB4  D002               	goto	l9199
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;usb_device_cdc.c: 903: {
  9314                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
  9315  010DB6  88A0               	bsf	4000,4,c	;volatile
  9316                           
  9317                           ;usb_device_cdc.c: 905: return;
  9318  010DB8  0012               	return	
  9319  010DBA                     l9199:
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;usb_device_cdc.c: 906: }
  9323                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  9324  010DBA  0E03               	movlw	3
  9325  010DBC  0100               	movlb	0	; () banked
  9326  010DBE  19BE               	xorwf	_cdc_trf_state& (0+255),w,b
  9327  010DC0  A4D8               	btfss	status,2,c
  9328  010DC2  D003               	goto	l1575
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  9332  010DC4  0E00               	movlw	0
  9333  010DC6  0100               	movlb	0	; () banked
  9334  010DC8  6FBE               	movwf	_cdc_trf_state& (0+255),b
  9335  010DCA                     l1575:
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  9339  010DCA  0100               	movlb	0	; () banked
  9340  010DCC  51BE               	movf	_cdc_trf_state& (0+255),w,b
  9341  010DCE  A4D8               	btfss	status,2,c
  9342  010DD0  D002               	goto	l9205
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;usb_device_cdc.c: 920: {
  9346                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
  9347  010DD2  88A0               	bsf	4000,4,c	;volatile
  9348                           
  9349                           ;usb_device_cdc.c: 922: return;
  9350  010DD4  0012               	return	
  9351  010DD6                     l9205:
  9352                           
  9353                           ; BSR set to: 0
  9354                           ;usb_device_cdc.c: 923: }
  9355                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  9356  010DD6  0E02               	movlw	2
  9357  010DD8  0100               	movlb	0	; () banked
  9358  010DDA  19BE               	xorwf	_cdc_trf_state& (0+255),w,b
  9359  010DDC  A4D8               	btfss	status,2,c
  9360  010DDE  D017               	goto	l9211
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;usb_device_cdc.c: 929: {
  9364                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  9365  010DE0  0E01               	movlw	1
  9366  010DE2  0100               	movlb	0	; () banked
  9367  010DE4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  9368  010DE6  0E00               	movlw	0
  9369  010DE8  0100               	movlb	0	; () banked
  9370  010DEA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  9371  010DEC  0E00               	movlw	0
  9372  010DEE  0100               	movlb	0	; () banked
  9373  010DF0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  9374  010DF2  0E00               	movlw	0
  9375  010DF4  0100               	movlb	0	; () banked
  9376  010DF6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  9377  010DF8  0E02               	movlw	2
  9378  010DFA  EC67  F08E         	call	_USBTransferOnePacket
  9379  010DFE  C060  F0AC         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  9380  010E02  C061  F0AD         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  9381                           
  9382                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  9383  010E06  0E03               	movlw	3
  9384  010E08  0100               	movlb	0	; () banked
  9385  010E0A  6FBE               	movwf	_cdc_trf_state& (0+255),b
  9386                           
  9387                           ;usb_device_cdc.c: 933: }
  9388  010E0C  D071               	goto	l9255
  9389  010E0E                     l9211:
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  9393  010E0E  0100               	movlb	0	; () banked
  9394  010E10  05BE               	decf	_cdc_trf_state& (0+255),w,b
  9395  010E12  A4D8               	btfss	status,2,c
  9396  010E14  D06D               	goto	l9255
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;usb_device_cdc.c: 935: {
  9400                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  9401  010E16  0E40               	movlw	64
  9402  010E18  0100               	movlb	0	; () banked
  9403  010E1A  65BF               	cpfsgt	_cdc_tx_len& (0+255),b
  9404  010E1C  D004               	goto	l1580
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  9408  010E1E  0E40               	movlw	64
  9409  010E20  0100               	movlb	0	; () banked
  9410  010E22  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
  9411  010E24  D002               	goto	l9217
  9412  010E26                     l1580:
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;usb_device_cdc.c: 941: else
  9416                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  9417  010E26  C0BF  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  9418  010E2A                     l9217:
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  9422  010E2A  0100               	movlb	0	; () banked
  9423  010E2C  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
  9424  010E2E  0800               	sublw	0
  9425  010E30  0100               	movlb	0	; () banked
  9426  010E32  25BF               	addwf	_cdc_tx_len& (0+255),w,b
  9427  010E34  0100               	movlb	0	; () banked
  9428  010E36  6FBF               	movwf	_cdc_tx_len& (0+255),b
  9429                           
  9430                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  9431  010E38  0E00               	movlw	low _cdc_data_tx
  9432  010E3A  0100               	movlb	0	; () banked
  9433  010E3C  6FA4               	movwf	_pCDCDst& (0+255),b
  9434  010E3E  0E02               	movlw	high _cdc_data_tx
  9435  010E40  0100               	movlb	0	; () banked
  9436  010E42  6FA5               	movwf	(_pCDCDst+1)& (0+255),b
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;usb_device_cdc.c: 951: i = byte_to_send;
  9440  010E44  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  9444  010E48  0100               	movlb	0	; () banked
  9445  010E4A  51BC               	movf	_cdc_mem_type& (0+255),w,b
  9446  010E4C  B4D8               	btfsc	status,2,c
  9447  010E4E  D013               	goto	l9233
  9448  010E50  D02A               	goto	l9243
  9449  010E52                     l9225:
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;usb_device_cdc.c: 955: {
  9453                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  9454  010E52  C0A7  FFD9         	movff	_pCDCSrc,fsr2l
  9455  010E56  C0A8  FFDA         	movff	_pCDCSrc+1,fsr2h
  9456  010E5A  C0A4  FFE1         	movff	_pCDCDst,fsr1l
  9457  010E5E  C0A5  FFE2         	movff	_pCDCDst+1,fsr1h
  9458  010E62  CFDF FFE7          	movff	indf2,indf1
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  9462  010E66  0100               	movlb	0	; () banked
  9463  010E68  4BA4               	infsnz	_pCDCDst& (0+255),f,b
  9464  010E6A  2BA5               	incf	(_pCDCDst+1)& (0+255),f,b
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  9468  010E6C  0100               	movlb	0	; () banked
  9469  010E6E  4BA7               	infsnz	_pCDCSrc& (0+255),f,b
  9470  010E70  2BA8               	incf	(_pCDCSrc+1)& (0+255),f,b
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;usb_device_cdc.c: 959: i--;
  9474  010E72  0100               	movlb	0	; () banked
  9475  010E74  076A               	decf	CDCTxService@i& (0+255),f,b
  9476  010E76                     l9233:
  9477                           
  9478                           ; BSR set to: 0
  9479  010E76  0100               	movlb	0	; () banked
  9480  010E78  516A               	movf	CDCTxService@i& (0+255),w,b
  9481  010E7A  0100               	movlb	0	; () banked
  9482  010E7C  B4D8               	btfsc	status,2,c
  9483  010E7E  D018               	goto	l9245
  9484  010E80  D7E8               	goto	l9225
  9485  010E82                     l9235:
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;usb_device_cdc.c: 965: {
  9489                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  9490  010E82  C0A7  FFD9         	movff	_pCDCSrc,fsr2l
  9491  010E86  C0A8  FFDA         	movff	_pCDCSrc+1,fsr2h
  9492  010E8A  C0A4  FFE1         	movff	_pCDCDst,fsr1l
  9493  010E8E  C0A5  FFE2         	movff	_pCDCDst+1,fsr1h
  9494  010E92  CFDF FFE7          	movff	indf2,indf1
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  9498  010E96  0100               	movlb	0	; () banked
  9499  010E98  4BA4               	infsnz	_pCDCDst& (0+255),f,b
  9500  010E9A  2BA5               	incf	(_pCDCDst+1)& (0+255),f,b
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  9504  010E9C  0100               	movlb	0	; () banked
  9505  010E9E  4BA7               	infsnz	_pCDCSrc& (0+255),f,b
  9506  010EA0  2BA8               	incf	(_pCDCSrc+1)& (0+255),f,b
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;usb_device_cdc.c: 969: i--;
  9510  010EA2  0100               	movlb	0	; () banked
  9511  010EA4  076A               	decf	CDCTxService@i& (0+255),f,b
  9512  010EA6                     l9243:
  9513                           
  9514                           ; BSR set to: 0
  9515  010EA6  0100               	movlb	0	; () banked
  9516  010EA8  516A               	movf	CDCTxService@i& (0+255),w,b
  9517  010EAA  0100               	movlb	0	; () banked
  9518  010EAC  A4D8               	btfss	status,2,c
  9519  010EAE  D7E9               	goto	l9235
  9520  010EB0                     l9245:
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;usb_device_cdc.c: 970: }
  9524                           ;usb_device_cdc.c: 971: }
  9525                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  9526  010EB0  0100               	movlb	0	; () banked
  9527  010EB2  51BF               	movf	_cdc_tx_len& (0+255),w,b
  9528  010EB4  A4D8               	btfss	status,2,c
  9529  010EB6  D00A               	goto	l9253
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;usb_device_cdc.c: 978: {
  9533                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  9534  010EB8  0E40               	movlw	64
  9535  010EBA  0100               	movlb	0	; () banked
  9536  010EBC  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  9537  010EBE  A4D8               	btfss	status,2,c
  9538  010EC0  D002               	goto	l9251
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  9542  010EC2  0E02               	movlw	2
  9543  010EC4  D001               	goto	L1
  9544  010EC6                     l9251:
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;usb_device_cdc.c: 981: else
  9548                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  9549  010EC6  0E03               	movlw	3
  9550  010EC8                     L1:
  9551  010EC8  0100               	movlb	0	; () banked
  9552  010ECA  6FBE               	movwf	_cdc_trf_state& (0+255),b
  9553  010ECC                     l9253:
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;usb_device_cdc.c: 983: }
  9557                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  9558  010ECC  0E01               	movlw	1
  9559  010ECE  0100               	movlb	0	; () banked
  9560  010ED0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  9561  010ED2  0E00               	movlw	low _cdc_data_tx
  9562  010ED4  0100               	movlb	0	; () banked
  9563  010ED6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  9564  010ED8  0E02               	movlw	high _cdc_data_tx
  9565  010EDA  0100               	movlb	0	; () banked
  9566  010EDC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  9567  010EDE  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  9568  010EE2  0E02               	movlw	2
  9569  010EE4  EC67  F08E         	call	_USBTransferOnePacket
  9570  010EE8  C060  F0AC         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  9571  010EEC  C061  F0AD         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  9572  010EF0                     l9255:
  9573                           
  9574                           ;usb_device_cdc.c: 986: }
  9575                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
  9576  010EF0  88A0               	bsf	4000,4,c	;volatile
  9577  010EF2  0012               	return		;funcret
  9578  010EF4                     __end_of_CDCTxService:
  9579                           	opt stack 0
  9580                           tblptru	equ	0xFF8
  9581                           tblptrh	equ	0xFF7
  9582                           tblptrl	equ	0xFF6
  9583                           tablat	equ	0xFF5
  9584                           prodh	equ	0xFF4
  9585                           prodl	equ	0xFF3
  9586                           intcon	equ	0xFF2
  9587                           intcon2	equ	0xFF1
  9588                           indf0	equ	0xFEF
  9589                           postinc0	equ	0xFEE
  9590                           fsr0h	equ	0xFEA
  9591                           fsr0l	equ	0xFE9
  9592                           wreg	equ	0xFE8
  9593                           indf1	equ	0xFE7
  9594                           postinc1	equ	0xFE6
  9595                           postdec1	equ	0xFE5
  9596                           fsr1h	equ	0xFE2
  9597                           fsr1l	equ	0xFE1
  9598                           indf2	equ	0xFDF
  9599                           postinc2	equ	0xFDE
  9600                           postdec2	equ	0xFDD
  9601                           fsr2h	equ	0xFDA
  9602                           fsr2l	equ	0xFD9
  9603                           status	equ	0xFD8
  9604                           
  9605 ;; *************** function _USBTransferOnePacket *****************
  9606 ;; Defined at:
  9607 ;;		line 996 in file "../My_library/usb/usb_device.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  ep              1    wreg     unsigned char 
  9610 ;;  dir             1    0[BANK0 ] unsigned char 
  9611 ;;  data            2    1[BANK0 ] PTR unsigned char 
  9612 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  9613 ;;  len             1    3[BANK0 ] unsigned char 
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;  ep              1    4[BANK0 ] unsigned char 
  9616 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
  9617 ;;		 -> NULL(0), BDT(48), 
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  2    0[BANK0 ] PTR void 
  9620 ;; Registers used:
  9621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9627 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9628 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9630 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9631 ;;Total ram usage:        7 bytes
  9632 ;; Hardware stack levels used:    1
  9633 ;; Hardware stack levels required when called:   12
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		_getsUSBUSART
  9638 ;;		_CDCTxService
  9639 ;;		_USBCDCEventHandler
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text49
  9644  011CCE                     __ptext49:
  9645                           	opt stack 0
  9646  011CCE                     _USBTransferOnePacket:
  9647                           	opt stack 15
  9648                           
  9649                           ;incstack = 0
  9650                           ;USBTransferOnePacket@ep stored from wreg
  9651  011CCE  0100               	movlb	0	; () banked
  9652  011CD0  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
  9653                           
  9654                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
  9655                           ;usb_device.c: 1001: if(dir != 0)
  9656  011CD2  0100               	movlb	0	; () banked
  9657  011CD4  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  9658  011CD6  0100               	movlb	0	; () banked
  9659  011CD8  B4D8               	btfsc	status,2,c
  9660  011CDA  D008               	goto	l8809
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;usb_device.c: 1002: {
  9664                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
  9665  011CDC  0100               	movlb	0	; () banked
  9666  011CDE  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9667  011CE0  0D02               	mullw	2
  9668  011CE2  0E10               	movlw	low _pBDTEntryIn
  9669  011CE4  24F3               	addwf	prodl,w,c
  9670  011CE6  6ED9               	movwf	fsr2l,c
  9671  011CE8  0E00               	movlw	high _pBDTEntryIn
  9672  011CEA  D007               	goto	L2
  9673  011CEC                     l8809:
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;usb_device.c: 1006: else
  9677                           ;usb_device.c: 1007: {
  9678                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
  9679  011CEC  0100               	movlb	0	; () banked
  9680  011CEE  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9681  011CF0  0D02               	mullw	2
  9682  011CF2  0E9E               	movlw	low _pBDTEntryOut
  9683  011CF4  24F3               	addwf	prodl,w,c
  9684  011CF6  6ED9               	movwf	fsr2l,c
  9685  011CF8  0E00               	movlw	high _pBDTEntryOut
  9686  011CFA                     L2:
  9687  011CFA  20F4               	addwfc	prodh,w,c
  9688  011CFC  6EDA               	movwf	fsr2h,c
  9689  011CFE  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
  9690  011D02  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;usb_device.c: 1010: }
  9694                           ;usb_device.c: 1014: if(handle == 0)
  9695                           
  9696                           ; BSR set to: 0
  9697  011D06  0100               	movlb	0	; () banked
  9698  011D08  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  9699  011D0A  0100               	movlb	0	; () banked
  9700  011D0C  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  9701  011D0E  A4D8               	btfss	status,2,c
  9702  011D10  D007               	goto	l8817
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;usb_device.c: 1015: {
  9706                           ;usb_device.c: 1016: return 0;
  9707  011D12  0E00               	movlw	0
  9708  011D14  0100               	movlb	0	; () banked
  9709  011D16  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  9710  011D18  0E00               	movlw	0
  9711  011D1A  0100               	movlb	0	; () banked
  9712  011D1C  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  9713                           
  9714                           ; BSR set to: 0
  9715  011D1E  0012               	return	
  9716  011D20                     l8817:
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;usb_device.c: 1017: }
  9720                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
  9721  011D20  0100               	movlb	0	; () banked
  9722  011D22  EE20 F002          	lfsr	2,2
  9723  011D26  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  9724  011D28  26D9               	addwf	fsr2l,f,c
  9725  011D2A  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  9726  011D2C  22DA               	addwfc	fsr2h,f,c
  9727  011D2E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  9728  011D32  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  9729                           
  9730                           ;usb_device.c: 1031: handle->CNT = len;
  9731  011D36  0100               	movlb	0	; () banked
  9732  011D38  EE20 F001          	lfsr	2,1
  9733  011D3C  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  9734  011D3E  26D9               	addwf	fsr2l,f,c
  9735  011D40  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  9736  011D42  22DA               	addwfc	fsr2h,f,c
  9737  011D44  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  9738                           
  9739                           ; BSR set to: 0
  9740                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
  9741  011D48  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  9742  011D4C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  9743  011D50  0E40               	movlw	64
  9744  011D52  16DF               	andwf	indf2,f,c
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
  9748  011D54  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  9749  011D58  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  9750  011D5C  0E00               	movlw	0
  9751  011D5E  86DB               	bsf	plusw2,3,c
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
  9755  011D60  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  9756  011D64  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  9757  011D68  0E00               	movlw	0
  9758  011D6A  8EDB               	bsf	plusw2,7,c
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;usb_device.c: 1037: if(dir != 0)
  9762  011D6C  0100               	movlb	0	; () banked
  9763  011D6E  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  9764  011D70  0100               	movlb	0	; () banked
  9765  011D72  B4D8               	btfsc	status,2,c
  9766  011D74  D008               	goto	l8829
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;usb_device.c: 1038: {
  9770                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  9771  011D76  0100               	movlb	0	; () banked
  9772  011D78  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9773  011D7A  0D02               	mullw	2
  9774  011D7C  0E10               	movlw	low _pBDTEntryIn
  9775  011D7E  24F3               	addwf	prodl,w,c
  9776  011D80  6ED9               	movwf	fsr2l,c
  9777  011D82  0E00               	movlw	high _pBDTEntryIn
  9778  011D84  D007               	goto	L3
  9779  011D86                     l8829:
  9780                           
  9781                           ; BSR set to: 0
  9782                           ;usb_device.c: 1042: else
  9783                           ;usb_device.c: 1043: {
  9784                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  9785  011D86  0100               	movlb	0	; () banked
  9786  011D88  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  9787  011D8A  0D02               	mullw	2
  9788  011D8C  0E9E               	movlw	low _pBDTEntryOut
  9789  011D8E  24F3               	addwf	prodl,w,c
  9790  011D90  6ED9               	movwf	fsr2l,c
  9791  011D92  0E00               	movlw	high _pBDTEntryOut
  9792  011D94                     L3:
  9793  011D94  20F4               	addwfc	prodh,w,c
  9794  011D96  6EDA               	movwf	fsr2h,c
  9795  011D98  0E04               	movlw	4
  9796  011D9A  1ADF               	xorwf	indf2,f,c
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;usb_device.c: 1046: }
  9800                           ;usb_device.c: 1047: return (void*)handle;
  9801                           
  9802                           ; BSR set to: 0
  9803  011D9C  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  9804  011DA0  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  9805  011DA4  0012               	return	
  9806  011DA6                     __end_of_USBTransferOnePacket:
  9807                           	opt stack 0
  9808                           tblptru	equ	0xFF8
  9809                           tblptrh	equ	0xFF7
  9810                           tblptrl	equ	0xFF6
  9811                           tablat	equ	0xFF5
  9812                           prodh	equ	0xFF4
  9813                           prodl	equ	0xFF3
  9814                           intcon	equ	0xFF2
  9815                           intcon2	equ	0xFF1
  9816                           indf0	equ	0xFEF
  9817                           postinc0	equ	0xFEE
  9818                           fsr0h	equ	0xFEA
  9819                           fsr0l	equ	0xFE9
  9820                           wreg	equ	0xFE8
  9821                           indf1	equ	0xFE7
  9822                           postinc1	equ	0xFE6
  9823                           postdec1	equ	0xFE5
  9824                           fsr1h	equ	0xFE2
  9825                           fsr1l	equ	0xFE1
  9826                           indf2	equ	0xFDF
  9827                           postinc2	equ	0xFDE
  9828                           postdec2	equ	0xFDD
  9829                           plusw2	equ	0xFDB
  9830                           fsr2h	equ	0xFDA
  9831                           fsr2l	equ	0xFD9
  9832                           status	equ	0xFD8
  9833                           
  9834 ;; *************** function _UART_task *****************
  9835 ;; Defined at:
  9836 ;;		line 51 in file "../My_library/My_UART.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;		None
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;		None
  9841 ;; Return value:  Size  Location     Type
  9842 ;;		None               void
  9843 ;; Registers used:
  9844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9854 ;;Total ram usage:        0 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; Hardware stack levels required when called:   13
  9857 ;; This function calls:
  9858 ;;		_ringbuf_num
  9859 ;; This function is called by:
  9860 ;;		_main
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text50
  9865  0138A0                     __ptext50:
  9866                           	opt stack 0
  9867  0138A0                     _UART_task:
  9868                           	opt stack 17
  9869                           
  9870                           ;My_UART.c: 52: if (ringbuf_num(&uart_tx)) {
  9871                           
  9872                           ; BSR set to: 0
  9873                           ;incstack = 0
  9874  0138A0  0ED4               	movlw	low _uart_tx
  9875  0138A2  0100               	movlb	0	; () banked
  9876  0138A4  6F60               	movwf	ringbuf_num@rb& (0+255),b
  9877  0138A6  0E01               	movlw	high _uart_tx
  9878  0138A8  0100               	movlb	0	; () banked
  9879  0138AA  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  9880  0138AC  EC2E  F08C         	call	_ringbuf_num	;wreg free
  9881  0138B0  0100               	movlb	0	; () banked
  9882  0138B2  5160               	movf	?_ringbuf_num& (0+255),w,b
  9883  0138B4  0100               	movlb	0	; () banked
  9884  0138B6  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9885  0138B8  B4D8               	btfsc	status,2,c
  9886  0138BA  0012               	return	
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;My_UART.c: 53: PIE1bits.TXIE = 1;
  9890  0138BC  889D               	bsf	3997,4,c	;volatile
  9891  0138BE  0012               	return	
  9892  0138C0                     __end_of_UART_task:
  9893                           	opt stack 0
  9894                           tblptru	equ	0xFF8
  9895                           tblptrh	equ	0xFF7
  9896                           tblptrl	equ	0xFF6
  9897                           tablat	equ	0xFF5
  9898                           prodh	equ	0xFF4
  9899                           prodl	equ	0xFF3
  9900                           intcon	equ	0xFF2
  9901                           intcon2	equ	0xFF1
  9902                           indf0	equ	0xFEF
  9903                           postinc0	equ	0xFEE
  9904                           fsr0h	equ	0xFEA
  9905                           fsr0l	equ	0xFE9
  9906                           wreg	equ	0xFE8
  9907                           indf1	equ	0xFE7
  9908                           postinc1	equ	0xFE6
  9909                           postdec1	equ	0xFE5
  9910                           fsr1h	equ	0xFE2
  9911                           fsr1l	equ	0xFE1
  9912                           indf2	equ	0xFDF
  9913                           postinc2	equ	0xFDE
  9914                           postdec2	equ	0xFDD
  9915                           plusw2	equ	0xFDB
  9916                           fsr2h	equ	0xFDA
  9917                           fsr2l	equ	0xFD9
  9918                           status	equ	0xFD8
  9919                           
  9920 ;; *************** function _ringbuf_num *****************
  9921 ;; Defined at:
  9922 ;;		line 12 in file "../My_library/My_ringbuf.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  9925 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_tx(8), uart_rx(8), 
  9926 ;;		 -> usb_tx(8), usb_rx(8), 
  9927 ;; Auto vars:     Size  Location     Type
  9928 ;;		None
  9929 ;; Return value:  Size  Location     Type
  9930 ;;                  2    0[BANK0 ] unsigned int 
  9931 ;; Registers used:
  9932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9933 ;; Tracked objects:
  9934 ;;		On entry : 0/0
  9935 ;;		On exit  : 0/0
  9936 ;;		Unchanged: 0/0
  9937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9938 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9940 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9941 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9942 ;;Total ram usage:        8 bytes
  9943 ;; Hardware stack levels used:    1
  9944 ;; Hardware stack levels required when called:   12
  9945 ;; This function calls:
  9946 ;;		Nothing
  9947 ;; This function is called by:
  9948 ;;		_main
  9949 ;;		_ringbuf_put
  9950 ;;		_ringbuf_pop
  9951 ;;		_UART_task
  9952 ;;		_USB_CDC_task
  9953 ;;		_ringbuf_backspace
  9954 ;;		_ST7032_task
  9955 ;;		_terminal_task
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           	psect	text51
  9960  01185C                     __ptext51:
  9961                           	opt stack 0
  9962  01185C                     _ringbuf_num:
  9963                           	opt stack 17
  9964                           
  9965                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  9966                           
  9967                           ; BSR set to: 0
  9968                           ;incstack = 0
  9969  01185C  0100               	movlb	0	; () banked
  9970  01185E  EE20 F006          	lfsr	2,6
  9971  011862  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9972  011864  26D9               	addwf	fsr2l,f,c
  9973  011866  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9974  011868  22DA               	addwfc	fsr2h,f,c
  9975  01186A  0100               	movlb	0	; () banked
  9976  01186C  EE10 F004          	lfsr	1,4
  9977  011870  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9978  011872  26E1               	addwf	fsr1l,f,c
  9979  011874  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9980  011876  22E2               	addwfc	fsr1h,f,c
  9981  011878  50DE               	movf	postinc2,w,c
  9982  01187A  5CE6               	subwf	postinc1,w,c
  9983  01187C  50DE               	movf	postinc2,w,c
  9984  01187E  58E6               	subwfb	postinc1,w,c
  9985  011880  A0D8               	btfss	status,0,c
  9986  011882  D028               	goto	l8911
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  9990  011884  0100               	movlb	0	; () banked
  9991  011886  EE20 F004          	lfsr	2,4
  9992  01188A  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9993  01188C  26D9               	addwf	fsr2l,f,c
  9994  01188E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9995  011890  22DA               	addwfc	fsr2h,f,c
  9996  011892  CFDE F062          	movff	postinc2,??_ringbuf_num
  9997  011896  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  9998  01189A  0100               	movlb	0	; () banked
  9999  01189C  EE20 F006          	lfsr	2,6
 10000  0118A0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10001  0118A2  26D9               	addwf	fsr2l,f,c
 10002  0118A4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10003  0118A6  22DA               	addwfc	fsr2h,f,c
 10004  0118A8  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 10005  0118AC  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 10006  0118B0  0100               	movlb	0	; () banked
 10007  0118B2  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 10008  0118B4  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 10009  0118B6  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 10010  0118B8  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 10011  0118BA  0100               	movlb	0	; () banked
 10012  0118BC  5162               	movf	??_ringbuf_num& (0+255),w,b
 10013  0118BE  0100               	movlb	0	; () banked
 10014  0118C0  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 10015  0118C2  0100               	movlb	0	; () banked
 10016  0118C4  6F60               	movwf	?_ringbuf_num& (0+255),b
 10017  0118C6  0100               	movlb	0	; () banked
 10018  0118C8  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 10019  0118CA  0100               	movlb	0	; () banked
 10020  0118CC  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 10021  0118CE  0100               	movlb	0	; () banked
 10022  0118D0  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 10023                           
 10024                           ; BSR set to: 0
 10025                           ;My_ringbuf.c: 15: } else {
 10026                           
 10027                           ; BSR set to: 0
 10028  0118D2  0012               	return	
 10029  0118D4                     l8911:
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 10033  0118D4  0100               	movlb	0	; () banked
 10034  0118D6  EE20 F004          	lfsr	2,4
 10035  0118DA  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10036  0118DC  26D9               	addwf	fsr2l,f,c
 10037  0118DE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10038  0118E0  22DA               	addwfc	fsr2h,f,c
 10039  0118E2  CFDE F062          	movff	postinc2,??_ringbuf_num
 10040  0118E6  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 10041  0118EA  0100               	movlb	0	; () banked
 10042  0118EC  EE20 F002          	lfsr	2,2
 10043  0118F0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10044  0118F2  26D9               	addwf	fsr2l,f,c
 10045  0118F4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10046  0118F6  22DA               	addwfc	fsr2h,f,c
 10047  0118F8  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 10048  0118FC  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 10049  011900  0100               	movlb	0	; () banked
 10050  011902  EE20 F006          	lfsr	2,6
 10051  011906  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10052  011908  26D9               	addwf	fsr2l,f,c
 10053  01190A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10054  01190C  22DA               	addwfc	fsr2h,f,c
 10055  01190E  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 10056  011912  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 10057  011916  0100               	movlb	0	; () banked
 10058  011918  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 10059  01191A  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 10060  01191C  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 10061  01191E  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 10062  011920  0100               	movlb	0	; () banked
 10063  011922  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 10064  011924  0100               	movlb	0	; () banked
 10065  011926  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 10066  011928  0100               	movlb	0	; () banked
 10067  01192A  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 10068  01192C  0100               	movlb	0	; () banked
 10069  01192E  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 10070  011930  0100               	movlb	0	; () banked
 10071  011932  5162               	movf	??_ringbuf_num& (0+255),w,b
 10072  011934  0100               	movlb	0	; () banked
 10073  011936  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 10074  011938  0100               	movlb	0	; () banked
 10075  01193A  6F60               	movwf	?_ringbuf_num& (0+255),b
 10076  01193C  0100               	movlb	0	; () banked
 10077  01193E  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 10078  011940  0100               	movlb	0	; () banked
 10079  011942  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 10080  011944  0100               	movlb	0	; () banked
 10081  011946  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 10082                           
 10083                           ; BSR set to: 0
 10084  011948  0012               	return	
 10085  01194A                     __end_of_ringbuf_num:
 10086                           	opt stack 0
 10087                           tblptru	equ	0xFF8
 10088                           tblptrh	equ	0xFF7
 10089                           tblptrl	equ	0xFF6
 10090                           tablat	equ	0xFF5
 10091                           prodh	equ	0xFF4
 10092                           prodl	equ	0xFF3
 10093                           intcon	equ	0xFF2
 10094                           intcon2	equ	0xFF1
 10095                           indf0	equ	0xFEF
 10096                           postinc0	equ	0xFEE
 10097                           fsr0h	equ	0xFEA
 10098                           fsr0l	equ	0xFE9
 10099                           wreg	equ	0xFE8
 10100                           indf1	equ	0xFE7
 10101                           postinc1	equ	0xFE6
 10102                           postdec1	equ	0xFE5
 10103                           fsr1h	equ	0xFE2
 10104                           fsr1l	equ	0xFE1
 10105                           indf2	equ	0xFDF
 10106                           postinc2	equ	0xFDE
 10107                           postdec2	equ	0xFDD
 10108                           plusw2	equ	0xFDB
 10109                           fsr2h	equ	0xFDA
 10110                           fsr2l	equ	0xFD9
 10111                           status	equ	0xFD8
 10112                           
 10113 ;; *************** function _RTCC_task *****************
 10114 ;; Defined at:
 10115 ;;		line 38 in file "../My_library/My_RTCC.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;		None
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;		None
 10120 ;; Return value:  Size  Location     Type
 10121 ;;		None               void
 10122 ;; Registers used:
 10123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10133 ;;Total ram usage:        0 bytes
 10134 ;; Hardware stack levels used:    1
 10135 ;; Hardware stack levels required when called:   16
 10136 ;; This function calls:
 10137 ;;		_RTCC_from_RTCC
 10138 ;; This function is called by:
 10139 ;;		_main
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           	psect	text52
 10144  0134EC                     __ptext52:
 10145                           	opt stack 0
 10146  0134EC                     _RTCC_task:
 10147                           	opt stack 14
 10148                           
 10149                           ;My_RTCC.c: 39: static uint8_t prev_halfsec;
 10150                           ;My_RTCC.c: 40: if (RTCCFGbits.RTCSYNC)return;
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;incstack = 0
 10154  0134EC  010F               	movlb	15	; () banked
 10155  0134EE  B93F               	btfsc	63,4,b	;volatile
 10156  0134F0  0012               	return	
 10157                           
 10158                           ; BSR set to: 15
 10159                           ;My_RTCC.c: 41: now.halfsec = RTCCFGbits.HALFSEC;
 10160                           
 10161                           ; BSR set to: 15
 10162                           
 10163                           ; BSR set to: 15
 10164  0134F2  0E00               	movlw	0
 10165  0134F4  B73F               	btfsc	63,3,b	;volatile
 10166  0134F6  0E01               	movlw	1
 10167  0134F8  0101               	movlb	1	; () banked
 10168  0134FA  6FC2               	movwf	(_now+12)& (0+255),b
 10169                           
 10170                           ; BSR set to: 1
 10171                           ;My_RTCC.c: 42: if (prev_halfsec != now.halfsec) {
 10172  0134FC  0100               	movlb	0	; () banked
 10173  0134FE  51B6               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 10174  013500  0101               	movlb	1	; () banked
 10175  013502  19C2               	xorwf	(_now+12)& (0+255),w,b
 10176  013504  B4D8               	btfsc	status,2,c
 10177  013506  0012               	return	
 10178                           
 10179                           ; BSR set to: 1
 10180                           ;My_RTCC.c: 43: prev_halfsec = now.halfsec;
 10181  013508  C1C2  F0B6         	movff	_now+12,RTCC_task@prev_halfsec
 10182                           
 10183                           ;My_RTCC.c: 44: now.colon = now.halfsec;
 10184  01350C  C1C2  F1C1         	movff	_now+12,_now+11
 10185                           
 10186                           ; BSR set to: 1
 10187                           ;My_RTCC.c: 45: time_change_flag = 1;
 10188  013510  0E01               	movlw	1
 10189  013512  0100               	movlb	0	; () banked
 10190  013514  6FC2               	movwf	_time_change_flag& (0+255),b
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;My_RTCC.c: 46: RTCC_from_RTCC(&now);
 10194  013516  0EB6               	movlw	low _now
 10195  013518  0100               	movlb	0	; () banked
 10196  01351A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 10197  01351C  0E01               	movlw	high _now
 10198  01351E  0100               	movlb	0	; () banked
 10199  013520  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 10200  013522  EC99  F09C         	call	_RTCC_from_RTCC	;wreg free
 10201  013526  0012               	return	
 10202  013528                     __end_of_RTCC_task:
 10203                           	opt stack 0
 10204                           tblptru	equ	0xFF8
 10205                           tblptrh	equ	0xFF7
 10206                           tblptrl	equ	0xFF6
 10207                           tablat	equ	0xFF5
 10208                           prodh	equ	0xFF4
 10209                           prodl	equ	0xFF3
 10210                           intcon	equ	0xFF2
 10211                           intcon2	equ	0xFF1
 10212                           indf0	equ	0xFEF
 10213                           postinc0	equ	0xFEE
 10214                           fsr0h	equ	0xFEA
 10215                           fsr0l	equ	0xFE9
 10216                           wreg	equ	0xFE8
 10217                           indf1	equ	0xFE7
 10218                           postinc1	equ	0xFE6
 10219                           postdec1	equ	0xFE5
 10220                           fsr1h	equ	0xFE2
 10221                           fsr1l	equ	0xFE1
 10222                           indf2	equ	0xFDF
 10223                           postinc2	equ	0xFDE
 10224                           postdec2	equ	0xFDD
 10225                           plusw2	equ	0xFDB
 10226                           fsr2h	equ	0xFDA
 10227                           fsr2l	equ	0xFD9
 10228                           status	equ	0xFD8
 10229                           
 10230 ;; *************** function _RTCC_from_RTCC *****************
 10231 ;; Defined at:
 10232 ;;		line 52 in file "../My_library/My_RTCC.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;  tm              2   38[BANK0 ] PTR struct .
 10235 ;;		 -> now(14), 
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;		None
 10238 ;; Return value:  Size  Location     Type
 10239 ;;		None               void
 10240 ;; Registers used:
 10241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10242 ;; Tracked objects:
 10243 ;;		On entry : 0/0
 10244 ;;		On exit  : 0/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10250 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10251 ;;Total ram usage:        2 bytes
 10252 ;; Hardware stack levels used:    1
 10253 ;; Hardware stack levels required when called:   15
 10254 ;; This function calls:
 10255 ;;		_RTCC_to_caltime
 10256 ;;		_caltime_to_epoch
 10257 ;; This function is called by:
 10258 ;;		_setup
 10259 ;;		_RTCC_init
 10260 ;;		_RTCC_task
 10261 ;;		_display_time_0802
 10262 ;;		_display_time_1602
 10263 ;;		_RTCC_adjust_time_inc
 10264 ;;		_RTCC_adjust_time_dec
 10265 ;;		_print_time
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text53
 10270  013932                     __ptext53:
 10271                           	opt stack 0
 10272  013932                     _RTCC_from_RTCC:
 10273                           	opt stack 13
 10274                           
 10275                           ;My_RTCC.c: 53: RTCC_to_caltime(tm);
 10276                           
 10277                           ;incstack = 0
 10278  013932  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 10279  013936  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 10280  01393A  EC23  F093         	call	_RTCC_to_caltime	;wreg free
 10281                           
 10282                           ;My_RTCC.c: 54: caltime_to_epoch(tm);
 10283  01393E  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 10284  013942  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 10285  013946  EC2D  F082         	call	_caltime_to_epoch	;wreg free
 10286  01394A  0012               	return		;funcret
 10287  01394C                     __end_of_RTCC_from_RTCC:
 10288                           	opt stack 0
 10289                           tblptru	equ	0xFF8
 10290                           tblptrh	equ	0xFF7
 10291                           tblptrl	equ	0xFF6
 10292                           tablat	equ	0xFF5
 10293                           prodh	equ	0xFF4
 10294                           prodl	equ	0xFF3
 10295                           intcon	equ	0xFF2
 10296                           intcon2	equ	0xFF1
 10297                           indf0	equ	0xFEF
 10298                           postinc0	equ	0xFEE
 10299                           fsr0h	equ	0xFEA
 10300                           fsr0l	equ	0xFE9
 10301                           wreg	equ	0xFE8
 10302                           indf1	equ	0xFE7
 10303                           postinc1	equ	0xFE6
 10304                           postdec1	equ	0xFE5
 10305                           fsr1h	equ	0xFE2
 10306                           fsr1l	equ	0xFE1
 10307                           indf2	equ	0xFDF
 10308                           postinc2	equ	0xFDE
 10309                           postdec2	equ	0xFDD
 10310                           plusw2	equ	0xFDB
 10311                           fsr2h	equ	0xFDA
 10312                           fsr2l	equ	0xFD9
 10313                           status	equ	0xFD8
 10314                           
 10315 ;; *************** function _caltime_to_epoch *****************
 10316 ;; Defined at:
 10317 ;;		line 343 in file "../My_library/My_RTCC.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;  tm              2   25[BANK0 ] PTR struct .
 10320 ;;		 -> now(14), 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  month           1   37[BANK0 ] unsigned char 
 10323 ;;  month           1   32[BANK0 ] unsigned char 
 10324 ;;  year            1   31[BANK0 ] unsigned char 
 10325 ;;  epoch           4   33[BANK0 ] unsigned long 
 10326 ;; Return value:  Size  Location     Type
 10327 ;;		None               void
 10328 ;; Registers used:
 10329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10330 ;; Tracked objects:
 10331 ;;		On entry : 0/0
 10332 ;;		On exit  : 0/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10335 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10336 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10337 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10338 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10339 ;;Total ram usage:       13 bytes
 10340 ;; Hardware stack levels used:    1
 10341 ;; Hardware stack levels required when called:   14
 10342 ;; This function calls:
 10343 ;;		___lmul
 10344 ;;		_month_length
 10345 ;; This function is called by:
 10346 ;;		_RTCC_from_RTCC
 10347 ;;		_RTCC_from_caltime
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text54
 10352  01045A                     __ptext54:
 10353                           	opt stack 0
 10354  01045A                     _caltime_to_epoch:
 10355                           	opt stack 13
 10356                           
 10357                           ;My_RTCC.c: 344: epoch_t epoch = 0;
 10358                           
 10359                           ;incstack = 0
 10360  01045A  0E00               	movlw	0
 10361  01045C  0100               	movlb	0	; () banked
 10362  01045E  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 10363  010460  0E00               	movlw	0
 10364  010462  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 10365  010464  0E00               	movlw	0
 10366  010466  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 10367  010468  0E00               	movlw	0
 10368  01046A  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 10369                           
 10370                           ;My_RTCC.c: 345: for (uint8_t year = 0; year < tm->YY; year++) {
 10371  01046C  0E00               	movlw	0
 10372  01046E  0100               	movlb	0	; () banked
 10373  010470  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 10374  010472  D037               	goto	l8693
 10375  010474                     l8679:
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;My_RTCC.c: 346: for (uint8_t month = 1; month <= 12; month++) {
 10379  010474  0E01               	movlw	1
 10380  010476  0100               	movlb	0	; () banked
 10381  010478  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 10382  01047A                     l8681:
 10383                           
 10384                           ; BSR set to: 0
 10385  01047A  0E0C               	movlw	12
 10386  01047C  0100               	movlb	0	; () banked
 10387  01047E  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 10388  010480  D001               	goto	l8685
 10389  010482  D02D               	goto	l8691
 10390  010484                     l8685:
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;My_RTCC.c: 347: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 10394  010484  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 10395  010488  0100               	movlb	0	; () banked
 10396  01048A  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 10397  01048C  EC8A  F08D         	call	_month_length
 10398  010490  0100               	movlb	0	; () banked
 10399  010492  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 10400  010494  0100               	movlb	0	; () banked
 10401  010496  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 10402  010498  0100               	movlb	0	; () banked
 10403  01049A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 10404  01049C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 10405  01049E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 10406  0104A0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 10407  0104A2  0E80               	movlw	128
 10408  0104A4  0100               	movlb	0	; () banked
 10409  0104A6  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10410  0104A8  0E51               	movlw	81
 10411  0104AA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10412  0104AC  0E01               	movlw	1
 10413  0104AE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10414  0104B0  0E00               	movlw	0
 10415  0104B2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10416  0104B4  ECD6  F097         	call	___lmul	;wreg free
 10417  0104B8  0100               	movlb	0	; () banked
 10418  0104BA  516D               	movf	?___lmul& (0+255),w,b
 10419  0104BC  0100               	movlb	0	; () banked
 10420  0104BE  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 10421  0104C0  0100               	movlb	0	; () banked
 10422  0104C2  516E               	movf	(?___lmul+1)& (0+255),w,b
 10423  0104C4  0100               	movlb	0	; () banked
 10424  0104C6  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 10425  0104C8  0100               	movlb	0	; () banked
 10426  0104CA  516F               	movf	(?___lmul+2)& (0+255),w,b
 10427  0104CC  0100               	movlb	0	; () banked
 10428  0104CE  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 10429  0104D0  0100               	movlb	0	; () banked
 10430  0104D2  5170               	movf	(?___lmul+3)& (0+255),w,b
 10431  0104D4  0100               	movlb	0	; () banked
 10432  0104D6  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 10433                           
 10434                           ; BSR set to: 0
 10435  0104D8  0100               	movlb	0	; () banked
 10436  0104DA  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 10437  0104DC  D7CE               	goto	l8681
 10438  0104DE                     l8691:
 10439                           
 10440                           ; BSR set to: 0
 10441  0104DE  0100               	movlb	0	; () banked
 10442  0104E0  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 10443  0104E2                     l8693:
 10444                           
 10445                           ; BSR set to: 0
 10446  0104E2  0100               	movlb	0	; () banked
 10447  0104E4  EE20 F00A          	lfsr	2,10
 10448  0104E8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 10449  0104EA  26D9               	addwf	fsr2l,f,c
 10450  0104EC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 10451  0104EE  22DA               	addwfc	fsr2h,f,c
 10452  0104F0  50DE               	movf	postinc2,w,c
 10453  0104F2  0100               	movlb	0	; () banked
 10454  0104F4  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 10455  0104F6  A0D8               	btfss	status,0,c
 10456  0104F8  D7BD               	goto	l8679
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;My_RTCC.c: 348: }
 10460                           ;My_RTCC.c: 349: }
 10461                           ;My_RTCC.c: 350: for (uint8_t month = 1; month < tm->MM; month++) {
 10462                           
 10463                           ; BSR set to: 0
 10464  0104FA  0E01               	movlw	1
 10465  0104FC  0100               	movlb	0	; () banked
 10466  0104FE  6F80               	movwf	caltime_to_epoch@month_2681& (0+255),b
 10467  010500  D032               	goto	l8701
 10468  010502                     l8697:
 10469                           
 10470                           ; BSR set to: 0
 10471                           ;My_RTCC.c: 351: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 10472  010502  C080  F066         	movff	caltime_to_epoch@month_2681,month_length@month
 10473  010506  0100               	movlb	0	; () banked
 10474  010508  EE20 F00A          	lfsr	2,10
 10475  01050C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 10476  01050E  26D9               	addwf	fsr2l,f,c
 10477  010510  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 10478  010512  22DA               	addwfc	fsr2h,f,c
 10479  010514  50DF               	movf	indf2,w,c
 10480  010516  EC8A  F08D         	call	_month_length
 10481  01051A  0100               	movlb	0	; () banked
 10482  01051C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 10483  01051E  0100               	movlb	0	; () banked
 10484  010520  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 10485  010522  0100               	movlb	0	; () banked
 10486  010524  6F6D               	movwf	___lmul@multiplier& (0+255),b
 10487  010526  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 10488  010528  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 10489  01052A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 10490  01052C  0E80               	movlw	128
 10491  01052E  0100               	movlb	0	; () banked
 10492  010530  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10493  010532  0E51               	movlw	81
 10494  010534  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10495  010536  0E01               	movlw	1
 10496  010538  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10497  01053A  0E00               	movlw	0
 10498  01053C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10499  01053E  ECD6  F097         	call	___lmul	;wreg free
 10500  010542  0100               	movlb	0	; () banked
 10501  010544  516D               	movf	?___lmul& (0+255),w,b
 10502  010546  0100               	movlb	0	; () banked
 10503  010548  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 10504  01054A  0100               	movlb	0	; () banked
 10505  01054C  516E               	movf	(?___lmul+1)& (0+255),w,b
 10506  01054E  0100               	movlb	0	; () banked
 10507  010550  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 10508  010552  0100               	movlb	0	; () banked
 10509  010554  516F               	movf	(?___lmul+2)& (0+255),w,b
 10510  010556  0100               	movlb	0	; () banked
 10511  010558  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 10512  01055A  0100               	movlb	0	; () banked
 10513  01055C  5170               	movf	(?___lmul+3)& (0+255),w,b
 10514  01055E  0100               	movlb	0	; () banked
 10515  010560  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 10516                           
 10517                           ; BSR set to: 0
 10518  010562  0100               	movlb	0	; () banked
 10519  010564  2B80               	incf	caltime_to_epoch@month_2681& (0+255),f,b
 10520  010566                     l8701:
 10521                           
 10522                           ; BSR set to: 0
 10523  010566  0100               	movlb	0	; () banked
 10524  010568  EE20 F009          	lfsr	2,9
 10525  01056C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 10526  01056E  26D9               	addwf	fsr2l,f,c
 10527  010570  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 10528  010572  22DA               	addwfc	fsr2h,f,c
 10529  010574  50DE               	movf	postinc2,w,c
 10530  010576  0100               	movlb	0	; () banked
 10531  010578  5D80               	subwf	caltime_to_epoch@month_2681& (0+255),w,b
 10532  01057A  A0D8               	btfss	status,0,c
 10533  01057C  D7C2               	goto	l8697
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;My_RTCC.c: 352: }
 10537                           ;My_RTCC.c: 353: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 10538                           
 10539                           ; BSR set to: 0
 10540  01057E  0EFF               	movlw	255
 10541  010580  0100               	movlb	0	; () banked
 10542  010582  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 10543  010584  0EFF               	movlw	255
 10544  010586  0100               	movlb	0	; () banked
 10545  010588  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 10546  01058A  0100               	movlb	0	; () banked
 10547  01058C  EE20 F008          	lfsr	2,8
 10548  010590  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 10549  010592  26D9               	addwf	fsr2l,f,c
 10550  010594  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 10551  010596  22DA               	addwfc	fsr2h,f,c
 10552  010598  50DF               	movf	indf2,w,c
 10553  01059A  0100               	movlb	0	; () banked
 10554  01059C  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 10555  01059E  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 10556  0105A0  0100               	movlb	0	; () banked
 10557  0105A2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 10558  0105A4  0100               	movlb	0	; () banked
 10559  0105A6  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 10560  0105A8  0100               	movlb	0	; () banked
 10561  0105AA  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 10562  0105AC  0100               	movlb	0	; () banked
 10563  0105AE  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 10564  0105B0  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 10565  0105B4  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 10566  0105B8  0100               	movlb	0	; () banked
 10567  0105BA  0E00               	movlw	0
 10568  0105BC  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 10569  0105BE  0EFF               	movlw	-1
 10570  0105C0  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 10571  0105C2  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 10572  0105C4  0E80               	movlw	128
 10573  0105C6  0100               	movlb	0	; () banked
 10574  0105C8  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10575  0105CA  0E51               	movlw	81
 10576  0105CC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10577  0105CE  0E01               	movlw	1
 10578  0105D0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10579  0105D2  0E00               	movlw	0
 10580  0105D4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10581  0105D6  ECD6  F097         	call	___lmul	;wreg free
 10582  0105DA  0100               	movlb	0	; () banked
 10583  0105DC  516D               	movf	?___lmul& (0+255),w,b
 10584  0105DE  0100               	movlb	0	; () banked
 10585  0105E0  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 10586  0105E2  0100               	movlb	0	; () banked
 10587  0105E4  516E               	movf	(?___lmul+1)& (0+255),w,b
 10588  0105E6  0100               	movlb	0	; () banked
 10589  0105E8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 10590  0105EA  0100               	movlb	0	; () banked
 10591  0105EC  516F               	movf	(?___lmul+2)& (0+255),w,b
 10592  0105EE  0100               	movlb	0	; () banked
 10593  0105F0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 10594  0105F2  0100               	movlb	0	; () banked
 10595  0105F4  5170               	movf	(?___lmul+3)& (0+255),w,b
 10596  0105F6  0100               	movlb	0	; () banked
 10597  0105F8  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 10598                           
 10599                           ;My_RTCC.c: 354: epoch += ((epoch_t)60*60) * tm->hh;
 10600  0105FA  0100               	movlb	0	; () banked
 10601  0105FC  EE20 F006          	lfsr	2,6
 10602  010600  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 10603  010602  26D9               	addwf	fsr2l,f,c
 10604  010604  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 10605  010606  22DA               	addwfc	fsr2h,f,c
 10606  010608  50DF               	movf	indf2,w,c
 10607  01060A  0100               	movlb	0	; () banked
 10608  01060C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 10609  01060E  0100               	movlb	0	; () banked
 10610  010610  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 10611  010612  0100               	movlb	0	; () banked
 10612  010614  6F6D               	movwf	___lmul@multiplier& (0+255),b
 10613  010616  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 10614  010618  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 10615  01061A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 10616  01061C  0E10               	movlw	16
 10617  01061E  0100               	movlb	0	; () banked
 10618  010620  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10619  010622  0E0E               	movlw	14
 10620  010624  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10621  010626  0E00               	movlw	0
 10622  010628  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10623  01062A  0E00               	movlw	0
 10624  01062C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10625  01062E  ECD6  F097         	call	___lmul	;wreg free
 10626  010632  0100               	movlb	0	; () banked
 10627  010634  516D               	movf	?___lmul& (0+255),w,b
 10628  010636  0100               	movlb	0	; () banked
 10629  010638  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 10630  01063A  0100               	movlb	0	; () banked
 10631  01063C  516E               	movf	(?___lmul+1)& (0+255),w,b
 10632  01063E  0100               	movlb	0	; () banked
 10633  010640  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 10634  010642  0100               	movlb	0	; () banked
 10635  010644  516F               	movf	(?___lmul+2)& (0+255),w,b
 10636  010646  0100               	movlb	0	; () banked
 10637  010648  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 10638  01064A  0100               	movlb	0	; () banked
 10639  01064C  5170               	movf	(?___lmul+3)& (0+255),w,b
 10640  01064E  0100               	movlb	0	; () banked
 10641  010650  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 10642                           
 10643                           ;My_RTCC.c: 355: epoch += ((epoch_t)60) * tm->mm;
 10644  010652  0100               	movlb	0	; () banked
 10645  010654  EE20 F005          	lfsr	2,5
 10646  010658  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 10647  01065A  26D9               	addwf	fsr2l,f,c
 10648  01065C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 10649  01065E  22DA               	addwfc	fsr2h,f,c
 10650  010660  50DF               	movf	indf2,w,c
 10651  010662  0100               	movlb	0	; () banked
 10652  010664  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 10653  010666  0100               	movlb	0	; () banked
 10654  010668  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 10655  01066A  0100               	movlb	0	; () banked
 10656  01066C  6F6D               	movwf	___lmul@multiplier& (0+255),b
 10657  01066E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 10658  010670  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 10659  010672  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 10660  010674  0E3C               	movlw	60
 10661  010676  0100               	movlb	0	; () banked
 10662  010678  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10663  01067A  0E00               	movlw	0
 10664  01067C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10665  01067E  0E00               	movlw	0
 10666  010680  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10667  010682  0E00               	movlw	0
 10668  010684  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10669  010686  ECD6  F097         	call	___lmul	;wreg free
 10670  01068A  0100               	movlb	0	; () banked
 10671  01068C  516D               	movf	?___lmul& (0+255),w,b
 10672  01068E  0100               	movlb	0	; () banked
 10673  010690  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 10674  010692  0100               	movlb	0	; () banked
 10675  010694  516E               	movf	(?___lmul+1)& (0+255),w,b
 10676  010696  0100               	movlb	0	; () banked
 10677  010698  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 10678  01069A  0100               	movlb	0	; () banked
 10679  01069C  516F               	movf	(?___lmul+2)& (0+255),w,b
 10680  01069E  0100               	movlb	0	; () banked
 10681  0106A0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 10682  0106A2  0100               	movlb	0	; () banked
 10683  0106A4  5170               	movf	(?___lmul+3)& (0+255),w,b
 10684  0106A6  0100               	movlb	0	; () banked
 10685  0106A8  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 10686                           
 10687                           ; BSR set to: 0
 10688                           ;My_RTCC.c: 356: epoch += tm->ss;
 10689  0106AA  0100               	movlb	0	; () banked
 10690  0106AC  EE20 F004          	lfsr	2,4
 10691  0106B0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 10692  0106B2  26D9               	addwf	fsr2l,f,c
 10693  0106B4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 10694  0106B6  22DA               	addwfc	fsr2h,f,c
 10695  0106B8  50DF               	movf	indf2,w,c
 10696  0106BA  0100               	movlb	0	; () banked
 10697  0106BC  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 10698  0106BE  0100               	movlb	0	; () banked
 10699  0106C0  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 10700  0106C2  0100               	movlb	0	; () banked
 10701  0106C4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 10702  0106C6  0E00               	movlw	0
 10703  0106C8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 10704  0106CA  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 10705  0106CC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;My_RTCC.c: 358: tm->epoch = epoch;
 10709  0106CE  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 10710  0106D2  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 10711  0106D6  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 10712  0106DA  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 10713  0106DE  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 10714  0106E2  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 10715                           
 10716                           ; BSR set to: 0
 10717  0106E6  0012               	return		;funcret
 10718  0106E8                     __end_of_caltime_to_epoch:
 10719                           	opt stack 0
 10720                           tblptru	equ	0xFF8
 10721                           tblptrh	equ	0xFF7
 10722                           tblptrl	equ	0xFF6
 10723                           tablat	equ	0xFF5
 10724                           prodh	equ	0xFF4
 10725                           prodl	equ	0xFF3
 10726                           intcon	equ	0xFF2
 10727                           intcon2	equ	0xFF1
 10728                           indf0	equ	0xFEF
 10729                           postinc0	equ	0xFEE
 10730                           fsr0h	equ	0xFEA
 10731                           fsr0l	equ	0xFE9
 10732                           wreg	equ	0xFE8
 10733                           indf1	equ	0xFE7
 10734                           postinc1	equ	0xFE6
 10735                           postdec1	equ	0xFE5
 10736                           fsr1h	equ	0xFE2
 10737                           fsr1l	equ	0xFE1
 10738                           indf2	equ	0xFDF
 10739                           postinc2	equ	0xFDE
 10740                           postdec2	equ	0xFDD
 10741                           plusw2	equ	0xFDB
 10742                           fsr2h	equ	0xFDA
 10743                           fsr2l	equ	0xFD9
 10744                           status	equ	0xFD8
 10745                           
 10746 ;; *************** function _month_length *****************
 10747 ;; Defined at:
 10748 ;;		line 68 in file "../My_library/My_RTCC.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;  year            1    wreg     unsigned char 
 10751 ;;  month           1    6[BANK0 ] unsigned char 
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;  year            1   11[BANK0 ] unsigned char 
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  1    wreg      unsigned char 
 10756 ;; Registers used:
 10757 ;;		wreg, status,2, status,0, cstack
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10763 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10765 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10766 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10767 ;;Total ram usage:        6 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:   13
 10770 ;; This function calls:
 10771 ;;		___awmod
 10772 ;; This function is called by:
 10773 ;;		_epoch_to_caltime
 10774 ;;		_caltime_to_epoch
 10775 ;;		_RTCC_adjust_time_inc
 10776 ;;		_RTCC_adjust_time_dec
 10777 ;;		_terminal_time
 10778 ;; This function uses a non-reentrant model
 10779 ;;
 10780                           
 10781                           	psect	text55
 10782  011B14                     __ptext55:
 10783                           	opt stack 0
 10784  011B14                     _month_length:
 10785                           	opt stack 13
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;incstack = 0
 10789                           ;month_length@year stored from wreg
 10790  011B14  0100               	movlb	0	; () banked
 10791  011B16  6F6B               	movwf	month_length@year& (0+255),b
 10792                           
 10793                           ;My_RTCC.c: 69: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 10794  011B18  0E02               	movlw	2
 10795  011B1A  0100               	movlb	0	; () banked
 10796  011B1C  1966               	xorwf	month_length@month& (0+255),w,b
 10797  011B1E  A4D8               	btfss	status,2,c
 10798  011B20  D03E               	goto	l8645
 10799                           
 10800                           ; BSR set to: 0
 10801  011B22  C06B  F060         	movff	month_length@year,___awmod@dividend
 10802  011B26  0100               	movlb	0	; () banked
 10803  011B28  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10804  011B2A  0E00               	movlw	0
 10805  011B2C  0100               	movlb	0	; () banked
 10806  011B2E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10807  011B30  0E64               	movlw	100
 10808  011B32  6F62               	movwf	___awmod@divisor& (0+255),b
 10809  011B34  EC9A  F095         	call	___awmod	;wreg free
 10810  011B38  0100               	movlb	0	; () banked
 10811  011B3A  5160               	movf	?___awmod& (0+255),w,b
 10812  011B3C  0100               	movlb	0	; () banked
 10813  011B3E  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 10814  011B40  A4D8               	btfss	status,2,c
 10815  011B42  D002               	goto	u8140
 10816  011B44  0E01               	movlw	1
 10817  011B46  D001               	goto	u8150
 10818  011B48                     u8140:
 10819  011B48  0E00               	movlw	0
 10820  011B4A                     u8150:
 10821  011B4A  0800               	sublw	0
 10822  011B4C  0100               	movlb	0	; () banked
 10823  011B4E  6F67               	movwf	??_month_length& (0+255),b
 10824  011B50  C06B  F060         	movff	month_length@year,___awmod@dividend
 10825  011B54  0100               	movlb	0	; () banked
 10826  011B56  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10827  011B58  0E01               	movlw	1
 10828  011B5A  0100               	movlb	0	; () banked
 10829  011B5C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10830  011B5E  0E90               	movlw	144
 10831  011B60  6F62               	movwf	___awmod@divisor& (0+255),b
 10832  011B62  EC9A  F095         	call	___awmod	;wreg free
 10833  011B66  0100               	movlb	0	; () banked
 10834  011B68  5160               	movf	?___awmod& (0+255),w,b
 10835  011B6A  0100               	movlb	0	; () banked
 10836  011B6C  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 10837  011B6E  A4D8               	btfss	status,2,c
 10838  011B70  D004               	goto	u8160
 10839  011B72  0100               	movlb	0	; () banked
 10840  011B74  6B68               	clrf	(??_month_length+1)& (0+255),b
 10841  011B76  2B68               	incf	(??_month_length+1)& (0+255),f,b
 10842  011B78  D002               	goto	u8178
 10843  011B7A                     u8160:
 10844  011B7A  0100               	movlb	0	; () banked
 10845  011B7C  6B68               	clrf	(??_month_length+1)& (0+255),b
 10846  011B7E                     u8178:
 10847  011B7E  C06B  F069         	movff	month_length@year,??_month_length+2
 10848  011B82  0E03               	movlw	3
 10849  011B84  0100               	movlb	0	; () banked
 10850  011B86  1769               	andwf	(??_month_length+2)& (0+255),f,b
 10851  011B88  A4D8               	btfss	status,2,c
 10852  011B8A  D002               	goto	u8180
 10853  011B8C  0E01               	movlw	1
 10854  011B8E  D001               	goto	u8190
 10855  011B90                     u8180:
 10856  011B90  0E00               	movlw	0
 10857  011B92                     u8190:
 10858  011B92  0100               	movlb	0	; () banked
 10859  011B94  2568               	addwf	(??_month_length+1)& (0+255),w,b
 10860  011B96  0100               	movlb	0	; () banked
 10861  011B98  2567               	addwf	??_month_length& (0+255),w,b
 10862  011B9A  0F1C               	addlw	28
 10863                           
 10864                           ; BSR set to: 0
 10865                           
 10866                           ; BSR set to: 0
 10867  011B9C  0012               	return	
 10868  011B9E                     l8645:
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;My_RTCC.c: 70: else return 31 - (((-(month & 1)^month)&13) == 4);
 10872  011B9E  0100               	movlb	0	; () banked
 10873  011BA0  5166               	movf	month_length@month& (0+255),w,b
 10874  011BA2  0B01               	andlw	1
 10875  011BA4  0100               	movlb	0	; () banked
 10876  011BA6  6F67               	movwf	??_month_length& (0+255),b
 10877  011BA8  6B68               	clrf	(??_month_length+1)& (0+255),b
 10878  011BAA  0100               	movlb	0	; () banked
 10879  011BAC  1F67               	comf	??_month_length& (0+255),f,b
 10880  011BAE  1F68               	comf	(??_month_length+1)& (0+255),f,b
 10881  011BB0  4B67               	infsnz	??_month_length& (0+255),f,b
 10882  011BB2  2B68               	incf	(??_month_length+1)& (0+255),f,b
 10883  011BB4  0100               	movlb	0	; () banked
 10884  011BB6  5166               	movf	month_length@month& (0+255),w,b
 10885  011BB8  0100               	movlb	0	; () banked
 10886  011BBA  6F69               	movwf	(??_month_length+2)& (0+255),b
 10887  011BBC  6B6A               	clrf	(??_month_length+3)& (0+255),b
 10888  011BBE  0100               	movlb	0	; () banked
 10889  011BC0  5167               	movf	??_month_length& (0+255),w,b
 10890  011BC2  0100               	movlb	0	; () banked
 10891  011BC4  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 10892  011BC6  0100               	movlb	0	; () banked
 10893  011BC8  5168               	movf	(??_month_length+1)& (0+255),w,b
 10894  011BCA  0100               	movlb	0	; () banked
 10895  011BCC  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 10896  011BCE  0E0D               	movlw	13
 10897  011BD0  0100               	movlb	0	; () banked
 10898  011BD2  1769               	andwf	(??_month_length+2)& (0+255),f,b
 10899  011BD4  0E00               	movlw	0
 10900  011BD6  176A               	andwf	(??_month_length+3)& (0+255),f,b
 10901  011BD8  0E04               	movlw	4
 10902  011BDA  0100               	movlb	0	; () banked
 10903  011BDC  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 10904  011BDE  0100               	movlb	0	; () banked
 10905  011BE0  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 10906  011BE2  A4D8               	btfss	status,2,c
 10907  011BE4  D002               	goto	u8200
 10908  011BE6  0E01               	movlw	1
 10909  011BE8  D001               	goto	u8210
 10910  011BEA                     u8200:
 10911  011BEA  0E00               	movlw	0
 10912  011BEC                     u8210:
 10913  011BEC  0800               	sublw	0
 10914  011BEE  0F1F               	addlw	31
 10915                           
 10916                           ; BSR set to: 0
 10917  011BF0  0012               	return	
 10918  011BF2                     __end_of_month_length:
 10919                           	opt stack 0
 10920                           tblptru	equ	0xFF8
 10921                           tblptrh	equ	0xFF7
 10922                           tblptrl	equ	0xFF6
 10923                           tablat	equ	0xFF5
 10924                           prodh	equ	0xFF4
 10925                           prodl	equ	0xFF3
 10926                           intcon	equ	0xFF2
 10927                           intcon2	equ	0xFF1
 10928                           indf0	equ	0xFEF
 10929                           postinc0	equ	0xFEE
 10930                           fsr0h	equ	0xFEA
 10931                           fsr0l	equ	0xFE9
 10932                           wreg	equ	0xFE8
 10933                           indf1	equ	0xFE7
 10934                           postinc1	equ	0xFE6
 10935                           postdec1	equ	0xFE5
 10936                           fsr1h	equ	0xFE2
 10937                           fsr1l	equ	0xFE1
 10938                           indf2	equ	0xFDF
 10939                           postinc2	equ	0xFDE
 10940                           postdec2	equ	0xFDD
 10941                           plusw2	equ	0xFDB
 10942                           fsr2h	equ	0xFDA
 10943                           fsr2l	equ	0xFD9
 10944                           status	equ	0xFD8
 10945                           
 10946 ;; *************** function ___awmod *****************
 10947 ;; Defined at:
 10948 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10949 ;; Parameters:    Size  Location     Type
 10950 ;;  dividend        2    0[BANK0 ] int 
 10951 ;;  divisor         2    2[BANK0 ] int 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;  sign            1    5[BANK0 ] unsigned char 
 10954 ;;  counter         1    4[BANK0 ] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  2    0[BANK0 ] int 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10967 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10968 ;;Total ram usage:        6 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:   12
 10971 ;; This function calls:
 10972 ;;		Nothing
 10973 ;; This function is called by:
 10974 ;;		_month_length
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           	psect	text56
 10979  012B34                     __ptext56:
 10980                           	opt stack 0
 10981  012B34                     ___awmod:
 10982                           	opt stack 13
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;incstack = 0
 10986  012B34  0E00               	movlw	0
 10987  012B36  0100               	movlb	0	; () banked
 10988  012B38  6F65               	movwf	___awmod@sign& (0+255),b
 10989                           
 10990                           ; BSR set to: 0
 10991  012B3A  0100               	movlb	0	; () banked
 10992  012B3C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10993  012B3E  D008               	goto	l8561
 10994                           
 10995                           ; BSR set to: 0
 10996  012B40  0100               	movlb	0	; () banked
 10997  012B42  6D60               	negf	___awmod@dividend& (0+255),b
 10998  012B44  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10999  012B46  B0D8               	btfsc	status,0,c
 11000  012B48  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11001                           
 11002                           ; BSR set to: 0
 11003  012B4A  0E01               	movlw	1
 11004  012B4C  0100               	movlb	0	; () banked
 11005  012B4E  6F65               	movwf	___awmod@sign& (0+255),b
 11006  012B50                     l8561:
 11007                           
 11008                           ; BSR set to: 0
 11009  012B50  0100               	movlb	0	; () banked
 11010  012B52  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11011  012B54  D005               	goto	l8565
 11012                           
 11013                           ; BSR set to: 0
 11014  012B56  0100               	movlb	0	; () banked
 11015  012B58  6D62               	negf	___awmod@divisor& (0+255),b
 11016  012B5A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11017  012B5C  B0D8               	btfsc	status,0,c
 11018  012B5E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11019  012B60                     l8565:
 11020                           
 11021                           ; BSR set to: 0
 11022  012B60  0100               	movlb	0	; () banked
 11023  012B62  5162               	movf	___awmod@divisor& (0+255),w,b
 11024  012B64  0100               	movlb	0	; () banked
 11025  012B66  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11026  012B68  B4D8               	btfsc	status,2,c
 11027  012B6A  D026               	goto	l8581
 11028                           
 11029                           ; BSR set to: 0
 11030  012B6C  0E01               	movlw	1
 11031  012B6E  0100               	movlb	0	; () banked
 11032  012B70  6F64               	movwf	___awmod@counter& (0+255),b
 11033  012B72  D006               	goto	l8571
 11034  012B74                     l8569:
 11035                           
 11036                           ; BSR set to: 0
 11037  012B74  0100               	movlb	0	; () banked
 11038  012B76  90D8               	bcf	status,0,c
 11039  012B78  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11040  012B7A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11041  012B7C  0100               	movlb	0	; () banked
 11042  012B7E  2B64               	incf	___awmod@counter& (0+255),f,b
 11043  012B80                     l8571:
 11044                           
 11045                           ; BSR set to: 0
 11046  012B80  0100               	movlb	0	; () banked
 11047  012B82  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11048  012B84  D7F7               	goto	l8569
 11049  012B86                     l8573:
 11050                           
 11051                           ; BSR set to: 0
 11052  012B86  0100               	movlb	0	; () banked
 11053  012B88  5162               	movf	___awmod@divisor& (0+255),w,b
 11054  012B8A  0100               	movlb	0	; () banked
 11055  012B8C  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11056  012B8E  0100               	movlb	0	; () banked
 11057  012B90  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11058  012B92  0100               	movlb	0	; () banked
 11059  012B94  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11060  012B96  A0D8               	btfss	status,0,c
 11061  012B98  D008               	goto	l8577
 11062                           
 11063                           ; BSR set to: 0
 11064  012B9A  0100               	movlb	0	; () banked
 11065  012B9C  5162               	movf	___awmod@divisor& (0+255),w,b
 11066  012B9E  0100               	movlb	0	; () banked
 11067  012BA0  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11068  012BA2  0100               	movlb	0	; () banked
 11069  012BA4  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11070  012BA6  0100               	movlb	0	; () banked
 11071  012BA8  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11072  012BAA                     l8577:
 11073                           
 11074                           ; BSR set to: 0
 11075  012BAA  0100               	movlb	0	; () banked
 11076  012BAC  90D8               	bcf	status,0,c
 11077  012BAE  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11078  012BB0  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11079                           
 11080                           ; BSR set to: 0
 11081  012BB2  0100               	movlb	0	; () banked
 11082  012BB4  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11083  012BB6  D7E7               	goto	l8573
 11084  012BB8                     l8581:
 11085                           
 11086                           ; BSR set to: 0
 11087  012BB8  0100               	movlb	0	; () banked
 11088  012BBA  5165               	movf	___awmod@sign& (0+255),w,b
 11089  012BBC  0100               	movlb	0	; () banked
 11090  012BBE  B4D8               	btfsc	status,2,c
 11091  012BC0  D005               	goto	l8585
 11092                           
 11093                           ; BSR set to: 0
 11094  012BC2  0100               	movlb	0	; () banked
 11095  012BC4  6D60               	negf	___awmod@dividend& (0+255),b
 11096  012BC6  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11097  012BC8  B0D8               	btfsc	status,0,c
 11098  012BCA  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11099  012BCC                     l8585:
 11100                           
 11101                           ; BSR set to: 0
 11102  012BCC  C060  F060         	movff	___awmod@dividend,?___awmod
 11103  012BD0  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11104  012BD4  0012               	return	
 11105  012BD6                     __end_of___awmod:
 11106                           	opt stack 0
 11107                           tblptru	equ	0xFF8
 11108                           tblptrh	equ	0xFF7
 11109                           tblptrl	equ	0xFF6
 11110                           tablat	equ	0xFF5
 11111                           prodh	equ	0xFF4
 11112                           prodl	equ	0xFF3
 11113                           intcon	equ	0xFF2
 11114                           intcon2	equ	0xFF1
 11115                           indf0	equ	0xFEF
 11116                           postinc0	equ	0xFEE
 11117                           fsr0h	equ	0xFEA
 11118                           fsr0l	equ	0xFE9
 11119                           wreg	equ	0xFE8
 11120                           indf1	equ	0xFE7
 11121                           postinc1	equ	0xFE6
 11122                           postdec1	equ	0xFE5
 11123                           fsr1h	equ	0xFE2
 11124                           fsr1l	equ	0xFE1
 11125                           indf2	equ	0xFDF
 11126                           postinc2	equ	0xFDE
 11127                           postdec2	equ	0xFDD
 11128                           plusw2	equ	0xFDB
 11129                           fsr2h	equ	0xFDA
 11130                           fsr2l	equ	0xFD9
 11131                           status	equ	0xFD8
 11132                           
 11133 ;; *************** function ___lmul *****************
 11134 ;; Defined at:
 11135 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;  multiplier      4   13[BANK0 ] unsigned long 
 11138 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  product         4   21[BANK0 ] unsigned long 
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  4   13[BANK0 ] unsigned long 
 11143 ;; Registers used:
 11144 ;;		wreg, status,2, status,0
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11150 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11151 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11153 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11154 ;;Total ram usage:       12 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:   12
 11157 ;; This function calls:
 11158 ;;		Nothing
 11159 ;; This function is called by:
 11160 ;;		_get_quot_rem
 11161 ;;		_caltime_to_epoch
 11162 ;;		_RTCC_adjust_time_inc
 11163 ;;		_RTCC_adjust_time_dec
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text57
 11168  012FAC                     __ptext57:
 11169                           	opt stack 0
 11170  012FAC                     ___lmul:
 11171                           	opt stack 13
 11172                           
 11173                           ; BSR set to: 0
 11174                           ;incstack = 0
 11175  012FAC  0E00               	movlw	0
 11176  012FAE  0100               	movlb	0	; () banked
 11177  012FB0  6F75               	movwf	___lmul@product& (0+255),b
 11178  012FB2  0E00               	movlw	0
 11179  012FB4  6F76               	movwf	(___lmul@product+1)& (0+255),b
 11180  012FB6  0E00               	movlw	0
 11181  012FB8  6F77               	movwf	(___lmul@product+2)& (0+255),b
 11182  012FBA  0E00               	movlw	0
 11183  012FBC  6F78               	movwf	(___lmul@product+3)& (0+255),b
 11184  012FBE                     l8501:
 11185                           
 11186                           ; BSR set to: 0
 11187  012FBE  0100               	movlb	0	; () banked
 11188  012FC0  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 11189  012FC2  D010               	goto	l8505
 11190                           
 11191                           ; BSR set to: 0
 11192  012FC4  0100               	movlb	0	; () banked
 11193  012FC6  5171               	movf	___lmul@multiplicand& (0+255),w,b
 11194  012FC8  0100               	movlb	0	; () banked
 11195  012FCA  2775               	addwf	___lmul@product& (0+255),f,b
 11196  012FCC  0100               	movlb	0	; () banked
 11197  012FCE  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 11198  012FD0  0100               	movlb	0	; () banked
 11199  012FD2  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 11200  012FD4  0100               	movlb	0	; () banked
 11201  012FD6  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 11202  012FD8  0100               	movlb	0	; () banked
 11203  012FDA  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 11204  012FDC  0100               	movlb	0	; () banked
 11205  012FDE  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 11206  012FE0  0100               	movlb	0	; () banked
 11207  012FE2  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 11208  012FE4                     l8505:
 11209                           
 11210                           ; BSR set to: 0
 11211  012FE4  0100               	movlb	0	; () banked
 11212  012FE6  90D8               	bcf	status,0,c
 11213  012FE8  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 11214  012FEA  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 11215  012FEC  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 11216  012FEE  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 11217                           
 11218                           ; BSR set to: 0
 11219  012FF0  0100               	movlb	0	; () banked
 11220  012FF2  90D8               	bcf	status,0,c
 11221  012FF4  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 11222  012FF6  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 11223  012FF8  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 11224  012FFA  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 11225  012FFC  0100               	movlb	0	; () banked
 11226  012FFE  516D               	movf	___lmul@multiplier& (0+255),w,b
 11227  013000  0100               	movlb	0	; () banked
 11228  013002  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 11229  013004  0100               	movlb	0	; () banked
 11230  013006  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 11231  013008  0100               	movlb	0	; () banked
 11232  01300A  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 11233  01300C  A4D8               	btfss	status,2,c
 11234  01300E  D7D7               	goto	l8501
 11235                           
 11236                           ; BSR set to: 0
 11237  013010  C075  F06D         	movff	___lmul@product,?___lmul
 11238  013014  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 11239  013018  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 11240  01301C  C078  F070         	movff	___lmul@product+3,?___lmul+3
 11241                           
 11242                           ; BSR set to: 0
 11243  013020  0012               	return		;funcret
 11244  013022                     __end_of___lmul:
 11245                           	opt stack 0
 11246                           tblptru	equ	0xFF8
 11247                           tblptrh	equ	0xFF7
 11248                           tblptrl	equ	0xFF6
 11249                           tablat	equ	0xFF5
 11250                           prodh	equ	0xFF4
 11251                           prodl	equ	0xFF3
 11252                           intcon	equ	0xFF2
 11253                           intcon2	equ	0xFF1
 11254                           indf0	equ	0xFEF
 11255                           postinc0	equ	0xFEE
 11256                           fsr0h	equ	0xFEA
 11257                           fsr0l	equ	0xFE9
 11258                           wreg	equ	0xFE8
 11259                           indf1	equ	0xFE7
 11260                           postinc1	equ	0xFE6
 11261                           postdec1	equ	0xFE5
 11262                           fsr1h	equ	0xFE2
 11263                           fsr1l	equ	0xFE1
 11264                           indf2	equ	0xFDF
 11265                           postinc2	equ	0xFDE
 11266                           postdec2	equ	0xFDD
 11267                           plusw2	equ	0xFDB
 11268                           fsr2h	equ	0xFDA
 11269                           fsr2l	equ	0xFD9
 11270                           status	equ	0xFD8
 11271                           
 11272 ;; *************** function _RTCC_to_caltime *****************
 11273 ;; Defined at:
 11274 ;;		line 253 in file "../My_library/My_RTCC.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  tm              2    2[BANK0 ] PTR struct .
 11277 ;;		 -> now(14), 
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;  dumy            1    4[BANK0 ] unsigned char 
 11280 ;; Return value:  Size  Location     Type
 11281 ;;		None               void
 11282 ;; Registers used:
 11283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11284 ;; Tracked objects:
 11285 ;;		On entry : 0/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11289 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;Total ram usage:        3 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:   13
 11296 ;; This function calls:
 11297 ;;		_x_to_d
 11298 ;; This function is called by:
 11299 ;;		_RTCC_from_RTCC
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303                           	psect	text58
 11304  012646                     __ptext58:
 11305                           	opt stack 0
 11306  012646                     _RTCC_to_caltime:
 11307                           	opt stack 14
 11308  012646                     l611:
 11309  012646  010F               	movlb	15	; () banked
 11310  012648  B93F               	btfsc	63,4,b	;volatile
 11311  01264A  D7FD               	goto	l611
 11312                           
 11313                           ; BSR set to: 15
 11314                           ;My_RTCC.c: 256: RTCCFGbits.RTCPTR0 = 1;
 11315  01264C  010F               	movlb	15	; () banked
 11316  01264E  813F               	bsf	63,0,b	;volatile
 11317                           
 11318                           ;My_RTCC.c: 257: RTCCFGbits.RTCPTR1 = 1;
 11319  012650  010F               	movlb	15	; () banked
 11320  012652  833F               	bsf	63,1,b	;volatile
 11321                           
 11322                           ; BSR set to: 15
 11323                           ;My_RTCC.c: 259: tm->YY = x_to_d(RTCVALL);
 11324  012654  0100               	movlb	0	; () banked
 11325  012656  EE20 F00A          	lfsr	2,10
 11326  01265A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11327  01265C  26D9               	addwf	fsr2l,f,c
 11328  01265E  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11329  012660  22DA               	addwfc	fsr2h,f,c
 11330  012662  010F               	movlb	15	; () banked
 11331  012664  513A               	movf	58,w,b	;volatile
 11332  012666  EC60  F09C         	call	_x_to_d
 11333  01266A  6EDF               	movwf	indf2,c
 11334                           
 11335                           ;My_RTCC.c: 260: uint8_t dumy = RTCVALH;
 11336  01266C  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 11337                           
 11338                           ;My_RTCC.c: 261: tm->DD = x_to_d(RTCVALL);
 11339  012670  0100               	movlb	0	; () banked
 11340  012672  EE20 F008          	lfsr	2,8
 11341  012676  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11342  012678  26D9               	addwf	fsr2l,f,c
 11343  01267A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11344  01267C  22DA               	addwfc	fsr2h,f,c
 11345  01267E  010F               	movlb	15	; () banked
 11346  012680  513A               	movf	58,w,b	;volatile
 11347  012682  EC60  F09C         	call	_x_to_d
 11348  012686  6EDF               	movwf	indf2,c
 11349                           
 11350                           ;My_RTCC.c: 262: tm->MM = x_to_d(RTCVALH);
 11351  012688  0100               	movlb	0	; () banked
 11352  01268A  EE20 F009          	lfsr	2,9
 11353  01268E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11354  012690  26D9               	addwf	fsr2l,f,c
 11355  012692  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11356  012694  22DA               	addwfc	fsr2h,f,c
 11357  012696  010F               	movlb	15	; () banked
 11358  012698  513B               	movf	59,w,b	;volatile
 11359  01269A  EC60  F09C         	call	_x_to_d
 11360  01269E  6EDF               	movwf	indf2,c
 11361                           
 11362                           ;My_RTCC.c: 263: tm->hh = x_to_d(RTCVALL);
 11363  0126A0  0100               	movlb	0	; () banked
 11364  0126A2  EE20 F006          	lfsr	2,6
 11365  0126A6  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11366  0126A8  26D9               	addwf	fsr2l,f,c
 11367  0126AA  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11368  0126AC  22DA               	addwfc	fsr2h,f,c
 11369  0126AE  010F               	movlb	15	; () banked
 11370  0126B0  513A               	movf	58,w,b	;volatile
 11371  0126B2  EC60  F09C         	call	_x_to_d
 11372  0126B6  6EDF               	movwf	indf2,c
 11373                           
 11374                           ;My_RTCC.c: 264: tm->EE = x_to_d(RTCVALH);
 11375  0126B8  0100               	movlb	0	; () banked
 11376  0126BA  EE20 F007          	lfsr	2,7
 11377  0126BE  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11378  0126C0  26D9               	addwf	fsr2l,f,c
 11379  0126C2  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11380  0126C4  22DA               	addwfc	fsr2h,f,c
 11381  0126C6  010F               	movlb	15	; () banked
 11382  0126C8  513B               	movf	59,w,b	;volatile
 11383  0126CA  EC60  F09C         	call	_x_to_d
 11384  0126CE  6EDF               	movwf	indf2,c
 11385                           
 11386                           ;My_RTCC.c: 265: tm->ss = x_to_d(RTCVALL);
 11387  0126D0  0100               	movlb	0	; () banked
 11388  0126D2  EE20 F004          	lfsr	2,4
 11389  0126D6  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11390  0126D8  26D9               	addwf	fsr2l,f,c
 11391  0126DA  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11392  0126DC  22DA               	addwfc	fsr2h,f,c
 11393  0126DE  010F               	movlb	15	; () banked
 11394  0126E0  513A               	movf	58,w,b	;volatile
 11395  0126E2  EC60  F09C         	call	_x_to_d
 11396  0126E6  6EDF               	movwf	indf2,c
 11397                           
 11398                           ;My_RTCC.c: 266: tm->mm = x_to_d(RTCVALH);
 11399  0126E8  0100               	movlb	0	; () banked
 11400  0126EA  EE20 F005          	lfsr	2,5
 11401  0126EE  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11402  0126F0  26D9               	addwf	fsr2l,f,c
 11403  0126F2  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11404  0126F4  22DA               	addwfc	fsr2h,f,c
 11405  0126F6  010F               	movlb	15	; () banked
 11406  0126F8  513B               	movf	59,w,b	;volatile
 11407  0126FA  EC60  F09C         	call	_x_to_d
 11408  0126FE  6EDF               	movwf	indf2,c
 11409  012700  0012               	return		;funcret
 11410  012702                     __end_of_RTCC_to_caltime:
 11411                           	opt stack 0
 11412                           tblptru	equ	0xFF8
 11413                           tblptrh	equ	0xFF7
 11414                           tblptrl	equ	0xFF6
 11415                           tablat	equ	0xFF5
 11416                           prodh	equ	0xFF4
 11417                           prodl	equ	0xFF3
 11418                           intcon	equ	0xFF2
 11419                           intcon2	equ	0xFF1
 11420                           indf0	equ	0xFEF
 11421                           postinc0	equ	0xFEE
 11422                           fsr0h	equ	0xFEA
 11423                           fsr0l	equ	0xFE9
 11424                           wreg	equ	0xFE8
 11425                           indf1	equ	0xFE7
 11426                           postinc1	equ	0xFE6
 11427                           postdec1	equ	0xFE5
 11428                           fsr1h	equ	0xFE2
 11429                           fsr1l	equ	0xFE1
 11430                           indf2	equ	0xFDF
 11431                           postinc2	equ	0xFDE
 11432                           postdec2	equ	0xFDD
 11433                           plusw2	equ	0xFDB
 11434                           fsr2h	equ	0xFDA
 11435                           fsr2l	equ	0xFD9
 11436                           status	equ	0xFD8
 11437                           
 11438 ;; *************** function _x_to_d *****************
 11439 ;; Defined at:
 11440 ;;		line 240 in file "../My_library/My_RTCC.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;  hex             1    wreg     unsigned char 
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;  hex             1    1[BANK0 ] unsigned char 
 11445 ;; Return value:  Size  Location     Type
 11446 ;;                  1    wreg      unsigned char 
 11447 ;; Registers used:
 11448 ;;		wreg, status,2, status,0, prodl, prodh
 11449 ;; Tracked objects:
 11450 ;;		On entry : 0/0
 11451 ;;		On exit  : 0/0
 11452 ;;		Unchanged: 0/0
 11453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11456 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11457 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11458 ;;Total ram usage:        2 bytes
 11459 ;; Hardware stack levels used:    1
 11460 ;; Hardware stack levels required when called:   12
 11461 ;; This function calls:
 11462 ;;		Nothing
 11463 ;; This function is called by:
 11464 ;;		_RTCC_to_caltime
 11465 ;; This function uses a non-reentrant model
 11466 ;;
 11467                           
 11468                           	psect	text59
 11469  0138C0                     __ptext59:
 11470                           	opt stack 0
 11471  0138C0                     _x_to_d:
 11472                           	opt stack 14
 11473                           
 11474                           ;incstack = 0
 11475                           ;x_to_d@hex stored from wreg
 11476  0138C0  0100               	movlb	0	; () banked
 11477  0138C2  6F61               	movwf	x_to_d@hex& (0+255),b
 11478                           
 11479                           ;My_RTCC.c: 241: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 11480  0138C4  C061  F060         	movff	x_to_d@hex,??_x_to_d
 11481  0138C8  0E0F               	movlw	15
 11482  0138CA  0100               	movlb	0	; () banked
 11483  0138CC  1760               	andwf	??_x_to_d& (0+255),f,b
 11484  0138CE  0100               	movlb	0	; () banked
 11485  0138D0  3961               	swapf	x_to_d@hex& (0+255),w,b
 11486  0138D2  0B0F               	andlw	15
 11487  0138D4  0B0F               	andlw	15
 11488  0138D6  0D0A               	mullw	10
 11489  0138D8  50F3               	movf	prodl,w,c
 11490  0138DA  0100               	movlb	0	; () banked
 11491  0138DC  2560               	addwf	??_x_to_d& (0+255),w,b
 11492  0138DE  0012               	return	
 11493  0138E0                     __end_of_x_to_d:
 11494                           	opt stack 0
 11495                           tblptru	equ	0xFF8
 11496                           tblptrh	equ	0xFF7
 11497                           tblptrl	equ	0xFF6
 11498                           tablat	equ	0xFF5
 11499                           prodh	equ	0xFF4
 11500                           prodl	equ	0xFF3
 11501                           intcon	equ	0xFF2
 11502                           intcon2	equ	0xFF1
 11503                           indf0	equ	0xFEF
 11504                           postinc0	equ	0xFEE
 11505                           fsr0h	equ	0xFEA
 11506                           fsr0l	equ	0xFE9
 11507                           wreg	equ	0xFE8
 11508                           indf1	equ	0xFE7
 11509                           postinc1	equ	0xFE6
 11510                           postdec1	equ	0xFE5
 11511                           fsr1h	equ	0xFE2
 11512                           fsr1l	equ	0xFE1
 11513                           indf2	equ	0xFDF
 11514                           postinc2	equ	0xFDE
 11515                           postdec2	equ	0xFDD
 11516                           plusw2	equ	0xFDB
 11517                           fsr2h	equ	0xFDA
 11518                           fsr2l	equ	0xFD9
 11519                           status	equ	0xFD8
 11520                           
 11521 ;; *************** function _ISR *****************
 11522 ;; Defined at:
 11523 ;;		line 44 in file "main.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;		None
 11526 ;; Auto vars:     Size  Location     Type
 11527 ;;		None
 11528 ;; Return value:  Size  Location     Type
 11529 ;;		None               void
 11530 ;; Registers used:
 11531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11532 ;; Tracked objects:
 11533 ;;		On entry : 0/0
 11534 ;;		On exit  : 0/0
 11535 ;;		Unchanged: 0/0
 11536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11539 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11540 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11541 ;;Total ram usage:       15 bytes
 11542 ;; Hardware stack levels used:    1
 11543 ;; Hardware stack levels required when called:   11
 11544 ;; This function calls:
 11545 ;;		_UART_ISR
 11546 ;;		_USB_CDC_ISR
 11547 ;; This function is called by:
 11548 ;;		Interrupt level 2
 11549 ;; This function uses a non-reentrant model
 11550 ;;
 11551                           
 11552                           	psect	intcode
 11553  001008                     __pintcode:
 11554                           	opt stack 0
 11555  001008                     _ISR:
 11556                           	opt stack 13
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;incstack = 0
 11560  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11561  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 11562  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 11563  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 11564  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 11565  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 11566  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 11567  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 11568  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 11569  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 11570  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 11571  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 11572  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 11573  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 11574  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 11575                           
 11576                           ;main.c: 45: USB_CDC_ISR();
 11577  001042  ECCE  F09C         	call	_USB_CDC_ISR	;wreg free
 11578                           
 11579                           ;main.c: 46: UART_ISR();
 11580  001046  EC10  F09A         	call	_UART_ISR	;wreg free
 11581                           
 11582                           ;main.c: 47: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 11583  00104A  B4F2               	btfsc	intcon,2,c	;volatile
 11584  00104C  AAF2               	btfss	intcon,5,c	;volatile
 11585  00104E  D001               	goto	i2l87
 11586                           
 11587                           ;main.c: 48: INTCONbits.T0IF = 0;
 11588  001050  94F2               	bcf	intcon,2,c	;volatile
 11589  001052                     i2l87:
 11590                           
 11591                           ;main.c: 49: }
 11592                           ;main.c: 50: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 11593  001052  B09E               	btfsc	3998,0,c	;volatile
 11594  001054  A09D               	btfss	3997,0,c	;volatile
 11595  001056  D00E               	goto	i2l7765
 11596                           
 11597                           ;main.c: 51: PIR1bits.TMR1IF = 0;
 11598  001058  909E               	bcf	3998,0,c	;volatile
 11599                           
 11600                           ;main.c: 52: TMR1H = 0xC0;
 11601  00105A  0EC0               	movlw	192
 11602  00105C  6ECF               	movwf	4047,c	;volatile
 11603                           
 11604                           ;main.c: 53: LATAbits.LATA0 = !LATAbits.LATA0;
 11605  00105E  B089               	btfsc	3977,0,c	;volatile
 11606  001060  D003               	goto	i2u697_40
 11607  001062  6A4C               	clrf	??_ISR& (0+255),c
 11608  001064  2A4C               	incf	??_ISR& (0+255),f,c
 11609  001066  D001               	goto	i2u698_48
 11610  001068                     i2u697_40:
 11611  001068  6A4C               	clrf	??_ISR& (0+255),c
 11612  00106A                     i2u698_48:
 11613  00106A  5089               	movf	3977,w,c	;volatile
 11614  00106C  184C               	xorwf	??_ISR,w,c
 11615  00106E  0BFE               	andlw	-2
 11616  001070  184C               	xorwf	??_ISR,w,c
 11617  001072  6E89               	movwf	3977,c	;volatile
 11618  001074                     i2l7765:
 11619                           
 11620                           ;main.c: 54: }
 11621                           ;main.c: 55: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 11622  001074  B2A1               	btfsc	4001,1,c	;volatile
 11623  001076  A2A0               	btfss	4000,1,c	;volatile
 11624  001078  D001               	goto	i2l90
 11625                           
 11626                           ;main.c: 56: PIR2bits.TMR3IF = 0;
 11627  00107A  92A1               	bcf	4001,1,c	;volatile
 11628  00107C                     i2l90:
 11629  00107C  C05A  FFF5         	movff	??_ISR+14,tablat
 11630  001080  C059  FFF8         	movff	??_ISR+13,tblptru
 11631  001084  C058  FFF7         	movff	??_ISR+12,tblptrh
 11632  001088  C057  FFF6         	movff	??_ISR+11,tblptrl
 11633  00108C  C056  FFF4         	movff	??_ISR+10,prodh
 11634  001090  C055  FFF3         	movff	??_ISR+9,prodl
 11635  001094  C054  FFDA         	movff	??_ISR+8,fsr2h
 11636  001098  C053  FFD9         	movff	??_ISR+7,fsr2l
 11637  00109C  C052  FFE2         	movff	??_ISR+6,fsr1h
 11638  0010A0  C051  FFE1         	movff	??_ISR+5,fsr1l
 11639  0010A4  C050  FFEA         	movff	??_ISR+4,fsr0h
 11640  0010A8  C04F  FFE9         	movff	??_ISR+3,fsr0l
 11641  0010AC  C04E  FFFB         	movff	??_ISR+2,pclatu
 11642  0010B0  C04D  FFFA         	movff	??_ISR+1,pclath
 11643  0010B4  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11644  0010B6  0011               	retfie		f
 11645  0010B8                     __end_of_ISR:
 11646                           	opt stack 0
 11647                           pclatu	equ	0xFFB
 11648                           pclath	equ	0xFFA
 11649                           tblptru	equ	0xFF8
 11650                           tblptrh	equ	0xFF7
 11651                           tblptrl	equ	0xFF6
 11652                           tablat	equ	0xFF5
 11653                           prodh	equ	0xFF4
 11654                           prodl	equ	0xFF3
 11655                           intcon	equ	0xFF2
 11656                           intcon2	equ	0xFF1
 11657                           indf0	equ	0xFEF
 11658                           postinc0	equ	0xFEE
 11659                           fsr0h	equ	0xFEA
 11660                           fsr0l	equ	0xFE9
 11661                           wreg	equ	0xFE8
 11662                           indf1	equ	0xFE7
 11663                           postinc1	equ	0xFE6
 11664                           postdec1	equ	0xFE5
 11665                           fsr1h	equ	0xFE2
 11666                           fsr1l	equ	0xFE1
 11667                           indf2	equ	0xFDF
 11668                           postinc2	equ	0xFDE
 11669                           postdec2	equ	0xFDD
 11670                           plusw2	equ	0xFDB
 11671                           fsr2h	equ	0xFDA
 11672                           fsr2l	equ	0xFD9
 11673                           status	equ	0xFD8
 11674                           
 11675 ;; *************** function _USB_CDC_ISR *****************
 11676 ;; Defined at:
 11677 ;;		line 33 in file "../My_library/My_USB_CDC.c"
 11678 ;; Parameters:    Size  Location     Type
 11679 ;;		None
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;		None
 11682 ;; Return value:  Size  Location     Type
 11683 ;;		None               void
 11684 ;; Registers used:
 11685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11695 ;;Total ram usage:        0 bytes
 11696 ;; Hardware stack levels used:    1
 11697 ;; Hardware stack levels required when called:   10
 11698 ;; This function calls:
 11699 ;;		_USBDeviceTasks
 11700 ;; This function is called by:
 11701 ;;		_ISR
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text61
 11706  01399C                     __ptext61:
 11707                           	opt stack 0
 11708  01399C                     _USB_CDC_ISR:
 11709                           	opt stack 13
 11710                           
 11711                           ;My_USB_CDC.c: 35: USBDeviceTasks();
 11712                           
 11713                           ;incstack = 0
 11714  01399C  ECD7  F088         	call	_USBDeviceTasks	;wreg free
 11715  0139A0  0012               	return		;funcret
 11716  0139A2                     __end_of_USB_CDC_ISR:
 11717                           	opt stack 0
 11718                           pclatu	equ	0xFFB
 11719                           pclath	equ	0xFFA
 11720                           tblptru	equ	0xFF8
 11721                           tblptrh	equ	0xFF7
 11722                           tblptrl	equ	0xFF6
 11723                           tablat	equ	0xFF5
 11724                           prodh	equ	0xFF4
 11725                           prodl	equ	0xFF3
 11726                           intcon	equ	0xFF2
 11727                           intcon2	equ	0xFF1
 11728                           indf0	equ	0xFEF
 11729                           postinc0	equ	0xFEE
 11730                           fsr0h	equ	0xFEA
 11731                           fsr0l	equ	0xFE9
 11732                           wreg	equ	0xFE8
 11733                           indf1	equ	0xFE7
 11734                           postinc1	equ	0xFE6
 11735                           postdec1	equ	0xFE5
 11736                           fsr1h	equ	0xFE2
 11737                           fsr1l	equ	0xFE1
 11738                           indf2	equ	0xFDF
 11739                           postinc2	equ	0xFDE
 11740                           postdec2	equ	0xFDD
 11741                           plusw2	equ	0xFDB
 11742                           fsr2h	equ	0xFDA
 11743                           fsr2l	equ	0xFD9
 11744                           status	equ	0xFD8
 11745                           
 11746 ;; *************** function _USBDeviceTasks *****************
 11747 ;; Defined at:
 11748 ;;		line 490 in file "../My_library/usb/usb_device.c"
 11749 ;; Parameters:    Size  Location     Type
 11750 ;;		None
 11751 ;; Auto vars:     Size  Location     Type
 11752 ;;  i               1   29[COMRAM] unsigned char 
 11753 ;; Return value:  Size  Location     Type
 11754 ;;		None               void
 11755 ;; Registers used:
 11756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11757 ;; Tracked objects:
 11758 ;;		On entry : 0/0
 11759 ;;		On exit  : 0/0
 11760 ;;		Unchanged: 0/0
 11761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11766 ;;Total ram usage:        1 bytes
 11767 ;; Hardware stack levels used:    1
 11768 ;; Hardware stack levels required when called:    9
 11769 ;; This function calls:
 11770 ;;		_USBCtrlEPAllowStatusStage
 11771 ;;		_USBCtrlEPService
 11772 ;;		_USBStallHandler
 11773 ;;		_USBSuspend
 11774 ;;		_USBWakeFromSuspend
 11775 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11776 ;;		i2_USBDeviceInit
 11777 ;; This function is called by:
 11778 ;;		_USB_CDC_ISR
 11779 ;; This function uses a non-reentrant model
 11780 ;;
 11781                           
 11782                           	psect	text62
 11783  0111AE                     __ptext62:
 11784                           	opt stack 0
 11785  0111AE                     _USBDeviceTasks:
 11786                           	opt stack 13
 11787                           
 11788                           ;usb_device.c: 492: uint8_t i;
 11789                           ;usb_device.c: 603: if(USBDeviceState == ATTACHED_STATE)
 11790                           
 11791                           ;incstack = 0
 11792  0111AE  0100               	movlb	0	; () banked
 11793  0111B0  05BB               	decf	_USBDeviceState& (0+255),w,b	;volatile
 11794  0111B2  B4D8               	btfsc	status,2,c
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;usb_device.c: 604: {
 11798                           ;usb_device.c: 614: if(!UCONbits.SE0)
 11799  0111B4  BA65               	btfsc	3941,5,c	;volatile
 11800  0111B6  D009               	goto	i2l7291
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;usb_device.c: 615: {
 11804                           ;usb_device.c: 616: {UIR = 0;};
 11805  0111B8  0E00               	movlw	0
 11806  0111BA  6E62               	movwf	3938,c	;volatile
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;usb_device.c: 620: UIEbits.URSTIE = 1;
 11810  0111BC  010F               	movlb	15	; () banked
 11811  0111BE  8136               	bsf	54,0,b	;volatile
 11812                           
 11813                           ; BSR set to: 15
 11814                           ;usb_device.c: 621: UIEbits.IDLEIE = 1;
 11815  0111C0  010F               	movlb	15	; () banked
 11816  0111C2  8936               	bsf	54,4,b	;volatile
 11817                           
 11818                           ;usb_device.c: 622: USBDeviceState = POWERED_STATE;
 11819  0111C4  0E02               	movlw	2
 11820  0111C6  0100               	movlb	0	; () banked
 11821  0111C8  6FBB               	movwf	_USBDeviceState& (0+255),b	;volatile
 11822  0111CA                     i2l7291:
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;usb_device.c: 623: }
 11826                           ;usb_device.c: 624: }
 11827                           ;usb_device.c: 640: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 11828  0111CA  A462               	btfss	3938,2,c	;volatile
 11829  0111CC  D006               	goto	i2l7299
 11830                           
 11831                           ; BSR set to: 0
 11832  0111CE  010F               	movlb	15	; () banked
 11833  0111D0  A536               	btfss	54,2,b	;volatile
 11834  0111D2  D003               	goto	i2l7299
 11835                           
 11836                           ; BSR set to: 15
 11837                           ;usb_device.c: 641: {
 11838                           ;usb_device.c: 642: (UIR &= 0xFB);
 11839  0111D4  9462               	bcf	3938,2,c	;volatile
 11840                           
 11841                           ; BSR set to: 15
 11842                           ;usb_device.c: 646: USBWakeFromSuspend();
 11843  0111D6  EC3C  F09B         	call	_USBWakeFromSuspend	;wreg free
 11844  0111DA                     i2l7299:
 11845                           
 11846                           ;usb_device.c: 648: }
 11847                           ;usb_device.c: 653: if(UCONbits.SUSPND==1)
 11848  0111DA  A265               	btfss	3941,1,c	;volatile
 11849  0111DC  D002               	goto	i2l1229
 11850                           
 11851                           ;usb_device.c: 654: {
 11852                           ;usb_device.c: 655: {PIR2bits.USBIF = 0;};
 11853  0111DE  98A1               	bcf	4001,4,c	;volatile
 11854                           
 11855                           ;usb_device.c: 656: return;
 11856  0111E0  0012               	return	
 11857  0111E2                     i2l1229:
 11858                           
 11859                           ;usb_device.c: 657: }
 11860                           ;usb_device.c: 669: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11861  0111E2  A062               	btfss	3938,0,c	;volatile
 11862  0111E4  D00A               	goto	i2l7313
 11863  0111E6  010F               	movlb	15	; () banked
 11864  0111E8  A136               	btfss	54,0,b	;volatile
 11865  0111EA  D007               	goto	i2l7313
 11866                           
 11867                           ; BSR set to: 15
 11868                           ;usb_device.c: 670: {
 11869                           ;usb_device.c: 671: USBDeviceInit();
 11870  0111EC  EC7D  F089         	call	i2_USBDeviceInit	;wreg free
 11871                           
 11872                           ;usb_device.c: 675: {PIE2bits.USBIE = 1;};
 11873  0111F0  88A0               	bsf	4000,4,c	;volatile
 11874                           
 11875                           ;usb_device.c: 677: USBDeviceState = DEFAULT_STATE;
 11876  0111F2  0E04               	movlw	4
 11877  0111F4  0100               	movlb	0	; () banked
 11878  0111F6  6FBB               	movwf	_USBDeviceState& (0+255),b	;volatile
 11879                           
 11880                           ; BSR set to: 0
 11881                           ;usb_device.c: 687: (UIR &= 0xFE);
 11882  0111F8  9062               	bcf	3938,0,c	;volatile
 11883  0111FA                     i2l7313:
 11884                           
 11885                           ;usb_device.c: 688: }
 11886                           ;usb_device.c: 693: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11887  0111FA  A862               	btfss	3938,4,c	;volatile
 11888  0111FC  D006               	goto	i2l7321
 11889  0111FE  010F               	movlb	15	; () banked
 11890  011200  A936               	btfss	54,4,b	;volatile
 11891  011202  D003               	goto	i2l7321
 11892                           
 11893                           ; BSR set to: 15
 11894                           ;usb_device.c: 694: {
 11895                           ;usb_device.c: 699: USBSuspend();
 11896  011204  ECAF  F09B         	call	_USBSuspend	;wreg free
 11897                           
 11898                           ;usb_device.c: 702: (UIR &= 0xEF);
 11899  011208  9862               	bcf	3938,4,c	;volatile
 11900  01120A                     i2l7321:
 11901                           
 11902                           ;usb_device.c: 703: }
 11903                           ;usb_device.c: 705: if(UIRbits.SOFIF)
 11904  01120A  AC62               	btfss	3938,6,c	;volatile
 11905  01120C  D019               	goto	i2l7337
 11906                           
 11907                           ;usb_device.c: 706: {
 11908                           ;usb_device.c: 707: if(UIEbits.SOFIE)
 11909  01120E  010F               	movlb	15	; () banked
 11910  011210  AD36               	btfss	54,6,b	;volatile
 11911  011212  D00E               	goto	i2l7327
 11912                           
 11913                           ; BSR set to: 15
 11914                           ;usb_device.c: 708: {
 11915                           ;usb_device.c: 709: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11916  011214  0E00               	movlw	0
 11917  011216  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11918  011218  0E73               	movlw	115
 11919  01121A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11920  01121C  0E00               	movlw	0
 11921  01121E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11922  011220  0E00               	movlw	0
 11923  011222  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11924  011224  0E00               	movlw	0
 11925  011226  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11926  011228  0E01               	movlw	1
 11927  01122A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11928  01122C  EC14  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11929  011230                     i2l7327:
 11930                           
 11931                           ;usb_device.c: 710: }
 11932                           ;usb_device.c: 711: (UIR &= 0xBF);
 11933  011230  9C62               	bcf	3938,6,c	;volatile
 11934                           
 11935                           ;usb_device.c: 736: if(USBStatusStageTimeoutCounter != 0u)
 11936  011232  5028               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 11937  011234  A4D8               	btfss	status,2,c
 11938                           
 11939                           ;usb_device.c: 737: {
 11940                           ;usb_device.c: 738: USBStatusStageTimeoutCounter--;
 11941  011236  0628               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 11942                           
 11943                           ;usb_device.c: 739: }
 11944                           ;usb_device.c: 745: if(USBStatusStageTimeoutCounter == 0)
 11945  011238  5028               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 11946  01123A  B4D8               	btfsc	status,2,c
 11947                           
 11948                           ;usb_device.c: 746: {
 11949                           ;usb_device.c: 747: USBCtrlEPAllowStatusStage();
 11950  01123C  EC48  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11951  011240                     i2l7337:
 11952                           
 11953                           ;usb_device.c: 748: }
 11954                           ;usb_device.c: 750: }
 11955                           ;usb_device.c: 752: if(UIRbits.STALLIF && UIEbits.STALLIE)
 11956  011240  AA62               	btfss	3938,5,c	;volatile
 11957  011242  D004               	goto	i2l7343
 11958  011244  010F               	movlb	15	; () banked
 11959  011246  BB36               	btfsc	54,5,b	;volatile
 11960                           
 11961                           ; BSR set to: 15
 11962                           ;usb_device.c: 753: {
 11963                           ;usb_device.c: 754: USBStallHandler();
 11964  011248  EC35  F09A         	call	_USBStallHandler	;wreg free
 11965  01124C                     i2l7343:
 11966                           
 11967                           ;usb_device.c: 755: }
 11968                           ;usb_device.c: 757: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11969  01124C  A262               	btfss	3938,1,c	;volatile
 11970  01124E  D012               	goto	i2l7351
 11971  011250  010F               	movlb	15	; () banked
 11972  011252  A336               	btfss	54,1,b	;volatile
 11973  011254  D00F               	goto	i2l7351
 11974                           
 11975                           ; BSR set to: 15
 11976                           ;usb_device.c: 758: {
 11977                           ;usb_device.c: 759: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 11978  011256  0E7F               	movlw	127
 11979  011258  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11980  01125A  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11981  01125C  0E00               	movlw	0
 11982  01125E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11983  011260  0E00               	movlw	0
 11984  011262  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11985  011264  0E00               	movlw	0
 11986  011266  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11987  011268  0E01               	movlw	1
 11988  01126A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11989  01126C  EC14  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11990                           
 11991                           ;usb_device.c: 760: {UEIR = 0;};
 11992  011270  0E00               	movlw	0
 11993  011272  6E63               	movwf	3939,c	;volatile
 11994  011274                     i2l7351:
 11995                           
 11996                           ;usb_device.c: 768: }
 11997                           ;usb_device.c: 775: if(USBDeviceState < DEFAULT_STATE)
 11998  011274  0E04               	movlw	4
 11999  011276  0100               	movlb	0	; () banked
 12000  011278  61BB               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 12001  01127A  D002               	goto	i2l1239
 12002                           
 12003                           ; BSR set to: 0
 12004                           ;usb_device.c: 776: {
 12005                           ;usb_device.c: 777: {PIR2bits.USBIF = 0;};
 12006  01127C  98A1               	bcf	4001,4,c	;volatile
 12007                           
 12008                           ;usb_device.c: 778: return;
 12009  01127E  0012               	return	
 12010  011280                     i2l1239:
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;usb_device.c: 779: }
 12014                           ;usb_device.c: 784: if(UIEbits.TRNIE)
 12015  011280  010F               	movlb	15	; () banked
 12016  011282  A736               	btfss	54,3,b	;volatile
 12017  011284  D038               	goto	i2l1240
 12018                           
 12019                           ; BSR set to: 15
 12020                           ;usb_device.c: 785: {
 12021                           ;usb_device.c: 786: for(i = 0; i < 4u; i++)
 12022  011286  0E00               	movlw	0
 12023  011288  6E4B               	movwf	USBDeviceTasks@i,c
 12024  01128A                     i2l7357:
 12025                           
 12026                           ; BSR set to: 15
 12027  01128A  0E03               	movlw	3
 12028  01128C  644B               	cpfsgt	USBDeviceTasks@i,c
 12029  01128E  D001               	goto	i2l1241
 12030  011290  D032               	goto	i2l1240
 12031  011292                     i2l1241:
 12032                           
 12033                           ;usb_device.c: 787: {
 12034                           ;usb_device.c: 788: if(UIRbits.TRNIF)
 12035  011292  A662               	btfss	3938,3,c	;volatile
 12036  011294  D030               	goto	i2l1240
 12037                           
 12038                           ;usb_device.c: 789: {
 12039                           ;usb_device.c: 791: USTATcopy.Val = USTAT;
 12040  011296  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 12041                           
 12042                           ;usb_device.c: 792: endpoint_number = USTATcopy.endpoint_number;
 12043  01129A  302D               	rrcf	_USTATcopy,w,c	;volatile
 12044  01129C  32E8               	rrcf	wreg,f,c
 12045  01129E  32E8               	rrcf	wreg,f,c
 12046  0112A0  0B0F               	andlw	15
 12047  0112A2  6E2A               	movwf	_endpoint_number,c	;volatile
 12048                           
 12049                           ;usb_device.c: 794: (UIR &= 0xF7);
 12050  0112A4  9662               	bcf	3938,3,c	;volatile
 12051                           
 12052                           ;usb_device.c: 799: if(USTATcopy.direction == 0)
 12053  0112A6  B42D               	btfsc	_USTATcopy,2,c	;volatile
 12054  0112A8  D007               	goto	i2l7371
 12055                           
 12056                           ;usb_device.c: 800: {
 12057                           ;usb_device.c: 801: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 12058  0112AA  502A               	movf	_endpoint_number,w,c	;volatile
 12059  0112AC  0D01               	mullw	1
 12060  0112AE  0E19               	movlw	low _ep_data_out
 12061  0112B0  24F3               	addwf	prodl,w,c
 12062  0112B2  6ED9               	movwf	fsr2l,c
 12063  0112B4  0E00               	movlw	high _ep_data_out
 12064  0112B6  D006               	goto	L4
 12065  0112B8                     i2l7371:
 12066                           
 12067                           ;usb_device.c: 803: else
 12068                           ;usb_device.c: 804: {
 12069                           ;usb_device.c: 805: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 12070  0112B8  502A               	movf	_endpoint_number,w,c	;volatile
 12071  0112BA  0D01               	mullw	1
 12072  0112BC  0E16               	movlw	low _ep_data_in
 12073  0112BE  24F3               	addwf	prodl,w,c
 12074  0112C0  6ED9               	movwf	fsr2l,c
 12075  0112C2  0E00               	movlw	high _ep_data_in
 12076  0112C4                     L4:
 12077  0112C4  20F4               	addwfc	prodh,w,c
 12078  0112C6  6EDA               	movwf	fsr2h,c
 12079  0112C8  70DF               	btg	indf2,0,c
 12080                           
 12081                           ;usb_device.c: 806: }
 12082                           ;usb_device.c: 811: if(endpoint_number == 0)
 12083  0112CA  502A               	movf	_endpoint_number,w,c	;volatile
 12084  0112CC  A4D8               	btfss	status,2,c
 12085  0112CE  D003               	goto	i2l7377
 12086                           
 12087                           ;usb_device.c: 812: {
 12088                           ;usb_device.c: 813: USBCtrlEPService();
 12089  0112D0  EC7B  F090         	call	_USBCtrlEPService	;wreg free
 12090                           
 12091                           ;usb_device.c: 814: }
 12092  0112D4  D00E               	goto	i2l7379
 12093  0112D6                     i2l7377:
 12094                           
 12095                           ;usb_device.c: 815: else
 12096                           ;usb_device.c: 816: {
 12097                           ;usb_device.c: 817: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 12098  0112D6  0E00               	movlw	0
 12099  0112D8  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12100  0112DA  0E72               	movlw	114
 12101  0112DC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12102  0112DE  0E2D               	movlw	low _USTATcopy
 12103  0112E0  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12104  0112E2  0E00               	movlw	high _USTATcopy
 12105  0112E4  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12106  0112E6  0E00               	movlw	0
 12107  0112E8  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12108  0112EA  0E00               	movlw	0
 12109  0112EC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12110  0112EE  EC14  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12111  0112F2                     i2l7379:
 12112  0112F2  2A4B               	incf	USBDeviceTasks@i,f,c
 12113  0112F4  D7CA               	goto	i2l7357
 12114  0112F6                     i2l1240:
 12115                           
 12116                           ;usb_device.c: 823: }
 12117                           ;usb_device.c: 824: }
 12118                           ;usb_device.c: 825: }
 12119                           ;usb_device.c: 827: {PIR2bits.USBIF = 0;};
 12120  0112F6  98A1               	bcf	4001,4,c	;volatile
 12121  0112F8  0012               	return		;funcret
 12122  0112FA                     __end_of_USBDeviceTasks:
 12123                           	opt stack 0
 12124                           pclatu	equ	0xFFB
 12125                           pclath	equ	0xFFA
 12126                           tblptru	equ	0xFF8
 12127                           tblptrh	equ	0xFF7
 12128                           tblptrl	equ	0xFF6
 12129                           tablat	equ	0xFF5
 12130                           prodh	equ	0xFF4
 12131                           prodl	equ	0xFF3
 12132                           intcon	equ	0xFF2
 12133                           intcon2	equ	0xFF1
 12134                           indf0	equ	0xFEF
 12135                           postinc0	equ	0xFEE
 12136                           fsr0h	equ	0xFEA
 12137                           fsr0l	equ	0xFE9
 12138                           wreg	equ	0xFE8
 12139                           indf1	equ	0xFE7
 12140                           postinc1	equ	0xFE6
 12141                           postdec1	equ	0xFE5
 12142                           fsr1h	equ	0xFE2
 12143                           fsr1l	equ	0xFE1
 12144                           indf2	equ	0xFDF
 12145                           postinc2	equ	0xFDE
 12146                           postdec2	equ	0xFDD
 12147                           plusw2	equ	0xFDB
 12148                           fsr2h	equ	0xFDA
 12149                           fsr2l	equ	0xFD9
 12150                           status	equ	0xFD8
 12151                           
 12152 ;; *************** function i2_USBDeviceInit *****************
 12153 ;; Defined at:
 12154 ;;		line 299 in file "../My_library/usb/usb_device.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;		None
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;		None               void
 12161 ;; Registers used:
 12162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12172 ;;Total ram usage:        1 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:    1
 12175 ;; This function calls:
 12176 ;;		i2_memset
 12177 ;; This function is called by:
 12178 ;;		_USBDeviceTasks
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           	psect	text63
 12183  0112FA                     __ptext63:
 12184                           	opt stack 0
 12185  0112FA                     i2_USBDeviceInit:
 12186                           	opt stack 20
 12187                           
 12188                           ;usb_device.c: 301: uint8_t i;
 12189                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 12190                           
 12191                           ;incstack = 0
 12192  0112FA  98A0               	bcf	4000,4,c	;volatile
 12193                           
 12194                           ;usb_device.c: 306: {UEIR = 0;};
 12195  0112FC  0E00               	movlw	0
 12196  0112FE  6E63               	movwf	3939,c	;volatile
 12197                           
 12198                           ;usb_device.c: 309: {UIR = 0;};
 12199  011300  0E00               	movlw	0
 12200  011302  6E62               	movwf	3938,c	;volatile
 12201                           
 12202                           ;usb_device.c: 312: UEP0 = 0;
 12203  011304  0E00               	movlw	0
 12204  011306  010F               	movlb	15	; () banked
 12205  011308  6F26               	movwf	38,b	;volatile
 12206                           
 12207                           ; BSR set to: 15
 12208                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 12209  01130A  0E27               	movlw	39
 12210  01130C  6E2E               	movwf	i2memset@p1,c
 12211  01130E  0E0F               	movlw	15
 12212  011310  6E2F               	movwf	i2memset@p1+1,c
 12213  011312  0E00               	movlw	0
 12214  011314  6E31               	movwf	i2memset@c+1,c
 12215  011316  0E00               	movlw	0
 12216  011318  6E30               	movwf	i2memset@c,c
 12217  01131A  0E00               	movlw	0
 12218  01131C  6E33               	movwf	i2memset@n+1,c
 12219  01131E  0E02               	movlw	2
 12220  011320  6E32               	movwf	i2memset@n,c
 12221  011322  ECC5  F09B         	call	i2_memset	;wreg free
 12222                           
 12223                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12224  011326  0E16               	movlw	22
 12225  011328  010F               	movlb	15	; () banked
 12226  01132A  6F39               	movwf	57,b	;volatile
 12227                           
 12228                           ; BSR set to: 15
 12229  01132C  0E9F               	movlw	159
 12230  01132E  010F               	movlb	15	; () banked
 12231  011330  6F37               	movwf	55,b	;volatile
 12232                           
 12233                           ; BSR set to: 15
 12234  011332  0E7B               	movlw	123
 12235  011334  010F               	movlb	15	; () banked
 12236  011336  6F36               	movwf	54,b	;volatile
 12237                           
 12238                           ; BSR set to: 15
 12239                           ;usb_device.c: 319: ;
 12240                           ;usb_device.c: 322: ;
 12241                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 12242  011338  0E00               	movlw	0
 12243  01133A  6E36               	movwf	i2USBDeviceInit@i,c
 12244  01133C                     i2l7021:
 12245                           
 12246                           ; BSR set to: 15
 12247  01133C  0E0B               	movlw	11
 12248  01133E  6436               	cpfsgt	i2USBDeviceInit@i,c
 12249  011340  D001               	goto	i2l7025
 12250  011342  D00E               	goto	i2l1217
 12251  011344                     i2l7025:
 12252                           
 12253                           ;usb_device.c: 326: {
 12254                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 12255  011344  5036               	movf	i2USBDeviceInit@i,w,c
 12256  011346  0D04               	mullw	4
 12257  011348  0E00               	movlw	0
 12258  01134A  24F3               	addwf	prodl,w,c
 12259  01134C  6ED9               	movwf	fsr2l,c
 12260  01134E  0E0D               	movlw	13
 12261  011350  20F4               	addwfc	prodh,w,c
 12262  011352  6EDA               	movwf	fsr2h,c
 12263  011354  6ADE               	clrf	postinc2,c
 12264  011356  6ADE               	clrf	postinc2,c
 12265  011358  6ADE               	clrf	postinc2,c
 12266  01135A  6ADD               	clrf	postdec2,c
 12267  01135C  2A36               	incf	i2USBDeviceInit@i,f,c
 12268  01135E  D7EE               	goto	i2l7021
 12269  011360                     i2l1217:
 12270                           
 12271                           ;usb_device.c: 328: }
 12272                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 12273  011360  8C65               	bsf	3941,6,c	;volatile
 12274                           
 12275                           ;usb_device.c: 334: UADDR = 0x00;
 12276  011362  0E00               	movlw	0
 12277  011364  010F               	movlb	15	; () banked
 12278  011366  6F38               	movwf	56,b	;volatile
 12279                           
 12280                           ; BSR set to: 15
 12281                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 12282  011368  9865               	bcf	3941,4,c	;volatile
 12283                           
 12284                           ; BSR set to: 15
 12285                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 12286  01136A  9C65               	bcf	3941,6,c	;volatile
 12287                           
 12288                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 12289  01136C  D009               	goto	i2l7045
 12290  01136E                     i2l7037:
 12291                           
 12292                           ;usb_device.c: 344: {
 12293                           ;usb_device.c: 345: (UIR &= 0xF7);
 12294  01136E  9662               	bcf	3938,3,c	;volatile
 12295                           
 12296                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 12297  011370  0E00               	movlw	0
 12298  011372  6E0D               	movwf	_inPipes+3,c	;volatile
 12299                           
 12300                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 12301  011374  0E00               	movlw	0
 12302  011376  6E04               	movwf	_outPipes+3,c	;volatile
 12303                           
 12304                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 12305  011378  0E00               	movlw	0
 12306  01137A  6E06               	movwf	_outPipes+5,c	;volatile
 12307  01137C  0E00               	movlw	0
 12308  01137E  6E05               	movwf	_outPipes+4,c	;volatile
 12309  011380                     i2l7045:
 12310  011380  B662               	btfsc	3938,3,c	;volatile
 12311  011382  D7F5               	goto	i2l7037
 12312                           
 12313                           ;usb_device.c: 350: }
 12314                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 12315  011384  0E01               	movlw	1
 12316  011386  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12317                           
 12318                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 12319  011388  0E01               	movlw	1
 12320  01138A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12321                           
 12322                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 12323  01138C  0E00               	movlw	0
 12324  01138E  6E23               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12325                           
 12326                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 12327  011390  0E00               	movlw	0
 12328  011392  6E24               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12329                           
 12330                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 12331  011394  0E00               	movlw	0
 12332  011396  0100               	movlb	0	; () banked
 12333  011398  6FBA               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12334                           
 12335                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 12336  01139A  0E00               	movlw	0
 12337  01139C  6E36               	movwf	i2USBDeviceInit@i,c
 12338  01139E                     i2l7049:
 12339                           
 12340                           ; BSR set to: 0
 12341  01139E  0E02               	movlw	2
 12342  0113A0  6436               	cpfsgt	i2USBDeviceInit@i,c
 12343  0113A2  D001               	goto	i2l7053
 12344  0113A4  D02E               	goto	i2l7059
 12345  0113A6                     i2l7053:
 12346                           
 12347                           ;usb_device.c: 364: {
 12348                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 12349  0113A6  5036               	movf	i2USBDeviceInit@i,w,c
 12350  0113A8  0D02               	mullw	2
 12351  0113AA  0E10               	movlw	low _pBDTEntryIn
 12352  0113AC  24F3               	addwf	prodl,w,c
 12353  0113AE  6ED9               	movwf	fsr2l,c
 12354  0113B0  0E00               	movlw	high _pBDTEntryIn
 12355  0113B2  20F4               	addwfc	prodh,w,c
 12356  0113B4  6EDA               	movwf	fsr2h,c
 12357  0113B6  0E00               	movlw	0
 12358  0113B8  6EDE               	movwf	postinc2,c
 12359  0113BA  0E00               	movlw	0
 12360  0113BC  6EDD               	movwf	postdec2,c
 12361                           
 12362                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 12363  0113BE  5036               	movf	i2USBDeviceInit@i,w,c
 12364  0113C0  0D02               	mullw	2
 12365  0113C2  0E9E               	movlw	low _pBDTEntryOut
 12366  0113C4  24F3               	addwf	prodl,w,c
 12367  0113C6  6ED9               	movwf	fsr2l,c
 12368  0113C8  0E00               	movlw	high _pBDTEntryOut
 12369  0113CA  20F4               	addwfc	prodh,w,c
 12370  0113CC  6EDA               	movwf	fsr2h,c
 12371  0113CE  0E00               	movlw	0
 12372  0113D0  6EDE               	movwf	postinc2,c
 12373  0113D2  0E00               	movlw	0
 12374  0113D4  6EDD               	movwf	postdec2,c
 12375                           
 12376                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 12377  0113D6  5036               	movf	i2USBDeviceInit@i,w,c
 12378  0113D8  0D01               	mullw	1
 12379  0113DA  0E16               	movlw	low _ep_data_in
 12380  0113DC  24F3               	addwf	prodl,w,c
 12381  0113DE  6ED9               	movwf	fsr2l,c
 12382  0113E0  0E00               	movlw	high _ep_data_in
 12383  0113E2  20F4               	addwfc	prodh,w,c
 12384  0113E4  6EDA               	movwf	fsr2h,c
 12385  0113E6  0E00               	movlw	0
 12386  0113E8  6EDF               	movwf	indf2,c
 12387                           
 12388                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 12389  0113EA  5036               	movf	i2USBDeviceInit@i,w,c
 12390  0113EC  0D01               	mullw	1
 12391  0113EE  0E19               	movlw	low _ep_data_out
 12392  0113F0  24F3               	addwf	prodl,w,c
 12393  0113F2  6ED9               	movwf	fsr2l,c
 12394  0113F4  0E00               	movlw	high _ep_data_out
 12395  0113F6  20F4               	addwfc	prodh,w,c
 12396  0113F8  6EDA               	movwf	fsr2h,c
 12397  0113FA  0E00               	movlw	0
 12398  0113FC  6EDF               	movwf	indf2,c
 12399  0113FE  2A36               	incf	i2USBDeviceInit@i,f,c
 12400  011400  D7CE               	goto	i2l7049
 12401  011402                     i2l7059:
 12402                           
 12403                           ;usb_device.c: 369: }
 12404                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12405  011402  0E08               	movlw	8
 12406  011404  6E10               	movwf	_pBDTEntryIn,c
 12407  011406  0E0D               	movlw	13
 12408  011408  6E11               	movwf	_pBDTEntryIn+1,c
 12409                           
 12410                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 12411  01140A  0E16               	movlw	22
 12412  01140C  010F               	movlb	15	; () banked
 12413  01140E  6F26               	movwf	38,b	;volatile
 12414                           
 12415                           ; BSR set to: 15
 12416                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12417  011410  0E0D               	movlw	13
 12418  011412  010D               	movlb	13	; () banked
 12419  011414  6F03               	movwf	3,b	;volatile
 12420  011416  0E30               	movlw	48
 12421  011418  6F02               	movwf	2,b	;volatile
 12422                           
 12423                           ; BSR set to: 13
 12424                           ;usb_device.c: 377: BDT[0].CNT = 8;
 12425  01141A  0E08               	movlw	8
 12426  01141C  010D               	movlb	13	; () banked
 12427  01141E  6F01               	movwf	1,b	;volatile
 12428                           
 12429                           ; BSR set to: 13
 12430                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 12431  011420  0E04               	movlw	4
 12432  011422  010D               	movlb	13	; () banked
 12433  011424  6F00               	movwf	0,b	;volatile
 12434                           
 12435                           ; BSR set to: 13
 12436                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 12437  011426  010D               	movlb	13	; () banked
 12438  011428  8F00               	bsf	0,7,b	;volatile
 12439                           
 12440                           ; BSR set to: 13
 12441                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 12442  01142A  0E00               	movlw	0
 12443  01142C  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 12444                           
 12445                           ; BSR set to: 13
 12446                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 12447  01142E  0E00               	movlw	0
 12448  011430  0100               	movlb	0	; () banked
 12449  011432  6FBB               	movwf	_USBDeviceState& (0+255),b	;volatile
 12450                           
 12451                           ; BSR set to: 0
 12452  011434  0012               	return		;funcret
 12453  011436                     __end_ofi2_USBDeviceInit:
 12454                           	opt stack 0
 12455                           pclatu	equ	0xFFB
 12456                           pclath	equ	0xFFA
 12457                           tblptru	equ	0xFF8
 12458                           tblptrh	equ	0xFF7
 12459                           tblptrl	equ	0xFF6
 12460                           tablat	equ	0xFF5
 12461                           prodh	equ	0xFF4
 12462                           prodl	equ	0xFF3
 12463                           intcon	equ	0xFF2
 12464                           intcon2	equ	0xFF1
 12465                           indf0	equ	0xFEF
 12466                           postinc0	equ	0xFEE
 12467                           fsr0h	equ	0xFEA
 12468                           fsr0l	equ	0xFE9
 12469                           wreg	equ	0xFE8
 12470                           indf1	equ	0xFE7
 12471                           postinc1	equ	0xFE6
 12472                           postdec1	equ	0xFE5
 12473                           fsr1h	equ	0xFE2
 12474                           fsr1l	equ	0xFE1
 12475                           indf2	equ	0xFDF
 12476                           postinc2	equ	0xFDE
 12477                           postdec2	equ	0xFDD
 12478                           plusw2	equ	0xFDB
 12479                           fsr2h	equ	0xFDA
 12480                           fsr2l	equ	0xFD9
 12481                           status	equ	0xFD8
 12482                           
 12483 ;; *************** function _USBWakeFromSuspend *****************
 12484 ;; Defined at:
 12485 ;;		line 2303 in file "../My_library/usb/usb_device.c"
 12486 ;; Parameters:    Size  Location     Type
 12487 ;;		None
 12488 ;; Auto vars:     Size  Location     Type
 12489 ;;		None
 12490 ;; Return value:  Size  Location     Type
 12491 ;;		None               void
 12492 ;; Registers used:
 12493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12494 ;; Tracked objects:
 12495 ;;		On entry : 0/0
 12496 ;;		On exit  : 0/0
 12497 ;;		Unchanged: 0/0
 12498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12503 ;;Total ram usage:        0 bytes
 12504 ;; Hardware stack levels used:    1
 12505 ;; Hardware stack levels required when called:    5
 12506 ;; This function calls:
 12507 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12508 ;; This function is called by:
 12509 ;;		_USBDeviceTasks
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           	psect	text64
 12514  013678                     __ptext64:
 12515                           	opt stack 0
 12516  013678                     _USBWakeFromSuspend:
 12517                           	opt stack 16
 12518                           
 12519                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 12520                           
 12521                           ; BSR set to: 0
 12522                           ;incstack = 0
 12523  013678  0E00               	movlw	0
 12524  01367A  0100               	movlb	0	; () banked
 12525  01367C  6FBA               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12526                           
 12527                           ; BSR set to: 0
 12528                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12529  01367E  0E00               	movlw	0
 12530  013680  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12531  013682  0E74               	movlw	116
 12532  013684  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12533  013686  0E00               	movlw	0
 12534  013688  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12535  01368A  0E00               	movlw	0
 12536  01368C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12537  01368E  0E00               	movlw	0
 12538  013690  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12539  013692  0E00               	movlw	0
 12540  013694  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12541  013696  EC14  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12542                           
 12543                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 12544  01369A  9265               	bcf	3941,1,c	;volatile
 12545                           
 12546                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 12547  01369C  010F               	movlb	15	; () banked
 12548  01369E  9536               	bcf	54,2,b	;volatile
 12549                           
 12550                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 12551  0136A0  D001               	goto	i2l6935
 12552  0136A2                     i2l6933:
 12553                           
 12554                           ;usb_device.c: 2343: {
 12555                           ;usb_device.c: 2344: (UIR &= 0xFB);
 12556  0136A2  9462               	bcf	3938,2,c	;volatile
 12557  0136A4                     i2l6935:
 12558  0136A4  A462               	btfss	3938,2,c	;volatile
 12559  0136A6  0012               	return	
 12560  0136A8  D7FC               	goto	i2l6933
 12561  0136AA                     __end_of_USBWakeFromSuspend:
 12562                           	opt stack 0
 12563                           pclatu	equ	0xFFB
 12564                           pclath	equ	0xFFA
 12565                           tblptru	equ	0xFF8
 12566                           tblptrh	equ	0xFF7
 12567                           tblptrl	equ	0xFF6
 12568                           tablat	equ	0xFF5
 12569                           prodh	equ	0xFF4
 12570                           prodl	equ	0xFF3
 12571                           intcon	equ	0xFF2
 12572                           intcon2	equ	0xFF1
 12573                           indf0	equ	0xFEF
 12574                           postinc0	equ	0xFEE
 12575                           fsr0h	equ	0xFEA
 12576                           fsr0l	equ	0xFE9
 12577                           wreg	equ	0xFE8
 12578                           indf1	equ	0xFE7
 12579                           postinc1	equ	0xFE6
 12580                           postdec1	equ	0xFE5
 12581                           fsr1h	equ	0xFE2
 12582                           fsr1l	equ	0xFE1
 12583                           indf2	equ	0xFDF
 12584                           postinc2	equ	0xFDE
 12585                           postdec2	equ	0xFDD
 12586                           plusw2	equ	0xFDB
 12587                           fsr2h	equ	0xFDA
 12588                           fsr2l	equ	0xFD9
 12589                           status	equ	0xFD8
 12590                           
 12591 ;; *************** function _USBSuspend *****************
 12592 ;; Defined at:
 12593 ;;		line 2246 in file "../My_library/usb/usb_device.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;		None
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;		None
 12598 ;; Return value:  Size  Location     Type
 12599 ;;		None               void
 12600 ;; Registers used:
 12601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12602 ;; Tracked objects:
 12603 ;;		On entry : 0/0
 12604 ;;		On exit  : 0/0
 12605 ;;		Unchanged: 0/0
 12606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12611 ;;Total ram usage:        0 bytes
 12612 ;; Hardware stack levels used:    1
 12613 ;; Hardware stack levels required when called:    5
 12614 ;; This function calls:
 12615 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12616 ;; This function is called by:
 12617 ;;		_USBDeviceTasks
 12618 ;; This function uses a non-reentrant model
 12619 ;;
 12620                           
 12621                           	psect	text65
 12622  01375E                     __ptext65:
 12623                           	opt stack 0
 12624  01375E                     _USBSuspend:
 12625                           	opt stack 16
 12626                           
 12627                           ;usb_device.c: 2271: UIEbits.ACTVIE = 1;
 12628                           
 12629                           ;incstack = 0
 12630  01375E  010F               	movlb	15	; () banked
 12631  013760  8536               	bsf	54,2,b	;volatile
 12632                           
 12633                           ; BSR set to: 15
 12634                           ;usb_device.c: 2272: (UIR &= 0xEF);
 12635  013762  9862               	bcf	3938,4,c	;volatile
 12636                           
 12637                           ; BSR set to: 15
 12638                           ;usb_device.c: 2275: UCONbits.SUSPND = 1;
 12639  013764  8265               	bsf	3941,1,c	;volatile
 12640                           
 12641                           ; BSR set to: 15
 12642                           ;usb_device.c: 2278: USBBusIsSuspended = 1;
 12643  013766  0E01               	movlw	1
 12644  013768  0100               	movlb	0	; () banked
 12645  01376A  6FBA               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12649  01376C  0E00               	movlw	0
 12650  01376E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12651  013770  0E75               	movlw	117
 12652  013772  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12653  013774  0E00               	movlw	0
 12654  013776  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12655  013778  0E00               	movlw	0
 12656  01377A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12657  01377C  0E00               	movlw	0
 12658  01377E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12659  013780  0E00               	movlw	0
 12660  013782  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12661  013784  EC14  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12662  013788  0012               	return		;funcret
 12663  01378A                     __end_of_USBSuspend:
 12664                           	opt stack 0
 12665                           pclatu	equ	0xFFB
 12666                           pclath	equ	0xFFA
 12667                           tblptru	equ	0xFF8
 12668                           tblptrh	equ	0xFF7
 12669                           tblptrl	equ	0xFF6
 12670                           tablat	equ	0xFF5
 12671                           prodh	equ	0xFF4
 12672                           prodl	equ	0xFF3
 12673                           intcon	equ	0xFF2
 12674                           intcon2	equ	0xFF1
 12675                           indf0	equ	0xFEF
 12676                           postinc0	equ	0xFEE
 12677                           fsr0h	equ	0xFEA
 12678                           fsr0l	equ	0xFE9
 12679                           wreg	equ	0xFE8
 12680                           indf1	equ	0xFE7
 12681                           postinc1	equ	0xFE6
 12682                           postdec1	equ	0xFE5
 12683                           fsr1h	equ	0xFE2
 12684                           fsr1l	equ	0xFE1
 12685                           indf2	equ	0xFDF
 12686                           postinc2	equ	0xFDE
 12687                           postdec2	equ	0xFDD
 12688                           plusw2	equ	0xFDB
 12689                           fsr2h	equ	0xFDA
 12690                           fsr2l	equ	0xFD9
 12691                           status	equ	0xFD8
 12692                           
 12693 ;; *************** function _USBStallHandler *****************
 12694 ;; Defined at:
 12695 ;;		line 2203 in file "../My_library/usb/usb_device.c"
 12696 ;; Parameters:    Size  Location     Type
 12697 ;;		None
 12698 ;; Auto vars:     Size  Location     Type
 12699 ;;		None
 12700 ;; Return value:  Size  Location     Type
 12701 ;;		None               void
 12702 ;; Registers used:
 12703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12704 ;; Tracked objects:
 12705 ;;		On entry : 0/0
 12706 ;;		On exit  : 0/0
 12707 ;;		Unchanged: 0/0
 12708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12711 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12713 ;;Total ram usage:        1 bytes
 12714 ;; Hardware stack levels used:    1
 12715 ;; This function calls:
 12716 ;;		Nothing
 12717 ;; This function is called by:
 12718 ;;		_USBDeviceTasks
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text66
 12723  01346A                     __ptext66:
 12724                           	opt stack 0
 12725  01346A                     _USBStallHandler:
 12726                           	opt stack 21
 12727                           
 12728                           ;usb_device.c: 2215: if(UEP0bits.EPSTALL == 1)
 12729                           
 12730                           ;incstack = 0
 12731  01346A  010F               	movlb	15	; () banked
 12732  01346C  A126               	btfss	38,0,b	;volatile
 12733  01346E  D01E               	goto	i2l1379
 12734                           
 12735                           ; BSR set to: 15
 12736                           ;usb_device.c: 2216: {
 12737                           ;usb_device.c: 2218: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12738  013470  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12739  013474  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12740  013478  0E80               	movlw	128
 12741  01347A  18DE               	xorwf	postinc2,w,c
 12742  01347C  A4D8               	btfss	status,2,c
 12743  01347E  D014               	goto	i2l6957
 12744                           
 12745                           ; BSR set to: 15
 12746  013480  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 12747  013484  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12748  013488  0E84               	movlw	132
 12749  01348A  18DE               	xorwf	postinc2,w,c
 12750  01348C  A4D8               	btfss	status,2,c
 12751  01348E  D00C               	goto	i2l6957
 12752                           
 12753                           ; BSR set to: 15
 12754                           ;usb_device.c: 2219: {
 12755                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12756  013490  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12757  013494  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12758  013498  0E0C               	movlw	12
 12759  01349A  6EDF               	movwf	indf2,c
 12760                           
 12761                           ; BSR set to: 15
 12762                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12763  01349C  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12764  0134A0  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12765  0134A4  0E00               	movlw	0
 12766  0134A6  8EDB               	bsf	plusw2,7,c
 12767  0134A8                     i2l6957:
 12768                           
 12769                           ; BSR set to: 15
 12770                           ;usb_device.c: 2223: }
 12771                           ;usb_device.c: 2224: UEP0bits.EPSTALL = 0;
 12772  0134A8  010F               	movlb	15	; () banked
 12773  0134AA  9126               	bcf	38,0,b	;volatile
 12774  0134AC                     i2l1379:
 12775                           
 12776                           ; BSR set to: 15
 12777                           ;usb_device.c: 2225: }
 12778                           ;usb_device.c: 2227: (UIR &= 0xDF);
 12779  0134AC  9A62               	bcf	3938,5,c	;volatile
 12780                           
 12781                           ; BSR set to: 15
 12782  0134AE  0012               	return		;funcret
 12783  0134B0                     __end_of_USBStallHandler:
 12784                           	opt stack 0
 12785                           pclatu	equ	0xFFB
 12786                           pclath	equ	0xFFA
 12787                           tblptru	equ	0xFF8
 12788                           tblptrh	equ	0xFF7
 12789                           tblptrl	equ	0xFF6
 12790                           tablat	equ	0xFF5
 12791                           prodh	equ	0xFF4
 12792                           prodl	equ	0xFF3
 12793                           intcon	equ	0xFF2
 12794                           intcon2	equ	0xFF1
 12795                           indf0	equ	0xFEF
 12796                           postinc0	equ	0xFEE
 12797                           fsr0h	equ	0xFEA
 12798                           fsr0l	equ	0xFE9
 12799                           wreg	equ	0xFE8
 12800                           indf1	equ	0xFE7
 12801                           postinc1	equ	0xFE6
 12802                           postdec1	equ	0xFE5
 12803                           fsr1h	equ	0xFE2
 12804                           fsr1l	equ	0xFE1
 12805                           indf2	equ	0xFDF
 12806                           postinc2	equ	0xFDE
 12807                           postdec2	equ	0xFDD
 12808                           plusw2	equ	0xFDB
 12809                           fsr2h	equ	0xFDA
 12810                           fsr2l	equ	0xFD9
 12811                           status	equ	0xFD8
 12812                           
 12813 ;; *************** function _USBCtrlEPService *****************
 12814 ;; Defined at:
 12815 ;;		line 2370 in file "../My_library/usb/usb_device.c"
 12816 ;; Parameters:    Size  Location     Type
 12817 ;;		None
 12818 ;; Auto vars:     Size  Location     Type
 12819 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 12820 ;; Return value:  Size  Location     Type
 12821 ;;		None               void
 12822 ;; Registers used:
 12823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12824 ;; Tracked objects:
 12825 ;;		On entry : 0/0
 12826 ;;		On exit  : 0/0
 12827 ;;		Unchanged: 0/0
 12828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12832 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12833 ;;Total ram usage:        3 bytes
 12834 ;; Hardware stack levels used:    1
 12835 ;; Hardware stack levels required when called:    8
 12836 ;; This function calls:
 12837 ;;		_USBCtrlTrfInHandler
 12838 ;;		_USBCtrlTrfOutHandler
 12839 ;;		_USBCtrlTrfSetupHandler
 12840 ;; This function is called by:
 12841 ;;		_USBDeviceTasks
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           	psect	text67
 12846  0120F6                     __ptext67:
 12847                           	opt stack 0
 12848  0120F6                     _USBCtrlEPService:
 12849                           	opt stack 13
 12850                           
 12851                           ;usb_device.c: 2376: USBStatusStageTimeoutCounter = (uint8_t)45;
 12852                           
 12853                           ; BSR set to: 15
 12854                           ;incstack = 0
 12855  0120F6  0E2D               	movlw	45
 12856  0120F8  6E28               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 12857                           
 12858                           ;usb_device.c: 2380: if((USTATcopy.Val & ~0x02) == 0x00)
 12859  0120FA  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 12860  0120FE  0EFD               	movlw	253
 12861  012100  1648               	andwf	??_USBCtrlEPService,f,c
 12862  012102  A4D8               	btfss	status,2,c
 12863  012104  D057               	goto	i2l6991
 12864                           
 12865                           ;usb_device.c: 2381: {
 12866                           ;usb_device.c: 2384: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 12867  012106  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 12868  01210A  90D8               	bcf	status,0,c
 12869  01210C  3248               	rrcf	??_USBCtrlEPService,f,c
 12870  01210E  0E3F               	movlw	63
 12871  012110  1648               	andwf	??_USBCtrlEPService,f,c
 12872  012112  5048               	movf	??_USBCtrlEPService,w,c
 12873  012114  0D04               	mullw	4
 12874  012116  0E00               	movlw	0
 12875  012118  24F3               	addwf	prodl,w,c
 12876  01211A  6E1C               	movwf	_pBDTEntryEP0OutCurrent,c
 12877  01211C  0E0D               	movlw	13
 12878  01211E  20F4               	addwfc	prodh,w,c
 12879  012120  6E1D               	movwf	_pBDTEntryEP0OutCurrent+1,c
 12880                           
 12881                           ;usb_device.c: 2392: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12882  012122  C01C  F01E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12883  012126  C01D  F01F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12884                           
 12885                           ;usb_device.c: 2394: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 12886  01212A  0E04               	movlw	4
 12887  01212C  1A1E               	xorwf	_pBDTEntryEP0OutNext,f,c
 12888                           
 12889                           ;usb_device.c: 2397: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12890  01212E  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12891  012132  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12892  012136  30DF               	rrcf	indf2,w,c
 12893  012138  32E8               	rrcf	wreg,f,c
 12894  01213A  0B0F               	andlw	15
 12895  01213C  0A0D               	xorlw	13
 12896  01213E  A4D8               	btfss	status,2,c
 12897  012140  D036               	goto	i2l6989
 12898                           
 12899                           ;usb_device.c: 2398: {
 12900                           ;usb_device.c: 2399: unsigned char setup_cnt;
 12901                           ;usb_device.c: 2405: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 12902  012142  0E00               	movlw	0
 12903  012144  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 12904  012146                     i2l6973:
 12905  012146  0E07               	movlw	7
 12906  012148  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 12907  01214A  D001               	goto	i2l6977
 12908  01214C  D023               	goto	i2l6985
 12909  01214E                     i2l6977:
 12910                           
 12911                           ;usb_device.c: 2406: {
 12912                           ;usb_device.c: 2407: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 12913  01214E  EE20 F002          	lfsr	2,2
 12914  012152  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 12915  012154  26D9               	addwf	fsr2l,f,c
 12916  012156  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12917  012158  22DA               	addwfc	fsr2h,f,c
 12918  01215A  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 12919  01215E  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 12920  012162  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 12921  012166  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 12922  01216A  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 12923  01216C  0D01               	mullw	1
 12924  01216E  0E30               	movlw	48
 12925  012170  24F3               	addwf	prodl,w,c
 12926  012172  6EE1               	movwf	fsr1l,c
 12927  012174  0E0D               	movlw	13
 12928  012176  20F4               	addwfc	prodh,w,c
 12929  012178  6EE2               	movwf	fsr1h,c
 12930  01217A  CFDF FFE7          	movff	indf2,indf1
 12931                           
 12932                           ;usb_device.c: 2408: pBDTEntryEP0OutCurrent->ADR++;
 12933  01217E  EE20 F002          	lfsr	2,2
 12934  012182  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 12935  012184  26D9               	addwf	fsr2l,f,c
 12936  012186  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12937  012188  22DA               	addwfc	fsr2h,f,c
 12938  01218A  2ADE               	incf	postinc2,f,c
 12939  01218C  0E00               	movlw	0
 12940  01218E  22DD               	addwfc	postdec2,f,c
 12941  012190  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 12942  012192  D7D9               	goto	i2l6973
 12943  012194                     i2l6985:
 12944                           
 12945                           ;usb_device.c: 2409: }
 12946                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12947  012194  EE20 F002          	lfsr	2,2
 12948  012198  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 12949  01219A  26D9               	addwf	fsr2l,f,c
 12950  01219C  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12951  01219E  22DA               	addwfc	fsr2h,f,c
 12952  0121A0  0E30               	movlw	48
 12953  0121A2  6EDE               	movwf	postinc2,c
 12954  0121A4  0E0D               	movlw	13
 12955  0121A6  6EDD               	movwf	postdec2,c
 12956                           
 12957                           ;usb_device.c: 2413: USBCtrlTrfSetupHandler();
 12958  0121A8  EC59  F097         	call	_USBCtrlTrfSetupHandler	;wreg free
 12959                           
 12960                           ;usb_device.c: 2414: }
 12961  0121AC  0012               	return	
 12962  0121AE                     i2l6989:
 12963                           
 12964                           ;usb_device.c: 2415: else
 12965                           ;usb_device.c: 2416: {
 12966                           ;usb_device.c: 2418: USBCtrlTrfOutHandler();
 12967  0121AE  EC42  F099         	call	_USBCtrlTrfOutHandler	;wreg free
 12968                           
 12969                           ;usb_device.c: 2419: }
 12970                           ;usb_device.c: 2420: }
 12971  0121B2  0012               	return	
 12972  0121B4                     i2l6991:
 12973                           
 12974                           ;usb_device.c: 2421: else if((USTATcopy.Val & ~0x02) == 0x04)
 12975  0121B4  502D               	movf	_USTATcopy,w,c	;volatile
 12976  0121B6  0BFD               	andlw	253
 12977  0121B8  0A04               	xorlw	4
 12978  0121BA  A4D8               	btfss	status,2,c
 12979  0121BC  0012               	return	
 12980                           
 12981                           ;usb_device.c: 2422: {
 12982                           ;usb_device.c: 2425: USBCtrlTrfInHandler();
 12983  0121BE  EC08  F092         	call	_USBCtrlTrfInHandler	;wreg free
 12984  0121C2  0012               	return	
 12985  0121C4                     __end_of_USBCtrlEPService:
 12986                           	opt stack 0
 12987                           pclatu	equ	0xFFB
 12988                           pclath	equ	0xFFA
 12989                           tblptru	equ	0xFF8
 12990                           tblptrh	equ	0xFF7
 12991                           tblptrl	equ	0xFF6
 12992                           tablat	equ	0xFF5
 12993                           prodh	equ	0xFF4
 12994                           prodl	equ	0xFF3
 12995                           intcon	equ	0xFF2
 12996                           intcon2	equ	0xFF1
 12997                           indf0	equ	0xFEF
 12998                           postinc0	equ	0xFEE
 12999                           fsr0h	equ	0xFEA
 13000                           fsr0l	equ	0xFE9
 13001                           wreg	equ	0xFE8
 13002                           indf1	equ	0xFE7
 13003                           postinc1	equ	0xFE6
 13004                           postdec1	equ	0xFE5
 13005                           fsr1h	equ	0xFE2
 13006                           fsr1l	equ	0xFE1
 13007                           indf2	equ	0xFDF
 13008                           postinc2	equ	0xFDE
 13009                           postdec2	equ	0xFDD
 13010                           plusw2	equ	0xFDB
 13011                           fsr2h	equ	0xFDA
 13012                           fsr2l	equ	0xFD9
 13013                           status	equ	0xFD8
 13014                           
 13015 ;; *************** function _USBCtrlTrfSetupHandler *****************
 13016 ;; Defined at:
 13017 ;;		line 2470 in file "../My_library/usb/usb_device.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;		None
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;		None
 13022 ;; Return value:  Size  Location     Type
 13023 ;;		None               void
 13024 ;; Registers used:
 13025 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13026 ;; Tracked objects:
 13027 ;;		On entry : 0/0
 13028 ;;		On exit  : 0/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13035 ;;Total ram usage:        0 bytes
 13036 ;; Hardware stack levels used:    1
 13037 ;; Hardware stack levels required when called:    7
 13038 ;; This function calls:
 13039 ;;		_USBCheckStdRequest
 13040 ;;		_USBCtrlEPServiceComplete
 13041 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13042 ;; This function is called by:
 13043 ;;		_USBCtrlEPService
 13044 ;; This function uses a non-reentrant model
 13045 ;;
 13046                           
 13047                           	psect	text68
 13048  012EB2                     __ptext68:
 13049                           	opt stack 0
 13050  012EB2                     _USBCtrlTrfSetupHandler:
 13051                           	opt stack 13
 13052                           
 13053                           ;usb_device.c: 2475: shortPacketStatus = 0;
 13054                           
 13055                           ;incstack = 0
 13056  012EB2  0E00               	movlw	0
 13057  012EB4  6E2B               	movwf	_shortPacketStatus,c	;volatile
 13058                           
 13059                           ;usb_device.c: 2476: USBDeferStatusStagePacket = 0;
 13060  012EB6  0E00               	movlw	0
 13061  012EB8  6E25               	movwf	_USBDeferStatusStagePacket,c	;volatile
 13062                           
 13063                           ;usb_device.c: 2477: USBDeferINDataStagePackets = 0;
 13064  012EBA  0E00               	movlw	0
 13065  012EBC  6E23               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13066                           
 13067                           ;usb_device.c: 2478: USBDeferOUTDataStagePackets = 0;
 13068  012EBE  0E00               	movlw	0
 13069  012EC0  6E24               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13070                           
 13071                           ;usb_device.c: 2479: BothEP0OutUOWNsSet = 0;
 13072  012EC2  0E00               	movlw	0
 13073  012EC4  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 13074                           
 13075                           ;usb_device.c: 2480: controlTransferState = 0;
 13076  012EC6  0E00               	movlw	0
 13077  012EC8  6E29               	movwf	_controlTransferState,c	;volatile
 13078                           
 13079                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13080  012ECA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13081  012ECE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13082  012ED2  0E7F               	movlw	127
 13083  012ED4  16DF               	andwf	indf2,f,c
 13084                           
 13085                           ;usb_device.c: 2490: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13086  012ED6  0E04               	movlw	4
 13087  012ED8  1A10               	xorwf	_pBDTEntryIn,f,c
 13088                           
 13089                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13090  012EDA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13091  012EDE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13092  012EE2  0E7F               	movlw	127
 13093  012EE4  16DF               	andwf	indf2,f,c
 13094                           
 13095                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13096  012EE6  0E04               	movlw	4
 13097  012EE8  1A10               	xorwf	_pBDTEntryIn,f,c
 13098                           
 13099                           ;usb_device.c: 2493: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 13100  012EEA  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13101  012EEE  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13102  012EF2  0E7F               	movlw	127
 13103  012EF4  16DF               	andwf	indf2,f,c
 13104                           
 13105                           ;usb_device.c: 2495: inPipes[0].info.Val = 0;
 13106  012EF6  0E00               	movlw	0
 13107  012EF8  6E0D               	movwf	_inPipes+3,c	;volatile
 13108                           
 13109                           ;usb_device.c: 2496: inPipes[0].wCount.Val = 0;
 13110  012EFA  0E00               	movlw	0
 13111  012EFC  6E0F               	movwf	_inPipes+5,c	;volatile
 13112  012EFE  0E00               	movlw	0
 13113  012F00  6E0E               	movwf	_inPipes+4,c	;volatile
 13114                           
 13115                           ;usb_device.c: 2497: outPipes[0].info.Val = 0;
 13116  012F02  0E00               	movlw	0
 13117  012F04  6E04               	movwf	_outPipes+3,c	;volatile
 13118                           
 13119                           ;usb_device.c: 2498: outPipes[0].wCount.Val = 0;
 13120  012F06  0E00               	movlw	0
 13121  012F08  6E06               	movwf	_outPipes+5,c	;volatile
 13122  012F0A  0E00               	movlw	0
 13123  012F0C  6E05               	movwf	_outPipes+4,c	;volatile
 13124                           
 13125                           ;usb_device.c: 2504: USBCheckStdRequest();
 13126  012F0E  ECF9  F08D         	call	_USBCheckStdRequest	;wreg free
 13127                           
 13128                           ;usb_device.c: 2505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 13129  012F12  0E00               	movlw	0
 13130  012F14  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13131  012F16  0E03               	movlw	3
 13132  012F18  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13133  012F1A  0E00               	movlw	0
 13134  012F1C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13135  012F1E  0E00               	movlw	0
 13136  012F20  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13137  012F22  0E00               	movlw	0
 13138  012F24  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13139  012F26  0E00               	movlw	0
 13140  012F28  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13141  012F2A  EC14  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13142                           
 13143                           ;usb_device.c: 2518: USBCtrlEPServiceComplete();
 13144  012F2E  ECB6  F08B         	call	_USBCtrlEPServiceComplete	;wreg free
 13145  012F32  0012               	return		;funcret
 13146  012F34                     __end_of_USBCtrlTrfSetupHandler:
 13147                           	opt stack 0
 13148                           pclatu	equ	0xFFB
 13149                           pclath	equ	0xFFA
 13150                           tblptru	equ	0xFF8
 13151                           tblptrh	equ	0xFF7
 13152                           tblptrl	equ	0xFF6
 13153                           tablat	equ	0xFF5
 13154                           prodh	equ	0xFF4
 13155                           prodl	equ	0xFF3
 13156                           intcon	equ	0xFF2
 13157                           intcon2	equ	0xFF1
 13158                           indf0	equ	0xFEF
 13159                           postinc0	equ	0xFEE
 13160                           fsr0h	equ	0xFEA
 13161                           fsr0l	equ	0xFE9
 13162                           wreg	equ	0xFE8
 13163                           indf1	equ	0xFE7
 13164                           postinc1	equ	0xFE6
 13165                           postdec1	equ	0xFE5
 13166                           fsr1h	equ	0xFE2
 13167                           fsr1l	equ	0xFE1
 13168                           indf2	equ	0xFDF
 13169                           postinc2	equ	0xFDE
 13170                           postdec2	equ	0xFDD
 13171                           plusw2	equ	0xFDB
 13172                           fsr2h	equ	0xFDA
 13173                           fsr2l	equ	0xFD9
 13174                           status	equ	0xFD8
 13175                           
 13176 ;; *************** function _USBCtrlEPServiceComplete *****************
 13177 ;; Defined at:
 13178 ;;		line 1617 in file "../My_library/usb/usb_device.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;		None
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;		None
 13183 ;; Return value:  Size  Location     Type
 13184 ;;		None               void
 13185 ;; Registers used:
 13186 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13196 ;;Total ram usage:        0 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    2
 13199 ;; This function calls:
 13200 ;;		_USBCtrlEPAllowDataStage
 13201 ;;		_USBCtrlEPAllowStatusStage
 13202 ;; This function is called by:
 13203 ;;		_USBCtrlTrfSetupHandler
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           	psect	text69
 13208  01176C                     __ptext69:
 13209                           	opt stack 0
 13210  01176C                     _USBCtrlEPServiceComplete:
 13211                           	opt stack 17
 13212                           
 13213                           ;usb_device.c: 1623: UCONbits.PKTDIS = 0;
 13214                           
 13215                           ;incstack = 0
 13216  01176C  9865               	bcf	3941,4,c	;volatile
 13217                           
 13218                           ;usb_device.c: 1629: if(inPipes[0].info.bits.busy == 0)
 13219  01176E  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 13220  011770  D038               	goto	i2l1303
 13221                           
 13222                           ;usb_device.c: 1630: {
 13223                           ;usb_device.c: 1631: if(outPipes[0].info.bits.busy == 1)
 13224  011772  AE04               	btfss	_outPipes+3,7,c	;volatile
 13225  011774  D00B               	goto	i2l6103
 13226                           
 13227                           ;usb_device.c: 1632: {
 13228                           ;usb_device.c: 1633: controlTransferState = 2;
 13229  011776  0E02               	movlw	2
 13230  011778  6E29               	movwf	_controlTransferState,c	;volatile
 13231                           
 13232                           ;usb_device.c: 1644: if(USBDeferOUTDataStagePackets == 0)
 13233  01177A  5024               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 13234  01177C  B4D8               	btfsc	status,2,c
 13235                           
 13236                           ;usb_device.c: 1645: {
 13237                           ;usb_device.c: 1646: USBCtrlEPAllowDataStage();
 13238  01177E  ECEB  F095         	call	_USBCtrlEPAllowDataStage	;wreg free
 13239                           
 13240                           ;usb_device.c: 1647: }
 13241                           ;usb_device.c: 1651: USBStatusStageEnabledFlag2 = 0;
 13242  011782  0E00               	movlw	0
 13243  011784  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13244                           
 13245                           ;usb_device.c: 1652: USBStatusStageEnabledFlag1 = 0;
 13246  011786  0E00               	movlw	0
 13247  011788  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13248                           
 13249                           ;usb_device.c: 1653: }
 13250  01178A  0012               	return	
 13251  01178C                     i2l6103:
 13252                           
 13253                           ;usb_device.c: 1654: else
 13254                           ;usb_device.c: 1655: {
 13255                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->CNT = 8;
 13256  01178C  EE20 F001          	lfsr	2,1
 13257  011790  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13258  011792  26D9               	addwf	fsr2l,f,c
 13259  011794  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13260  011796  22DA               	addwfc	fsr2h,f,c
 13261  011798  0E08               	movlw	8
 13262  01179A  6EDF               	movwf	indf2,c
 13263                           
 13264                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13265  01179C  EE20 F002          	lfsr	2,2
 13266  0117A0  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13267  0117A2  26D9               	addwf	fsr2l,f,c
 13268  0117A4  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13269  0117A6  22DA               	addwfc	fsr2h,f,c
 13270  0117A8  0E30               	movlw	48
 13271  0117AA  6EDE               	movwf	postinc2,c
 13272  0117AC  0E0D               	movlw	13
 13273  0117AE  6EDD               	movwf	postdec2,c
 13274                           
 13275                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13276  0117B0  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13277  0117B4  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13278  0117B8  0E0C               	movlw	12
 13279  0117BA  6EDF               	movwf	indf2,c
 13280                           
 13281                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13282  0117BC  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13283  0117C0  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13284  0117C4  0E00               	movlw	0
 13285  0117C6  8EDB               	bsf	plusw2,7,c
 13286                           
 13287                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val = 0x04;
 13288  0117C8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13289  0117CC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13290  0117D0  0E04               	movlw	4
 13291  0117D2  6EDF               	movwf	indf2,c
 13292                           
 13293                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13294  0117D4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13295  0117D8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13296  0117DC  0E00               	movlw	0
 13297  0117DE  8EDB               	bsf	plusw2,7,c
 13298                           
 13299                           ;usb_device.c: 1666: }
 13300                           ;usb_device.c: 1667: }
 13301  0117E0  0012               	return	
 13302  0117E2                     i2l1303:
 13303                           
 13304                           ;usb_device.c: 1668: else
 13305                           ;usb_device.c: 1669: {
 13306                           ;usb_device.c: 1670: if(SetupPkt.DataDir == (0x80>>7))
 13307  0117E2  010D               	movlb	13	; () banked
 13308  0117E4  AF30               	btfss	48,7,b	;volatile
 13309  0117E6  D010               	goto	i2l6123
 13310                           
 13311                           ; BSR set to: 13
 13312                           ;usb_device.c: 1671: {
 13313                           ;usb_device.c: 1672: controlTransferState = 1;
 13314  0117E8  0E01               	movlw	1
 13315  0117EA  6E29               	movwf	_controlTransferState,c	;volatile
 13316                           
 13317                           ;usb_device.c: 1686: if(USBDeferINDataStagePackets == 0)
 13318  0117EC  5023               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 13319  0117EE  B4D8               	btfsc	status,2,c
 13320                           
 13321                           ; BSR set to: 13
 13322                           ;usb_device.c: 1687: {
 13323                           ;usb_device.c: 1688: USBCtrlEPAllowDataStage();
 13324  0117F0  ECEB  F095         	call	_USBCtrlEPAllowDataStage	;wreg free
 13325                           
 13326                           ;usb_device.c: 1689: }
 13327                           ;usb_device.c: 1711: USBStatusStageEnabledFlag2 = 0;
 13328  0117F4  0E00               	movlw	0
 13329  0117F6  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13330                           
 13331                           ;usb_device.c: 1712: USBStatusStageEnabledFlag1 = 0;
 13332  0117F8  0E00               	movlw	0
 13333  0117FA  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13334                           
 13335                           ;usb_device.c: 1713: if(USBDeferStatusStagePacket == 0)
 13336  0117FC  5025               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 13337  0117FE  A4D8               	btfss	status,2,c
 13338  011800  0012               	return	
 13339                           
 13340                           ;usb_device.c: 1714: {
 13341                           ;usb_device.c: 1715: USBCtrlEPAllowStatusStage();
 13342  011802  EC48  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13343                           
 13344                           ;usb_device.c: 1716: }
 13345                           ;usb_device.c: 1717: }
 13346  011806  0012               	return	
 13347  011808                     i2l6123:
 13348                           
 13349                           ;usb_device.c: 1718: else
 13350                           ;usb_device.c: 1719: {
 13351                           ;usb_device.c: 1730: controlTransferState = 2;
 13352  011808  0E02               	movlw	2
 13353  01180A  6E29               	movwf	_controlTransferState,c	;volatile
 13354                           
 13355                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->CNT = 8;
 13356  01180C  EE20 F001          	lfsr	2,1
 13357  011810  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13358  011812  26D9               	addwf	fsr2l,f,c
 13359  011814  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13360  011816  22DA               	addwfc	fsr2h,f,c
 13361  011818  0E08               	movlw	8
 13362  01181A  6EDF               	movwf	indf2,c
 13363                           
 13364                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13365  01181C  EE20 F002          	lfsr	2,2
 13366  011820  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13367  011822  26D9               	addwf	fsr2l,f,c
 13368  011824  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13369  011826  22DA               	addwfc	fsr2h,f,c
 13370  011828  0E30               	movlw	48
 13371  01182A  6EDE               	movwf	postinc2,c
 13372  01182C  0E0D               	movlw	13
 13373  01182E  6EDD               	movwf	postdec2,c
 13374                           
 13375                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13376  011830  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13377  011834  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13378  011838  0E04               	movlw	4
 13379  01183A  6EDF               	movwf	indf2,c
 13380                           
 13381                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13382  01183C  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13383  011840  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13384  011844  0E00               	movlw	0
 13385  011846  8EDB               	bsf	plusw2,7,c
 13386                           
 13387                           ;usb_device.c: 1739: USBStatusStageEnabledFlag2 = 0;
 13388  011848  0E00               	movlw	0
 13389  01184A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13390                           
 13391                           ;usb_device.c: 1740: USBStatusStageEnabledFlag1 = 0;
 13392  01184C  0E00               	movlw	0
 13393  01184E  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13394                           
 13395                           ;usb_device.c: 1741: if(USBDeferStatusStagePacket == 0)
 13396  011850  5025               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 13397  011852  A4D8               	btfss	status,2,c
 13398  011854  0012               	return	
 13399                           
 13400                           ;usb_device.c: 1742: {
 13401                           ;usb_device.c: 1743: USBCtrlEPAllowStatusStage();
 13402  011856  EC48  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13403  01185A  0012               	return	
 13404  01185C                     __end_of_USBCtrlEPServiceComplete:
 13405                           	opt stack 0
 13406                           pclatu	equ	0xFFB
 13407                           pclath	equ	0xFFA
 13408                           tblptru	equ	0xFF8
 13409                           tblptrh	equ	0xFF7
 13410                           tblptrl	equ	0xFF6
 13411                           tablat	equ	0xFF5
 13412                           prodh	equ	0xFF4
 13413                           prodl	equ	0xFF3
 13414                           intcon	equ	0xFF2
 13415                           intcon2	equ	0xFF1
 13416                           indf0	equ	0xFEF
 13417                           postinc0	equ	0xFEE
 13418                           fsr0h	equ	0xFEA
 13419                           fsr0l	equ	0xFE9
 13420                           wreg	equ	0xFE8
 13421                           indf1	equ	0xFE7
 13422                           postinc1	equ	0xFE6
 13423                           postdec1	equ	0xFE5
 13424                           fsr1h	equ	0xFE2
 13425                           fsr1l	equ	0xFE1
 13426                           indf2	equ	0xFDF
 13427                           postinc2	equ	0xFDE
 13428                           postdec2	equ	0xFDD
 13429                           plusw2	equ	0xFDB
 13430                           fsr2h	equ	0xFDA
 13431                           fsr2l	equ	0xFD9
 13432                           status	equ	0xFD8
 13433                           
 13434 ;; *************** function _USBCtrlEPAllowDataStage *****************
 13435 ;; Defined at:
 13436 ;;		line 1489 in file "../My_library/usb/usb_device.c"
 13437 ;; Parameters:    Size  Location     Type
 13438 ;;		None
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;		None
 13441 ;; Return value:  Size  Location     Type
 13442 ;;		None               void
 13443 ;; Registers used:
 13444 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13445 ;; Tracked objects:
 13446 ;;		On entry : 0/0
 13447 ;;		On exit  : 0/0
 13448 ;;		Unchanged: 0/0
 13449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13454 ;;Total ram usage:        0 bytes
 13455 ;; Hardware stack levels used:    1
 13456 ;; Hardware stack levels required when called:    1
 13457 ;; This function calls:
 13458 ;;		_USBCtrlTrfTxService
 13459 ;; This function is called by:
 13460 ;;		_USBCtrlEPServiceComplete
 13461 ;; This function uses a non-reentrant model
 13462 ;;
 13463                           
 13464                           	psect	text70
 13465  012BD6                     __ptext70:
 13466                           	opt stack 0
 13467  012BD6                     _USBCtrlEPAllowDataStage:
 13468                           	opt stack 17
 13469                           
 13470                           ;usb_device.c: 1491: USBDeferINDataStagePackets = 0;
 13471                           
 13472                           ;incstack = 0
 13473  012BD6  0E00               	movlw	0
 13474  012BD8  6E23               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13475                           
 13476                           ;usb_device.c: 1492: USBDeferOUTDataStagePackets = 0;
 13477  012BDA  0E00               	movlw	0
 13478  012BDC  6E24               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13479                           
 13480                           ;usb_device.c: 1494: if(controlTransferState == 2)
 13481  012BDE  0E02               	movlw	2
 13482  012BE0  1829               	xorwf	_controlTransferState,w,c	;volatile
 13483  012BE2  A4D8               	btfss	status,2,c
 13484  012BE4  D01F               	goto	i2l5733
 13485                           
 13486                           ;usb_device.c: 1495: {
 13487                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->CNT = 8;
 13488  012BE6  EE20 F001          	lfsr	2,1
 13489  012BEA  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13490  012BEC  26D9               	addwf	fsr2l,f,c
 13491  012BEE  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13492  012BF0  22DA               	addwfc	fsr2h,f,c
 13493  012BF2  0E08               	movlw	8
 13494  012BF4  6EDF               	movwf	indf2,c
 13495                           
 13496                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13497  012BF6  EE20 F002          	lfsr	2,2
 13498  012BFA  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13499  012BFC  26D9               	addwf	fsr2l,f,c
 13500  012BFE  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13501  012C00  22DA               	addwfc	fsr2h,f,c
 13502  012C02  0E38               	movlw	56
 13503  012C04  6EDE               	movwf	postinc2,c
 13504  012C06  0E0D               	movlw	13
 13505  012C08  6EDD               	movwf	postdec2,c
 13506                           
 13507                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13508  012C0A  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13509  012C0E  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13510  012C12  0E48               	movlw	72
 13511  012C14  6EDF               	movwf	indf2,c
 13512                           
 13513                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13514  012C16  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13515  012C1A  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13516  012C1E  0E00               	movlw	0
 13517  012C20  8EDB               	bsf	plusw2,7,c
 13518                           
 13519                           ;usb_device.c: 1501: }
 13520  012C22  0012               	return	
 13521  012C24                     i2l5733:
 13522                           
 13523                           ;usb_device.c: 1502: else
 13524                           ;usb_device.c: 1503: {
 13525                           ;usb_device.c: 1506: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 13526  012C24  500E               	movf	_inPipes+4,w,c	;volatile
 13527  012C26  010D               	movlb	13	; () banked
 13528  012C28  5D36               	subwf	54,w,b	;volatile
 13529  012C2A  500F               	movf	_inPipes+5,w,c	;volatile
 13530  012C2C  010D               	movlb	13	; () banked
 13531  012C2E  5937               	subwfb	55,w,b	;volatile
 13532  012C30  B0D8               	btfsc	status,0,c
 13533  012C32  D004               	goto	i2l5737
 13534                           
 13535                           ; BSR set to: 13
 13536                           ;usb_device.c: 1507: {
 13537                           ;usb_device.c: 1508: inPipes[0].wCount.Val = SetupPkt.wLength;
 13538  012C34  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 13539  012C38  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 13540  012C3C                     i2l5737:
 13541                           
 13542                           ; BSR set to: 13
 13543                           ;usb_device.c: 1509: }
 13544                           ;usb_device.c: 1510: USBCtrlTrfTxService();
 13545  012C3C  EC12  F090         	call	_USBCtrlTrfTxService	;wreg free
 13546                           
 13547                           ;usb_device.c: 1515: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 13548  012C40  EE20 F002          	lfsr	2,2
 13549  012C44  5010               	movf	_pBDTEntryIn,w,c
 13550  012C46  26D9               	addwf	fsr2l,f,c
 13551  012C48  5011               	movf	_pBDTEntryIn+1,w,c
 13552  012C4A  22DA               	addwfc	fsr2h,f,c
 13553  012C4C  0E38               	movlw	56
 13554  012C4E  6EDE               	movwf	postinc2,c
 13555  012C50  0E0D               	movlw	13
 13556  012C52  6EDD               	movwf	postdec2,c
 13557                           
 13558                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13559  012C54  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13560  012C58  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13561  012C5C  0E48               	movlw	72
 13562  012C5E  6EDF               	movwf	indf2,c
 13563                           
 13564                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13565  012C60  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13566  012C64  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13567  012C68  0E00               	movlw	0
 13568  012C6A  8EDB               	bsf	plusw2,7,c
 13569  012C6C  0012               	return	
 13570  012C6E                     __end_of_USBCtrlEPAllowDataStage:
 13571                           	opt stack 0
 13572                           pclatu	equ	0xFFB
 13573                           pclath	equ	0xFFA
 13574                           tblptru	equ	0xFF8
 13575                           tblptrh	equ	0xFF7
 13576                           tblptrl	equ	0xFF6
 13577                           tablat	equ	0xFF5
 13578                           prodh	equ	0xFF4
 13579                           prodl	equ	0xFF3
 13580                           intcon	equ	0xFF2
 13581                           intcon2	equ	0xFF1
 13582                           indf0	equ	0xFEF
 13583                           postinc0	equ	0xFEE
 13584                           fsr0h	equ	0xFEA
 13585                           fsr0l	equ	0xFE9
 13586                           wreg	equ	0xFE8
 13587                           indf1	equ	0xFE7
 13588                           postinc1	equ	0xFE6
 13589                           postdec1	equ	0xFE5
 13590                           fsr1h	equ	0xFE2
 13591                           fsr1l	equ	0xFE1
 13592                           indf2	equ	0xFDF
 13593                           postinc2	equ	0xFDE
 13594                           postdec2	equ	0xFDD
 13595                           plusw2	equ	0xFDB
 13596                           fsr2h	equ	0xFDA
 13597                           fsr2l	equ	0xFD9
 13598                           status	equ	0xFD8
 13599                           
 13600 ;; *************** function _USBCheckStdRequest *****************
 13601 ;; Defined at:
 13602 ;;		line 2690 in file "../My_library/usb/usb_device.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;		None
 13605 ;; Auto vars:     Size  Location     Type
 13606 ;;		None
 13607 ;; Return value:  Size  Location     Type
 13608 ;;		None               void
 13609 ;; Registers used:
 13610 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13611 ;; Tracked objects:
 13612 ;;		On entry : 0/0
 13613 ;;		On exit  : 0/0
 13614 ;;		Unchanged: 0/0
 13615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13620 ;;Total ram usage:        0 bytes
 13621 ;; Hardware stack levels used:    1
 13622 ;; Hardware stack levels required when called:    6
 13623 ;; This function calls:
 13624 ;;		_USBStdFeatureReqHandler
 13625 ;;		_USBStdGetDscHandler
 13626 ;;		_USBStdGetStatusHandler
 13627 ;;		_USBStdSetCfgHandler
 13628 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13629 ;; This function is called by:
 13630 ;;		_USBCtrlTrfSetupHandler
 13631 ;; This function uses a non-reentrant model
 13632 ;;
 13633                           
 13634                           	psect	text71
 13635  011BF2                     __ptext71:
 13636                           	opt stack 0
 13637  011BF2                     _USBCheckStdRequest:
 13638                           	opt stack 13
 13639                           
 13640                           ;usb_device.c: 2692: if(SetupPkt.RequestType != (0x00>>5)) return;
 13641                           
 13642                           ;incstack = 0
 13643  011BF2  010D               	movlb	13	; () banked
 13644  011BF4  3930               	swapf	48,w,b	;volatile
 13645  011BF6  32E8               	rrcf	wreg,f,c
 13646  011BF8  0B03               	andlw	3
 13647  011BFA  0900               	iorlw	0
 13648  011BFC  A4D8               	btfss	status,2,c
 13649  011BFE  0012               	return	
 13650  011C00  D044               	goto	i2l6221
 13651  011C02                     i2l1430:
 13652                           
 13653                           ; BSR set to: 13
 13654                           ;usb_device.c: 2697: inPipes[0].info.bits.busy = 1;
 13655  011C02  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13656                           
 13657                           ; BSR set to: 13
 13658                           ;usb_device.c: 2698: USBDeviceState = ADR_PENDING_STATE;
 13659  011C04  0E08               	movlw	8
 13660  011C06  0100               	movlb	0	; () banked
 13661  011C08  6FBB               	movwf	_USBDeviceState& (0+255),b	;volatile
 13662                           
 13663                           ;usb_device.c: 2700: break;
 13664  011C0A  0012               	return	
 13665  011C0C                     i2l6191:
 13666                           
 13667                           ;usb_device.c: 2702: USBStdGetDscHandler();
 13668  011C0C  EC1B  F08A         	call	_USBStdGetDscHandler	;wreg free
 13669                           
 13670                           ;usb_device.c: 2703: break;
 13671  011C10  0012               	return	
 13672  011C12                     i2l6193:
 13673                           
 13674                           ;usb_device.c: 2705: USBStdSetCfgHandler();
 13675  011C12  EC1A  F08D         	call	_USBStdSetCfgHandler	;wreg free
 13676                           
 13677                           ;usb_device.c: 2706: break;
 13678  011C16  0012               	return	
 13679  011C18                     i2l6195:
 13680                           
 13681                           ;usb_device.c: 2708: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 13682  011C18  0E2C               	movlw	low _USBActiveConfiguration
 13683  011C1A  6E0A               	movwf	_inPipes,c	;volatile
 13684  011C1C  0E00               	movlw	high _USBActiveConfiguration
 13685  011C1E  6E0B               	movwf	_inPipes+1,c	;volatile
 13686                           
 13687                           ;usb_device.c: 2709: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13688  011C20  800D               	bsf	_inPipes+3,0,c	;volatile
 13689                           
 13690                           ;usb_device.c: 2710: inPipes[0].wCount.v[0] = 1;
 13691  011C22  0E01               	movlw	1
 13692  011C24  6E0E               	movwf	_inPipes+4,c	;volatile
 13693                           
 13694                           ;usb_device.c: 2711: inPipes[0].info.bits.busy = 1;
 13695  011C26  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13696                           
 13697                           ;usb_device.c: 2712: break;
 13698  011C28  0012               	return	
 13699  011C2A                     i2l6203:
 13700                           
 13701                           ;usb_device.c: 2714: USBStdGetStatusHandler();
 13702  011C2A  EC45  F095         	call	_USBStdGetStatusHandler	;wreg free
 13703                           
 13704                           ;usb_device.c: 2715: break;
 13705  011C2E  0012               	return	
 13706  011C30                     i2l6205:
 13707                           
 13708                           ;usb_device.c: 2717: case 3:
 13709                           ;usb_device.c: 2718: USBStdFeatureReqHandler();
 13710  011C30  EC74  F083         	call	_USBStdFeatureReqHandler	;wreg free
 13711                           
 13712                           ;usb_device.c: 2719: break;
 13713  011C34  0012               	return	
 13714  011C36                     i2l6207:
 13715                           
 13716                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13717  011C36  010D               	movlb	13	; () banked
 13718  011C38  5134               	movf	52,w,b	;volatile
 13719  011C3A  0D01               	mullw	1
 13720  011C3C  0ED5               	movlw	low _USBAlternateInterface
 13721  011C3E  24F3               	addwf	prodl,w,c
 13722  011C40  6E0A               	movwf	_inPipes,c	;volatile
 13723  011C42  0E00               	movlw	high _USBAlternateInterface
 13724  011C44  20F4               	addwfc	prodh,w,c
 13725  011C46  6E0B               	movwf	_inPipes+1,c	;volatile
 13726                           
 13727                           ; BSR set to: 13
 13728                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13729  011C48  800D               	bsf	_inPipes+3,0,c	;volatile
 13730                           
 13731                           ; BSR set to: 13
 13732                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 13733  011C4A  0E01               	movlw	1
 13734  011C4C  6E0E               	movwf	_inPipes+4,c	;volatile
 13735                           
 13736                           ; BSR set to: 13
 13737                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 13738  011C4E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13739                           
 13740                           ;usb_device.c: 2725: break;
 13741  011C50  0012               	return	
 13742  011C52                     i2l1439:
 13743                           
 13744                           ; BSR set to: 13
 13745                           ;usb_device.c: 2727: inPipes[0].info.bits.busy = 1;
 13746  011C52  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13747                           
 13748                           ; BSR set to: 13
 13749                           ;usb_device.c: 2728: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 13750  011C54  010D               	movlb	13	; () banked
 13751  011C56  5134               	movf	52,w,b	;volatile
 13752  011C58  0D01               	mullw	1
 13753  011C5A  0ED5               	movlw	low _USBAlternateInterface
 13754  011C5C  24F3               	addwf	prodl,w,c
 13755  011C5E  6ED9               	movwf	fsr2l,c
 13756  011C60  0E00               	movlw	high _USBAlternateInterface
 13757  011C62  20F4               	addwfc	prodh,w,c
 13758  011C64  6EDA               	movwf	fsr2h,c
 13759  011C66  CD32 FFDF          	movff	3378,indf2	;volatile
 13760                           
 13761                           ;usb_device.c: 2729: break;
 13762  011C6A  0012               	return	
 13763  011C6C                     i2l6217:
 13764                           
 13765                           ; BSR set to: 13
 13766                           ;usb_device.c: 2731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 13767  011C6C  0E00               	movlw	0
 13768  011C6E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13769  011C70  0E02               	movlw	2
 13770  011C72  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13771  011C74  0E00               	movlw	0
 13772  011C76  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13773  011C78  0E00               	movlw	0
 13774  011C7A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13775  011C7C  0E00               	movlw	0
 13776  011C7E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13777  011C80  0E00               	movlw	0
 13778  011C82  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13779  011C84  EC14  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13780                           
 13781                           ;usb_device.c: 2736: }
 13782                           
 13783                           ;usb_device.c: 2735: break;
 13784                           
 13785                           ;usb_device.c: 2734: default:
 13786                           
 13787                           ;usb_device.c: 2733: case 12:
 13788                           
 13789                           ;usb_device.c: 2732: break;
 13790  011C88  0012               	return	
 13791  011C8A                     i2l6221:
 13792  011C8A  010D               	movlb	13	; () banked
 13793  011C8C  5131               	movf	49,w,b	;volatile
 13794                           
 13795                           ; Switch size 1, requested type "space"
 13796                           ; Number of cases is 11, Range of values is 0 to 12
 13797                           ; switch strategies available:
 13798                           ; Name         Instructions Cycles
 13799                           ; simple_byte           34    18 (average)
 13800                           ;	Chosen strategy is simple_byte
 13801  011C8E  0A00               	xorlw	0	; case 0
 13802  011C90  B4D8               	btfsc	status,2,c
 13803  011C92  D7CB               	goto	i2l6203
 13804  011C94  0A01               	xorlw	1	; case 1
 13805  011C96  B4D8               	btfsc	status,2,c
 13806  011C98  D7CB               	goto	i2l6205
 13807  011C9A  0A02               	xorlw	2	; case 3
 13808  011C9C  B4D8               	btfsc	status,2,c
 13809  011C9E  D7C8               	goto	i2l6205
 13810  011CA0  0A06               	xorlw	6	; case 5
 13811  011CA2  B4D8               	btfsc	status,2,c
 13812  011CA4  D7AE               	goto	i2l1430
 13813  011CA6  0A03               	xorlw	3	; case 6
 13814  011CA8  B4D8               	btfsc	status,2,c
 13815  011CAA  D7B0               	goto	i2l6191
 13816  011CAC  0A01               	xorlw	1	; case 7
 13817  011CAE  B4D8               	btfsc	status,2,c
 13818  011CB0  D7DD               	goto	i2l6217
 13819  011CB2  0A0F               	xorlw	15	; case 8
 13820  011CB4  B4D8               	btfsc	status,2,c
 13821  011CB6  D7B0               	goto	i2l6195
 13822  011CB8  0A01               	xorlw	1	; case 9
 13823  011CBA  B4D8               	btfsc	status,2,c
 13824  011CBC  D7AA               	goto	i2l6193
 13825  011CBE  0A03               	xorlw	3	; case 10
 13826  011CC0  B4D8               	btfsc	status,2,c
 13827  011CC2  D7B9               	goto	i2l6207
 13828  011CC4  0A01               	xorlw	1	; case 11
 13829  011CC6  B4D8               	btfsc	status,2,c
 13830  011CC8  D7C4               	goto	i2l1439
 13831  011CCA  0A07               	xorlw	7	; case 12
 13832  011CCC  0012               	return	
 13833  011CCE                     __end_of_USBCheckStdRequest:
 13834                           	opt stack 0
 13835                           pclatu	equ	0xFFB
 13836                           pclath	equ	0xFFA
 13837                           tblptru	equ	0xFF8
 13838                           tblptrh	equ	0xFF7
 13839                           tblptrl	equ	0xFF6
 13840                           tablat	equ	0xFF5
 13841                           prodh	equ	0xFF4
 13842                           prodl	equ	0xFF3
 13843                           intcon	equ	0xFF2
 13844                           intcon2	equ	0xFF1
 13845                           indf0	equ	0xFEF
 13846                           postinc0	equ	0xFEE
 13847                           fsr0h	equ	0xFEA
 13848                           fsr0l	equ	0xFE9
 13849                           wreg	equ	0xFE8
 13850                           indf1	equ	0xFE7
 13851                           postinc1	equ	0xFE6
 13852                           postdec1	equ	0xFE5
 13853                           fsr1h	equ	0xFE2
 13854                           fsr1l	equ	0xFE1
 13855                           indf2	equ	0xFDF
 13856                           postinc2	equ	0xFDE
 13857                           postdec2	equ	0xFDD
 13858                           plusw2	equ	0xFDB
 13859                           fsr2h	equ	0xFDA
 13860                           fsr2l	equ	0xFD9
 13861                           status	equ	0xFD8
 13862                           
 13863 ;; *************** function _USBStdSetCfgHandler *****************
 13864 ;; Defined at:
 13865 ;;		line 1969 in file "../My_library/usb/usb_device.c"
 13866 ;; Parameters:    Size  Location     Type
 13867 ;;		None
 13868 ;; Auto vars:     Size  Location     Type
 13869 ;;  i               1   20[COMRAM] unsigned char 
 13870 ;; Return value:  Size  Location     Type
 13871 ;;		None               void
 13872 ;; Registers used:
 13873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13874 ;; Tracked objects:
 13875 ;;		On entry : 0/0
 13876 ;;		On exit  : 0/0
 13877 ;;		Unchanged: 0/0
 13878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13883 ;;Total ram usage:        1 bytes
 13884 ;; Hardware stack levels used:    1
 13885 ;; Hardware stack levels required when called:    5
 13886 ;; This function calls:
 13887 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13888 ;;		i2_memset
 13889 ;; This function is called by:
 13890 ;;		_USBCheckStdRequest
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           
 13894                           	psect	text72
 13895  011A34                     __ptext72:
 13896                           	opt stack 0
 13897  011A34                     _USBStdSetCfgHandler:
 13898                           	opt stack 13
 13899                           
 13900                           ;usb_device.c: 1971: uint8_t i;
 13901                           ;usb_device.c: 1974: inPipes[0].info.bits.busy = 1;
 13902                           
 13903                           ;incstack = 0
 13904  011A34  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13905                           
 13906                           ;usb_device.c: 1977: memset((void*)&UEP1,0x00,(2));;
 13907  011A36  0E27               	movlw	39
 13908  011A38  6E2E               	movwf	i2memset@p1,c
 13909  011A3A  0E0F               	movlw	15
 13910  011A3C  6E2F               	movwf	i2memset@p1+1,c
 13911  011A3E  0E00               	movlw	0
 13912  011A40  6E31               	movwf	i2memset@c+1,c
 13913  011A42  0E00               	movlw	0
 13914  011A44  6E30               	movwf	i2memset@c,c
 13915  011A46  0E00               	movlw	0
 13916  011A48  6E33               	movwf	i2memset@n+1,c
 13917  011A4A  0E02               	movlw	2
 13918  011A4C  6E32               	movwf	i2memset@n,c
 13919  011A4E  ECC5  F09B         	call	i2_memset	;wreg free
 13920                           
 13921                           ;usb_device.c: 1980: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13922  011A52  0E00               	movlw	0
 13923  011A54  6E2E               	movwf	i2memset@p1,c
 13924  011A56  0E0D               	movlw	13
 13925  011A58  6E2F               	movwf	i2memset@p1+1,c
 13926  011A5A  0E00               	movlw	0
 13927  011A5C  6E31               	movwf	i2memset@c+1,c
 13928  011A5E  0E00               	movlw	0
 13929  011A60  6E30               	movwf	i2memset@c,c
 13930  011A62  0E00               	movlw	0
 13931  011A64  6E33               	movwf	i2memset@n+1,c
 13932  011A66  0E30               	movlw	48
 13933  011A68  6E32               	movwf	i2memset@n,c
 13934  011A6A  ECC5  F09B         	call	i2_memset	;wreg free
 13935                           
 13936                           ;usb_device.c: 1983: UCONbits.PPBRST = 1;
 13937  011A6E  8C65               	bsf	3941,6,c	;volatile
 13938                           
 13939                           ;usb_device.c: 1988: for(i = 0; i < (uint8_t)(2+1u); i++)
 13940  011A70  0E00               	movlw	0
 13941  011A72  6E42               	movwf	USBStdSetCfgHandler@i,c
 13942  011A74                     i2l5753:
 13943  011A74  0E02               	movlw	2
 13944  011A76  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 13945  011A78  D001               	goto	i2l5757
 13946  011A7A  D016               	goto	i2l5763
 13947  011A7C                     i2l5757:
 13948                           
 13949                           ;usb_device.c: 1989: {
 13950                           ;usb_device.c: 1990: ep_data_in[i].Val = 0u;
 13951  011A7C  5042               	movf	USBStdSetCfgHandler@i,w,c
 13952  011A7E  0D01               	mullw	1
 13953  011A80  0E16               	movlw	low _ep_data_in
 13954  011A82  24F3               	addwf	prodl,w,c
 13955  011A84  6ED9               	movwf	fsr2l,c
 13956  011A86  0E00               	movlw	high _ep_data_in
 13957  011A88  20F4               	addwfc	prodh,w,c
 13958  011A8A  6EDA               	movwf	fsr2h,c
 13959  011A8C  0E00               	movlw	0
 13960  011A8E  6EDF               	movwf	indf2,c
 13961                           
 13962                           ;usb_device.c: 1991: ep_data_out[i].Val = 0u;
 13963  011A90  5042               	movf	USBStdSetCfgHandler@i,w,c
 13964  011A92  0D01               	mullw	1
 13965  011A94  0E19               	movlw	low _ep_data_out
 13966  011A96  24F3               	addwf	prodl,w,c
 13967  011A98  6ED9               	movwf	fsr2l,c
 13968  011A9A  0E00               	movlw	high _ep_data_out
 13969  011A9C  20F4               	addwfc	prodh,w,c
 13970  011A9E  6EDA               	movwf	fsr2h,c
 13971  011AA0  0E00               	movlw	0
 13972  011AA2  6EDF               	movwf	indf2,c
 13973  011AA4  2A42               	incf	USBStdSetCfgHandler@i,f,c
 13974  011AA6  D7E6               	goto	i2l5753
 13975  011AA8                     i2l5763:
 13976                           
 13977                           ;usb_device.c: 1992: }
 13978                           ;usb_device.c: 1995: memset((void*)&USBAlternateInterface,0x00,2);
 13979  011AA8  0ED5               	movlw	low _USBAlternateInterface
 13980  011AAA  6E2E               	movwf	i2memset@p1,c
 13981  011AAC  0E00               	movlw	high _USBAlternateInterface
 13982  011AAE  6E2F               	movwf	i2memset@p1+1,c
 13983  011AB0  0E00               	movlw	0
 13984  011AB2  6E31               	movwf	i2memset@c+1,c
 13985  011AB4  0E00               	movlw	0
 13986  011AB6  6E30               	movwf	i2memset@c,c
 13987  011AB8  0E00               	movlw	0
 13988  011ABA  6E33               	movwf	i2memset@n+1,c
 13989  011ABC  0E02               	movlw	2
 13990  011ABE  6E32               	movwf	i2memset@n,c
 13991  011AC0  ECC5  F09B         	call	i2_memset	;wreg free
 13992                           
 13993                           ;usb_device.c: 1998: UCONbits.PPBRST = 0;
 13994  011AC4  9C65               	bcf	3941,6,c	;volatile
 13995                           
 13996                           ;usb_device.c: 2000: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13997  011AC6  0E08               	movlw	8
 13998  011AC8  6E10               	movwf	_pBDTEntryIn,c
 13999  011ACA  0E0D               	movlw	13
 14000  011ACC  6E11               	movwf	_pBDTEntryIn+1,c
 14001                           
 14002                           ;usb_device.c: 2003: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 14003  011ACE  0E00               	movlw	0
 14004  011AD0  6E1C               	movwf	_pBDTEntryEP0OutCurrent,c
 14005  011AD2  0E0D               	movlw	13
 14006  011AD4  6E1D               	movwf	_pBDTEntryEP0OutCurrent+1,c
 14007                           
 14008                           ;usb_device.c: 2004: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14009  011AD6  C01C  F01E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14010  011ADA  C01D  F01F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14011                           
 14012                           ;usb_device.c: 2007: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 14013  011ADE  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 14014                           
 14015                           ;usb_device.c: 2010: if(USBActiveConfiguration == 0)
 14016  011AE2  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 14017  011AE4  A4D8               	btfss	status,2,c
 14018  011AE6  D004               	goto	i2l5779
 14019                           
 14020                           ;usb_device.c: 2011: {
 14021                           ;usb_device.c: 2013: USBDeviceState = ADDRESS_STATE;
 14022  011AE8  0E10               	movlw	16
 14023  011AEA  0100               	movlb	0	; () banked
 14024  011AEC  6FBB               	movwf	_USBDeviceState& (0+255),b	;volatile
 14025                           
 14026                           ;usb_device.c: 2014: }
 14027  011AEE  0012               	return	
 14028  011AF0                     i2l5779:
 14029                           
 14030                           ;usb_device.c: 2015: else
 14031                           ;usb_device.c: 2016: {
 14032                           ;usb_device.c: 2018: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 14033  011AF0  0E00               	movlw	0
 14034  011AF2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14035  011AF4  0E01               	movlw	1
 14036  011AF6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14037  011AF8  0E2C               	movlw	low _USBActiveConfiguration
 14038  011AFA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14039  011AFC  0E00               	movlw	high _USBActiveConfiguration
 14040  011AFE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14041  011B00  0E00               	movlw	0
 14042  011B02  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14043  011B04  0E01               	movlw	1
 14044  011B06  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14045  011B08  EC14  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14046                           
 14047                           ;usb_device.c: 2023: USBDeviceState = CONFIGURED_STATE;
 14048  011B0C  0E20               	movlw	32
 14049  011B0E  0100               	movlb	0	; () banked
 14050  011B10  6FBB               	movwf	_USBDeviceState& (0+255),b	;volatile
 14051  011B12  0012               	return	
 14052  011B14                     __end_of_USBStdSetCfgHandler:
 14053                           	opt stack 0
 14054                           pclatu	equ	0xFFB
 14055                           pclath	equ	0xFFA
 14056                           tblptru	equ	0xFF8
 14057                           tblptrh	equ	0xFF7
 14058                           tblptrl	equ	0xFF6
 14059                           tablat	equ	0xFF5
 14060                           prodh	equ	0xFF4
 14061                           prodl	equ	0xFF3
 14062                           intcon	equ	0xFF2
 14063                           intcon2	equ	0xFF1
 14064                           indf0	equ	0xFEF
 14065                           postinc0	equ	0xFEE
 14066                           fsr0h	equ	0xFEA
 14067                           fsr0l	equ	0xFE9
 14068                           wreg	equ	0xFE8
 14069                           indf1	equ	0xFE7
 14070                           postinc1	equ	0xFE6
 14071                           postdec1	equ	0xFE5
 14072                           fsr1h	equ	0xFE2
 14073                           fsr1l	equ	0xFE1
 14074                           indf2	equ	0xFDF
 14075                           postinc2	equ	0xFDE
 14076                           postdec2	equ	0xFDD
 14077                           plusw2	equ	0xFDB
 14078                           fsr2h	equ	0xFDA
 14079                           fsr2l	equ	0xFD9
 14080                           status	equ	0xFD8
 14081                           
 14082 ;; *************** function i2_memset *****************
 14083 ;; Defined at:
 14084 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  p1              2    0[COMRAM] PTR void 
 14087 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14088 ;;  c               2    2[COMRAM] int 
 14089 ;;  n               2    4[COMRAM] unsigned int 
 14090 ;; Auto vars:     Size  Location     Type
 14091 ;;  memset          2    6[COMRAM] PTR unsigned char 
 14092 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14093 ;; Return value:  Size  Location     Type
 14094 ;;                  2    0[COMRAM] PTR void 
 14095 ;; Registers used:
 14096 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14097 ;; Tracked objects:
 14098 ;;		On entry : 0/0
 14099 ;;		On exit  : 0/0
 14100 ;;		Unchanged: 0/0
 14101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14102 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14105 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14106 ;;Total ram usage:        8 bytes
 14107 ;; Hardware stack levels used:    1
 14108 ;; This function calls:
 14109 ;;		Nothing
 14110 ;; This function is called by:
 14111 ;;		_USBStdSetCfgHandler
 14112 ;;		i2_USBDeviceInit
 14113 ;; This function uses a non-reentrant model
 14114 ;;
 14115                           
 14116                           	psect	text73
 14117  01378A                     __ptext73:
 14118                           	opt stack 0
 14119  01378A                     i2_memset:
 14120                           	opt stack 20
 14121                           
 14122                           ; BSR set to: 0
 14123                           ;incstack = 0
 14124  01378A  C02E  F034         	movff	i2memset@p1,i2memset@p
 14125  01378E  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 14126  013792  D008               	goto	i2l5683
 14127  013794                     i2l5679:
 14128  013794  C034  FFD9         	movff	i2memset@p,fsr2l
 14129  013798  C035  FFDA         	movff	i2memset@p+1,fsr2h
 14130  01379C  C030  FFDF         	movff	i2memset@c,indf2
 14131  0137A0  4A34               	infsnz	i2memset@p,f,c
 14132  0137A2  2A35               	incf	i2memset@p+1,f,c
 14133  0137A4                     i2l5683:
 14134  0137A4  0632               	decf	i2memset@n,f,c
 14135  0137A6  A0D8               	btfss	status,0,c
 14136  0137A8  0633               	decf	i2memset@n+1,f,c
 14137  0137AA  2832               	incf	i2memset@n,w,c
 14138  0137AC  E1F3               	bnz	i2l5679
 14139  0137AE  2833               	incf	i2memset@n+1,w,c
 14140  0137B0  B4D8               	btfsc	status,2,c
 14141  0137B2  0012               	return	
 14142  0137B4  D7EF               	goto	i2l5679
 14143  0137B6                     __end_ofi2_memset:
 14144                           	opt stack 0
 14145                           pclatu	equ	0xFFB
 14146                           pclath	equ	0xFFA
 14147                           tblptru	equ	0xFF8
 14148                           tblptrh	equ	0xFF7
 14149                           tblptrl	equ	0xFF6
 14150                           tablat	equ	0xFF5
 14151                           prodh	equ	0xFF4
 14152                           prodl	equ	0xFF3
 14153                           intcon	equ	0xFF2
 14154                           intcon2	equ	0xFF1
 14155                           indf0	equ	0xFEF
 14156                           postinc0	equ	0xFEE
 14157                           fsr0h	equ	0xFEA
 14158                           fsr0l	equ	0xFE9
 14159                           wreg	equ	0xFE8
 14160                           indf1	equ	0xFE7
 14161                           postinc1	equ	0xFE6
 14162                           postdec1	equ	0xFE5
 14163                           fsr1h	equ	0xFE2
 14164                           fsr1l	equ	0xFE1
 14165                           indf2	equ	0xFDF
 14166                           postinc2	equ	0xFDE
 14167                           postdec2	equ	0xFDD
 14168                           plusw2	equ	0xFDB
 14169                           fsr2h	equ	0xFDA
 14170                           fsr2l	equ	0xFD9
 14171                           status	equ	0xFD8
 14172                           
 14173 ;; *************** function _USBStdGetStatusHandler *****************
 14174 ;; Defined at:
 14175 ;;		line 2130 in file "../My_library/usb/usb_device.c"
 14176 ;; Parameters:    Size  Location     Type
 14177 ;;		None
 14178 ;; Auto vars:     Size  Location     Type
 14179 ;;  p               2    1[COMRAM] PTR struct __BDT
 14180 ;;		 -> NULL(0), BDT(48), 
 14181 ;; Return value:  Size  Location     Type
 14182 ;;		None               void
 14183 ;; Registers used:
 14184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14185 ;; Tracked objects:
 14186 ;;		On entry : 0/0
 14187 ;;		On exit  : 0/0
 14188 ;;		Unchanged: 0/0
 14189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14193 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14194 ;;Total ram usage:        3 bytes
 14195 ;; Hardware stack levels used:    1
 14196 ;; This function calls:
 14197 ;;		Nothing
 14198 ;; This function is called by:
 14199 ;;		_USBCheckStdRequest
 14200 ;; This function uses a non-reentrant model
 14201 ;;
 14202                           
 14203                           	psect	text74
 14204  012A8A                     __ptext74:
 14205                           	opt stack 0
 14206  012A8A                     _USBStdGetStatusHandler:
 14207                           	opt stack 18
 14208                           
 14209                           ;usb_device.c: 2132: CtrlTrfData[0] = 0;
 14210                           
 14211                           ;incstack = 0
 14212  012A8A  0E00               	movlw	0
 14213  012A8C  010D               	movlb	13	; () banked
 14214  012A8E  6F38               	movwf	56,b	;volatile
 14215                           
 14216                           ;usb_device.c: 2133: CtrlTrfData[1] = 0;
 14217  012A90  0E00               	movlw	0
 14218  012A92  010D               	movlb	13	; () banked
 14219  012A94  6F39               	movwf	57,b	;volatile
 14220                           
 14221                           ;usb_device.c: 2135: switch(SetupPkt.Recipient)
 14222  012A96  D038               	goto	i2l5835
 14223  012A98                     i2l1366:
 14224                           
 14225                           ; BSR set to: 13
 14226                           ;usb_device.c: 2138: inPipes[0].info.bits.busy = 1;
 14227  012A98  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14228                           
 14229                           ; BSR set to: 13
 14230                           ;usb_device.c: 2146: }
 14231                           ;usb_device.c: 2148: if(RemoteWakeup == 1)
 14232                           
 14233                           ; BSR set to: 13
 14234                           
 14235                           ; BSR set to: 13
 14236                           ;usb_device.c: 2144: {
 14237                           ;usb_device.c: 2145: CtrlTrfData[0]|=0x01;
 14238                           
 14239                           ;usb_device.c: 2143: if(0 == 1)
 14240  012A9A  0422               	decf	_RemoteWakeup,w,c	;volatile
 14241  012A9C  A4D8               	btfss	status,2,c
 14242  012A9E  D040               	goto	i2l1369
 14243                           
 14244                           ; BSR set to: 13
 14245                           ;usb_device.c: 2149: {
 14246                           ;usb_device.c: 2150: CtrlTrfData[0]|=0x02;
 14247  012AA0  010D               	movlb	13	; () banked
 14248  012AA2  8338               	bsf	56,1,b	;volatile
 14249                           
 14250                           ; BSR set to: 13
 14251                           ;usb_device.c: 2151: }
 14252                           ;usb_device.c: 2152: break;
 14253  012AA4  D03D               	goto	i2l1369
 14254  012AA6                     i2l1370:
 14255                           
 14256                           ; BSR set to: 13
 14257                           ;usb_device.c: 2154: inPipes[0].info.bits.busy = 1;
 14258  012AA6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14259                           
 14260                           ;usb_device.c: 2155: break;
 14261  012AA8  D03B               	goto	i2l1369
 14262  012AAA                     i2l1371:
 14263                           
 14264                           ; BSR set to: 13
 14265                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 14266  012AAA  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14267                           
 14268                           ;usb_device.c: 2161: {
 14269                           ;usb_device.c: 2162: BDT_ENTRY *p;
 14270                           ;usb_device.c: 2164: if(SetupPkt.EPDir == 0)
 14271  012AAC  010D               	movlb	13	; () banked
 14272  012AAE  BF34               	btfsc	52,7,b	;volatile
 14273  012AB0  D00B               	goto	i2l5825
 14274                           
 14275                           ; BSR set to: 13
 14276                           ;usb_device.c: 2165: {
 14277                           ;usb_device.c: 2166: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14278  012AB2  010D               	movlb	13	; () banked
 14279  012AB4  5134               	movf	52,w,b	;volatile
 14280  012AB6  0B0F               	andlw	15
 14281  012AB8  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14282  012ABA  502E               	movf	??_USBStdGetStatusHandler,w,c
 14283  012ABC  0D02               	mullw	2
 14284  012ABE  0E9E               	movlw	low _pBDTEntryOut
 14285  012AC0  24F3               	addwf	prodl,w,c
 14286  012AC2  6ED9               	movwf	fsr2l,c
 14287  012AC4  0E00               	movlw	high _pBDTEntryOut
 14288  012AC6  D00A               	goto	L5
 14289  012AC8                     i2l5825:
 14290                           
 14291                           ; BSR set to: 13
 14292                           ;usb_device.c: 2168: else
 14293                           ;usb_device.c: 2169: {
 14294                           ;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 14295  012AC8  010D               	movlb	13	; () banked
 14296  012ACA  5134               	movf	52,w,b	;volatile
 14297  012ACC  0B0F               	andlw	15
 14298  012ACE  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14299  012AD0  502E               	movf	??_USBStdGetStatusHandler,w,c
 14300  012AD2  0D02               	mullw	2
 14301  012AD4  0E10               	movlw	low _pBDTEntryIn
 14302  012AD6  24F3               	addwf	prodl,w,c
 14303  012AD8  6ED9               	movwf	fsr2l,c
 14304  012ADA  0E00               	movlw	high _pBDTEntryIn
 14305  012ADC                     L5:
 14306  012ADC  20F4               	addwfc	prodh,w,c
 14307  012ADE  6EDA               	movwf	fsr2h,c
 14308  012AE0  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 14309  012AE4  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 14310                           
 14311                           ; BSR set to: 13
 14312                           ;usb_device.c: 2171: }
 14313                           ;usb_device.c: 2173: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 14314                           
 14315                           ; BSR set to: 13
 14316  012AE8  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14317  012AEC  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14318  012AF0  AEDF               	btfss	indf2,7,c
 14319  012AF2  D016               	goto	i2l1369
 14320                           
 14321                           ; BSR set to: 13
 14322  012AF4  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14323  012AF8  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14324  012AFC  A4DF               	btfss	indf2,2,c
 14325  012AFE  D010               	goto	i2l1369
 14326                           
 14327                           ; BSR set to: 13
 14328                           ;usb_device.c: 2174: CtrlTrfData[0]=0x01;
 14329  012B00  0E01               	movlw	1
 14330  012B02  010D               	movlb	13	; () banked
 14331  012B04  6F38               	movwf	56,b	;volatile
 14332                           
 14333                           ; BSR set to: 13
 14334                           ;usb_device.c: 2176: }
 14335                           ;usb_device.c: 2177: }
 14336                           
 14337                           ; BSR set to: 13
 14338                           ;usb_device.c: 2175: break;
 14339  012B06  D00C               	goto	i2l1369
 14340  012B08                     i2l5835:
 14341                           
 14342                           ; BSR set to: 13
 14343  012B08  010D               	movlb	13	; () banked
 14344  012B0A  5130               	movf	48,w,b	;volatile
 14345  012B0C  0B1F               	andlw	31
 14346                           
 14347                           ; Switch size 1, requested type "space"
 14348                           ; Number of cases is 3, Range of values is 0 to 2
 14349                           ; switch strategies available:
 14350                           ; Name         Instructions Cycles
 14351                           ; simple_byte           10     6 (average)
 14352                           ;	Chosen strategy is simple_byte
 14353  012B0E  0A00               	xorlw	0	; case 0
 14354  012B10  B4D8               	btfsc	status,2,c
 14355  012B12  D7C2               	goto	i2l1366
 14356  012B14  0A01               	xorlw	1	; case 1
 14357  012B16  B4D8               	btfsc	status,2,c
 14358  012B18  D7C6               	goto	i2l1370
 14359  012B1A  0A03               	xorlw	3	; case 2
 14360  012B1C  B4D8               	btfsc	status,2,c
 14361  012B1E  D7C5               	goto	i2l1371
 14362  012B20                     i2l1369:
 14363                           
 14364                           ; BSR set to: 13
 14365                           ;usb_device.c: 2179: if(inPipes[0].info.bits.busy == 1)
 14366  012B20  AE0D               	btfss	_inPipes+3,7,c	;volatile
 14367  012B22  0012               	return	
 14368                           
 14369                           ; BSR set to: 13
 14370                           ;usb_device.c: 2180: {
 14371                           ;usb_device.c: 2181: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 14372  012B24  0E38               	movlw	56
 14373  012B26  6E0A               	movwf	_inPipes,c	;volatile
 14374  012B28  0E0D               	movlw	13
 14375  012B2A  6E0B               	movwf	_inPipes+1,c	;volatile
 14376                           
 14377                           ; BSR set to: 13
 14378                           ;usb_device.c: 2182: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14379  012B2C  800D               	bsf	_inPipes+3,0,c	;volatile
 14380                           
 14381                           ; BSR set to: 13
 14382                           ;usb_device.c: 2183: inPipes[0].wCount.v[0] = 2;
 14383  012B2E  0E02               	movlw	2
 14384  012B30  6E0E               	movwf	_inPipes+4,c	;volatile
 14385  012B32  0012               	return	
 14386  012B34                     __end_of_USBStdGetStatusHandler:
 14387                           	opt stack 0
 14388                           pclatu	equ	0xFFB
 14389                           pclath	equ	0xFFA
 14390                           tblptru	equ	0xFF8
 14391                           tblptrh	equ	0xFF7
 14392                           tblptrl	equ	0xFF6
 14393                           tablat	equ	0xFF5
 14394                           prodh	equ	0xFF4
 14395                           prodl	equ	0xFF3
 14396                           intcon	equ	0xFF2
 14397                           intcon2	equ	0xFF1
 14398                           indf0	equ	0xFEF
 14399                           postinc0	equ	0xFEE
 14400                           fsr0h	equ	0xFEA
 14401                           fsr0l	equ	0xFE9
 14402                           wreg	equ	0xFE8
 14403                           indf1	equ	0xFE7
 14404                           postinc1	equ	0xFE6
 14405                           postdec1	equ	0xFE5
 14406                           fsr1h	equ	0xFE2
 14407                           fsr1l	equ	0xFE1
 14408                           indf2	equ	0xFDF
 14409                           postinc2	equ	0xFDE
 14410                           postdec2	equ	0xFDD
 14411                           plusw2	equ	0xFDB
 14412                           fsr2h	equ	0xFDA
 14413                           fsr2l	equ	0xFD9
 14414                           status	equ	0xFD8
 14415                           
 14416 ;; *************** function _USBStdGetDscHandler *****************
 14417 ;; Defined at:
 14418 ;;		line 2044 in file "../My_library/usb/usb_device.c"
 14419 ;; Parameters:    Size  Location     Type
 14420 ;;		None
 14421 ;; Auto vars:     Size  Location     Type
 14422 ;;		None
 14423 ;; Return value:  Size  Location     Type
 14424 ;;		None               void
 14425 ;; Registers used:
 14426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14427 ;; Tracked objects:
 14428 ;;		On entry : 0/0
 14429 ;;		On exit  : 0/0
 14430 ;;		Unchanged: 0/0
 14431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14436 ;;Total ram usage:        2 bytes
 14437 ;; Hardware stack levels used:    1
 14438 ;; This function calls:
 14439 ;;		Nothing
 14440 ;; This function is called by:
 14441 ;;		_USBCheckStdRequest
 14442 ;; This function uses a non-reentrant model
 14443 ;;
 14444                           
 14445                           	psect	text75
 14446  011436                     __ptext75:
 14447                           	opt stack 0
 14448  011436                     _USBStdGetDscHandler:
 14449                           	opt stack 18
 14450                           
 14451                           ;usb_device.c: 2046: if(SetupPkt.bmRequestType == 0x80)
 14452                           
 14453                           ; BSR set to: 13
 14454                           ;incstack = 0
 14455  011436  0E80               	movlw	128
 14456  011438  010D               	movlb	13	; () banked
 14457  01143A  1930               	xorwf	48,w,b	;volatile
 14458  01143C  A4D8               	btfss	status,2,c
 14459  01143E  0012               	return	
 14460                           
 14461                           ; BSR set to: 13
 14462                           ;usb_device.c: 2047: {
 14463                           ;usb_device.c: 2048: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 14464  011440  0EC0               	movlw	192
 14465  011442  6E0D               	movwf	_inPipes+3,c	;volatile
 14466                           
 14467                           ;usb_device.c: 2050: switch(SetupPkt.bDescriptorType)
 14468  011444  D085               	goto	i2l5813
 14469  011446                     i2l5787:
 14470                           
 14471                           ; BSR set to: 13
 14472                           ;usb_device.c: 2056: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 14473  011446  0E46               	movlw	low _device_dsc
 14474  011448  6E0A               	movwf	_inPipes,c	;volatile
 14475  01144A  0EFF               	movlw	high _device_dsc
 14476  01144C  6E0B               	movwf	_inPipes+1,c	;volatile
 14477                           
 14478                           ; BSR set to: 13
 14479                           ;usb_device.c: 2058: inPipes[0].wCount.Val = sizeof(device_dsc);
 14480  01144E  0E00               	movlw	0
 14481  011450  6E0F               	movwf	_inPipes+5,c	;volatile
 14482  011452  0E12               	movlw	18
 14483  011454  6E0E               	movwf	_inPipes+4,c	;volatile
 14484                           
 14485                           ;usb_device.c: 2059: break;
 14486  011456  0012               	return	
 14487  011458                     i2l5791:
 14488                           
 14489                           ; BSR set to: 13
 14490                           ;usb_device.c: 2064: if(SetupPkt.bDscIndex < 1)
 14491  011458  010D               	movlb	13	; () banked
 14492  01145A  5132               	movf	50,w,b	;volatile
 14493  01145C  A4D8               	btfss	status,2,c
 14494  01145E  D043               	goto	i2l5799
 14495                           
 14496                           ; BSR set to: 13
 14497                           ;usb_device.c: 2065: {
 14498                           ;usb_device.c: 2069: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 14499  011460  010D               	movlb	13	; () banked
 14500  011462  5132               	movf	50,w,b	;volatile
 14501  011464  0D02               	mullw	2
 14502  011466  0E7D               	movlw	low _USB_CD_Ptr
 14503  011468  24F3               	addwf	prodl,w,c
 14504  01146A  6EF6               	movwf	tblptrl,c
 14505  01146C  0EFE               	movlw	high _USB_CD_Ptr
 14506  01146E  20F4               	addwfc	prodh,w,c
 14507  011470  6EF7               	movwf	tblptrh,c
 14508  011472                     	if	1	;There are 3 active tblptr bytes
 14509  011472  6AF8               	clrf	tblptru,c
 14510  011474  0E00               	movlw	low (__mediumconst shr (0+16))
 14511  011476  22F8               	addwfc	tblptru,f,c
 14512  011478                     	endif
 14513  011478  0009               	tblrd		*+
 14514  01147A  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 14515  01147E  000A               	tblrd		*-
 14516  011480  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 14517                           
 14518                           ; BSR set to: 13
 14519                           ;usb_device.c: 2075: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 14520  011484  0E02               	movlw	2
 14521  011486  240A               	addwf	_inPipes,w,c	;volatile
 14522  011488  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14523  01148A  0E00               	movlw	0
 14524  01148C  200B               	addwfc	_inPipes+1,w,c	;volatile
 14525  01148E  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14526  011490  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14527  011494  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14528  011498  0E00               	movlw	low (__mediumconst shr (0+16))
 14529  01149A  6EF8               	movwf	tblptru,c
 14530  01149C  0E0E               	movlw	(high __ramtop+-1)
 14531  01149E  64F7               	cpfsgt	tblptrh,c
 14532  0114A0  D003               	bra	i2u437_47
 14533  0114A2  0008               	tblrd		*
 14534  0114A4  50F5               	movf	tablat,w,c
 14535  0114A6  D005               	bra	i2u437_40
 14536  0114A8                     i2u437_47:
 14537  0114A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 14538  0114AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 14539  0114B0  50EF               	movf	indf0,w,c
 14540  0114B2                     i2u437_40:
 14541  0114B2  6E0E               	movwf	_inPipes+4,c	;volatile
 14542                           
 14543                           ;usb_device.c: 2076: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 14544  0114B4  0E03               	movlw	3
 14545  0114B6  240A               	addwf	_inPipes,w,c	;volatile
 14546  0114B8  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14547  0114BA  0E00               	movlw	0
 14548  0114BC  200B               	addwfc	_inPipes+1,w,c	;volatile
 14549  0114BE  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14550  0114C0  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14551  0114C4  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14552  0114C8  0E00               	movlw	low (__mediumconst shr (0+16))
 14553  0114CA  6EF8               	movwf	tblptru,c
 14554  0114CC  0E0E               	movlw	(high __ramtop+-1)
 14555  0114CE  64F7               	cpfsgt	tblptrh,c
 14556  0114D0  D003               	bra	i2u438_47
 14557  0114D2  0008               	tblrd		*
 14558  0114D4  50F5               	movf	tablat,w,c
 14559  0114D6  D005               	bra	i2u438_40
 14560  0114D8                     i2u438_47:
 14561  0114D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 14562  0114DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 14563  0114E0  50EF               	movf	indf0,w,c
 14564  0114E2                     i2u438_40:
 14565  0114E2  6E0F               	movwf	_inPipes+5,c	;volatile
 14566                           
 14567                           ;usb_device.c: 2077: }
 14568  0114E4  0012               	return	
 14569  0114E6                     i2l5799:
 14570                           
 14571                           ;usb_device.c: 2078: else
 14572                           ;usb_device.c: 2079: {
 14573                           ;usb_device.c: 2080: inPipes[0].info.Val = 0;
 14574  0114E6  0E00               	movlw	0
 14575  0114E8  6E0D               	movwf	_inPipes+3,c	;volatile
 14576                           
 14577                           ;usb_device.c: 2081: }
 14578                           ;usb_device.c: 2082: break;
 14579  0114EA  0012               	return	
 14580  0114EC                     i2l5801:
 14581                           
 14582                           ;usb_device.c: 2087: if(SetupPkt.bDscIndex<3)
 14583  0114EC  0E03               	movlw	3
 14584  0114EE  010D               	movlb	13	; () banked
 14585  0114F0  6132               	cpfslt	50,b	;volatile
 14586  0114F2  D028               	goto	i2l5807
 14587                           
 14588                           ; BSR set to: 13
 14589                           ;usb_device.c: 2088: {
 14590                           ;usb_device.c: 2090: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 14591  0114F4  010D               	movlb	13	; () banked
 14592  0114F6  5132               	movf	50,w,b	;volatile
 14593  0114F8  0D02               	mullw	2
 14594  0114FA  0E77               	movlw	low _USB_SD_Ptr
 14595  0114FC  24F3               	addwf	prodl,w,c
 14596  0114FE  6EF6               	movwf	tblptrl,c
 14597  011500  0EFE               	movlw	high _USB_SD_Ptr
 14598  011502  20F4               	addwfc	prodh,w,c
 14599  011504  6EF7               	movwf	tblptrh,c
 14600  011506                     	if	1	;There are 3 active tblptr bytes
 14601  011506  6AF8               	clrf	tblptru,c
 14602  011508  0E00               	movlw	low (__mediumconst shr (0+16))
 14603  01150A  22F8               	addwfc	tblptru,f,c
 14604  01150C                     	endif
 14605  01150C  0009               	tblrd		*+
 14606  01150E  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 14607  011512  000A               	tblrd		*-
 14608  011514  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 14609                           
 14610                           ; BSR set to: 13
 14611                           ;usb_device.c: 2092: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 14612  011518  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 14613  01151C  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 14614  011520  0E00               	movlw	low (__mediumconst shr (0+16))
 14615  011522  6EF8               	movwf	tblptru,c
 14616  011524  0E0E               	movlw	(high __ramtop+-1)
 14617  011526  64F7               	cpfsgt	tblptrh,c
 14618  011528  D003               	bra	i2u440_47
 14619  01152A  0008               	tblrd		*
 14620  01152C  50F5               	movf	tablat,w,c
 14621  01152E  D005               	bra	i2u440_40
 14622  011530                     i2u440_47:
 14623  011530  CFF6 FFE9          	movff	tblptrl,fsr0l
 14624  011534  CFF7 FFEA          	movff	tblptrh,fsr0h
 14625  011538  50EF               	movf	indf0,w,c
 14626  01153A                     i2u440_40:
 14627  01153A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14628  01153C  502E               	movf	??_USBStdGetDscHandler,w,c
 14629  01153E  6E0E               	movwf	_inPipes+4,c	;volatile
 14630  011540  6A0F               	clrf	_inPipes+5,c	;volatile
 14631                           
 14632                           ;usb_device.c: 2093: }
 14633  011542  0012               	return	
 14634  011544                     i2l5807:
 14635                           
 14636                           ;usb_device.c: 2103: else
 14637                           ;usb_device.c: 2104: {
 14638                           ;usb_device.c: 2105: inPipes[0].info.Val = 0;
 14639  011544  0E00               	movlw	0
 14640  011546  6E0D               	movwf	_inPipes+3,c	;volatile
 14641                           
 14642                           ;usb_device.c: 2106: }
 14643                           ;usb_device.c: 2107: break;
 14644  011548  0012               	return	
 14645  01154A                     i2l5809:
 14646                           
 14647                           ;usb_device.c: 2109: inPipes[0].info.Val = 0;
 14648  01154A  0E00               	movlw	0
 14649  01154C  6E0D               	movwf	_inPipes+3,c	;volatile
 14650                           
 14651                           ;usb_device.c: 2111: }
 14652                           
 14653                           ;usb_device.c: 2110: break;
 14654  01154E  0012               	return	
 14655  011550                     i2l5813:
 14656  011550  010D               	movlb	13	; () banked
 14657  011552  5133               	movf	51,w,b	;volatile
 14658                           
 14659                           ; Switch size 1, requested type "space"
 14660                           ; Number of cases is 3, Range of values is 1 to 3
 14661                           ; switch strategies available:
 14662                           ; Name         Instructions Cycles
 14663                           ; simple_byte           10     6 (average)
 14664                           ;	Chosen strategy is simple_byte
 14665  011554  0A01               	xorlw	1	; case 1
 14666  011556  B4D8               	btfsc	status,2,c
 14667  011558  D776               	goto	i2l5787
 14668  01155A  0A03               	xorlw	3	; case 2
 14669  01155C  B4D8               	btfsc	status,2,c
 14670  01155E  D77C               	goto	i2l5791
 14671  011560  0A01               	xorlw	1	; case 3
 14672  011562  B4D8               	btfsc	status,2,c
 14673  011564  D7C3               	goto	i2l5801
 14674  011566  D7F1               	goto	i2l5809
 14675  011568                     __end_of_USBStdGetDscHandler:
 14676                           	opt stack 0
 14677                           pclatu	equ	0xFFB
 14678                           pclath	equ	0xFFA
 14679                           tblptru	equ	0xFF8
 14680                           tblptrh	equ	0xFF7
 14681                           tblptrl	equ	0xFF6
 14682                           tablat	equ	0xFF5
 14683                           prodh	equ	0xFF4
 14684                           prodl	equ	0xFF3
 14685                           intcon	equ	0xFF2
 14686                           intcon2	equ	0xFF1
 14687                           indf0	equ	0xFEF
 14688                           postinc0	equ	0xFEE
 14689                           fsr0h	equ	0xFEA
 14690                           fsr0l	equ	0xFE9
 14691                           wreg	equ	0xFE8
 14692                           indf1	equ	0xFE7
 14693                           postinc1	equ	0xFE6
 14694                           postdec1	equ	0xFE5
 14695                           fsr1h	equ	0xFE2
 14696                           fsr1l	equ	0xFE1
 14697                           indf2	equ	0xFDF
 14698                           postinc2	equ	0xFDE
 14699                           postdec2	equ	0xFDD
 14700                           plusw2	equ	0xFDB
 14701                           fsr2h	equ	0xFDA
 14702                           fsr2l	equ	0xFD9
 14703                           status	equ	0xFD8
 14704                           
 14705 ;; *************** function _USBStdFeatureReqHandler *****************
 14706 ;; Defined at:
 14707 ;;		line 2758 in file "../My_library/usb/usb_device.c"
 14708 ;; Parameters:    Size  Location     Type
 14709 ;;		None
 14710 ;; Auto vars:     Size  Location     Type
 14711 ;;  p               2   24[COMRAM] PTR struct __BDT
 14712 ;;		 -> NULL(0), BDT(48), 
 14713 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 14714 ;;		 -> UEP0(1), 
 14715 ;;  current_ep_d    1   23[COMRAM] struct .
 14716 ;; Return value:  Size  Location     Type
 14717 ;;		None               void
 14718 ;; Registers used:
 14719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14720 ;; Tracked objects:
 14721 ;;		On entry : 0/0
 14722 ;;		On exit  : 0/0
 14723 ;;		Unchanged: 0/0
 14724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14726 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14728 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14729 ;;Total ram usage:        6 bytes
 14730 ;; Hardware stack levels used:    1
 14731 ;; Hardware stack levels required when called:    5
 14732 ;; This function calls:
 14733 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14734 ;; This function is called by:
 14735 ;;		_USBCheckStdRequest
 14736 ;; This function uses a non-reentrant model
 14737 ;;
 14738                           
 14739                           	psect	text76
 14740  0106E8                     __ptext76:
 14741                           	opt stack 0
 14742  0106E8                     _USBStdFeatureReqHandler:
 14743                           	opt stack 13
 14744                           
 14745                           ;usb_device.c: 2760: BDT_ENTRY *p;
 14746                           ;usb_device.c: 2761: EP_STATUS current_ep_data;
 14747                           ;usb_device.c: 2765: unsigned char* pUEP;
 14748                           ;usb_device.c: 2803: if((SetupPkt.bFeature == 1)&&
 14749                           ;usb_device.c: 2804: (SetupPkt.Recipient == (0x00)))
 14750                           
 14751                           ;incstack = 0
 14752  0106E8  010D               	movlb	13	; () banked
 14753  0106EA  0532               	decf	50,w,b	;volatile
 14754  0106EC  A4D8               	btfss	status,2,c
 14755  0106EE  D010               	goto	i2l1445
 14756                           
 14757                           ; BSR set to: 13
 14758  0106F0  010D               	movlb	13	; () banked
 14759  0106F2  5130               	movf	48,w,b	;volatile
 14760  0106F4  0B1F               	andlw	31
 14761  0106F6  0900               	iorlw	0
 14762  0106F8  A4D8               	btfss	status,2,c
 14763  0106FA  D00A               	goto	i2l1445
 14764                           
 14765                           ; BSR set to: 13
 14766                           ;usb_device.c: 2805: {
 14767                           ;usb_device.c: 2806: inPipes[0].info.bits.busy = 1;
 14768  0106FC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14769                           
 14770                           ; BSR set to: 13
 14771                           ;usb_device.c: 2807: if(SetupPkt.bRequest == 3)
 14772  0106FE  0E03               	movlw	3
 14773  010700  010D               	movlb	13	; () banked
 14774  010702  1931               	xorwf	49,w,b	;volatile
 14775  010704  A4D8               	btfss	status,2,c
 14776  010706  D002               	goto	i2l5853
 14777                           
 14778                           ; BSR set to: 13
 14779                           ;usb_device.c: 2808: RemoteWakeup = 1;
 14780  010708  0E01               	movlw	1
 14781  01070A  D001               	goto	L6
 14782  01070C                     i2l5853:
 14783                           
 14784                           ; BSR set to: 13
 14785                           ;usb_device.c: 2809: else
 14786                           ;usb_device.c: 2810: RemoteWakeup = 0;
 14787  01070C  0E00               	movlw	0
 14788  01070E                     L6:
 14789  01070E  6E22               	movwf	_RemoteWakeup,c	;volatile
 14790  010710                     i2l1445:
 14791                           
 14792                           ; BSR set to: 13
 14793                           ;usb_device.c: 2811: }
 14794                           ;usb_device.c: 2814: if((SetupPkt.bFeature == 0)&&
 14795                           ;usb_device.c: 2815: (SetupPkt.Recipient == (0x02))&&
 14796                           ;usb_device.c: 2816: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 14797                           ;usb_device.c: 2817: (USBDeviceState == CONFIGURED_STATE))
 14798  010710  010D               	movlb	13	; () banked
 14799  010712  5132               	movf	50,w,b	;volatile
 14800  010714  A4D8               	btfss	status,2,c
 14801  010716  0012               	return	
 14802                           
 14803                           ; BSR set to: 13
 14804  010718  010D               	movlb	13	; () banked
 14805  01071A  5130               	movf	48,w,b	;volatile
 14806  01071C  0B1F               	andlw	31
 14807  01071E  0A02               	xorlw	2
 14808  010720  A4D8               	btfss	status,2,c
 14809  010722  0012               	return	
 14810                           
 14811                           ; BSR set to: 13
 14812  010724  010D               	movlb	13	; () banked
 14813  010726  5134               	movf	52,w,b	;volatile
 14814  010728  0B0F               	andlw	15
 14815  01072A  0900               	iorlw	0
 14816  01072C  B4D8               	btfsc	status,2,c
 14817  01072E  0012               	return	
 14818                           
 14819                           ; BSR set to: 13
 14820  010730  010D               	movlb	13	; () banked
 14821  010732  5134               	movf	52,w,b	;volatile
 14822  010734  0B0F               	andlw	15
 14823  010736  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14824  010738  0E03               	movlw	3
 14825  01073A  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 14826  01073C  0012               	return	
 14827                           
 14828                           ; BSR set to: 13
 14829  01073E  0E20               	movlw	32
 14830  010740  0100               	movlb	0	; () banked
 14831  010742  19BB               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 14832  010744  A4D8               	btfss	status,2,c
 14833  010746  0012               	return	
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;usb_device.c: 2818: {
 14837                           ;usb_device.c: 2821: inPipes[0].info.bits.busy = 1;
 14838  010748  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14839                           
 14840                           ;usb_device.c: 2824: if(SetupPkt.EPDir == 0)
 14841  01074A  010D               	movlb	13	; () banked
 14842  01074C  BF34               	btfsc	52,7,b	;volatile
 14843  01074E  D01B               	goto	i2l5867
 14844                           
 14845                           ; BSR set to: 13
 14846                           ;usb_device.c: 2825: {
 14847                           ;usb_device.c: 2826: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14848  010750  010D               	movlb	13	; () banked
 14849  010752  5134               	movf	52,w,b	;volatile
 14850  010754  0B0F               	andlw	15
 14851  010756  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14852  010758  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14853  01075A  0D02               	mullw	2
 14854  01075C  0E9E               	movlw	low _pBDTEntryOut
 14855  01075E  24F3               	addwf	prodl,w,c
 14856  010760  6ED9               	movwf	fsr2l,c
 14857  010762  0E00               	movlw	high _pBDTEntryOut
 14858  010764  20F4               	addwfc	prodh,w,c
 14859  010766  6EDA               	movwf	fsr2h,c
 14860  010768  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 14861  01076C  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14862                           
 14863                           ;usb_device.c: 2827: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14864  010770  010D               	movlb	13	; () banked
 14865  010772  5134               	movf	52,w,b	;volatile
 14866  010774  0B0F               	andlw	15
 14867  010776  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14868  010778  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14869  01077A  0D01               	mullw	1
 14870  01077C  0E19               	movlw	low _ep_data_out
 14871  01077E  24F3               	addwf	prodl,w,c
 14872  010780  6ED9               	movwf	fsr2l,c
 14873  010782  0E00               	movlw	high _ep_data_out
 14874  010784  D01A               	goto	L7
 14875  010786                     i2l5867:
 14876                           
 14877                           ; BSR set to: 13
 14878                           ;usb_device.c: 2829: else
 14879                           ;usb_device.c: 2830: {
 14880                           ;usb_device.c: 2831: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 14881  010786  010D               	movlb	13	; () banked
 14882  010788  5134               	movf	52,w,b	;volatile
 14883  01078A  0B0F               	andlw	15
 14884  01078C  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14885  01078E  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14886  010790  0D02               	mullw	2
 14887  010792  0E10               	movlw	low _pBDTEntryIn
 14888  010794  24F3               	addwf	prodl,w,c
 14889  010796  6ED9               	movwf	fsr2l,c
 14890  010798  0E00               	movlw	high _pBDTEntryIn
 14891  01079A  20F4               	addwfc	prodh,w,c
 14892  01079C  6EDA               	movwf	fsr2h,c
 14893  01079E  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 14894  0107A2  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14895                           
 14896                           ;usb_device.c: 2832: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14897  0107A6  010D               	movlb	13	; () banked
 14898  0107A8  5134               	movf	52,w,b	;volatile
 14899  0107AA  0B0F               	andlw	15
 14900  0107AC  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14901  0107AE  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14902  0107B0  0D01               	mullw	1
 14903  0107B2  0E16               	movlw	low _ep_data_in
 14904  0107B4  24F3               	addwf	prodl,w,c
 14905  0107B6  6ED9               	movwf	fsr2l,c
 14906  0107B8  0E00               	movlw	high _ep_data_in
 14907  0107BA                     L7:
 14908  0107BA  20F4               	addwfc	prodh,w,c
 14909  0107BC  6EDA               	movwf	fsr2h,c
 14910  0107BE  50DF               	movf	indf2,w,c
 14911  0107C0  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14912                           
 14913                           ; BSR set to: 13
 14914                           ;usb_device.c: 2833: }
 14915                           ;usb_device.c: 2839: if(current_ep_data.bits.ping_pong_state == 0)
 14916                           
 14917                           ; BSR set to: 13
 14918  0107C2  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14919  0107C4  D002               	goto	i2l5873
 14920                           
 14921                           ; BSR set to: 13
 14922                           ;usb_device.c: 2840: {
 14923                           ;usb_device.c: 2841: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 14924  0107C6  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 14925                           
 14926                           ;usb_device.c: 2842: }
 14927  0107C8  D001               	goto	i2l5875
 14928  0107CA                     i2l5873:
 14929                           
 14930                           ; BSR set to: 13
 14931                           ;usb_device.c: 2843: else
 14932                           ;usb_device.c: 2844: {
 14933                           ;usb_device.c: 2845: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 14934  0107CA  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 14935  0107CC                     i2l5875:
 14936                           
 14937                           ; BSR set to: 13
 14938                           ;usb_device.c: 2846: }
 14939                           ;usb_device.c: 2851: if(SetupPkt.EPDir == 0)
 14940  0107CC  010D               	movlb	13	; () banked
 14941  0107CE  BF34               	btfsc	52,7,b	;volatile
 14942  0107D0  D00B               	goto	i2l5879
 14943                           
 14944                           ; BSR set to: 13
 14945                           ;usb_device.c: 2852: {
 14946                           ;usb_device.c: 2853: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 14947  0107D2  010D               	movlb	13	; () banked
 14948  0107D4  5134               	movf	52,w,b	;volatile
 14949  0107D6  0B0F               	andlw	15
 14950  0107D8  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14951  0107DA  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14952  0107DC  0D02               	mullw	2
 14953  0107DE  0E9E               	movlw	low _pBDTEntryOut
 14954  0107E0  24F3               	addwf	prodl,w,c
 14955  0107E2  6ED9               	movwf	fsr2l,c
 14956  0107E4  0E00               	movlw	high _pBDTEntryOut
 14957  0107E6  D00A               	goto	L8
 14958  0107E8                     i2l5879:
 14959                           
 14960                           ; BSR set to: 13
 14961                           ;usb_device.c: 2855: else
 14962                           ;usb_device.c: 2856: {
 14963                           ;usb_device.c: 2857: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 14964  0107E8  010D               	movlb	13	; () banked
 14965  0107EA  5134               	movf	52,w,b	;volatile
 14966  0107EC  0B0F               	andlw	15
 14967  0107EE  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14968  0107F0  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14969  0107F2  0D02               	mullw	2
 14970  0107F4  0E10               	movlw	low _pBDTEntryIn
 14971  0107F6  24F3               	addwf	prodl,w,c
 14972  0107F8  6ED9               	movwf	fsr2l,c
 14973  0107FA  0E00               	movlw	high _pBDTEntryIn
 14974  0107FC                     L8:
 14975  0107FC  20F4               	addwfc	prodh,w,c
 14976  0107FE  6EDA               	movwf	fsr2h,c
 14977  010800  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14978  010804  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14979                           
 14980                           ; BSR set to: 13
 14981                           ;usb_device.c: 2858: }
 14982                           ;usb_device.c: 2861: if(SetupPkt.bRequest == 3)
 14983                           
 14984                           ; BSR set to: 13
 14985  010808  0E03               	movlw	3
 14986  01080A  010D               	movlb	13	; () banked
 14987  01080C  1931               	xorwf	49,w,b	;volatile
 14988  01080E  A4D8               	btfss	status,2,c
 14989  010810  D02E               	goto	i2l5895
 14990                           
 14991                           ; BSR set to: 13
 14992                           ;usb_device.c: 2862: {
 14993                           ;usb_device.c: 2863: if(p->STAT.UOWN == 1)
 14994  010812  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14995  010816  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14996  01081A  AEDF               	btfss	indf2,7,c
 14997  01081C  D01B               	goto	i2l5891
 14998                           
 14999                           ; BSR set to: 13
 15000                           ;usb_device.c: 2864: {
 15001                           ;usb_device.c: 2867: if(SetupPkt.EPDir == 0)
 15002  01081E  010D               	movlb	13	; () banked
 15003  010820  BF34               	btfsc	52,7,b	;volatile
 15004  010822  D00B               	goto	i2l5889
 15005                           
 15006                           ; BSR set to: 13
 15007                           ;usb_device.c: 2868: {
 15008                           ;usb_device.c: 2869: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 15009  010824  010D               	movlb	13	; () banked
 15010  010826  5134               	movf	52,w,b	;volatile
 15011  010828  0B0F               	andlw	15
 15012  01082A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15013  01082C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15014  01082E  0D01               	mullw	1
 15015  010830  0E19               	movlw	low _ep_data_out
 15016  010832  24F3               	addwf	prodl,w,c
 15017  010834  6ED9               	movwf	fsr2l,c
 15018  010836  0E00               	movlw	high _ep_data_out
 15019  010838  D00A               	goto	L9
 15020  01083A                     i2l5889:
 15021                           
 15022                           ; BSR set to: 13
 15023                           ;usb_device.c: 2871: else
 15024                           ;usb_device.c: 2872: {
 15025                           ;usb_device.c: 2873: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 15026  01083A  010D               	movlb	13	; () banked
 15027  01083C  5134               	movf	52,w,b	;volatile
 15028  01083E  0B0F               	andlw	15
 15029  010840  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15030  010842  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15031  010844  0D01               	mullw	1
 15032  010846  0E16               	movlw	low _ep_data_in
 15033  010848  24F3               	addwf	prodl,w,c
 15034  01084A  6ED9               	movwf	fsr2l,c
 15035  01084C  0E00               	movlw	high _ep_data_in
 15036  01084E                     L9:
 15037  01084E  20F4               	addwfc	prodh,w,c
 15038  010850  6EDA               	movwf	fsr2h,c
 15039  010852  82DF               	bsf	indf2,1,c
 15040  010854                     i2l5891:
 15041                           
 15042                           ; BSR set to: 13
 15043                           ;usb_device.c: 2874: }
 15044                           ;usb_device.c: 2875: }
 15045                           ;usb_device.c: 2878: p->STAT.Val |= 0x04;
 15046  010854  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15047  010858  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15048  01085C  0E00               	movlw	0
 15049  01085E  84DB               	bsf	plusw2,2,c
 15050                           
 15051                           ; BSR set to: 13
 15052                           ;usb_device.c: 2879: p->STAT.Val |= 0x80;
 15053  010860  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15054  010864  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15055  010868  0E00               	movlw	0
 15056  01086A  8EDB               	bsf	plusw2,7,c
 15057                           
 15058                           ;usb_device.c: 2880: }
 15059  01086C  0012               	return	
 15060  01086E                     i2l5895:
 15061                           
 15062                           ; BSR set to: 13
 15063                           ;usb_device.c: 2881: else
 15064                           ;usb_device.c: 2882: {
 15065                           ;usb_device.c: 2886: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 15066  01086E  0E04               	movlw	4
 15067  010870  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 15068                           
 15069                           ; BSR set to: 13
 15070                           ;usb_device.c: 2888: if(p->STAT.UOWN == 1)
 15071  010872  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15072  010876  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15073  01087A  AEDF               	btfss	indf2,7,c
 15074  01087C  D01B               	goto	i2l5905
 15075                           
 15076                           ; BSR set to: 13
 15077                           ;usb_device.c: 2889: {
 15078                           ;usb_device.c: 2892: p->STAT.Val &= (~0x80);
 15079  01087E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15080  010882  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15081  010886  0E7F               	movlw	127
 15082  010888  16DF               	andwf	indf2,f,c
 15083                           
 15084                           ; BSR set to: 13
 15085                           ;usb_device.c: 2893: p->STAT.Val |= 0x40;
 15086  01088A  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15087  01088E  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15088  010892  0E00               	movlw	0
 15089  010894  8CDB               	bsf	plusw2,6,c
 15090                           
 15091                           ; BSR set to: 13
 15092                           ;usb_device.c: 2894: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15093  010896  0E00               	movlw	0
 15094  010898  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15095  01089A  0E05               	movlw	5
 15096  01089C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15097  01089E  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15098  0108A2  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15099  0108A6  0E00               	movlw	0
 15100  0108A8  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15101  0108AA  0E02               	movlw	2
 15102  0108AC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15103  0108AE  EC14  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15104                           
 15105                           ;usb_device.c: 2895: }
 15106  0108B2  D006               	goto	i2l5907
 15107  0108B4                     i2l5905:
 15108                           
 15109                           ;usb_device.c: 2896: else
 15110                           ;usb_device.c: 2897: {
 15111                           ;usb_device.c: 2899: p->STAT.Val |= 0x40;
 15112  0108B4  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15113  0108B8  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15114  0108BC  0E00               	movlw	0
 15115  0108BE  8CDB               	bsf	plusw2,6,c
 15116  0108C0                     i2l5907:
 15117                           
 15118                           ;usb_device.c: 2900: }
 15119                           ;usb_device.c: 2904: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 15120  0108C0  0E04               	movlw	4
 15121  0108C2  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 15122                           
 15123                           ;usb_device.c: 2910: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 15124  0108C4  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 15125  0108C6  D006               	goto	i2l1464
 15126  0108C8  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15127  0108CC  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15128  0108D0  AEDF               	btfss	indf2,7,c
 15129  0108D2  D030               	goto	i2l5921
 15130  0108D4                     i2l1464:
 15131                           
 15132                           ;usb_device.c: 2911: {
 15133                           ;usb_device.c: 2912: if(SetupPkt.EPDir == 0)
 15134  0108D4  010D               	movlb	13	; () banked
 15135  0108D6  BF34               	btfsc	52,7,b	;volatile
 15136  0108D8  D00B               	goto	i2l5915
 15137                           
 15138                           ; BSR set to: 13
 15139                           ;usb_device.c: 2913: {
 15140                           ;usb_device.c: 2914: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 15141  0108DA  010D               	movlb	13	; () banked
 15142  0108DC  5134               	movf	52,w,b	;volatile
 15143  0108DE  0B0F               	andlw	15
 15144  0108E0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15145  0108E2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15146  0108E4  0D01               	mullw	1
 15147  0108E6  0E19               	movlw	low _ep_data_out
 15148  0108E8  24F3               	addwf	prodl,w,c
 15149  0108EA  6ED9               	movwf	fsr2l,c
 15150  0108EC  0E00               	movlw	high _ep_data_out
 15151  0108EE  D00A               	goto	L10
 15152  0108F0                     i2l5915:
 15153                           
 15154                           ; BSR set to: 13
 15155                           ;usb_device.c: 2916: else
 15156                           ;usb_device.c: 2917: {
 15157                           ;usb_device.c: 2918: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 15158  0108F0  010D               	movlb	13	; () banked
 15159  0108F2  5134               	movf	52,w,b	;volatile
 15160  0108F4  0B0F               	andlw	15
 15161  0108F6  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15162  0108F8  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15163  0108FA  0D01               	mullw	1
 15164  0108FC  0E16               	movlw	low _ep_data_in
 15165  0108FE  24F3               	addwf	prodl,w,c
 15166  010900  6ED9               	movwf	fsr2l,c
 15167  010902  0E00               	movlw	high _ep_data_in
 15168  010904                     L10:
 15169  010904  20F4               	addwfc	prodh,w,c
 15170  010906  6EDA               	movwf	fsr2h,c
 15171  010908  92DF               	bcf	indf2,1,c
 15172                           
 15173                           ; BSR set to: 13
 15174                           ;usb_device.c: 2919: }
 15175                           ;usb_device.c: 2921: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15176                           
 15177                           ; BSR set to: 13
 15178  01090A  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15179  01090E  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15180  010912  0E3B               	movlw	59
 15181  010914  16DF               	andwf	indf2,f,c
 15182                           
 15183                           ; BSR set to: 13
 15184                           ;usb_device.c: 2924: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15185  010916  0E00               	movlw	0
 15186  010918  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15187  01091A  0E05               	movlw	5
 15188  01091C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15189  01091E  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15190  010922  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15191  010926  0E00               	movlw	0
 15192  010928  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15193  01092A  0E02               	movlw	2
 15194  01092C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15195  01092E  EC14  F099         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15196                           
 15197                           ;usb_device.c: 2925: }
 15198  010932  D006               	goto	i2l5923
 15199  010934                     i2l5921:
 15200                           
 15201                           ;usb_device.c: 2926: else
 15202                           ;usb_device.c: 2927: {
 15203                           ;usb_device.c: 2929: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15204  010934  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15205  010938  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15206  01093C  0E3B               	movlw	59
 15207  01093E  16DF               	andwf	indf2,f,c
 15208  010940                     i2l5923:
 15209                           
 15210                           ;usb_device.c: 2930: }
 15211                           ;usb_device.c: 2977: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 15212  010940  010D               	movlb	13	; () banked
 15213  010942  5134               	movf	52,w,b	;volatile
 15214  010944  0B0F               	andlw	15
 15215  010946  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15216  010948  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15217  01094A  0D01               	mullw	1
 15218  01094C  0E26               	movlw	38
 15219  01094E  24F3               	addwf	prodl,w,c
 15220  010950  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 15221  010952  0E0F               	movlw	15
 15222  010954  20F4               	addwfc	prodh,w,c
 15223  010956  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 15224                           
 15225                           ; BSR set to: 13
 15226                           ;usb_device.c: 2981: *pUEP &= ~0x0001;
 15227  010958  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 15228  01095C  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 15229  010960  0EFE               	movlw	254
 15230  010962  16DF               	andwf	indf2,f,c
 15231                           
 15232                           ; BSR set to: 13
 15233  010964  0012               	return	
 15234  010966                     __end_of_USBStdFeatureReqHandler:
 15235                           	opt stack 0
 15236                           pclatu	equ	0xFFB
 15237                           pclath	equ	0xFFA
 15238                           tblptru	equ	0xFF8
 15239                           tblptrh	equ	0xFF7
 15240                           tblptrl	equ	0xFF6
 15241                           tablat	equ	0xFF5
 15242                           prodh	equ	0xFF4
 15243                           prodl	equ	0xFF3
 15244                           intcon	equ	0xFF2
 15245                           intcon2	equ	0xFF1
 15246                           indf0	equ	0xFEF
 15247                           postinc0	equ	0xFEE
 15248                           fsr0h	equ	0xFEA
 15249                           fsr0l	equ	0xFE9
 15250                           wreg	equ	0xFE8
 15251                           indf1	equ	0xFE7
 15252                           postinc1	equ	0xFE6
 15253                           postdec1	equ	0xFE5
 15254                           fsr1h	equ	0xFE2
 15255                           fsr1l	equ	0xFE1
 15256                           indf2	equ	0xFDF
 15257                           postinc2	equ	0xFDE
 15258                           postdec2	equ	0xFDD
 15259                           plusw2	equ	0xFDB
 15260                           fsr2h	equ	0xFDA
 15261                           fsr2l	equ	0xFD9
 15262                           status	equ	0xFD8
 15263                           
 15264 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 15265 ;; Defined at:
 15266 ;;		line 119 in file "../My_library/My_USB_CDC.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;  event           2   12[COMRAM] enum E70
 15269 ;;  pdata           2   14[COMRAM] PTR void 
 15270 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 15271 ;;  size            2   16[COMRAM] unsigned int 
 15272 ;; Auto vars:     Size  Location     Type
 15273 ;;		None
 15274 ;; Return value:  Size  Location     Type
 15275 ;;                  1    wreg      unsigned char 
 15276 ;; Registers used:
 15277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15278 ;; Tracked objects:
 15279 ;;		On entry : 0/0
 15280 ;;		On exit  : 0/0
 15281 ;;		Unchanged: 0/0
 15282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15283 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15286 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15287 ;;Total ram usage:        8 bytes
 15288 ;; Hardware stack levels used:    1
 15289 ;; Hardware stack levels required when called:    4
 15290 ;; This function calls:
 15291 ;;		_APP_DeviceCDCBasicDemoInitialize
 15292 ;;		_USBCheckCDCRequest
 15293 ;; This function is called by:
 15294 ;;		_USBDeviceTasks
 15295 ;;		_USBStdSetCfgHandler
 15296 ;;		_USBSuspend
 15297 ;;		_USBWakeFromSuspend
 15298 ;;		_USBCtrlTrfSetupHandler
 15299 ;;		_USBCheckStdRequest
 15300 ;;		_USBStdFeatureReqHandler
 15301 ;; This function uses a non-reentrant model
 15302 ;;
 15303                           
 15304                           	psect	text77
 15305  013228                     __ptext77:
 15306                           	opt stack 0
 15307  013228                     _USER_USB_CALLBACK_EVENT_HANDLER:
 15308                           	opt stack 17
 15309                           
 15310                           ;My_USB_CDC.c: 120: switch ((int) event) {
 15311                           
 15312                           ;incstack = 0
 15313  013228  D006               	goto	i2l5623
 15314  01322A                     i2l5617:
 15315                           
 15316                           ;My_USB_CDC.c: 143: APP_DeviceCDCBasicDemoInitialize();
 15317  01322A  ECF0  F09B         	call	_APP_DeviceCDCBasicDemoInitialize	;wreg free
 15318                           
 15319                           ;My_USB_CDC.c: 147: break;
 15320                           
 15321                           ;My_USB_CDC.c: 146: case EVENT_SET_DESCRIPTOR:
 15322                           
 15323                           ;My_USB_CDC.c: 144: break;
 15324  01322E  0012               	return	
 15325  013230                     i2l5619:
 15326                           
 15327                           ;My_USB_CDC.c: 152: USBCheckCDCRequest();
 15328  013230  EC97  F094         	call	_USBCheckCDCRequest	;wreg free
 15329                           
 15330                           ;My_USB_CDC.c: 163: }
 15331                           
 15332                           ;My_USB_CDC.c: 162: break;
 15333                           
 15334                           ;My_USB_CDC.c: 161: default:
 15335                           
 15336                           ;My_USB_CDC.c: 159: break;
 15337                           
 15338                           ;My_USB_CDC.c: 158: case EVENT_TRANSFER_TERMINATED:
 15339                           
 15340                           ;My_USB_CDC.c: 156: break;
 15341                           
 15342                           ;My_USB_CDC.c: 155: case EVENT_BUS_ERROR:
 15343                           
 15344                           ;My_USB_CDC.c: 153: break;
 15345  013234  0012               	return	
 15346  013236                     i2l5623:
 15347  013236  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 15348  01323A  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 15349                           
 15350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15351                           ; Switch size 1, requested type "space"
 15352                           ; Number of cases is 2, Range of values is 0 to 127
 15353                           ; switch strategies available:
 15354                           ; Name         Instructions Cycles
 15355                           ; simple_byte            7     4 (average)
 15356                           ;	Chosen strategy is simple_byte
 15357  01323E  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 15358  013240  0A00               	xorlw	0	; case 0
 15359  013242  B4D8               	btfsc	status,2,c
 15360  013244  D004               	goto	i2l10417
 15361  013246  0A7F               	xorlw	127	; case 127
 15362  013248  A4D8               	btfss	status,2,c
 15363  01324A  0012               	return	
 15364  01324C  D018               	goto	i2l10419
 15365  01324E                     i2l10417:
 15366                           
 15367                           ; Switch size 1, requested type "space"
 15368                           ; Number of cases is 8, Range of values is 1 to 117
 15369                           ; switch strategies available:
 15370                           ; Name         Instructions Cycles
 15371                           ; simple_byte           25    13 (average)
 15372                           ;	Chosen strategy is simple_byte
 15373  01324E  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15374  013250  0A01               	xorlw	1	; case 1
 15375  013252  B4D8               	btfsc	status,2,c
 15376  013254  D7EA               	goto	i2l5617
 15377  013256  0A03               	xorlw	3	; case 2
 15378  013258  B4D8               	btfsc	status,2,c
 15379  01325A  0012               	return	
 15380  01325C  0A01               	xorlw	1	; case 3
 15381  01325E  B4D8               	btfsc	status,2,c
 15382  013260  D7E7               	goto	i2l5619
 15383  013262  0A06               	xorlw	6	; case 5
 15384  013264  B4D8               	btfsc	status,2,c
 15385  013266  0012               	return	
 15386  013268  0A77               	xorlw	119	; case 114
 15387  01326A  B4D8               	btfsc	status,2,c
 15388  01326C  0012               	return	
 15389  01326E  0A01               	xorlw	1	; case 115
 15390  013270  B4D8               	btfsc	status,2,c
 15391  013272  0012               	return	
 15392  013274  0A07               	xorlw	7	; case 116
 15393  013276  B4D8               	btfsc	status,2,c
 15394  013278  0012               	return	
 15395  01327A  0A01               	xorlw	1	; case 117
 15396  01327C  0012               	return	
 15397  01327E                     i2l10419:
 15398                           
 15399                           ; Switch size 1, requested type "space"
 15400                           ; Number of cases is 1, Range of values is 255 to 255
 15401                           ; switch strategies available:
 15402                           ; Name         Instructions Cycles
 15403                           ; simple_byte            4     3 (average)
 15404                           ;	Chosen strategy is simple_byte
 15405  01327E  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15406  013280  0AFF               	xorlw	255	; case 255
 15407  013282  0012               	return	
 15408  013284                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 15409                           	opt stack 0
 15410                           pclatu	equ	0xFFB
 15411                           pclath	equ	0xFFA
 15412                           tblptru	equ	0xFF8
 15413                           tblptrh	equ	0xFF7
 15414                           tblptrl	equ	0xFF6
 15415                           tablat	equ	0xFF5
 15416                           prodh	equ	0xFF4
 15417                           prodl	equ	0xFF3
 15418                           intcon	equ	0xFF2
 15419                           intcon2	equ	0xFF1
 15420                           indf0	equ	0xFEF
 15421                           postinc0	equ	0xFEE
 15422                           fsr0h	equ	0xFEA
 15423                           fsr0l	equ	0xFE9
 15424                           wreg	equ	0xFE8
 15425                           indf1	equ	0xFE7
 15426                           postinc1	equ	0xFE6
 15427                           postdec1	equ	0xFE5
 15428                           fsr1h	equ	0xFE2
 15429                           fsr1l	equ	0xFE1
 15430                           indf2	equ	0xFDF
 15431                           postinc2	equ	0xFDE
 15432                           postdec2	equ	0xFDD
 15433                           plusw2	equ	0xFDB
 15434                           fsr2h	equ	0xFDA
 15435                           fsr2l	equ	0xFD9
 15436                           status	equ	0xFD8
 15437                           
 15438 ;; *************** function _USBCheckCDCRequest *****************
 15439 ;; Defined at:
 15440 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 15441 ;; Parameters:    Size  Location     Type
 15442 ;;		None
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;		None
 15445 ;; Return value:  Size  Location     Type
 15446 ;;		None               void
 15447 ;; Registers used:
 15448 ;;		wreg, status,2, status,0
 15449 ;; Tracked objects:
 15450 ;;		On entry : 0/0
 15451 ;;		On exit  : 0/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15458 ;;Total ram usage:        0 bytes
 15459 ;; Hardware stack levels used:    1
 15460 ;; This function calls:
 15461 ;;		Nothing
 15462 ;; This function is called by:
 15463 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15464 ;; This function uses a non-reentrant model
 15465 ;;
 15466                           
 15467                           	psect	text78
 15468  01292E                     __ptext78:
 15469                           	opt stack 0
 15470  01292E                     _USBCheckCDCRequest:
 15471                           	opt stack 20
 15472                           
 15473                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 15474                           
 15475                           ;incstack = 0
 15476  01292E  010D               	movlb	13	; () banked
 15477  012930  5130               	movf	48,w,b	;volatile
 15478  012932  0B1F               	andlw	31
 15479  012934  06E8               	decf	wreg,f,c
 15480  012936  A4D8               	btfss	status,2,c
 15481  012938  0012               	return	
 15482                           
 15483                           ; BSR set to: 13
 15484                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 15485                           
 15486                           ; BSR set to: 13
 15487                           
 15488                           ; BSR set to: 13
 15489  01293A  010D               	movlb	13	; () banked
 15490  01293C  3930               	swapf	48,w,b	;volatile
 15491  01293E  32E8               	rrcf	wreg,f,c
 15492  012940  0B03               	andlw	3
 15493  012942  06E8               	decf	wreg,f,c
 15494  012944  A4D8               	btfss	status,2,c
 15495  012946  0012               	return	
 15496                           
 15497                           ; BSR set to: 13
 15498                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 15499                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 15500                           
 15501                           ; BSR set to: 13
 15502                           
 15503                           ; BSR set to: 13
 15504  012948  010D               	movlb	13	; () banked
 15505  01294A  5134               	movf	52,w,b	;volatile
 15506  01294C  B4D8               	btfsc	status,2,c
 15507  01294E  D035               	goto	i2l5613
 15508                           
 15509                           ; BSR set to: 13
 15510  012950  010D               	movlb	13	; () banked
 15511  012952  0534               	decf	52,w,b	;volatile
 15512  012954  A4D8               	btfss	status,2,c
 15513  012956  0012               	return	
 15514  012958  D030               	goto	i2l5613
 15515  01295A                     i2l5589:
 15516                           
 15517                           ; BSR set to: 13
 15518                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 15519  01295A  0EC4               	movlw	low _dummy_encapsulated_cmd_response
 15520  01295C  6E0A               	movwf	_inPipes,c	;volatile
 15521  01295E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 15522  012960  6E0B               	movwf	_inPipes+1,c	;volatile
 15523                           
 15524                           ; BSR set to: 13
 15525                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 15526  012962  0E00               	movlw	0
 15527  012964  6E0F               	movwf	_inPipes+5,c	;volatile
 15528  012966  0E08               	movlw	8
 15529  012968  6E0E               	movwf	_inPipes+4,c	;volatile
 15530                           
 15531                           ; BSR set to: 13
 15532                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15533  01296A  800D               	bsf	_inPipes+3,0,c	;volatile
 15534                           
 15535                           ; BSR set to: 13
 15536                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 15537  01296C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15538                           
 15539                           ;usb_device_cdc.c: 232: break;
 15540  01296E  0012               	return	
 15541  012970                     i2l5597:
 15542                           
 15543                           ; BSR set to: 13
 15544                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 15545  012970  0EC4               	movlw	low _dummy_encapsulated_cmd_response
 15546  012972  6E0A               	movwf	_inPipes,c	;volatile
 15547  012974  0E01               	movlw	high _dummy_encapsulated_cmd_response
 15548  012976  6E0B               	movwf	_inPipes+1,c	;volatile
 15549                           
 15550                           ; BSR set to: 13
 15551                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 15552  012978  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15553                           
 15554                           ;usb_device_cdc.c: 237: break;
 15555  01297A  0012               	return	
 15556  01297C                     i2l1521:
 15557                           
 15558                           ; BSR set to: 13
 15559                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 15560  01297C  CD36 F005          	movff	3382,_outPipes+4	;volatile
 15561  012980  CD37 F006          	movff	3383,_outPipes+5	;volatile
 15562                           
 15563                           ; BSR set to: 13
 15564                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 15565  012984  0EEC               	movlw	low _line_coding
 15566  012986  6E01               	movwf	_outPipes,c	;volatile
 15567  012988  0E01               	movlw	high _line_coding
 15568  01298A  6E02               	movwf	_outPipes+1,c	;volatile
 15569                           
 15570                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 15571  01298C  0E00               	movlw	0
 15572  01298E  6E07               	movwf	_outPipes+6,c	;volatile
 15573  012990  0E00               	movlw	0
 15574  012992  6E08               	movwf	_outPipes+7,c	;volatile
 15575  012994  0E00               	movlw	0
 15576  012996  6E09               	movwf	_outPipes+8,c	;volatile
 15577                           
 15578                           ; BSR set to: 13
 15579                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 15580  012998  8E04               	bsf	_outPipes+3,7,c	;volatile
 15581                           
 15582                           ;usb_device_cdc.c: 246: break;
 15583  01299A  0012               	return	
 15584  01299C                     i2l5605:
 15585                           
 15586                           ; BSR set to: 13
 15587                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15588  01299C  0EEC               	movlw	low _line_coding
 15589  01299E  6E0A               	movwf	_inPipes,c	;volatile
 15590  0129A0  0E01               	movlw	high _line_coding
 15591  0129A2  6E0B               	movwf	_inPipes+1,c	;volatile
 15592                           
 15593                           ; BSR set to: 13
 15594  0129A4  0E00               	movlw	0
 15595  0129A6  6E0F               	movwf	_inPipes+5,c	;volatile
 15596  0129A8  0E07               	movlw	7
 15597  0129AA  6E0E               	movwf	_inPipes+4,c	;volatile
 15598                           
 15599                           ; BSR set to: 13
 15600  0129AC  0EC1               	movlw	193
 15601  0129AE  6E0D               	movwf	_inPipes+3,c	;volatile
 15602                           
 15603                           ;usb_device_cdc.c: 253: break;
 15604  0129B0  0012               	return	
 15605  0129B2                     i2l1523:
 15606                           
 15607                           ; BSR set to: 13
 15608                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 15609  0129B2  CD32 F0C0          	movff	3378,_control_signal_bitmap	;volatile
 15610                           
 15611                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 15612  0129B6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15613                           
 15614                           ; BSR set to: 13
 15615                           ;usb_device_cdc.c: 315: }
 15616                           
 15617                           ; BSR set to: 13
 15618                           ;usb_device_cdc.c: 314: break;
 15619                           
 15620                           ;usb_device_cdc.c: 313: default:
 15621                           
 15622                           ;usb_device_cdc.c: 289: break;
 15623  0129B8  0012               	return	
 15624  0129BA                     i2l5613:
 15625                           
 15626                           ; BSR set to: 13
 15627  0129BA  010D               	movlb	13	; () banked
 15628  0129BC  5131               	movf	49,w,b	;volatile
 15629                           
 15630                           ; Switch size 1, requested type "space"
 15631                           ; Number of cases is 5, Range of values is 0 to 34
 15632                           ; switch strategies available:
 15633                           ; Name         Instructions Cycles
 15634                           ; simple_byte           16     9 (average)
 15635                           ;	Chosen strategy is simple_byte
 15636  0129BE  0A00               	xorlw	0	; case 0
 15637  0129C0  B4D8               	btfsc	status,2,c
 15638  0129C2  D7CB               	goto	i2l5589
 15639  0129C4  0A01               	xorlw	1	; case 1
 15640  0129C6  B4D8               	btfsc	status,2,c
 15641  0129C8  D7D3               	goto	i2l5597
 15642  0129CA  0A21               	xorlw	33	; case 32
 15643  0129CC  B4D8               	btfsc	status,2,c
 15644  0129CE  D7D6               	goto	i2l1521
 15645  0129D0  0A01               	xorlw	1	; case 33
 15646  0129D2  B4D8               	btfsc	status,2,c
 15647  0129D4  D7E3               	goto	i2l5605
 15648  0129D6  0A03               	xorlw	3	; case 34
 15649  0129D8  A4D8               	btfss	status,2,c
 15650  0129DA  0012               	return	
 15651  0129DC  D7EA               	goto	i2l1523
 15652  0129DE                     __end_of_USBCheckCDCRequest:
 15653                           	opt stack 0
 15654                           pclatu	equ	0xFFB
 15655                           pclath	equ	0xFFA
 15656                           tblptru	equ	0xFF8
 15657                           tblptrh	equ	0xFF7
 15658                           tblptrl	equ	0xFF6
 15659                           tablat	equ	0xFF5
 15660                           prodh	equ	0xFF4
 15661                           prodl	equ	0xFF3
 15662                           intcon	equ	0xFF2
 15663                           intcon2	equ	0xFF1
 15664                           indf0	equ	0xFEF
 15665                           postinc0	equ	0xFEE
 15666                           fsr0h	equ	0xFEA
 15667                           fsr0l	equ	0xFE9
 15668                           wreg	equ	0xFE8
 15669                           indf1	equ	0xFE7
 15670                           postinc1	equ	0xFE6
 15671                           postdec1	equ	0xFE5
 15672                           fsr1h	equ	0xFE2
 15673                           fsr1l	equ	0xFE1
 15674                           indf2	equ	0xFDF
 15675                           postinc2	equ	0xFDE
 15676                           postdec2	equ	0xFDD
 15677                           plusw2	equ	0xFDB
 15678                           fsr2h	equ	0xFDA
 15679                           fsr2l	equ	0xFD9
 15680                           status	equ	0xFD8
 15681                           
 15682 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
 15683 ;; Defined at:
 15684 ;;		line 110 in file "../My_library/My_USB_CDC.c"
 15685 ;; Parameters:    Size  Location     Type
 15686 ;;		None
 15687 ;; Auto vars:     Size  Location     Type
 15688 ;;		None
 15689 ;; Return value:  Size  Location     Type
 15690 ;;		None               void
 15691 ;; Registers used:
 15692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15693 ;; Tracked objects:
 15694 ;;		On entry : 0/0
 15695 ;;		On exit  : 0/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15702 ;;Total ram usage:        0 bytes
 15703 ;; Hardware stack levels used:    1
 15704 ;; Hardware stack levels required when called:    3
 15705 ;; This function calls:
 15706 ;;		_CDCInitEP
 15707 ;; This function is called by:
 15708 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712                           	psect	text79
 15713  0137E0                     __ptext79:
 15714                           	opt stack 0
 15715  0137E0                     _APP_DeviceCDCBasicDemoInitialize:
 15716                           	opt stack 17
 15717                           
 15718                           ;My_USB_CDC.c: 111: CDCInitEP();
 15719                           
 15720                           ; BSR set to: 13
 15721                           ;incstack = 0
 15722  0137E0  EC11  F098         	call	_CDCInitEP	;wreg free
 15723                           
 15724                           ;My_USB_CDC.c: 113: line_coding.bCharFormat = 0;
 15725  0137E4  0E00               	movlw	0
 15726  0137E6  0101               	movlb	1	; () banked
 15727  0137E8  6FF0               	movwf	(_line_coding+4)& (0+255),b
 15728                           
 15729                           ; BSR set to: 1
 15730                           ;My_USB_CDC.c: 114: line_coding.bDataBits = 8;
 15731  0137EA  0E08               	movlw	8
 15732  0137EC  0101               	movlb	1	; () banked
 15733  0137EE  6FF2               	movwf	(_line_coding+6)& (0+255),b
 15734                           
 15735                           ; BSR set to: 1
 15736                           ;My_USB_CDC.c: 115: line_coding.bParityType = 0;
 15737  0137F0  0E00               	movlw	0
 15738  0137F2  0101               	movlb	1	; () banked
 15739  0137F4  6FF1               	movwf	(_line_coding+5)& (0+255),b
 15740                           
 15741                           ; BSR set to: 1
 15742                           ;My_USB_CDC.c: 116: line_coding.dwDTERate = 115200;
 15743  0137F6  0E00               	movlw	0
 15744  0137F8  0101               	movlb	1	; () banked
 15745  0137FA  6FEC               	movwf	_line_coding& (0+255),b
 15746  0137FC  0EC2               	movlw	194
 15747  0137FE  6FED               	movwf	(_line_coding+1)& (0+255),b
 15748  013800  0E01               	movlw	1
 15749  013802  6FEE               	movwf	(_line_coding+2)& (0+255),b
 15750  013804  0E00               	movlw	0
 15751  013806  6FEF               	movwf	(_line_coding+3)& (0+255),b
 15752                           
 15753                           ; BSR set to: 1
 15754  013808  0012               	return		;funcret
 15755  01380A                     __end_of_APP_DeviceCDCBasicDemoInitialize:
 15756                           	opt stack 0
 15757                           pclatu	equ	0xFFB
 15758                           pclath	equ	0xFFA
 15759                           tblptru	equ	0xFF8
 15760                           tblptrh	equ	0xFF7
 15761                           tblptrl	equ	0xFF6
 15762                           tablat	equ	0xFF5
 15763                           prodh	equ	0xFF4
 15764                           prodl	equ	0xFF3
 15765                           intcon	equ	0xFF2
 15766                           intcon2	equ	0xFF1
 15767                           indf0	equ	0xFEF
 15768                           postinc0	equ	0xFEE
 15769                           fsr0h	equ	0xFEA
 15770                           fsr0l	equ	0xFE9
 15771                           wreg	equ	0xFE8
 15772                           indf1	equ	0xFE7
 15773                           postinc1	equ	0xFE6
 15774                           postdec1	equ	0xFE5
 15775                           fsr1h	equ	0xFE2
 15776                           fsr1l	equ	0xFE1
 15777                           indf2	equ	0xFDF
 15778                           postinc2	equ	0xFDE
 15779                           postdec2	equ	0xFDD
 15780                           plusw2	equ	0xFDB
 15781                           fsr2h	equ	0xFDA
 15782                           fsr2l	equ	0xFD9
 15783                           status	equ	0xFD8
 15784                           
 15785 ;; *************** function _CDCInitEP *****************
 15786 ;; Defined at:
 15787 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 15788 ;; Parameters:    Size  Location     Type
 15789 ;;		None
 15790 ;; Auto vars:     Size  Location     Type
 15791 ;;		None
 15792 ;; Return value:  Size  Location     Type
 15793 ;;		None               void
 15794 ;; Registers used:
 15795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15796 ;; Tracked objects:
 15797 ;;		On entry : 0/0
 15798 ;;		On exit  : 0/0
 15799 ;;		Unchanged: 0/0
 15800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15805 ;;Total ram usage:        0 bytes
 15806 ;; Hardware stack levels used:    1
 15807 ;; Hardware stack levels required when called:    2
 15808 ;; This function calls:
 15809 ;;		_USBEnableEndpoint
 15810 ;;		i2_USBTransferOnePacket
 15811 ;; This function is called by:
 15812 ;;		_APP_DeviceCDCBasicDemoInitialize
 15813 ;; This function uses a non-reentrant model
 15814 ;;
 15815                           
 15816                           	psect	text80
 15817  013022                     __ptext80:
 15818                           	opt stack 0
 15819  013022                     _CDCInitEP:
 15820                           	opt stack 17
 15821                           
 15822                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 15823                           
 15824                           ; BSR set to: 1
 15825                           ;incstack = 0
 15826  013022  0E00               	movlw	0
 15827  013024  0101               	movlb	1	; () banked
 15828  013026  6FEC               	movwf	_line_coding& (0+255),b
 15829  013028  0E4B               	movlw	75
 15830  01302A  6FED               	movwf	(_line_coding+1)& (0+255),b
 15831  01302C  0E00               	movlw	0
 15832  01302E  6FEE               	movwf	(_line_coding+2)& (0+255),b
 15833  013030  0E00               	movlw	0
 15834  013032  6FEF               	movwf	(_line_coding+3)& (0+255),b
 15835                           
 15836                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 15837  013034  0E00               	movlw	0
 15838  013036  0101               	movlb	1	; () banked
 15839  013038  6FF0               	movwf	(_line_coding+4)& (0+255),b
 15840                           
 15841                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 15842  01303A  0E00               	movlw	0
 15843  01303C  0101               	movlb	1	; () banked
 15844  01303E  6FF1               	movwf	(_line_coding+5)& (0+255),b
 15845                           
 15846                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 15847  013040  0E08               	movlw	8
 15848  013042  0101               	movlb	1	; () banked
 15849  013044  6FF2               	movwf	(_line_coding+6)& (0+255),b
 15850                           
 15851                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 15852  013046  0E00               	movlw	0
 15853  013048  0100               	movlb	0	; () banked
 15854  01304A  6FBD               	movwf	_cdc_rx_len& (0+255),b
 15855                           
 15856                           ; BSR set to: 0
 15857                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 15858  01304C  0E1A               	movlw	26
 15859  01304E  6E36               	movwf	USBEnableEndpoint@options,c
 15860  013050  0E01               	movlw	1
 15861  013052  EC94  F09A         	call	_USBEnableEndpoint
 15862                           
 15863                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 15864  013056  0E1E               	movlw	30
 15865  013058  6E36               	movwf	USBEnableEndpoint@options,c
 15866  01305A  0E02               	movlw	2
 15867  01305C  EC94  F09A         	call	_USBEnableEndpoint
 15868                           
 15869                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15870  013060  0E00               	movlw	0
 15871  013062  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 15872  013064  0E12               	movlw	low _cdc_data_rx
 15873  013066  6E2F               	movwf	i2USBTransferOnePacket@data,c
 15874  013068  0E01               	movlw	high _cdc_data_rx
 15875  01306A  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 15876  01306C  0E40               	movlw	64
 15877  01306E  6E31               	movwf	i2USBTransferOnePacket@len,c
 15878  013070  0E02               	movlw	2
 15879  013072  ECDF  F093         	call	i2_USBTransferOnePacket
 15880  013076  C02E  F0AE         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 15881  01307A  C02F  F0AF         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15882                           
 15883                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 15884  01307E  0E00               	movlw	0
 15885  013080  0100               	movlb	0	; () banked
 15886  013082  6FAC               	movwf	_CDCDataInHandle& (0+255),b
 15887  013084  0E00               	movlw	0
 15888  013086  0100               	movlb	0	; () banked
 15889  013088  6FAD               	movwf	(_CDCDataInHandle+1)& (0+255),b
 15890                           
 15891                           ; BSR set to: 0
 15892                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 15893  01308A  0E00               	movlw	0
 15894  01308C  0100               	movlb	0	; () banked
 15895  01308E  6FBE               	movwf	_cdc_trf_state& (0+255),b
 15896                           
 15897                           ; BSR set to: 0
 15898  013090  0012               	return		;funcret
 15899  013092                     __end_of_CDCInitEP:
 15900                           	opt stack 0
 15901                           pclatu	equ	0xFFB
 15902                           pclath	equ	0xFFA
 15903                           tblptru	equ	0xFF8
 15904                           tblptrh	equ	0xFF7
 15905                           tblptrl	equ	0xFF6
 15906                           tablat	equ	0xFF5
 15907                           prodh	equ	0xFF4
 15908                           prodl	equ	0xFF3
 15909                           intcon	equ	0xFF2
 15910                           intcon2	equ	0xFF1
 15911                           indf0	equ	0xFEF
 15912                           postinc0	equ	0xFEE
 15913                           fsr0h	equ	0xFEA
 15914                           fsr0l	equ	0xFE9
 15915                           wreg	equ	0xFE8
 15916                           indf1	equ	0xFE7
 15917                           postinc1	equ	0xFE6
 15918                           postdec1	equ	0xFE5
 15919                           fsr1h	equ	0xFE2
 15920                           fsr1l	equ	0xFE1
 15921                           indf2	equ	0xFDF
 15922                           postinc2	equ	0xFDE
 15923                           postdec2	equ	0xFDD
 15924                           plusw2	equ	0xFDB
 15925                           fsr2h	equ	0xFDA
 15926                           fsr2l	equ	0xFD9
 15927                           status	equ	0xFD8
 15928                           
 15929 ;; *************** function i2_USBTransferOnePacket *****************
 15930 ;; Defined at:
 15931 ;;		line 996 in file "../My_library/usb/usb_device.c"
 15932 ;; Parameters:    Size  Location     Type
 15933 ;;  ep              1    wreg     unsigned char 
 15934 ;;  dir             1    0[COMRAM] unsigned char 
 15935 ;;  data            2    1[COMRAM] PTR unsigned char 
 15936 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 15937 ;;  len             1    3[COMRAM] unsigned char 
 15938 ;; Auto vars:     Size  Location     Type
 15939 ;;  ep              1    4[COMRAM] unsigned char 
 15940 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 15941 ;;		 -> NULL(0), BDT(48), 
 15942 ;; Return value:  Size  Location     Type
 15943 ;;                  2    0[COMRAM] PTR void 
 15944 ;; Registers used:
 15945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15946 ;; Tracked objects:
 15947 ;;		On entry : 0/0
 15948 ;;		On exit  : 0/0
 15949 ;;		Unchanged: 0/0
 15950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15952 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15954 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15955 ;;Total ram usage:        7 bytes
 15956 ;; Hardware stack levels used:    1
 15957 ;; This function calls:
 15958 ;;		Nothing
 15959 ;; This function is called by:
 15960 ;;		_CDCInitEP
 15961 ;; This function uses a non-reentrant model
 15962 ;;
 15963                           
 15964                           	psect	text81
 15965  0127BE                     __ptext81:
 15966                           	opt stack 0
 15967  0127BE                     i2_USBTransferOnePacket:
 15968                           	opt stack 18
 15969                           
 15970                           ; BSR set to: 0
 15971                           ;incstack = 0
 15972                           ;i2USBTransferOnePacket@ep stored from wreg
 15973  0127BE  6E32               	movwf	i2USBTransferOnePacket@ep,c
 15974                           
 15975                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 15976                           ;usb_device.c: 1001: if(dir != 0)
 15977  0127C0  502E               	movf	i2USBTransferOnePacket@dir,w,c
 15978  0127C2  B4D8               	btfsc	status,2,c
 15979  0127C4  D007               	goto	i2l5527
 15980                           
 15981                           ;usb_device.c: 1002: {
 15982                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 15983  0127C6  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15984  0127C8  0D02               	mullw	2
 15985  0127CA  0E10               	movlw	low _pBDTEntryIn
 15986  0127CC  24F3               	addwf	prodl,w,c
 15987  0127CE  6ED9               	movwf	fsr2l,c
 15988  0127D0  0E00               	movlw	high _pBDTEntryIn
 15989  0127D2  D006               	goto	L11
 15990  0127D4                     i2l5527:
 15991                           
 15992                           ;usb_device.c: 1006: else
 15993                           ;usb_device.c: 1007: {
 15994                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 15995  0127D4  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15996  0127D6  0D02               	mullw	2
 15997  0127D8  0E9E               	movlw	low _pBDTEntryOut
 15998  0127DA  24F3               	addwf	prodl,w,c
 15999  0127DC  6ED9               	movwf	fsr2l,c
 16000  0127DE  0E00               	movlw	high _pBDTEntryOut
 16001  0127E0                     L11:
 16002  0127E0  20F4               	addwfc	prodh,w,c
 16003  0127E2  6EDA               	movwf	fsr2h,c
 16004  0127E4  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 16005  0127E8  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 16006                           
 16007                           ;usb_device.c: 1010: }
 16008                           ;usb_device.c: 1014: if(handle == 0)
 16009  0127EC  5033               	movf	i2USBTransferOnePacket@handle,w,c
 16010  0127EE  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 16011  0127F0  A4D8               	btfss	status,2,c
 16012  0127F2  D005               	goto	i2l5535
 16013                           
 16014                           ;usb_device.c: 1015: {
 16015                           ;usb_device.c: 1016: return 0;
 16016  0127F4  0E00               	movlw	0
 16017  0127F6  6E2E               	movwf	?i2_USBTransferOnePacket,c
 16018  0127F8  0E00               	movlw	0
 16019  0127FA  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 16020  0127FC  0012               	return	
 16021  0127FE                     i2l5535:
 16022                           
 16023                           ;usb_device.c: 1017: }
 16024                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 16025  0127FE  EE20 F002          	lfsr	2,2
 16026  012802  5033               	movf	i2USBTransferOnePacket@handle,w,c
 16027  012804  26D9               	addwf	fsr2l,f,c
 16028  012806  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 16029  012808  22DA               	addwfc	fsr2h,f,c
 16030  01280A  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 16031  01280E  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 16032                           
 16033                           ;usb_device.c: 1031: handle->CNT = len;
 16034  012812  EE20 F001          	lfsr	2,1
 16035  012816  5033               	movf	i2USBTransferOnePacket@handle,w,c
 16036  012818  26D9               	addwf	fsr2l,f,c
 16037  01281A  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 16038  01281C  22DA               	addwfc	fsr2h,f,c
 16039  01281E  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 16040                           
 16041                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 16042  012822  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 16043  012826  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 16044  01282A  0E40               	movlw	64
 16045  01282C  16DF               	andwf	indf2,f,c
 16046                           
 16047                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 16048  01282E  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 16049  012832  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 16050  012836  0E00               	movlw	0
 16051  012838  86DB               	bsf	plusw2,3,c
 16052                           
 16053                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 16054  01283A  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 16055  01283E  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 16056  012842  0E00               	movlw	0
 16057  012844  8EDB               	bsf	plusw2,7,c
 16058                           
 16059                           ;usb_device.c: 1037: if(dir != 0)
 16060  012846  502E               	movf	i2USBTransferOnePacket@dir,w,c
 16061  012848  B4D8               	btfsc	status,2,c
 16062  01284A  D007               	goto	i2l5547
 16063                           
 16064                           ;usb_device.c: 1038: {
 16065                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 16066  01284C  5032               	movf	i2USBTransferOnePacket@ep,w,c
 16067  01284E  0D02               	mullw	2
 16068  012850  0E10               	movlw	low _pBDTEntryIn
 16069  012852  24F3               	addwf	prodl,w,c
 16070  012854  6ED9               	movwf	fsr2l,c
 16071  012856  0E00               	movlw	high _pBDTEntryIn
 16072  012858  D006               	goto	L12
 16073  01285A                     i2l5547:
 16074                           
 16075                           ;usb_device.c: 1042: else
 16076                           ;usb_device.c: 1043: {
 16077                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 16078  01285A  5032               	movf	i2USBTransferOnePacket@ep,w,c
 16079  01285C  0D02               	mullw	2
 16080  01285E  0E9E               	movlw	low _pBDTEntryOut
 16081  012860  24F3               	addwf	prodl,w,c
 16082  012862  6ED9               	movwf	fsr2l,c
 16083  012864  0E00               	movlw	high _pBDTEntryOut
 16084  012866                     L12:
 16085  012866  20F4               	addwfc	prodh,w,c
 16086  012868  6EDA               	movwf	fsr2h,c
 16087  01286A  0E04               	movlw	4
 16088  01286C  1ADF               	xorwf	indf2,f,c
 16089                           
 16090                           ;usb_device.c: 1046: }
 16091                           ;usb_device.c: 1047: return (void*)handle;
 16092  01286E  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 16093  012872  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 16094  012876  0012               	return	
 16095  012878                     __end_ofi2_USBTransferOnePacket:
 16096                           	opt stack 0
 16097                           pclatu	equ	0xFFB
 16098                           pclath	equ	0xFFA
 16099                           tblptru	equ	0xFF8
 16100                           tblptrh	equ	0xFF7
 16101                           tblptrl	equ	0xFF6
 16102                           tablat	equ	0xFF5
 16103                           prodh	equ	0xFF4
 16104                           prodl	equ	0xFF3
 16105                           intcon	equ	0xFF2
 16106                           intcon2	equ	0xFF1
 16107                           indf0	equ	0xFEF
 16108                           postinc0	equ	0xFEE
 16109                           fsr0h	equ	0xFEA
 16110                           fsr0l	equ	0xFE9
 16111                           wreg	equ	0xFE8
 16112                           indf1	equ	0xFE7
 16113                           postinc1	equ	0xFE6
 16114                           postdec1	equ	0xFE5
 16115                           fsr1h	equ	0xFE2
 16116                           fsr1l	equ	0xFE1
 16117                           indf2	equ	0xFDF
 16118                           postinc2	equ	0xFDE
 16119                           postdec2	equ	0xFDD
 16120                           plusw2	equ	0xFDB
 16121                           fsr2h	equ	0xFDA
 16122                           fsr2l	equ	0xFD9
 16123                           status	equ	0xFD8
 16124                           
 16125 ;; *************** function _USBEnableEndpoint *****************
 16126 ;; Defined at:
 16127 ;;		line 879 in file "../My_library/usb/usb_device.c"
 16128 ;; Parameters:    Size  Location     Type
 16129 ;;  ep              1    wreg     unsigned char 
 16130 ;;  options         1    8[COMRAM] unsigned char 
 16131 ;; Auto vars:     Size  Location     Type
 16132 ;;  ep              1   11[COMRAM] unsigned char 
 16133 ;;  p               2    9[COMRAM] PTR unsigned char 
 16134 ;;		 -> UEP0(1), 
 16135 ;; Return value:  Size  Location     Type
 16136 ;;		None               void
 16137 ;; Registers used:
 16138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16139 ;; Tracked objects:
 16140 ;;		On entry : 0/0
 16141 ;;		On exit  : 0/0
 16142 ;;		Unchanged: 0/0
 16143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16144 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16145 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16147 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16148 ;;Total ram usage:        4 bytes
 16149 ;; Hardware stack levels used:    1
 16150 ;; Hardware stack levels required when called:    1
 16151 ;; This function calls:
 16152 ;;		_USBConfigureEndpoint
 16153 ;; This function is called by:
 16154 ;;		_CDCInitEP
 16155 ;; This function uses a non-reentrant model
 16156 ;;
 16157                           
 16158                           	psect	text82
 16159  013528                     __ptext82:
 16160                           	opt stack 0
 16161  013528                     _USBEnableEndpoint:
 16162                           	opt stack 17
 16163                           
 16164                           ;incstack = 0
 16165                           ;USBEnableEndpoint@ep stored from wreg
 16166  013528  6E39               	movwf	USBEnableEndpoint@ep,c
 16167                           
 16168                           ;usb_device.c: 881: unsigned char* p;
 16169                           ;usb_device.c: 885: if(options & 0x04)
 16170  01352A  A436               	btfss	USBEnableEndpoint@options,2,c
 16171  01352C  D005               	goto	i2l5515
 16172                           
 16173                           ;usb_device.c: 886: {
 16174                           ;usb_device.c: 887: USBConfigureEndpoint(ep, 0);
 16175  01352E  0E00               	movlw	0
 16176  013530  6E2E               	movwf	USBConfigureEndpoint@direction,c
 16177  013532  5039               	movf	USBEnableEndpoint@ep,w,c
 16178  013534  EC37  F096         	call	_USBConfigureEndpoint
 16179  013538                     i2l5515:
 16180                           
 16181                           ;usb_device.c: 888: }
 16182                           ;usb_device.c: 889: if(options & 0x02)
 16183  013538  A236               	btfss	USBEnableEndpoint@options,1,c
 16184  01353A  D005               	goto	i2l5519
 16185                           
 16186                           ;usb_device.c: 890: {
 16187                           ;usb_device.c: 891: USBConfigureEndpoint(ep, 1);
 16188  01353C  0E01               	movlw	1
 16189  01353E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 16190  013540  5039               	movf	USBEnableEndpoint@ep,w,c
 16191  013542  EC37  F096         	call	_USBConfigureEndpoint
 16192  013546                     i2l5519:
 16193                           
 16194                           ;usb_device.c: 892: }
 16195                           ;usb_device.c: 900: p = (unsigned char*)(&UEP0+ep);
 16196  013546  5039               	movf	USBEnableEndpoint@ep,w,c
 16197  013548  0D01               	mullw	1
 16198  01354A  0E26               	movlw	38
 16199  01354C  24F3               	addwf	prodl,w,c
 16200  01354E  6E37               	movwf	USBEnableEndpoint@p,c
 16201  013550  0E0F               	movlw	15
 16202  013552  20F4               	addwfc	prodh,w,c
 16203  013554  6E38               	movwf	USBEnableEndpoint@p+1,c
 16204                           
 16205                           ;usb_device.c: 902: *p = options;
 16206  013556  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 16207  01355A  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 16208  01355E  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 16209  013562  0012               	return		;funcret
 16210  013564                     __end_of_USBEnableEndpoint:
 16211                           	opt stack 0
 16212                           pclatu	equ	0xFFB
 16213                           pclath	equ	0xFFA
 16214                           tblptru	equ	0xFF8
 16215                           tblptrh	equ	0xFF7
 16216                           tblptrl	equ	0xFF6
 16217                           tablat	equ	0xFF5
 16218                           prodh	equ	0xFF4
 16219                           prodl	equ	0xFF3
 16220                           intcon	equ	0xFF2
 16221                           intcon2	equ	0xFF1
 16222                           indf0	equ	0xFEF
 16223                           postinc0	equ	0xFEE
 16224                           fsr0h	equ	0xFEA
 16225                           fsr0l	equ	0xFE9
 16226                           wreg	equ	0xFE8
 16227                           indf1	equ	0xFE7
 16228                           postinc1	equ	0xFE6
 16229                           postdec1	equ	0xFE5
 16230                           fsr1h	equ	0xFE2
 16231                           fsr1l	equ	0xFE1
 16232                           indf2	equ	0xFDF
 16233                           postinc2	equ	0xFDE
 16234                           postdec2	equ	0xFDD
 16235                           plusw2	equ	0xFDB
 16236                           fsr2h	equ	0xFDA
 16237                           fsr2l	equ	0xFD9
 16238                           status	equ	0xFD8
 16239                           
 16240 ;; *************** function _USBConfigureEndpoint *****************
 16241 ;; Defined at:
 16242 ;;		line 1544 in file "../My_library/usb/usb_device.c"
 16243 ;; Parameters:    Size  Location     Type
 16244 ;;  EPNum           1    wreg     unsigned char 
 16245 ;;  direction       1    0[COMRAM] unsigned char 
 16246 ;; Auto vars:     Size  Location     Type
 16247 ;;  EPNum           1    5[COMRAM] unsigned char 
 16248 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 16249 ;;		 -> BDT(48), 
 16250 ;; Return value:  Size  Location     Type
 16251 ;;		None               void
 16252 ;; Registers used:
 16253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16254 ;; Tracked objects:
 16255 ;;		On entry : 0/0
 16256 ;;		On exit  : 0/0
 16257 ;;		Unchanged: 0/0
 16258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16259 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16260 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16261 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16263 ;;Total ram usage:        8 bytes
 16264 ;; Hardware stack levels used:    1
 16265 ;; This function calls:
 16266 ;;		Nothing
 16267 ;; This function is called by:
 16268 ;;		_USBEnableEndpoint
 16269 ;; This function uses a non-reentrant model
 16270 ;;
 16271                           
 16272                           	psect	text83
 16273  012C6E                     __ptext83:
 16274                           	opt stack 0
 16275  012C6E                     _USBConfigureEndpoint:
 16276                           	opt stack 17
 16277                           
 16278                           ;incstack = 0
 16279                           ;USBConfigureEndpoint@EPNum stored from wreg
 16280  012C6E  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 16281                           
 16282                           ;usb_device.c: 1546: volatile BDT_ENTRY* handle;
 16283                           ;usb_device.c: 1550: handle = (volatile BDT_ENTRY*)&BDT[0];
 16284  012C70  0E00               	movlw	0
 16285  012C72  6E34               	movwf	USBConfigureEndpoint@handle,c
 16286  012C74  0E0D               	movlw	13
 16287  012C76  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 16288                           
 16289                           ;usb_device.c: 1551: handle += (4*EPNum+2*direction+0u);
 16290  012C78  502E               	movf	USBConfigureEndpoint@direction,w,c
 16291  012C7A  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 16292  012C7C  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 16293  012C7E  90D8               	bcf	status,0,c
 16294  012C80  362F               	rlcf	??_USBConfigureEndpoint,f,c
 16295  012C82  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 16296  012C84  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16297  012C86  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 16298  012C88  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 16299  012C8A  90D8               	bcf	status,0,c
 16300  012C8C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16301  012C8E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16302  012C90  90D8               	bcf	status,0,c
 16303  012C92  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16304  012C94  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16305  012C96  502F               	movf	??_USBConfigureEndpoint,w,c
 16306  012C98  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 16307  012C9A  5030               	movf	??_USBConfigureEndpoint+1,w,c
 16308  012C9C  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 16309  012C9E  90D8               	bcf	status,0,c
 16310  012CA0  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16311  012CA2  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16312  012CA4  90D8               	bcf	status,0,c
 16313  012CA6  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16314  012CA8  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16315  012CAA  5031               	movf	??_USBConfigureEndpoint+2,w,c
 16316  012CAC  2634               	addwf	USBConfigureEndpoint@handle,f,c
 16317  012CAE  5032               	movf	??_USBConfigureEndpoint+3,w,c
 16318  012CB0  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16319                           
 16320                           ;usb_device.c: 1553: handle->STAT.UOWN = 0;
 16321  012CB2  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16322  012CB6  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16323  012CBA  9EDF               	bcf	indf2,7,c
 16324                           
 16325                           ;usb_device.c: 1558: if(direction == 0)
 16326  012CBC  502E               	movf	USBConfigureEndpoint@direction,w,c
 16327  012CBE  A4D8               	btfss	status,2,c
 16328  012CC0  D007               	goto	i2l5505
 16329                           
 16330                           ;usb_device.c: 1559: {
 16331                           ;usb_device.c: 1560: pBDTEntryOut[EPNum] = handle;
 16332  012CC2  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16333  012CC4  0D02               	mullw	2
 16334  012CC6  0E9E               	movlw	low _pBDTEntryOut
 16335  012CC8  24F3               	addwf	prodl,w,c
 16336  012CCA  6ED9               	movwf	fsr2l,c
 16337  012CCC  0E00               	movlw	high _pBDTEntryOut
 16338  012CCE  D006               	goto	L13
 16339  012CD0                     i2l5505:
 16340                           
 16341                           ;usb_device.c: 1562: else
 16342                           ;usb_device.c: 1563: {
 16343                           ;usb_device.c: 1564: pBDTEntryIn[EPNum] = handle;
 16344  012CD0  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16345  012CD2  0D02               	mullw	2
 16346  012CD4  0E10               	movlw	low _pBDTEntryIn
 16347  012CD6  24F3               	addwf	prodl,w,c
 16348  012CD8  6ED9               	movwf	fsr2l,c
 16349  012CDA  0E00               	movlw	high _pBDTEntryIn
 16350  012CDC                     L13:
 16351  012CDC  20F4               	addwfc	prodh,w,c
 16352  012CDE  6EDA               	movwf	fsr2h,c
 16353  012CE0  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16354  012CE4  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16355                           
 16356                           ;usb_device.c: 1565: }
 16357                           ;usb_device.c: 1568: handle->STAT.DTS = 0;
 16358  012CE8  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16359  012CEC  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16360  012CF0  9CDF               	bcf	indf2,6,c
 16361                           
 16362                           ;usb_device.c: 1569: (handle+1)->STAT.DTS = 1;
 16363  012CF2  EE20 F004          	lfsr	2,4
 16364  012CF6  5034               	movf	USBConfigureEndpoint@handle,w,c
 16365  012CF8  26D9               	addwf	fsr2l,f,c
 16366  012CFA  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 16367  012CFC  22DA               	addwfc	fsr2h,f,c
 16368  012CFE  8CDF               	bsf	indf2,6,c
 16369  012D00  0012               	return		;funcret
 16370  012D02                     __end_of_USBConfigureEndpoint:
 16371                           	opt stack 0
 16372                           pclatu	equ	0xFFB
 16373                           pclath	equ	0xFFA
 16374                           tblptru	equ	0xFF8
 16375                           tblptrh	equ	0xFF7
 16376                           tblptrl	equ	0xFF6
 16377                           tablat	equ	0xFF5
 16378                           prodh	equ	0xFF4
 16379                           prodl	equ	0xFF3
 16380                           intcon	equ	0xFF2
 16381                           intcon2	equ	0xFF1
 16382                           indf0	equ	0xFEF
 16383                           postinc0	equ	0xFEE
 16384                           fsr0h	equ	0xFEA
 16385                           fsr0l	equ	0xFE9
 16386                           wreg	equ	0xFE8
 16387                           indf1	equ	0xFE7
 16388                           postinc1	equ	0xFE6
 16389                           postdec1	equ	0xFE5
 16390                           fsr1h	equ	0xFE2
 16391                           fsr1l	equ	0xFE1
 16392                           indf2	equ	0xFDF
 16393                           postinc2	equ	0xFDE
 16394                           postdec2	equ	0xFDD
 16395                           plusw2	equ	0xFDB
 16396                           fsr2h	equ	0xFDA
 16397                           fsr2l	equ	0xFD9
 16398                           status	equ	0xFD8
 16399                           
 16400 ;; *************** function _USBCtrlTrfOutHandler *****************
 16401 ;; Defined at:
 16402 ;;		line 2542 in file "../My_library/usb/usb_device.c"
 16403 ;; Parameters:    Size  Location     Type
 16404 ;;		None
 16405 ;; Auto vars:     Size  Location     Type
 16406 ;;		None
 16407 ;; Return value:  Size  Location     Type
 16408 ;;		None               void
 16409 ;; Registers used:
 16410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16411 ;; Tracked objects:
 16412 ;;		On entry : 0/0
 16413 ;;		On exit  : 0/0
 16414 ;;		Unchanged: 0/0
 16415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16420 ;;Total ram usage:        0 bytes
 16421 ;; Hardware stack levels used:    1
 16422 ;; Hardware stack levels required when called:    2
 16423 ;; This function calls:
 16424 ;;		_USBCtrlTrfRxService
 16425 ;; This function is called by:
 16426 ;;		_USBCtrlEPService
 16427 ;; This function uses a non-reentrant model
 16428 ;;
 16429                           
 16430                           	psect	text84
 16431  013284                     __ptext84:
 16432                           	opt stack 0
 16433  013284                     _USBCtrlTrfOutHandler:
 16434                           	opt stack 18
 16435                           
 16436                           ;usb_device.c: 2544: if(controlTransferState == 2)
 16437                           
 16438                           ;incstack = 0
 16439  013284  0E02               	movlw	2
 16440  013286  1829               	xorwf	_controlTransferState,w,c	;volatile
 16441  013288  A4D8               	btfss	status,2,c
 16442  01328A  D003               	goto	i2l6425
 16443                           
 16444                           ;usb_device.c: 2545: {
 16445                           ;usb_device.c: 2546: USBCtrlTrfRxService();
 16446  01328C  ECB4  F08A         	call	_USBCtrlTrfRxService	;wreg free
 16447                           
 16448                           ;usb_device.c: 2547: }
 16449  013290  0012               	return	
 16450  013292                     i2l6425:
 16451                           
 16452                           ;usb_device.c: 2548: else
 16453                           ;usb_device.c: 2549: {
 16454                           ;usb_device.c: 2552: controlTransferState = 0;
 16455  013292  0E00               	movlw	0
 16456  013294  6E29               	movwf	_controlTransferState,c	;volatile
 16457                           
 16458                           ;usb_device.c: 2559: if(BothEP0OutUOWNsSet == 0)
 16459  013296  5020               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 16460  013298  A4D8               	btfss	status,2,c
 16461  01329A  D01F               	goto	i2l6433
 16462                           
 16463                           ;usb_device.c: 2560: {
 16464                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->CNT = 8;
 16465  01329C  EE20 F001          	lfsr	2,1
 16466  0132A0  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16467  0132A2  26D9               	addwf	fsr2l,f,c
 16468  0132A4  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16469  0132A6  22DA               	addwfc	fsr2h,f,c
 16470  0132A8  0E08               	movlw	8
 16471  0132AA  6EDF               	movwf	indf2,c
 16472                           
 16473                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16474  0132AC  EE20 F002          	lfsr	2,2
 16475  0132B0  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16476  0132B2  26D9               	addwf	fsr2l,f,c
 16477  0132B4  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16478  0132B6  22DA               	addwfc	fsr2h,f,c
 16479  0132B8  0E30               	movlw	48
 16480  0132BA  6EDE               	movwf	postinc2,c
 16481  0132BC  0E0D               	movlw	13
 16482  0132BE  6EDD               	movwf	postdec2,c
 16483                           
 16484                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16485  0132C0  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16486  0132C4  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16487  0132C8  0E0C               	movlw	12
 16488  0132CA  6EDF               	movwf	indf2,c
 16489                           
 16490                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16491  0132CC  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16492  0132D0  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16493  0132D4  0E00               	movlw	0
 16494  0132D6  8EDB               	bsf	plusw2,7,c
 16495                           
 16496                           ;usb_device.c: 2565: }
 16497  0132D8  0012               	return	
 16498  0132DA                     i2l6433:
 16499                           
 16500                           ;usb_device.c: 2566: else
 16501                           ;usb_device.c: 2567: {
 16502                           ;usb_device.c: 2568: BothEP0OutUOWNsSet = 0;
 16503  0132DA  0E00               	movlw	0
 16504  0132DC  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16505  0132DE  0012               	return	
 16506  0132E0                     __end_of_USBCtrlTrfOutHandler:
 16507                           	opt stack 0
 16508                           pclatu	equ	0xFFB
 16509                           pclath	equ	0xFFA
 16510                           tblptru	equ	0xFF8
 16511                           tblptrh	equ	0xFF7
 16512                           tblptrl	equ	0xFF6
 16513                           tablat	equ	0xFF5
 16514                           prodh	equ	0xFF4
 16515                           prodl	equ	0xFF3
 16516                           intcon	equ	0xFF2
 16517                           intcon2	equ	0xFF1
 16518                           indf0	equ	0xFEF
 16519                           postinc0	equ	0xFEE
 16520                           fsr0h	equ	0xFEA
 16521                           fsr0l	equ	0xFE9
 16522                           wreg	equ	0xFE8
 16523                           indf1	equ	0xFE7
 16524                           postinc1	equ	0xFE6
 16525                           postdec1	equ	0xFE5
 16526                           fsr1h	equ	0xFE2
 16527                           fsr1l	equ	0xFE1
 16528                           indf2	equ	0xFDF
 16529                           postinc2	equ	0xFDE
 16530                           postdec2	equ	0xFDD
 16531                           plusw2	equ	0xFDB
 16532                           fsr2h	equ	0xFDA
 16533                           fsr2l	equ	0xFD9
 16534                           status	equ	0xFD8
 16535                           
 16536 ;; *************** function _USBCtrlTrfRxService *****************
 16537 ;; Defined at:
 16538 ;;		line 1853 in file "../My_library/usb/usb_device.c"
 16539 ;; Parameters:    Size  Location     Type
 16540 ;;		None
 16541 ;; Auto vars:     Size  Location     Type
 16542 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16543 ;;  i               1    0[COMRAM] unsigned char 
 16544 ;; Return value:  Size  Location     Type
 16545 ;;		None               void
 16546 ;; Registers used:
 16547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16548 ;; Tracked objects:
 16549 ;;		On entry : 0/0
 16550 ;;		On exit  : 0/0
 16551 ;;		Unchanged: 0/0
 16552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16557 ;;Total ram usage:        2 bytes
 16558 ;; Hardware stack levels used:    1
 16559 ;; Hardware stack levels required when called:    1
 16560 ;; This function calls:
 16561 ;;		_USBCtrlEPAllowStatusStage
 16562 ;; This function is called by:
 16563 ;;		_USBCtrlTrfOutHandler
 16564 ;; This function uses a non-reentrant model
 16565 ;;
 16566                           
 16567                           	psect	text85
 16568  011568                     __ptext85:
 16569                           	opt stack 0
 16570  011568                     _USBCtrlTrfRxService:
 16571                           	opt stack 18
 16572                           
 16573                           ;usb_device.c: 1855: uint8_t byteToRead;
 16574                           ;usb_device.c: 1856: uint8_t i;
 16575                           ;usb_device.c: 1860: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16576                           
 16577                           ;incstack = 0
 16578  011568  EE20 F001          	lfsr	2,1
 16579  01156C  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 16580  01156E  26D9               	addwf	fsr2l,f,c
 16581  011570  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16582  011572  22DA               	addwfc	fsr2h,f,c
 16583  011574  50DF               	movf	indf2,w,c
 16584  011576  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 16585                           
 16586                           ;usb_device.c: 1866: if(byteToRead > outPipes[0].wCount.Val)
 16587  011578  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16588  01157A  5C05               	subwf	_outPipes+4,w,c	;volatile
 16589  01157C  0E00               	movlw	0
 16590  01157E  5806               	subwfb	_outPipes+5,w,c	;volatile
 16591  011580  A0D8               	btfss	status,0,c
 16592                           
 16593                           ;usb_device.c: 1867: {
 16594                           ;usb_device.c: 1868: byteToRead = outPipes[0].wCount.Val;
 16595  011582  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 16596                           
 16597                           ;usb_device.c: 1869: }
 16598                           ;usb_device.c: 1871: outPipes[0].wCount.Val -= byteToRead;
 16599  011586  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16600  011588  5E05               	subwf	_outPipes+4,f,c	;volatile
 16601  01158A  0E00               	movlw	0
 16602  01158C  5A06               	subwfb	_outPipes+5,f,c	;volatile
 16603                           
 16604                           ;usb_device.c: 1875: for(i=0;i<byteToRead;i++)
 16605  01158E  0E00               	movlw	0
 16606  011590  6E2E               	movwf	USBCtrlTrfRxService@i,c
 16607  011592  D011               	goto	i2l6157
 16608  011594                     i2l6151:
 16609                           
 16610                           ;usb_device.c: 1876: {
 16611                           ;usb_device.c: 1877: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16612  011594  502E               	movf	USBCtrlTrfRxService@i,w,c
 16613  011596  0D01               	mullw	1
 16614  011598  0E38               	movlw	56
 16615  01159A  24F3               	addwf	prodl,w,c
 16616  01159C  6ED9               	movwf	fsr2l,c
 16617  01159E  0E0D               	movlw	13
 16618  0115A0  20F4               	addwfc	prodh,w,c
 16619  0115A2  6EDA               	movwf	fsr2h,c
 16620  0115A4  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 16621  0115A8  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 16622  0115AC  CFDF FFE7          	movff	indf2,indf1
 16623  0115B0  4A01               	infsnz	_outPipes,f,c	;volatile
 16624  0115B2  2A02               	incf	_outPipes+1,f,c	;volatile
 16625  0115B4  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 16626  0115B6                     i2l6157:
 16627  0115B6  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16628  0115B8  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 16629  0115BA  A0D8               	btfss	status,0,c
 16630  0115BC  D7EB               	goto	i2l6151
 16631                           
 16632                           ;usb_device.c: 1878: }
 16633                           ;usb_device.c: 1882: if(outPipes[0].wCount.Val > 0)
 16634  0115BE  5005               	movf	_outPipes+4,w,c	;volatile
 16635  0115C0  1006               	iorwf	_outPipes+5,w,c	;volatile
 16636  0115C2  B4D8               	btfsc	status,2,c
 16637  0115C4  D032               	goto	i2l6173
 16638                           
 16639                           ;usb_device.c: 1883: {
 16640                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->CNT = 8;
 16641  0115C6  EE20 F001          	lfsr	2,1
 16642  0115CA  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16643  0115CC  26D9               	addwf	fsr2l,f,c
 16644  0115CE  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16645  0115D0  22DA               	addwfc	fsr2h,f,c
 16646  0115D2  0E08               	movlw	8
 16647  0115D4  6EDF               	movwf	indf2,c
 16648                           
 16649                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16650  0115D6  EE20 F002          	lfsr	2,2
 16651  0115DA  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16652  0115DC  26D9               	addwf	fsr2l,f,c
 16653  0115DE  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16654  0115E0  22DA               	addwfc	fsr2h,f,c
 16655  0115E2  0E38               	movlw	56
 16656  0115E4  6EDE               	movwf	postinc2,c
 16657  0115E6  0E0D               	movlw	13
 16658  0115E8  6EDD               	movwf	postdec2,c
 16659                           
 16660                           ;usb_device.c: 1886: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16661  0115EA  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16662  0115EE  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16663  0115F2  BCDF               	btfsc	indf2,6,c
 16664  0115F4  D00D               	goto	i2l6169
 16665                           
 16666                           ;usb_device.c: 1887: {
 16667                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16668  0115F6  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16669  0115FA  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16670  0115FE  0E48               	movlw	72
 16671  011600  6EDF               	movwf	indf2,c
 16672                           
 16673                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16674  011602  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16675  011606  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16676  01160A  0E00               	movlw	0
 16677  01160C  8EDB               	bsf	plusw2,7,c
 16678                           
 16679                           ;usb_device.c: 1890: }
 16680  01160E  0012               	return	
 16681  011610                     i2l6169:
 16682                           
 16683                           ;usb_device.c: 1891: else
 16684                           ;usb_device.c: 1892: {
 16685                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 16686  011610  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16687  011614  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16688  011618  0E08               	movlw	8
 16689  01161A  6EDF               	movwf	indf2,c
 16690                           
 16691                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16692  01161C  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16693  011620  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16694  011624  0E00               	movlw	0
 16695  011626  8EDB               	bsf	plusw2,7,c
 16696                           
 16697                           ;usb_device.c: 1895: }
 16698                           ;usb_device.c: 1896: }
 16699  011628  0012               	return	
 16700  01162A                     i2l6173:
 16701                           
 16702                           ;usb_device.c: 1897: else
 16703                           ;usb_device.c: 1898: {
 16704                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
 16705  01162A  EE20 F001          	lfsr	2,1
 16706  01162E  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16707  011630  26D9               	addwf	fsr2l,f,c
 16708  011632  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16709  011634  22DA               	addwfc	fsr2h,f,c
 16710  011636  0E08               	movlw	8
 16711  011638  6EDF               	movwf	indf2,c
 16712                           
 16713                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16714  01163A  EE20 F002          	lfsr	2,2
 16715  01163E  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16716  011640  26D9               	addwf	fsr2l,f,c
 16717  011642  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16718  011644  22DA               	addwfc	fsr2h,f,c
 16719  011646  0E30               	movlw	48
 16720  011648  6EDE               	movwf	postinc2,c
 16721  01164A  0E0D               	movlw	13
 16722  01164C  6EDD               	movwf	postdec2,c
 16723                           
 16724                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16725  01164E  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16726  011652  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16727  011656  0E04               	movlw	4
 16728  011658  6EDF               	movwf	indf2,c
 16729                           
 16730                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16731  01165A  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16732  01165E  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16733  011662  0E00               	movlw	0
 16734  011664  8EDB               	bsf	plusw2,7,c
 16735                           
 16736                           ;usb_device.c: 1927: }
 16737                           ;usb_device.c: 1928: outPipes[0].info.bits.busy = 0;
 16738                           
 16739                           ;usb_device.c: 1916: {
 16740                           ;usb_device.c: 1922: outPipes[0].pFunc();
 16741  011666  9E04               	bcf	_outPipes+3,7,c	;volatile
 16742                           
 16743                           ;usb_device.c: 1942: if(USBDeferStatusStagePacket == 0)
 16744  011668  5025               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16745  01166A  A4D8               	btfss	status,2,c
 16746  01166C  0012               	return	
 16747                           
 16748                           ;usb_device.c: 1943: {
 16749                           ;usb_device.c: 1944: USBCtrlEPAllowStatusStage();
 16750  01166E  EC48  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16751  011672  0012               	return	
 16752  011674                     __end_of_USBCtrlTrfRxService:
 16753                           	opt stack 0
 16754                           pclatu	equ	0xFFB
 16755                           pclath	equ	0xFFA
 16756                           tblptru	equ	0xFF8
 16757                           tblptrh	equ	0xFF7
 16758                           tblptrl	equ	0xFF6
 16759                           tablat	equ	0xFF5
 16760                           prodh	equ	0xFF4
 16761                           prodl	equ	0xFF3
 16762                           intcon	equ	0xFF2
 16763                           intcon2	equ	0xFF1
 16764                           indf0	equ	0xFEF
 16765                           postinc0	equ	0xFEE
 16766                           fsr0h	equ	0xFEA
 16767                           fsr0l	equ	0xFE9
 16768                           wreg	equ	0xFE8
 16769                           indf1	equ	0xFE7
 16770                           postinc1	equ	0xFE6
 16771                           postdec1	equ	0xFE5
 16772                           fsr1h	equ	0xFE2
 16773                           fsr1l	equ	0xFE1
 16774                           indf2	equ	0xFDF
 16775                           postinc2	equ	0xFDE
 16776                           postdec2	equ	0xFDD
 16777                           plusw2	equ	0xFDB
 16778                           fsr2h	equ	0xFDA
 16779                           fsr2l	equ	0xFD9
 16780                           status	equ	0xFD8
 16781                           
 16782 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16783 ;; Defined at:
 16784 ;;		line 1417 in file "../My_library/usb/usb_device.c"
 16785 ;; Parameters:    Size  Location     Type
 16786 ;;		None
 16787 ;; Auto vars:     Size  Location     Type
 16788 ;;		None
 16789 ;; Return value:  Size  Location     Type
 16790 ;;		None               void
 16791 ;; Registers used:
 16792 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16793 ;; Tracked objects:
 16794 ;;		On entry : 0/0
 16795 ;;		On exit  : 0/0
 16796 ;;		Unchanged: 0/0
 16797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16802 ;;Total ram usage:        0 bytes
 16803 ;; Hardware stack levels used:    1
 16804 ;; This function calls:
 16805 ;;		Nothing
 16806 ;; This function is called by:
 16807 ;;		_USBDeviceTasks
 16808 ;;		_USBCtrlEPServiceComplete
 16809 ;;		_USBCtrlTrfRxService
 16810 ;; This function uses a non-reentrant model
 16811 ;;
 16812                           
 16813                           	psect	text86
 16814  012290                     __ptext86:
 16815                           	opt stack 0
 16816  012290                     _USBCtrlEPAllowStatusStage:
 16817                           	opt stack 18
 16818                           
 16819                           ;usb_device.c: 1424: if(USBStatusStageEnabledFlag1 == 0)
 16820                           
 16821                           ;incstack = 0
 16822  012290  5026               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 16823  012292  A4D8               	btfss	status,2,c
 16824  012294  0012               	return	
 16825                           
 16826                           ;usb_device.c: 1425: {
 16827                           ;usb_device.c: 1426: USBStatusStageEnabledFlag1 = 1;
 16828  012296  0E01               	movlw	1
 16829  012298  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16830                           
 16831                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag2 == 0)
 16832  01229A  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 16833  01229C  A4D8               	btfss	status,2,c
 16834  01229E  0012               	return	
 16835                           
 16836                           ;usb_device.c: 1428: {
 16837                           ;usb_device.c: 1429: USBStatusStageEnabledFlag2 = 1;
 16838  0122A0  0E01               	movlw	1
 16839  0122A2  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16840                           
 16841                           ;usb_device.c: 1433: if(controlTransferState == 2)
 16842  0122A4  0E02               	movlw	2
 16843  0122A6  1829               	xorwf	_controlTransferState,w,c	;volatile
 16844  0122A8  A4D8               	btfss	status,2,c
 16845  0122AA  D015               	goto	i2l5703
 16846                           
 16847                           ;usb_device.c: 1434: {
 16848                           ;usb_device.c: 1435: pBDTEntryIn[0]->CNT = 0;
 16849  0122AC  EE20 F001          	lfsr	2,1
 16850  0122B0  5010               	movf	_pBDTEntryIn,w,c
 16851  0122B2  26D9               	addwf	fsr2l,f,c
 16852  0122B4  5011               	movf	_pBDTEntryIn+1,w,c
 16853  0122B6  22DA               	addwfc	fsr2h,f,c
 16854  0122B8  0E00               	movlw	0
 16855  0122BA  6EDF               	movwf	indf2,c
 16856                           
 16857                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16858  0122BC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16859  0122C0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16860  0122C4  0E48               	movlw	72
 16861  0122C6  6EDF               	movwf	indf2,c
 16862                           
 16863                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16864  0122C8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16865  0122CC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16866  0122D0  0E00               	movlw	0
 16867  0122D2  8EDB               	bsf	plusw2,7,c
 16868                           
 16869                           ;usb_device.c: 1438: }
 16870  0122D4  0012               	return	
 16871  0122D6                     i2l5703:
 16872                           
 16873                           ;usb_device.c: 1439: else if(controlTransferState == 1)
 16874  0122D6  0429               	decf	_controlTransferState,w,c	;volatile
 16875  0122D8  A4D8               	btfss	status,2,c
 16876  0122DA  0012               	return	
 16877                           
 16878                           ;usb_device.c: 1440: {
 16879                           ;usb_device.c: 1441: BothEP0OutUOWNsSet = 0;
 16880  0122DC  0E00               	movlw	0
 16881  0122DE  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16882                           
 16883                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->CNT = 8;
 16884  0122E0  EE20 F001          	lfsr	2,1
 16885  0122E4  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 16886  0122E6  26D9               	addwf	fsr2l,f,c
 16887  0122E8  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16888  0122EA  22DA               	addwfc	fsr2h,f,c
 16889  0122EC  0E08               	movlw	8
 16890  0122EE  6EDF               	movwf	indf2,c
 16891                           
 16892                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16893  0122F0  EE20 F002          	lfsr	2,2
 16894  0122F4  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 16895  0122F6  26D9               	addwf	fsr2l,f,c
 16896  0122F8  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16897  0122FA  22DA               	addwfc	fsr2h,f,c
 16898  0122FC  0E30               	movlw	48
 16899  0122FE  6EDE               	movwf	postinc2,c
 16900  012300  0E0D               	movlw	13
 16901  012302  6EDD               	movwf	postdec2,c
 16902                           
 16903                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 16904  012304  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16905  012308  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16906  01230C  0E04               	movlw	4
 16907  01230E  6EDF               	movwf	indf2,c
 16908                           
 16909                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16910  012310  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16911  012314  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16912  012318  0E00               	movlw	0
 16913  01231A  8EDB               	bsf	plusw2,7,c
 16914                           
 16915                           ;usb_device.c: 1450: BothEP0OutUOWNsSet = 1;
 16916  01231C  0E01               	movlw	1
 16917  01231E  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16918                           
 16919                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->CNT = 8;
 16920  012320  EE20 F001          	lfsr	2,1
 16921  012324  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16922  012326  26D9               	addwf	fsr2l,f,c
 16923  012328  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16924  01232A  22DA               	addwfc	fsr2h,f,c
 16925  01232C  0E08               	movlw	8
 16926  01232E  6EDF               	movwf	indf2,c
 16927                           
 16928                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16929  012330  EE20 F002          	lfsr	2,2
 16930  012334  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16931  012336  26D9               	addwf	fsr2l,f,c
 16932  012338  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16933  01233A  22DA               	addwfc	fsr2h,f,c
 16934  01233C  0E30               	movlw	48
 16935  01233E  6EDE               	movwf	postinc2,c
 16936  012340  0E0D               	movlw	13
 16937  012342  6EDD               	movwf	postdec2,c
 16938                           
 16939                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 16940  012344  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16941  012348  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16942  01234C  0E80               	movlw	128
 16943  01234E  6EDF               	movwf	indf2,c
 16944  012350  0012               	return	
 16945  012352                     __end_of_USBCtrlEPAllowStatusStage:
 16946                           	opt stack 0
 16947                           pclatu	equ	0xFFB
 16948                           pclath	equ	0xFFA
 16949                           tblptru	equ	0xFF8
 16950                           tblptrh	equ	0xFF7
 16951                           tblptrl	equ	0xFF6
 16952                           tablat	equ	0xFF5
 16953                           prodh	equ	0xFF4
 16954                           prodl	equ	0xFF3
 16955                           intcon	equ	0xFF2
 16956                           intcon2	equ	0xFF1
 16957                           indf0	equ	0xFEF
 16958                           postinc0	equ	0xFEE
 16959                           fsr0h	equ	0xFEA
 16960                           fsr0l	equ	0xFE9
 16961                           wreg	equ	0xFE8
 16962                           indf1	equ	0xFE7
 16963                           postinc1	equ	0xFE6
 16964                           postdec1	equ	0xFE5
 16965                           fsr1h	equ	0xFE2
 16966                           fsr1l	equ	0xFE1
 16967                           indf2	equ	0xFDF
 16968                           postinc2	equ	0xFDE
 16969                           postdec2	equ	0xFDD
 16970                           plusw2	equ	0xFDB
 16971                           fsr2h	equ	0xFDA
 16972                           fsr2l	equ	0xFD9
 16973                           status	equ	0xFD8
 16974                           
 16975 ;; *************** function _USBCtrlTrfInHandler *****************
 16976 ;; Defined at:
 16977 ;;		line 2596 in file "../My_library/usb/usb_device.c"
 16978 ;; Parameters:    Size  Location     Type
 16979 ;;		None
 16980 ;; Auto vars:     Size  Location     Type
 16981 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16982 ;; Return value:  Size  Location     Type
 16983 ;;		None               void
 16984 ;; Registers used:
 16985 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16986 ;; Tracked objects:
 16987 ;;		On entry : 0/0
 16988 ;;		On exit  : 0/0
 16989 ;;		Unchanged: 0/0
 16990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16995 ;;Total ram usage:        1 bytes
 16996 ;; Hardware stack levels used:    1
 16997 ;; Hardware stack levels required when called:    1
 16998 ;; This function calls:
 16999 ;;		_USBCtrlTrfTxService
 17000 ;; This function is called by:
 17001 ;;		_USBCtrlEPService
 17002 ;; This function uses a non-reentrant model
 17003 ;;
 17004                           
 17005                           	psect	text87
 17006  012410                     __ptext87:
 17007                           	opt stack 0
 17008  012410                     _USBCtrlTrfInHandler:
 17009                           	opt stack 19
 17010                           
 17011                           ;usb_device.c: 2598: uint8_t lastDTS;
 17012                           ;usb_device.c: 2600: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 17013                           
 17014                           ;incstack = 0
 17015  012410  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17016  012414  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17017  012418  0E00               	movlw	0
 17018  01241A  BCDF               	btfsc	indf2,6,c
 17019  01241C  0E01               	movlw	1
 17020  01241E  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 17021                           
 17022                           ;usb_device.c: 2603: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 17023  012420  0E04               	movlw	4
 17024  012422  1A10               	xorwf	_pBDTEntryIn,f,c
 17025                           
 17026                           ;usb_device.c: 2608: if(USBDeviceState == ADR_PENDING_STATE)
 17027  012424  0E08               	movlw	8
 17028  012426  0100               	movlb	0	; () banked
 17029  012428  19BB               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 17030  01242A  A4D8               	btfss	status,2,c
 17031  01242C  D00E               	goto	i2l6449
 17032                           
 17033                           ; BSR set to: 0
 17034                           ;usb_device.c: 2609: {
 17035                           ;usb_device.c: 2610: UADDR = (SetupPkt.bDevADR & 0x7F);
 17036  01242E  010D               	movlb	13	; () banked
 17037  012430  5132               	movf	50,w,b	;volatile
 17038  012432  0B7F               	andlw	127
 17039  012434  010F               	movlb	15	; () banked
 17040  012436  6F38               	movwf	56,b	;volatile
 17041                           
 17042                           ; BSR set to: 15
 17043                           ;usb_device.c: 2611: if(UADDR != 0u)
 17044  012438  010F               	movlb	15	; () banked
 17045  01243A  5138               	movf	56,w,b	;volatile
 17046  01243C  B4D8               	btfsc	status,2,c
 17047  01243E  D002               	goto	i2l6447
 17048                           
 17049                           ; BSR set to: 15
 17050                           ;usb_device.c: 2612: {
 17051                           ;usb_device.c: 2613: USBDeviceState=ADDRESS_STATE;
 17052  012440  0E10               	movlw	16
 17053  012442  D001               	goto	L14
 17054  012444                     i2l6447:
 17055                           
 17056                           ;usb_device.c: 2615: else
 17057                           ;usb_device.c: 2616: {
 17058                           ;usb_device.c: 2617: USBDeviceState=DEFAULT_STATE;
 17059  012444  0E04               	movlw	4
 17060  012446                     L14:
 17061  012446  0100               	movlb	0	; () banked
 17062  012448  6FBB               	movwf	_USBDeviceState& (0+255),b	;volatile
 17063  01244A                     i2l6449:
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;usb_device.c: 2618: }
 17067                           ;usb_device.c: 2619: }
 17068                           ;usb_device.c: 2622: if(controlTransferState == 1)
 17069  01244A  0429               	decf	_controlTransferState,w,c	;volatile
 17070  01244C  A4D8               	btfss	status,2,c
 17071  01244E  D03A               	goto	i2l1416
 17072                           
 17073                           ; BSR set to: 0
 17074                           ;usb_device.c: 2623: {
 17075                           ;usb_device.c: 2624: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 17076  012450  EE20 F002          	lfsr	2,2
 17077  012454  5010               	movf	_pBDTEntryIn,w,c
 17078  012456  26D9               	addwf	fsr2l,f,c
 17079  012458  5011               	movf	_pBDTEntryIn+1,w,c
 17080  01245A  22DA               	addwfc	fsr2h,f,c
 17081  01245C  0E38               	movlw	56
 17082  01245E  6EDE               	movwf	postinc2,c
 17083  012460  0E0D               	movlw	13
 17084  012462  6EDD               	movwf	postdec2,c
 17085                           
 17086                           ; BSR set to: 0
 17087                           ;usb_device.c: 2625: USBCtrlTrfTxService();
 17088  012464  EC12  F090         	call	_USBCtrlTrfTxService	;wreg free
 17089                           
 17090                           ;usb_device.c: 2631: if(shortPacketStatus == 2)
 17091  012468  0E02               	movlw	2
 17092  01246A  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 17093  01246C  A4D8               	btfss	status,2,c
 17094  01246E  D00D               	goto	i2l6461
 17095                           
 17096                           ;usb_device.c: 2632: {
 17097                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val = 0x04;
 17098  012470  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17099  012474  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17100  012478  0E04               	movlw	4
 17101  01247A  6EDF               	movwf	indf2,c
 17102                           
 17103                           ;usb_device.c: 2636: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17104  01247C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17105  012480  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17106  012484  0E00               	movlw	0
 17107  012486  8EDB               	bsf	plusw2,7,c
 17108                           
 17109                           ;usb_device.c: 2637: }
 17110  012488  0012               	return	
 17111  01248A                     i2l6461:
 17112                           
 17113                           ;usb_device.c: 2638: else
 17114                           ;usb_device.c: 2639: {
 17115                           ;usb_device.c: 2640: if(lastDTS == 0)
 17116  01248A  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 17117  01248C  A4D8               	btfss	status,2,c
 17118  01248E  D00D               	goto	i2l6467
 17119                           
 17120                           ;usb_device.c: 2641: {
 17121                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17122  012490  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17123  012494  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17124  012498  0E48               	movlw	72
 17125  01249A  6EDF               	movwf	indf2,c
 17126                           
 17127                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17128  01249C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17129  0124A0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17130  0124A4  0E00               	movlw	0
 17131  0124A6  8EDB               	bsf	plusw2,7,c
 17132                           
 17133                           ;usb_device.c: 2644: }
 17134  0124A8  0012               	return	
 17135  0124AA                     i2l6467:
 17136                           
 17137                           ;usb_device.c: 2645: else
 17138                           ;usb_device.c: 2646: {
 17139                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 17140  0124AA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17141  0124AE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17142  0124B2  0E08               	movlw	8
 17143  0124B4  6EDF               	movwf	indf2,c
 17144                           
 17145                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17146  0124B6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 17147  0124BA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17148  0124BE  0E00               	movlw	0
 17149  0124C0  8EDB               	bsf	plusw2,7,c
 17150                           
 17151                           ;usb_device.c: 2649: }
 17152                           ;usb_device.c: 2650: }
 17153                           ;usb_device.c: 2651: }
 17154  0124C2  0012               	return	
 17155  0124C4                     i2l1416:
 17156                           
 17157                           ; BSR set to: 0
 17158                           ;usb_device.c: 2652: else
 17159                           ;usb_device.c: 2653: {
 17160                           ;usb_device.c: 2657: if(outPipes[0].info.bits.busy == 1)
 17161  0124C4  BE04               	btfsc	_outPipes+3,7,c	;volatile
 17162                           
 17163                           ; BSR set to: 0
 17164                           ;usb_device.c: 2662: }
 17165                           ;usb_device.c: 2663: outPipes[0].info.bits.busy = 0;
 17166                           
 17167                           ; BSR set to: 0
 17168                           ;usb_device.c: 2660: {
 17169                           ;usb_device.c: 2661: outPipes[0].pFunc();
 17170  0124C6  9E04               	bcf	_outPipes+3,7,c	;volatile
 17171                           
 17172                           ; BSR set to: 0
 17173                           ;usb_device.c: 2664: }
 17174                           ;usb_device.c: 2666: controlTransferState = 0;
 17175                           
 17176                           ; BSR set to: 0
 17177  0124C8  0E00               	movlw	0
 17178  0124CA  6E29               	movwf	_controlTransferState,c	;volatile
 17179  0124CC  0012               	return	
 17180  0124CE                     __end_of_USBCtrlTrfInHandler:
 17181                           	opt stack 0
 17182                           pclatu	equ	0xFFB
 17183                           pclath	equ	0xFFA
 17184                           tblptru	equ	0xFF8
 17185                           tblptrh	equ	0xFF7
 17186                           tblptrl	equ	0xFF6
 17187                           tablat	equ	0xFF5
 17188                           prodh	equ	0xFF4
 17189                           prodl	equ	0xFF3
 17190                           intcon	equ	0xFF2
 17191                           intcon2	equ	0xFF1
 17192                           indf0	equ	0xFEF
 17193                           postinc0	equ	0xFEE
 17194                           fsr0h	equ	0xFEA
 17195                           fsr0l	equ	0xFE9
 17196                           wreg	equ	0xFE8
 17197                           indf1	equ	0xFE7
 17198                           postinc1	equ	0xFE6
 17199                           postdec1	equ	0xFE5
 17200                           fsr1h	equ	0xFE2
 17201                           fsr1l	equ	0xFE1
 17202                           indf2	equ	0xFDF
 17203                           postinc2	equ	0xFDE
 17204                           postdec2	equ	0xFDD
 17205                           plusw2	equ	0xFDB
 17206                           fsr2h	equ	0xFDA
 17207                           fsr2l	equ	0xFD9
 17208                           status	equ	0xFD8
 17209                           
 17210 ;; *************** function _USBCtrlTrfTxService *****************
 17211 ;; Defined at:
 17212 ;;		line 1772 in file "../My_library/usb/usb_device.c"
 17213 ;; Parameters:    Size  Location     Type
 17214 ;;		None
 17215 ;; Auto vars:     Size  Location     Type
 17216 ;;  byteToSend      1    0[COMRAM] unsigned char 
 17217 ;; Return value:  Size  Location     Type
 17218 ;;		None               void
 17219 ;; Registers used:
 17220 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17221 ;; Tracked objects:
 17222 ;;		On entry : 0/0
 17223 ;;		On exit  : 0/0
 17224 ;;		Unchanged: 0/0
 17225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17230 ;;Total ram usage:        1 bytes
 17231 ;; Hardware stack levels used:    1
 17232 ;; This function calls:
 17233 ;;		Nothing
 17234 ;; This function is called by:
 17235 ;;		_USBCtrlEPAllowDataStage
 17236 ;;		_USBCtrlTrfInHandler
 17237 ;; This function uses a non-reentrant model
 17238 ;;
 17239                           
 17240                           	psect	text88
 17241  012024                     __ptext88:
 17242                           	opt stack 0
 17243  012024                     _USBCtrlTrfTxService:
 17244                           	opt stack 17
 17245                           
 17246                           ;usb_device.c: 1774: uint8_t byteToSend;
 17247                           ;usb_device.c: 1778: byteToSend = 8;
 17248                           
 17249                           ;incstack = 0
 17250  012024  0E08               	movlw	8
 17251  012026  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 17252                           
 17253                           ;usb_device.c: 1779: if(inPipes[0].wCount.Val < (uint8_t)8)
 17254  012028  500F               	movf	_inPipes+5,w,c	;volatile
 17255  01202A  E110               	bnz	i2l5647
 17256  01202C  0E08               	movlw	8
 17257  01202E  5C0E               	subwf	_inPipes+4,w,c	;volatile
 17258  012030  B0D8               	btfsc	status,0,c
 17259  012032  D00C               	goto	i2l5647
 17260                           
 17261                           ;usb_device.c: 1780: {
 17262                           ;usb_device.c: 1781: byteToSend = inPipes[0].wCount.Val;
 17263  012034  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 17264                           
 17265                           ;usb_device.c: 1788: if(shortPacketStatus == 0)
 17266  012038  502B               	movf	_shortPacketStatus,w,c	;volatile
 17267  01203A  A4D8               	btfss	status,2,c
 17268  01203C  D002               	goto	i2l5643
 17269                           
 17270                           ;usb_device.c: 1789: {
 17271                           ;usb_device.c: 1790: shortPacketStatus = 1;
 17272  01203E  0E01               	movlw	1
 17273  012040  D004               	goto	L15
 17274  012042                     i2l5643:
 17275                           
 17276                           ;usb_device.c: 1792: else if(shortPacketStatus == 1)
 17277  012042  042B               	decf	_shortPacketStatus,w,c	;volatile
 17278  012044  A4D8               	btfss	status,2,c
 17279  012046  D002               	goto	i2l5647
 17280                           
 17281                           ;usb_device.c: 1793: {
 17282                           ;usb_device.c: 1794: shortPacketStatus = 2;
 17283  012048  0E02               	movlw	2
 17284  01204A                     L15:
 17285  01204A  6E2B               	movwf	_shortPacketStatus,c	;volatile
 17286  01204C                     i2l5647:
 17287                           
 17288                           ;usb_device.c: 1795: }
 17289                           ;usb_device.c: 1796: }
 17290                           ;usb_device.c: 1800: inPipes[0].wCount.Val -= byteToSend;
 17291  01204C  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17292  01204E  5E0E               	subwf	_inPipes+4,f,c	;volatile
 17293  012050  0E00               	movlw	0
 17294  012052  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 17295                           
 17296                           ;usb_device.c: 1805: pBDTEntryIn[0]->CNT = byteToSend;
 17297  012054  EE20 F001          	lfsr	2,1
 17298  012058  5010               	movf	_pBDTEntryIn,w,c
 17299  01205A  26D9               	addwf	fsr2l,f,c
 17300  01205C  5011               	movf	_pBDTEntryIn+1,w,c
 17301  01205E  22DA               	addwfc	fsr2h,f,c
 17302  012060  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 17303                           
 17304                           ;usb_device.c: 1809: pDst = (volatile uint8_t*)CtrlTrfData;
 17305  012064  0E38               	movlw	56
 17306  012066  0100               	movlb	0	; () banked
 17307  012068  6FB0               	movwf	_pDst& (0+255),b
 17308  01206A  0E0D               	movlw	13
 17309  01206C  0100               	movlb	0	; () banked
 17310  01206E  6FB1               	movwf	(_pDst+1)& (0+255),b
 17311                           
 17312                           ; BSR set to: 0
 17313                           ;usb_device.c: 1810: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17314  012070  A00D               	btfss	_inPipes+3,0,c	;volatile
 17315  012072  D01D               	goto	i2l5665
 17316  012074  D03C               	goto	i2l5675
 17317  012076                     i2l5657:
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;usb_device.c: 1813: {
 17321                           ;usb_device.c: 1814: *pDst++ = *inPipes[0].pSrc.bRom++;
 17322  012076  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17323  01207A  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17324  01207E  0E00               	movlw	low (__mediumconst shr (0+16))
 17325  012080  6EF8               	movwf	tblptru,c
 17326  012082  C0B0  FFD9         	movff	_pDst,fsr2l
 17327  012086  C0B1  FFDA         	movff	_pDst+1,fsr2h
 17328  01208A  0E0E               	movlw	(high __ramtop+-1)
 17329  01208C  64F7               	cpfsgt	tblptrh,c
 17330  01208E  D003               	bra	i2u420_47
 17331  012090  0008               	tblrd		*
 17332  012092  50F5               	movf	tablat,w,c
 17333  012094  D005               	bra	i2u420_40
 17334  012096                     i2u420_47:
 17335  012096  CFF6 FFE9          	movff	tblptrl,fsr0l
 17336  01209A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17337  01209E  50EF               	movf	indf0,w,c
 17338  0120A0                     i2u420_40:
 17339  0120A0  6EDF               	movwf	indf2,c
 17340  0120A2  4A0A               	infsnz	_inPipes,f,c	;volatile
 17341  0120A4  2A0B               	incf	_inPipes+1,f,c	;volatile
 17342  0120A6  0100               	movlb	0	; () banked
 17343  0120A8  4BB0               	infsnz	_pDst& (0+255),f,b
 17344  0120AA  2BB1               	incf	(_pDst+1)& (0+255),f,b
 17345                           
 17346                           ; BSR set to: 0
 17347                           ;usb_device.c: 1815: byteToSend--;
 17348  0120AC  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17349  0120AE                     i2l5665:
 17350                           
 17351                           ; BSR set to: 0
 17352  0120AE  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17353  0120B0  B4D8               	btfsc	status,2,c
 17354  0120B2  0012               	return	
 17355  0120B4  D7E0               	goto	i2l5657
 17356  0120B6                     i2l5667:
 17357                           
 17358                           ; BSR set to: 0
 17359                           ;usb_device.c: 1821: {
 17360                           ;usb_device.c: 1822: *pDst++ = *inPipes[0].pSrc.bRam++;
 17361  0120B6  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17362  0120BA  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17363  0120BE  0E00               	movlw	low (__mediumconst shr (0+16))
 17364  0120C0  6EF8               	movwf	tblptru,c
 17365  0120C2  C0B0  FFD9         	movff	_pDst,fsr2l
 17366  0120C6  C0B1  FFDA         	movff	_pDst+1,fsr2h
 17367  0120CA  0E0E               	movlw	(high __ramtop+-1)
 17368  0120CC  64F7               	cpfsgt	tblptrh,c
 17369  0120CE  D003               	bra	i2u422_47
 17370  0120D0  0008               	tblrd		*
 17371  0120D2  50F5               	movf	tablat,w,c
 17372  0120D4  D005               	bra	i2u422_40
 17373  0120D6                     i2u422_47:
 17374  0120D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 17375  0120DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 17376  0120DE  50EF               	movf	indf0,w,c
 17377  0120E0                     i2u422_40:
 17378  0120E0  6EDF               	movwf	indf2,c
 17379  0120E2  4A0A               	infsnz	_inPipes,f,c	;volatile
 17380  0120E4  2A0B               	incf	_inPipes+1,f,c	;volatile
 17381  0120E6  0100               	movlb	0	; () banked
 17382  0120E8  4BB0               	infsnz	_pDst& (0+255),f,b
 17383  0120EA  2BB1               	incf	(_pDst+1)& (0+255),f,b
 17384                           
 17385                           ; BSR set to: 0
 17386                           ;usb_device.c: 1823: byteToSend--;
 17387  0120EC  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17388  0120EE                     i2l5675:
 17389                           
 17390                           ; BSR set to: 0
 17391  0120EE  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17392  0120F0  B4D8               	btfsc	status,2,c
 17393  0120F2  0012               	return	
 17394  0120F4  D7E0               	goto	i2l5667
 17395  0120F6                     __end_of_USBCtrlTrfTxService:
 17396                           	opt stack 0
 17397                           pclatu	equ	0xFFB
 17398                           pclath	equ	0xFFA
 17399                           tblptru	equ	0xFF8
 17400                           tblptrh	equ	0xFF7
 17401                           tblptrl	equ	0xFF6
 17402                           tablat	equ	0xFF5
 17403                           prodh	equ	0xFF4
 17404                           prodl	equ	0xFF3
 17405                           intcon	equ	0xFF2
 17406                           intcon2	equ	0xFF1
 17407                           indf0	equ	0xFEF
 17408                           postinc0	equ	0xFEE
 17409                           fsr0h	equ	0xFEA
 17410                           fsr0l	equ	0xFE9
 17411                           wreg	equ	0xFE8
 17412                           indf1	equ	0xFE7
 17413                           postinc1	equ	0xFE6
 17414                           postdec1	equ	0xFE5
 17415                           fsr1h	equ	0xFE2
 17416                           fsr1l	equ	0xFE1
 17417                           indf2	equ	0xFDF
 17418                           postinc2	equ	0xFDE
 17419                           postdec2	equ	0xFDD
 17420                           plusw2	equ	0xFDB
 17421                           fsr2h	equ	0xFDA
 17422                           fsr2l	equ	0xFD9
 17423                           status	equ	0xFD8
 17424                           
 17425 ;; *************** function _UART_ISR *****************
 17426 ;; Defined at:
 17427 ;;		line 37 in file "../My_library/My_UART.c"
 17428 ;; Parameters:    Size  Location     Type
 17429 ;;		None
 17430 ;; Auto vars:     Size  Location     Type
 17431 ;;  ascii           1   15[COMRAM] unsigned char 
 17432 ;; Return value:  Size  Location     Type
 17433 ;;		None               void
 17434 ;; Registers used:
 17435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17436 ;; Tracked objects:
 17437 ;;		On entry : 0/0
 17438 ;;		On exit  : 0/0
 17439 ;;		Unchanged: 0/0
 17440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17445 ;;Total ram usage:        1 bytes
 17446 ;; Hardware stack levels used:    1
 17447 ;; Hardware stack levels required when called:    2
 17448 ;; This function calls:
 17449 ;;		i2_ringbuf_num
 17450 ;;		i2_ringbuf_pop
 17451 ;;		i2_ringbuf_put
 17452 ;; This function is called by:
 17453 ;;		_ISR
 17454 ;; This function uses a non-reentrant model
 17455 ;;
 17456                           
 17457                           	psect	text89
 17458  013420                     __ptext89:
 17459                           	opt stack 0
 17460  013420                     _UART_ISR:
 17461                           	opt stack 21
 17462                           
 17463                           ;My_UART.c: 38: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;incstack = 0
 17467  013420  B89D               	btfsc	3997,4,c	;volatile
 17468  013422  A89E               	btfss	3998,4,c	;volatile
 17469  013424  D013               	goto	i2l964
 17470                           
 17471                           ;My_UART.c: 39: if (ringbuf_num(&uart_tx)) {
 17472  013426  0ED4               	movlw	low _uart_tx
 17473  013428  6E2E               	movwf	i2ringbuf_num@rb,c
 17474  01342A  0E01               	movlw	high _uart_tx
 17475  01342C  6E2F               	movwf	i2ringbuf_num@rb+1,c
 17476  01342E  EC81  F093         	call	i2_ringbuf_num	;wreg free
 17477  013432  502E               	movf	?i2_ringbuf_num,w,c
 17478  013434  102F               	iorwf	?i2_ringbuf_num+1,w,c
 17479  013436  B4D8               	btfsc	status,2,c
 17480  013438  D008               	goto	i2l965
 17481                           
 17482                           ;My_UART.c: 40: TXREG1 = ringbuf_pop(&uart_tx);
 17483  01343A  0ED4               	movlw	low _uart_tx
 17484  01343C  6E36               	movwf	i2ringbuf_pop@rb,c
 17485  01343E  0E01               	movlw	high _uart_tx
 17486  013440  6E37               	movwf	i2ringbuf_pop@rb+1,c
 17487  013442  ECEF  F094         	call	i2_ringbuf_pop	;wreg free
 17488  013446  6EAE               	movwf	4014,c	;volatile
 17489                           
 17490                           ;My_UART.c: 41: } else {
 17491  013448  D001               	goto	i2l964
 17492  01344A                     i2l965:
 17493                           
 17494                           ;My_UART.c: 42: PIE1bits.TXIE = 0;
 17495  01344A  989D               	bcf	3997,4,c	;volatile
 17496  01344C                     i2l964:
 17497                           
 17498                           ;My_UART.c: 43: }
 17499                           ;My_UART.c: 44: }
 17500                           ;My_UART.c: 45: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 17501  01344C  AA9D               	btfss	3997,5,c	;volatile
 17502  01344E  0012               	return	
 17503  013450  AA9E               	btfss	3998,5,c	;volatile
 17504  013452  0012               	return	
 17505                           
 17506                           ;My_UART.c: 46: char ascii = RCREG1;
 17507  013454  CFAF F03D          	movff	4015,UART_ISR@ascii	;volatile
 17508                           
 17509                           ;My_UART.c: 47: ringbuf_put(&uart_rx, ascii);
 17510  013458  0ECC               	movlw	low _uart_rx
 17511  01345A  6E36               	movwf	i2ringbuf_put@rb,c
 17512  01345C  0E01               	movlw	high _uart_rx
 17513  01345E  6E37               	movwf	i2ringbuf_put@rb+1,c
 17514  013460  C03D  F038         	movff	UART_ISR@ascii,i2ringbuf_put@data
 17515  013464  EC3C  F094         	call	i2_ringbuf_put	;wreg free
 17516  013468  0012               	return	
 17517  01346A                     __end_of_UART_ISR:
 17518                           	opt stack 0
 17519                           pclatu	equ	0xFFB
 17520                           pclath	equ	0xFFA
 17521                           tblptru	equ	0xFF8
 17522                           tblptrh	equ	0xFF7
 17523                           tblptrl	equ	0xFF6
 17524                           tablat	equ	0xFF5
 17525                           prodh	equ	0xFF4
 17526                           prodl	equ	0xFF3
 17527                           intcon	equ	0xFF2
 17528                           intcon2	equ	0xFF1
 17529                           indf0	equ	0xFEF
 17530                           postinc0	equ	0xFEE
 17531                           fsr0h	equ	0xFEA
 17532                           fsr0l	equ	0xFE9
 17533                           wreg	equ	0xFE8
 17534                           indf1	equ	0xFE7
 17535                           postinc1	equ	0xFE6
 17536                           postdec1	equ	0xFE5
 17537                           fsr1h	equ	0xFE2
 17538                           fsr1l	equ	0xFE1
 17539                           indf2	equ	0xFDF
 17540                           postinc2	equ	0xFDE
 17541                           postdec2	equ	0xFDD
 17542                           plusw2	equ	0xFDB
 17543                           fsr2h	equ	0xFDA
 17544                           fsr2l	equ	0xFD9
 17545                           status	equ	0xFD8
 17546                           
 17547 ;; *************** function i2_ringbuf_put *****************
 17548 ;; Defined at:
 17549 ;;		line 20 in file "../My_library/My_ringbuf.c"
 17550 ;; Parameters:    Size  Location     Type
 17551 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 17552 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_tx(8), uart_rx(8), 
 17553 ;;		 -> usb_tx(8), usb_rx(8), 
 17554 ;;  data            1   10[COMRAM] unsigned char 
 17555 ;; Auto vars:     Size  Location     Type
 17556 ;;		None
 17557 ;; Return value:  Size  Location     Type
 17558 ;;		None               void
 17559 ;; Registers used:
 17560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17561 ;; Tracked objects:
 17562 ;;		On entry : 0/0
 17563 ;;		On exit  : 0/0
 17564 ;;		Unchanged: 0/0
 17565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17566 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17568 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17569 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17570 ;;Total ram usage:        7 bytes
 17571 ;; Hardware stack levels used:    1
 17572 ;; Hardware stack levels required when called:    1
 17573 ;; This function calls:
 17574 ;;		i2_ringbuf_num
 17575 ;; This function is called by:
 17576 ;;		_UART_ISR
 17577 ;; This function uses a non-reentrant model
 17578 ;;
 17579                           
 17580                           	psect	text90
 17581  012878                     __ptext90:
 17582                           	opt stack 0
 17583  012878                     i2_ringbuf_put:
 17584                           	opt stack 21
 17585                           
 17586                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 17587                           
 17588                           ;incstack = 0
 17589  012878  C036  F02E         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 17590  01287C  C037  F02F         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 17591  012880  EC81  F093         	call	i2_ringbuf_num	;wreg free
 17592  012884  EE20 F002          	lfsr	2,2
 17593  012888  5036               	movf	i2ringbuf_put@rb,w,c
 17594  01288A  26D9               	addwf	fsr2l,f,c
 17595  01288C  5037               	movf	i2ringbuf_put@rb+1,w,c
 17596  01288E  22DA               	addwfc	fsr2h,f,c
 17597  012890  50DE               	movf	postinc2,w,c
 17598  012892  5C2E               	subwf	?i2_ringbuf_num,w,c
 17599  012894  50DE               	movf	postinc2,w,c
 17600  012896  582F               	subwfb	?i2_ringbuf_num+1,w,c
 17601  012898  B0D8               	btfsc	status,0,c
 17602  01289A  0012               	return	
 17603                           
 17604                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
 17605  01289C  EE20 F004          	lfsr	2,4
 17606  0128A0  5036               	movf	i2ringbuf_put@rb,w,c
 17607  0128A2  26D9               	addwf	fsr2l,f,c
 17608  0128A4  5037               	movf	i2ringbuf_put@rb+1,w,c
 17609  0128A6  22DA               	addwfc	fsr2h,f,c
 17610  0128A8  CFDE F039          	movff	postinc2,??i2_ringbuf_put
 17611  0128AC  CFDD F03A          	movff	postdec2,??i2_ringbuf_put+1
 17612  0128B0  C036  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 17613  0128B4  C037  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 17614  0128B8  CFDE F03B          	movff	postinc2,??i2_ringbuf_put+2
 17615  0128BC  CFDD F03C          	movff	postdec2,??i2_ringbuf_put+3
 17616  0128C0  5039               	movf	??i2_ringbuf_put,w,c
 17617  0128C2  243B               	addwf	??i2_ringbuf_put+2,w,c
 17618  0128C4  6ED9               	movwf	fsr2l,c
 17619  0128C6  503A               	movf	??i2_ringbuf_put+1,w,c
 17620  0128C8  203C               	addwfc	??i2_ringbuf_put+3,w,c
 17621  0128CA  6EDA               	movwf	fsr2h,c
 17622  0128CC  C038  FFDF         	movff	i2ringbuf_put@data,indf2
 17623                           
 17624                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 17625  0128D0  EE20 F002          	lfsr	2,2
 17626  0128D4  5036               	movf	i2ringbuf_put@rb,w,c
 17627  0128D6  26D9               	addwf	fsr2l,f,c
 17628  0128D8  5037               	movf	i2ringbuf_put@rb+1,w,c
 17629  0128DA  22DA               	addwfc	fsr2h,f,c
 17630  0128DC  EE10 F004          	lfsr	1,4
 17631  0128E0  5036               	movf	i2ringbuf_put@rb,w,c
 17632  0128E2  26E1               	addwf	fsr1l,f,c
 17633  0128E4  5037               	movf	i2ringbuf_put@rb+1,w,c
 17634  0128E6  22E2               	addwfc	fsr1h,f,c
 17635  0128E8  CFE6 F03B          	movff	postinc1,??i2_ringbuf_put+2
 17636  0128EC  CFE5 F03C          	movff	postdec1,??i2_ringbuf_put+3
 17637  0128F0  0E01               	movlw	1
 17638  0128F2  263B               	addwf	??i2_ringbuf_put+2,f,c
 17639  0128F4  0E00               	movlw	0
 17640  0128F6  223C               	addwfc	??i2_ringbuf_put+3,f,c
 17641  0128F8  50DE               	movf	postinc2,w,c
 17642  0128FA  5C3B               	subwf	??i2_ringbuf_put+2,w,c
 17643  0128FC  50DE               	movf	postinc2,w,c
 17644  0128FE  583C               	subwfb	??i2_ringbuf_put+3,w,c
 17645  012900  B0D8               	btfsc	status,0,c
 17646  012902  D00A               	goto	i2l7405
 17647  012904  EE20 F004          	lfsr	2,4
 17648  012908  5036               	movf	i2ringbuf_put@rb,w,c
 17649  01290A  26D9               	addwf	fsr2l,f,c
 17650  01290C  5037               	movf	i2ringbuf_put@rb+1,w,c
 17651  01290E  22DA               	addwfc	fsr2h,f,c
 17652  012910  2ADE               	incf	postinc2,f,c
 17653  012912  0E00               	movlw	0
 17654  012914  22DD               	addwfc	postdec2,f,c
 17655  012916  0012               	return	
 17656  012918                     i2l7405:
 17657                           
 17658                           ;My_ringbuf.c: 24: else rb->head = 0;
 17659  012918  EE20 F004          	lfsr	2,4
 17660  01291C  5036               	movf	i2ringbuf_put@rb,w,c
 17661  01291E  26D9               	addwf	fsr2l,f,c
 17662  012920  5037               	movf	i2ringbuf_put@rb+1,w,c
 17663  012922  22DA               	addwfc	fsr2h,f,c
 17664  012924  0E00               	movlw	0
 17665  012926  6EDE               	movwf	postinc2,c
 17666  012928  0E00               	movlw	0
 17667  01292A  6EDD               	movwf	postdec2,c
 17668  01292C  0012               	return	
 17669  01292E                     __end_ofi2_ringbuf_put:
 17670                           	opt stack 0
 17671                           pclatu	equ	0xFFB
 17672                           pclath	equ	0xFFA
 17673                           tblptru	equ	0xFF8
 17674                           tblptrh	equ	0xFF7
 17675                           tblptrl	equ	0xFF6
 17676                           tablat	equ	0xFF5
 17677                           prodh	equ	0xFF4
 17678                           prodl	equ	0xFF3
 17679                           intcon	equ	0xFF2
 17680                           intcon2	equ	0xFF1
 17681                           indf0	equ	0xFEF
 17682                           postinc0	equ	0xFEE
 17683                           fsr0h	equ	0xFEA
 17684                           fsr0l	equ	0xFE9
 17685                           wreg	equ	0xFE8
 17686                           indf1	equ	0xFE7
 17687                           postinc1	equ	0xFE6
 17688                           postdec1	equ	0xFE5
 17689                           fsr1h	equ	0xFE2
 17690                           fsr1l	equ	0xFE1
 17691                           indf2	equ	0xFDF
 17692                           postinc2	equ	0xFDE
 17693                           postdec2	equ	0xFDD
 17694                           plusw2	equ	0xFDB
 17695                           fsr2h	equ	0xFDA
 17696                           fsr2l	equ	0xFD9
 17697                           status	equ	0xFD8
 17698                           
 17699 ;; *************** function i2_ringbuf_pop *****************
 17700 ;; Defined at:
 17701 ;;		line 45 in file "../My_library/My_ringbuf.c"
 17702 ;; Parameters:    Size  Location     Type
 17703 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 17704 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_tx(8), uart_rx(8), 
 17705 ;;		 -> usb_tx(8), usb_rx(8), 
 17706 ;; Auto vars:     Size  Location     Type
 17707 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 17708 ;; Return value:  Size  Location     Type
 17709 ;;                  1    wreg      unsigned char 
 17710 ;; Registers used:
 17711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17712 ;; Tracked objects:
 17713 ;;		On entry : 0/0
 17714 ;;		On exit  : 0/0
 17715 ;;		Unchanged: 0/0
 17716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17719 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17720 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17721 ;;Total ram usage:        7 bytes
 17722 ;; Hardware stack levels used:    1
 17723 ;; Hardware stack levels required when called:    1
 17724 ;; This function calls:
 17725 ;;		i2_ringbuf_num
 17726 ;; This function is called by:
 17727 ;;		_UART_ISR
 17728 ;; This function uses a non-reentrant model
 17729 ;;
 17730                           
 17731                           	psect	text91
 17732  0129DE                     __ptext91:
 17733                           	opt stack 0
 17734  0129DE                     i2_ringbuf_pop:
 17735                           	opt stack 21
 17736                           
 17737                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 17738                           
 17739                           ;incstack = 0
 17740  0129DE  C036  F02E         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 17741  0129E2  C037  F02F         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 17742  0129E6  EC81  F093         	call	i2_ringbuf_num	;wreg free
 17743  0129EA  502E               	movf	?i2_ringbuf_num,w,c
 17744  0129EC  102F               	iorwf	?i2_ringbuf_num+1,w,c
 17745  0129EE  B4D8               	btfsc	status,2,c
 17746  0129F0  D04A               	goto	i2l7423
 17747                           
 17748                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 17749  0129F2  EE20 F006          	lfsr	2,6
 17750  0129F6  5036               	movf	i2ringbuf_pop@rb,w,c
 17751  0129F8  26D9               	addwf	fsr2l,f,c
 17752  0129FA  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17753  0129FC  22DA               	addwfc	fsr2h,f,c
 17754  0129FE  CFDE F038          	movff	postinc2,??i2_ringbuf_pop
 17755  012A02  CFDD F039          	movff	postdec2,??i2_ringbuf_pop+1
 17756  012A06  C036  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 17757  012A0A  C037  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 17758  012A0E  CFDE F03A          	movff	postinc2,??i2_ringbuf_pop+2
 17759  012A12  CFDD F03B          	movff	postdec2,??i2_ringbuf_pop+3
 17760  012A16  5038               	movf	??i2_ringbuf_pop,w,c
 17761  012A18  243A               	addwf	??i2_ringbuf_pop+2,w,c
 17762  012A1A  6ED9               	movwf	fsr2l,c
 17763  012A1C  5039               	movf	??i2_ringbuf_pop+1,w,c
 17764  012A1E  203B               	addwfc	??i2_ringbuf_pop+3,w,c
 17765  012A20  6EDA               	movwf	fsr2h,c
 17766  012A22  50DF               	movf	indf2,w,c
 17767  012A24  6E3C               	movwf	i2ringbuf_pop@ret,c
 17768                           
 17769                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 17770  012A26  EE20 F002          	lfsr	2,2
 17771  012A2A  5036               	movf	i2ringbuf_pop@rb,w,c
 17772  012A2C  26D9               	addwf	fsr2l,f,c
 17773  012A2E  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17774  012A30  22DA               	addwfc	fsr2h,f,c
 17775  012A32  EE10 F006          	lfsr	1,6
 17776  012A36  5036               	movf	i2ringbuf_pop@rb,w,c
 17777  012A38  26E1               	addwf	fsr1l,f,c
 17778  012A3A  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17779  012A3C  22E2               	addwfc	fsr1h,f,c
 17780  012A3E  CFE6 F03A          	movff	postinc1,??i2_ringbuf_pop+2
 17781  012A42  CFE5 F03B          	movff	postdec1,??i2_ringbuf_pop+3
 17782  012A46  0E01               	movlw	1
 17783  012A48  263A               	addwf	??i2_ringbuf_pop+2,f,c
 17784  012A4A  0E00               	movlw	0
 17785  012A4C  223B               	addwfc	??i2_ringbuf_pop+3,f,c
 17786  012A4E  50DE               	movf	postinc2,w,c
 17787  012A50  5C3A               	subwf	??i2_ringbuf_pop+2,w,c
 17788  012A52  50DE               	movf	postinc2,w,c
 17789  012A54  583B               	subwfb	??i2_ringbuf_pop+3,w,c
 17790  012A56  B0D8               	btfsc	status,0,c
 17791  012A58  D00A               	goto	i2l7415
 17792                           
 17793                           ;My_ringbuf.c: 49: rb->tail++;
 17794  012A5A  EE20 F006          	lfsr	2,6
 17795  012A5E  5036               	movf	i2ringbuf_pop@rb,w,c
 17796  012A60  26D9               	addwf	fsr2l,f,c
 17797  012A62  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17798  012A64  22DA               	addwfc	fsr2h,f,c
 17799  012A66  2ADE               	incf	postinc2,f,c
 17800  012A68  0E00               	movlw	0
 17801  012A6A  22DD               	addwfc	postdec2,f,c
 17802                           
 17803                           ;My_ringbuf.c: 50: } else {
 17804  012A6C  D00A               	goto	i2l7417
 17805  012A6E                     i2l7415:
 17806                           
 17807                           ;My_ringbuf.c: 51: rb->tail = 0;
 17808  012A6E  EE20 F006          	lfsr	2,6
 17809  012A72  5036               	movf	i2ringbuf_pop@rb,w,c
 17810  012A74  26D9               	addwf	fsr2l,f,c
 17811  012A76  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17812  012A78  22DA               	addwfc	fsr2h,f,c
 17813  012A7A  0E00               	movlw	0
 17814  012A7C  6EDE               	movwf	postinc2,c
 17815  012A7E  0E00               	movlw	0
 17816  012A80  6EDD               	movwf	postdec2,c
 17817  012A82                     i2l7417:
 17818                           
 17819                           ;My_ringbuf.c: 52: }
 17820                           ;My_ringbuf.c: 53: return ret;
 17821  012A82  503C               	movf	i2ringbuf_pop@ret,w,c
 17822                           
 17823                           ;My_ringbuf.c: 54: } else {
 17824  012A84  0012               	return	
 17825  012A86                     i2l7423:
 17826                           
 17827                           ;My_ringbuf.c: 55: return 0;
 17828  012A86  0E00               	movlw	0
 17829  012A88  0012               	return	
 17830  012A8A                     __end_ofi2_ringbuf_pop:
 17831                           	opt stack 0
 17832                           pclatu	equ	0xFFB
 17833                           pclath	equ	0xFFA
 17834                           tblptru	equ	0xFF8
 17835                           tblptrh	equ	0xFF7
 17836                           tblptrl	equ	0xFF6
 17837                           tablat	equ	0xFF5
 17838                           prodh	equ	0xFF4
 17839                           prodl	equ	0xFF3
 17840                           intcon	equ	0xFF2
 17841                           intcon2	equ	0xFF1
 17842                           indf0	equ	0xFEF
 17843                           postinc0	equ	0xFEE
 17844                           fsr0h	equ	0xFEA
 17845                           fsr0l	equ	0xFE9
 17846                           wreg	equ	0xFE8
 17847                           indf1	equ	0xFE7
 17848                           postinc1	equ	0xFE6
 17849                           postdec1	equ	0xFE5
 17850                           fsr1h	equ	0xFE2
 17851                           fsr1l	equ	0xFE1
 17852                           indf2	equ	0xFDF
 17853                           postinc2	equ	0xFDE
 17854                           postdec2	equ	0xFDD
 17855                           plusw2	equ	0xFDB
 17856                           fsr2h	equ	0xFDA
 17857                           fsr2l	equ	0xFD9
 17858                           status	equ	0xFD8
 17859                           
 17860 ;; *************** function i2_ringbuf_num *****************
 17861 ;; Defined at:
 17862 ;;		line 12 in file "../My_library/My_ringbuf.c"
 17863 ;; Parameters:    Size  Location     Type
 17864 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 17865 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_tx(8), uart_rx(8), 
 17866 ;;		 -> usb_tx(8), usb_rx(8), 
 17867 ;; Auto vars:     Size  Location     Type
 17868 ;;		None
 17869 ;; Return value:  Size  Location     Type
 17870 ;;                  2    0[COMRAM] unsigned int 
 17871 ;; Registers used:
 17872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17873 ;; Tracked objects:
 17874 ;;		On entry : 0/0
 17875 ;;		On exit  : 0/0
 17876 ;;		Unchanged: 0/0
 17877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17880 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17881 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17882 ;;Total ram usage:        8 bytes
 17883 ;; Hardware stack levels used:    1
 17884 ;; This function calls:
 17885 ;;		Nothing
 17886 ;; This function is called by:
 17887 ;;		_UART_ISR
 17888 ;;		i2_ringbuf_put
 17889 ;;		i2_ringbuf_pop
 17890 ;; This function uses a non-reentrant model
 17891 ;;
 17892                           
 17893                           	psect	text92
 17894  012702                     __ptext92:
 17895                           	opt stack 0
 17896  012702                     i2_ringbuf_num:
 17897                           	opt stack 21
 17898                           
 17899                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 17900                           
 17901                           ;incstack = 0
 17902  012702  EE20 F006          	lfsr	2,6
 17903  012706  502E               	movf	i2ringbuf_num@rb,w,c
 17904  012708  26D9               	addwf	fsr2l,f,c
 17905  01270A  502F               	movf	i2ringbuf_num@rb+1,w,c
 17906  01270C  22DA               	addwfc	fsr2h,f,c
 17907  01270E  EE10 F004          	lfsr	1,4
 17908  012712  502E               	movf	i2ringbuf_num@rb,w,c
 17909  012714  26E1               	addwf	fsr1l,f,c
 17910  012716  502F               	movf	i2ringbuf_num@rb+1,w,c
 17911  012718  22E2               	addwfc	fsr1h,f,c
 17912  01271A  50DE               	movf	postinc2,w,c
 17913  01271C  5CE6               	subwf	postinc1,w,c
 17914  01271E  50DE               	movf	postinc2,w,c
 17915  012720  58E6               	subwfb	postinc1,w,c
 17916  012722  A0D8               	btfss	status,0,c
 17917  012724  D01F               	goto	i2l7003
 17918                           
 17919                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 17920  012726  EE20 F004          	lfsr	2,4
 17921  01272A  502E               	movf	i2ringbuf_num@rb,w,c
 17922  01272C  26D9               	addwf	fsr2l,f,c
 17923  01272E  502F               	movf	i2ringbuf_num@rb+1,w,c
 17924  012730  22DA               	addwfc	fsr2h,f,c
 17925  012732  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 17926  012736  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 17927  01273A  EE20 F006          	lfsr	2,6
 17928  01273E  502E               	movf	i2ringbuf_num@rb,w,c
 17929  012740  26D9               	addwf	fsr2l,f,c
 17930  012742  502F               	movf	i2ringbuf_num@rb+1,w,c
 17931  012744  22DA               	addwfc	fsr2h,f,c
 17932  012746  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 17933  01274A  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 17934  01274E  1E32               	comf	??i2_ringbuf_num+2,f,c
 17935  012750  1E33               	comf	??i2_ringbuf_num+3,f,c
 17936  012752  4A32               	infsnz	??i2_ringbuf_num+2,f,c
 17937  012754  2A33               	incf	??i2_ringbuf_num+3,f,c
 17938  012756  5030               	movf	??i2_ringbuf_num,w,c
 17939  012758  2432               	addwf	??i2_ringbuf_num+2,w,c
 17940  01275A  6E2E               	movwf	?i2_ringbuf_num,c
 17941  01275C  5031               	movf	??i2_ringbuf_num+1,w,c
 17942  01275E  2033               	addwfc	??i2_ringbuf_num+3,w,c
 17943  012760  6E2F               	movwf	?i2_ringbuf_num+1,c
 17944                           
 17945                           ;My_ringbuf.c: 15: } else {
 17946  012762  0012               	return	
 17947  012764                     i2l7003:
 17948                           
 17949                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 17950  012764  EE20 F004          	lfsr	2,4
 17951  012768  502E               	movf	i2ringbuf_num@rb,w,c
 17952  01276A  26D9               	addwf	fsr2l,f,c
 17953  01276C  502F               	movf	i2ringbuf_num@rb+1,w,c
 17954  01276E  22DA               	addwfc	fsr2h,f,c
 17955  012770  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 17956  012774  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 17957  012778  EE20 F002          	lfsr	2,2
 17958  01277C  502E               	movf	i2ringbuf_num@rb,w,c
 17959  01277E  26D9               	addwf	fsr2l,f,c
 17960  012780  502F               	movf	i2ringbuf_num@rb+1,w,c
 17961  012782  22DA               	addwfc	fsr2h,f,c
 17962  012784  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 17963  012788  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 17964  01278C  EE20 F006          	lfsr	2,6
 17965  012790  502E               	movf	i2ringbuf_num@rb,w,c
 17966  012792  26D9               	addwf	fsr2l,f,c
 17967  012794  502F               	movf	i2ringbuf_num@rb+1,w,c
 17968  012796  22DA               	addwfc	fsr2h,f,c
 17969  012798  CFDE F034          	movff	postinc2,??i2_ringbuf_num+4
 17970  01279C  CFDD F035          	movff	postdec2,??i2_ringbuf_num+5
 17971  0127A0  1E34               	comf	??i2_ringbuf_num+4,f,c
 17972  0127A2  1E35               	comf	??i2_ringbuf_num+5,f,c
 17973  0127A4  4A34               	infsnz	??i2_ringbuf_num+4,f,c
 17974  0127A6  2A35               	incf	??i2_ringbuf_num+5,f,c
 17975  0127A8  5032               	movf	??i2_ringbuf_num+2,w,c
 17976  0127AA  2634               	addwf	??i2_ringbuf_num+4,f,c
 17977  0127AC  5033               	movf	??i2_ringbuf_num+3,w,c
 17978  0127AE  2235               	addwfc	??i2_ringbuf_num+5,f,c
 17979  0127B0  5030               	movf	??i2_ringbuf_num,w,c
 17980  0127B2  2434               	addwf	??i2_ringbuf_num+4,w,c
 17981  0127B4  6E2E               	movwf	?i2_ringbuf_num,c
 17982  0127B6  5031               	movf	??i2_ringbuf_num+1,w,c
 17983  0127B8  2035               	addwfc	??i2_ringbuf_num+5,w,c
 17984  0127BA  6E2F               	movwf	?i2_ringbuf_num+1,c
 17985  0127BC  0012               	return	
 17986  0127BE                     __end_ofi2_ringbuf_num:
 17987                           	opt stack 0
 17988                           pclatu	equ	0xFFB
 17989                           pclath	equ	0xFFA
 17990                           tblptru	equ	0xFF8
 17991                           tblptrh	equ	0xFF7
 17992                           tblptrl	equ	0xFF6
 17993                           tablat	equ	0xFF5
 17994                           prodh	equ	0xFF4
 17995                           prodl	equ	0xFF3
 17996                           intcon	equ	0xFF2
 17997                           intcon2	equ	0xFF1
 17998                           indf0	equ	0xFEF
 17999                           postinc0	equ	0xFEE
 18000                           fsr0h	equ	0xFEA
 18001                           fsr0l	equ	0xFE9
 18002                           wreg	equ	0xFE8
 18003                           indf1	equ	0xFE7
 18004                           postinc1	equ	0xFE6
 18005                           postdec1	equ	0xFE5
 18006                           fsr1h	equ	0xFE2
 18007                           fsr1l	equ	0xFE1
 18008                           indf2	equ	0xFDF
 18009                           postinc2	equ	0xFDE
 18010                           postdec2	equ	0xFDD
 18011                           plusw2	equ	0xFDB
 18012                           fsr2h	equ	0xFDA
 18013                           fsr2l	equ	0xFD9
 18014                           status	equ	0xFD8
 18015                           pclatu	equ	0xFFB
 18016                           pclath	equ	0xFFA
 18017                           tblptru	equ	0xFF8
 18018                           tblptrh	equ	0xFF7
 18019                           tblptrl	equ	0xFF6
 18020                           tablat	equ	0xFF5
 18021                           prodh	equ	0xFF4
 18022                           prodl	equ	0xFF3
 18023                           intcon	equ	0xFF2
 18024                           intcon2	equ	0xFF1
 18025                           indf0	equ	0xFEF
 18026                           postinc0	equ	0xFEE
 18027                           fsr0h	equ	0xFEA
 18028                           fsr0l	equ	0xFE9
 18029                           wreg	equ	0xFE8
 18030                           indf1	equ	0xFE7
 18031                           postinc1	equ	0xFE6
 18032                           postdec1	equ	0xFE5
 18033                           fsr1h	equ	0xFE2
 18034                           fsr1l	equ	0xFE1
 18035                           indf2	equ	0xFDF
 18036                           postinc2	equ	0xFDE
 18037                           postdec2	equ	0xFDD
 18038                           plusw2	equ	0xFDB
 18039                           fsr2h	equ	0xFDA
 18040                           fsr2l	equ	0xFD9
 18041                           status	equ	0xFD8
 18042                           
 18043                           	psect	rparam
 18044  0000                     pclatu	equ	0xFFB
 18045                           pclath	equ	0xFFA
 18046                           tblptru	equ	0xFF8
 18047                           tblptrh	equ	0xFF7
 18048                           tblptrl	equ	0xFF6
 18049                           tablat	equ	0xFF5
 18050                           prodh	equ	0xFF4
 18051                           prodl	equ	0xFF3
 18052                           intcon	equ	0xFF2
 18053                           intcon2	equ	0xFF1
 18054                           indf0	equ	0xFEF
 18055                           postinc0	equ	0xFEE
 18056                           fsr0h	equ	0xFEA
 18057                           fsr0l	equ	0xFE9
 18058                           wreg	equ	0xFE8
 18059                           indf1	equ	0xFE7
 18060                           postinc1	equ	0xFE6
 18061                           postdec1	equ	0xFE5
 18062                           fsr1h	equ	0xFE2
 18063                           fsr1l	equ	0xFE1
 18064                           indf2	equ	0xFDF
 18065                           postinc2	equ	0xFDE
 18066                           postdec2	equ	0xFDD
 18067                           plusw2	equ	0xFDB
 18068                           fsr2h	equ	0xFDA
 18069                           fsr2l	equ	0xFD9
 18070                           status	equ	0xFD8
 18071                           
 18072                           	psect	temp
 18073  00005B                     btemp:
 18074                           	opt stack 0
 18075  00005B                     	ds	1
 18076  0000                     int$flags	set	btemp
 18077                           pclatu	equ	0xFFB
 18078                           pclath	equ	0xFFA
 18079                           tblptru	equ	0xFF8
 18080                           tblptrh	equ	0xFF7
 18081                           tblptrl	equ	0xFF6
 18082                           tablat	equ	0xFF5
 18083                           prodh	equ	0xFF4
 18084                           prodl	equ	0xFF3
 18085                           intcon	equ	0xFF2
 18086                           intcon2	equ	0xFF1
 18087                           indf0	equ	0xFEF
 18088                           postinc0	equ	0xFEE
 18089                           fsr0h	equ	0xFEA
 18090                           fsr0l	equ	0xFE9
 18091                           wreg	equ	0xFE8
 18092                           indf1	equ	0xFE7
 18093                           postinc1	equ	0xFE6
 18094                           postdec1	equ	0xFE5
 18095                           fsr1h	equ	0xFE2
 18096                           fsr1l	equ	0xFE1
 18097                           indf2	equ	0xFDF
 18098                           postinc2	equ	0xFDE
 18099                           postdec2	equ	0xFDD
 18100                           plusw2	equ	0xFDB
 18101                           fsr2h	equ	0xFDA
 18102                           fsr2l	equ	0xFD9
 18103                           status	equ	0xFD8


Data Sizes:
    Strings     162
    Constant    239
    Data        5
    BSS         2837
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     62     124
    BANK1           256      0     243
    BANK2           256     40     232
    BANK3           256      0     200
    BANK4           256      0     250
    BANK5           256      0     250
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    terminal_operation$4	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK1[25]), 

    terminal_operation$3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_operation$2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation$1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_operation$0	PTR struct ringbuf size(2) Largest target is 0

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), STR_12(CODE[1]), STR_8(CODE[1]), STR_5(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_16(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_4(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_43(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_25(CODE[37]), STR_23(CODE[5]), STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(COMRAM[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5298_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5298_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5298_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5298_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK1[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S4045$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S4035$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4035$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4011$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4011$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4011$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4011$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), STR_2(CODE[9]), STR_1(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    display_time_0802@line1	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_time_0802@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_time_0802@line0	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), uart_tx(BANK1[8]), uart_rx(BANK1[8]), 
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), uart_tx(BANK1[8]), uart_rx(BANK1[8]), 
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), uart_tx(BANK1[8]), uart_rx(BANK1[8]), 
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), uart_tx(BANK1[8]), uart_rx(BANK1[8]), 
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    S488ringbuf$buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 800
		 -> USB_CDC_buffer_init@rxbuf(BANK5[250]), USB_CDC_buffer_init@txbuf(BIGRAMl[800]), UART_buffer_init@uartrx(BANK4[250]), UART_buffer_init@uarttx(BIGRAMl[800]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK3[200]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_CDC_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_display_time_0802
    _setup->_RTCC_from_epoch
    _USB_CDC_init->_USBDeviceInit
    _USB_CDC_buffer_init->_ringbuf_init
    _USBDeviceInit->_memset
    _UART_buffer_init->_ringbuf_init
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _display_time_0802->_display_dec
    _display_dec->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USB_CDC_task->_ringbuf_put
    _ringbuf_put->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _USB_CDC_send->_CDCTxService
    _USB_CDC_get->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0  138811
                                             61 BANK0      1     1      0
                                              0 BANK2     40    40      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                          _RTCC_task
                          _UART_task
                       _USB_CDC_task
                  _display_time_0802
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   51918
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                       _I2C_LCD_init
                           _OSC_init
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_init
                          _UART_init
                       _USB_CDC_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_init                                         0     0      0    3869
                    _USBDeviceAttach
                      _USBDeviceInit
                _USB_CDC_buffer_init
 ---------------------------------------------------------------------------------
 (3) _USB_CDC_buffer_init                                  0     0      0    2328
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0    2328
                   _UART_buffer_init
 ---------------------------------------------------------------------------------
 (3) _UART_buffer_init                                     0     0      0    2328
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (4) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17305
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9963
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (5) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    3970
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
                       _I2C_init_old
 ---------------------------------------------------------------------------------
 (3) _I2C_init_old                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0    1917
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    2492
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0    1917
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Puts                                         5     3      2    2427
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1    1759
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _display_time_0802                                    6     0      6   34553
                                             55 BANK0      6     0      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    1061
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_dec                                          8     4      4   21305
                                             47 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    21     18   12708
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    8744
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     708
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USB_CDC_task                                         5     5      0   22227
                                             22 BANK0      5     5      0
                        _USB_CDC_get
                       _USB_CDC_send
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _ringbuf_put                                          7     4      3    9435
                                             15 BANK0      7     4      3
                        _ringbuf_num
                        _ringbuf_pop (ARG)
 ---------------------------------------------------------------------------------
 (1) _ringbuf_pop                                          7     5      2    3135
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_send                                         2     0      2    2839
                                             12 BANK0      2     0      2
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_get                                          1     1      0    4945
                                             13 BANK0      1     1      0
                       _CDCTxService
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1610
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_num                                          8     6      2    1610
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7342
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_RTCC                                       2     0      2    7342
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (4) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (4) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (5) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0   33321
                                             30 COMRAM    15    15      0
                           _UART_ISR
                        _USB_CDC_ISR
 ---------------------------------------------------------------------------------
 (8) _USB_CDC_ISR                                          0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (9) _USBDeviceTasks                                       1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (10) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (10) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (11) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (13) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (11) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _APP_DeviceCDCBasicDemoInitialize                    0     0      0    1199
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (12) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (13) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (13) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (14) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _UART_ISR                                             1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_put                                        7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _USB_CDC_task
     _USB_CDC_get
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
     _USB_CDC_send
       _CDCTxService
         _USBTransferOnePacket
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
       _ringbuf_pop (ARG)
         _ringbuf_num
   _display_time_0802
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _display_dec
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
     _strcat
     _strcpy
   _ringbuf_num
   _ringbuf_pop
     _ringbuf_num
   _ringbuf_put
     _ringbuf_num
     _ringbuf_pop (ARG)
       _ringbuf_num
   _setup
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_init_old
     _OSC_init
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _RTCC_from_epoch
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
       _UART_buffer_init
         _ringbuf_init
     _USB_CDC_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
       _USB_CDC_buffer_init
         _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _USB_CDC_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     640      36       48.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      FA      16       97.7%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      FA      14       97.7%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     28      E8      10       90.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F3       7       94.9%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      7C       5       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     56D       8        0.0%
DATA                 0      0     BAD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Jan 12 21:40:21 2016

                               _USB_SD_Ptr FE77                         __size_of_I2C_Start 0030  
                             ?_display_dec 008F                               ___awdiv@sign 0065  
                                       _ms 010E                              _USBDeviceInit 1054  
                      ___wmul@multiplicand 0062                          ??_RTCC_from_epoch 0091  
                       __size_of_CDCInitEP 0070                               __CFG_CP0$OFF 000000  
     USER_USB_CALLBACK_EVENT_HANDLER@event 003A       USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C  
              __end_of_USBStdGetDscHandler 1568                                        l281 395C  
                                      l266 36CA                                        l611 2646  
                                      l364 357C                                        l630 0C66  
                                      l617 1DA6                                        l369 335E  
                                      _BDT 000D00                                        l766 35CA  
                                      _ISR 1008                                        _UIE 000F36  
                                      _UIR 000F62                              ?_get_quot_rem 0079  
                       caltime_to_epoch@tm 0079                                 _USBSuspend 375E  
                                      _now 01B6                               ___awmod@sign 0065  
                     USBStdSetCfgHandler@i 0042                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 11AE  
                               _TXSTA1bits 000FAD                             _USBDeviceState 00BB  
                    ??_USBCtrlTrfRxService 002E                               _I2C_LCD_Puts 2E24  
                 __size_ofi2_USBDeviceInit 013C                             ??_getsUSBUSART 006A  
                 USBEnableEndpoint@options 0036                          ??_I2C_LCD_Command 0064  
                                     ?_ISR 002E                               _I2C_LCD_init 2D94  
                                     l1041 1700                                       l1034 167E  
                                     l1052 3754                                       l1217 10CA  
                                     l2026 2634                                       l1278 34E0  
                                     l2079 2FA2                                       l1279 34DE  
                                     l2089 31BE                                       l1580 0E26  
               USBConfigureEndpoint@handle 0034                                       l1575 0DCA  
                                     l9005 0272                                       l9031 0318  
                                     l9007 0278                                       l9103 10A0  
                       __CFG_WPFP$PAGE_127 000000                                       l9025 02D6  
                                     l9211 0E0E                                       l9019 02B4  
                                     l9131 110A                                       l9107 10AA  
                                     l8501 2FBE                                       l9205 0DD6  
                                     l9061 03B8                                       l9029 030E  
                                     l9141 117A                                       l9063 03BE  
                                     l9055 0398                                       l9039 033E  
                                     l9047 0366                                       l9071 042C  
                                     l9135 1114                                       l9119 10D8  
                                     l9127 10EA                                       l8505 2FE4  
                                     l9225 0E52                                       l9233 0E76  
                                     l9217 0E2A                                       l9049 0372  
                                     l9073 044C                                       l9081 31D8  
                                     l9251 0EC6                                       l9235 0E82  
                                     l9243 0EA6                                       l9083 31E8  
                                     l8531 23AE                                       l8523 2384  
                                     l8701 0566                                       l9253 0ECC  
                                     l9245 0EB0                                       l9069 0420  
                                     l9085 31F4                                       l8541 23E4  
                                     l8533 23B4                                       l8517 236E  
                                     l9309 3360                                       l9255 0EF0  
                                     l9271 19C4                                       l9263 1982  
                                     l9079 31D2                                       l9423 2E52  
                                     l9431 2EAC                                       l9351 2DA8  
                                     l8607 2622                                       l8561 2B50  
                                     l9193 0DA0                                       l9273 19CC  
                                     l9281 1A2E                                       l9265 198C  
                                     l9185 387A                                       l9441 2270  
                                     l8529 23A2                                       l8545 23F2  
                                     l8571 2B80                                       l9195 0DAA  
                                     l9443 2286                                       l9363 2DF4  
                                     l9355 2DC0                                       l9347 2D9E  
                                     l8803 3660                                       l8573 2B86  
                                     l8581 2BB8                                       l8565 2B60  
                                     l8645 1B9E                                       l9277 19FC  
                                     l9461 200C                                       l9429 2E84  
                                     l8549 2406                                       l8741 0CD8  
                                     l9541 254C                                       l8911 18D4  
                                     l9199 0DBA                                       l9623 0AD8  
                                     l9367 2E0C                                       l9359 2DEA  
                                     l8743 0CDC                                       l9375 30A8  
                                     l8585 2BCC                                       l8577 2BAA  
                                     l8569 2B74                                       l8681 047A  
                                     l8817 1D20                                       l8809 1CEC  
                                     l9449 228C                                       l9481 35EC  
                                     l9625 0AF0                                       l8497 38E4  
                                     l9297 3594                                       l8691 04DE  
                                     l8843 37D6                                       l8931 000E  
                                     l9475 314C                                       l8595 25B8  
                                     l8747 0CE4                                       l8685 0484  
                                     l8693 04E2                                       l8829 1D86  
                                     l9581 1756                                       l8861 2F5E  
                                     l8597 25C8                                       l9821 0F86  
                                     l8679 0474                                       l9495 389A  
                                     l9559 168E                                       l9567 16CC  
                                     l8871 2F94                                       l8863 2F64  
                                     l8943 0048                                       l9479 35E0  
                                     l8599 25CE                                       l9831 0FEC  
                                     l8697 0502                                       l9577 172A  
                                     l9569 16E8                                       l8881 3186  
                                     l8937 002C                                       l8859 2F52  
                                     l8883 318C                                       l8939 003E  
                                     l8981 01B6                                       l8965 0132  
                                     l8957 0100                                       l8949 0080  
                                     l9837 1050                                       l8887 31B0  
                                     l8879 317A                                       l8983 01CE  
                                     l8975 0198                                       l8967 013E  
                                     l8799 364E                                       STR_1 FFA1  
                                     STR_2 FFAA                                       l8977 01A4  
                                     l8969 0144                                       l8993 020C  
                                     l9785 0EFA                                       STR_3 FFE0  
                                     STR_4 FF9E                                       l8995 0242  
                                     STR_5 FFE8                                       STR_6 FFFA  
                                     l8989 01F4                                       STR_7 FFFA  
                                     STR_8 FFE8                                       STR_9 FFFC  
                                     u8110 36D6                                       u8200 1BEA  
                                     u8210 1BEC                                       u8140 1B48  
                                     u9100 2E74                                       u8150 1B4A  
                                     u9110 2EA6                      ??_USBCtrlTrfTxService 002E  
                                     u8160 1B7A                                       i2l90 107C  
                                     u9107 2E6A                                       u8180 1B90  
                                     u9117 2E9C                                       u8190 1B92  
                                     i2l87 1052                                       _UCFG 000F39  
                                     u8178 1B7E                                       _UEP0 000F26  
                                     _UEP1 000F27                                       u8730 321E  
                                     _UEIE 000F37                                       u9550 0FD6  
                                     u8840 0D90                                       u8737 3214  
                                     u9580 1038                                       u8848 0D94  
                                     u9568 0FDA                                       _UEIR 000F63  
                                     _UCON 000F65                                       u8970 1972  
                                     u9598 103C                                       u8978 1976  
                          _CDCDataInHandle 00AC     USBStdFeatureReqHandler@current_ep_data 0045  
                                     _pDst 00B0                                       _main 0EF4  
                 ??i2_USBTransferOnePacket 0032                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       indf0 000FEF  
                                     fsr0l 000FE9                                       fsr2h 000FDA  
                                     indf1 000FE7                                _BaudRateGen 010A  
                                     fsr1l 000FE1                                       indf2 000FDF  
                                     fsr2l 000FD9                           __end_of_I2C_Send 3964  
                          _USBDeviceAttach 34B0                                       btemp 005B  
                   __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_I2C_Stop 399C  
                                     pclat 000FFA                                       prodh 000FF4  
                                     prodl 000FF3                                       start 10B8  
                            __CFG_IESO$OFF 000000                 __end_of_USBCheckStdRequest 1CCE  
                   ??_USBCtrlTrfOutHandler 0030                               ___param_bank 000010  
                ??_USBStdFeatureReqHandler 0042                              _I2C_LCD_Clear 3918  
                    __end_ofi2_ringbuf_pop 2A8A                      __end_ofi2_ringbuf_num 27BE  
                    __end_ofi2_ringbuf_put 292E                                      ??_ISR 004C  
                   __size_of_I2C_IdleCheck 001E                   ??_USBStdGetStatusHandler 002E  
                           ?_USBDeviceInit 002E                          ??_RTCC_to_caltime 0064  
                            __CFG_PLLDIV$2 000000                               _BAUDCON1bits 000F7E  
                              _writeBuffer 0280                                      ?_main 002E  
                           ??_get_quot_rem 007D                            __end_of___awdiv 2410  
                                    _ADRES 000FC3                                      STR_10 FF9F  
                                    STR_11 FFF8                                      STR_21 FFE5  
                                    STR_30 FF81                                      STR_15 FFF6  
                                    STR_32 FFD6                                      STR_40 FFC9  
                                    STR_41 FFF4                                      STR_33 FFF0  
                                    STR_17 FF98                                      STR_25 FF5C  
                                    STR_34 FFD0                                      STR_42 FFC2  
                                    STR_26 FFB3                                      STR_43 FFBB  
                                    STR_27 FF8D                                      STR_36 FFE9  
                          __end_of___awmod 2BD6                                      STR_29 FFED  
                                    STR_38 FFDB                                      STR_39 FFF2  
        __size_of_USBCtrlEPServiceComplete 00F0                            __end_of___lldiv 2646  
                                    u10317 2DB0                                      u10327 2DFC  
                                    u10337 3926                                      u10347 35D0  
                          ___awdiv@divisor 0062                                      u10357 2E80  
                   __end_of_USBDeviceTasks 12FA                                      _LATB2 007C52  
                ?_USBCtrlEPServiceComplete 002E                            __end_of___lwdiv 2FAC  
                          ringbuf_put@data 0071                            __end_of___lwmod 31C8  
                                    _UADDR 000F38                                      i2l964 344C  
                          ___awdiv@counter 0064                                      i2l965 344A  
                  ST7032_task@st7032_state 00B7                                      _TMR1H 000FCF  
                         _UART_buffer_init 33D2                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _USTAT 000F64         __size_of_USBCtrlEPAllowStatusStage 00C2  
                      ___lmul@multiplicand 0071                             __CFG_FCMEN$OFF 000000  
                         __end_of_UART_ISR 346A            __end_of_USBCtrlEPAllowDataStage 2C6E  
                                    _sd000 FF58                                      _sd001 FEC2  
                                    _sd002 FEF6                       caltime_to_epoch@year 007F  
                               i2memset@p1 002E                         __size_of_UART_init 0026  
                          __end_of_dpowers FE77                         __size_of_UART_task 0020  
                         __end_of_OSC_init 3992                            __end_of_isdigit 37E0  
                       __size_of_RTCC_init 006A                         __size_of_RTCC_task 003C  
                                    _setup 24CE                                      main@s 02C0  
                        __end_of_I2C_Start 36DA                               display_dec@s 0093  
                                    tablat 000FF5                                      plusw2 000FDB  
                        __end_of_CDCInitEP 3092                                      status 000FD8  
                          __end_of_sprintf 045A                      __size_of_I2C_init_old 0012  
                         __end_ofi2_memset 37B6                          month_length@month 0066  
                      _USB_CDC_buffer_init 3384                            putUSBUSART@data 0060  
             __size_of_USBStdSetCfgHandler 00E0                             ?_I2C_LCD_Clear 002E  
                          __initialization 2D02                               __end_of_main 1054  
                    _control_signal_bitmap 00C0                        ringbuf_init@bufsize 0064  
                         RTCC_from_RTCC@tm 0086                     UART_buffer_init@uartrx 0400  
                   UART_buffer_init@uarttx 05FA                  __size_of_USBCtrlEPService 00CE  
                                   ??_main 009D                              __activetblptr 000003  
                          ?_USBDeviceTasks 002E                       ?_USB_CDC_buffer_init 002E  
                              ?_USBSuspend 002E                               _cdc_mem_type 00BC  
                             _I2C_init_old 3964                                     _BCL1IF 007D0B  
                            _I2C_IdleCheck 38E0                    __end_of_USBDeviceAttach 34EC  
                         _CDCDataOutHandle 00AE                          _getsUSBUSART$5676 006B  
                        _I2C_LCD_SetCursor 3706                                     _EECON2 000FA7  
                                   _ANCON0 000F48                                     _ANCON1 000F49  
                      display_time_0802@tm 0097                           ___awdiv@dividend 0060  
                                   ?_setup 002E                         I2C_LCD_Command@ans 0065  
                          getsUSBUSART@len 0069                      __size_of_CDCTxService 0188  
                                   i2l1303 17E2                                     i2l1240 12F6  
                                   i2l1217 1360                                     i2l1241 1292  
                                   i2l1229 11E2                                     i2l1430 1C02  
                                   i2l1239 1280                                     i2l1416 24C4  
                                   i2l1521 297C                                     i2l1370 2AA6  
                                   i2l1523 29B2                                     i2l1371 2AAA  
                                   i2l1445 0710                                     i2l1366 2A98  
                                   i2l1439 1C52                                     i2l1464 08D4  
                                   i2l1369 2B20                                     i2l1379 34AC  
                           __CFG_WDTEN$OFF 000000                                     i2l6103 178C  
                                   i2l7003 2764                                     i2l6203 1C2A  
                                   i2l6123 1808                                     i2l6205 1C30  
                                   i2l6221 1C8A                                     i2l7021 133C  
                                   i2l6151 1594                                     i2l6207 1C36  
                                   i2l5505 2CD0                                     i2l6217 1C6C  
                                   i2l7025 1344                                     i2l5515 3538  
                                   i2l6173 162A                                     i2l6157 15B6  
                                   i2l5605 299C                                     i2l5613 29BA  
                                   i2l7053 13A6                                     i2l7037 136E  
                                   i2l7045 1380                                     i2l5703 22D6  
                                   i2l5519 3546                                     i2l5535 27FE  
                                   i2l5527 27D4                                     i2l5623 3236  
                                   i2l6191 1C0C                                     i2l6169 1610  
                                   i2l6433 32DA                                     i2l6425 3292  
                                   i2l5617 322A                                     i2l5801 14EC  
                                   i2l6193 1C12                                     i2l7049 139E  
                                   i2l7321 120A                                     i2l7313 11FA  
                                   i2l5643 2042                                     i2l5547 285A  
                                   i2l5619 3230                                     i2l6195 1C18  
                                   i2l7059 1402                                     i2l7405 2918  
                                   i2l6461 248A                                     i2l5813 1550  
                                   i2l5733 2C24                                     i2l7415 2A6E  
                                   i2l7423 2A86                                     i2l5647 204C  
                                   i2l6447 2444                                     i2l5807 1544  
                                   i2l7351 1274                                     i2l7343 124C  
                                   i2l7327 1230                                     i2l7417 2A82  
                                   i2l5657 2076                                     i2l5665 20AE  
                                   i2l6449 244A                                     i2l5921 0934  
                                   i2l5905 08B4                                     i2l5809 154A  
                                   i2l5825 2AC8                                     i2l5753 1A74  
                                   i2l5737 2C3C                                     i2l7337 1240  
                                   i2l5667 20B6                                     i2l5675 20EE  
                                   i2l6467 24AA                                     i2l5923 0940  
                                   i2l5915 08F0                                     i2l5907 08C0  
                                   i2l5835 2B08                                     i2l5683 37A4  
                                   i2l5763 1AA8                                     i2l7371 12B8  
                                   i2l7291 11CA                                     i2l5597 2970  
                                   i2l5589 295A                                     i2l5853 070C  
                                   i2l5757 1A7C                                     i2l7357 128A  
                                   i2l5791 1458                                     i2l5679 3794  
                                   i2l5873 07CA                                     i2l7377 12D6  
                                   i2l5891 0854                                     i2l5875 07CC  
                                   i2l5867 0786                                     i2l5787 1446  
                                   i2l5779 1AF0                                     i2l7379 12F2  
                                   i2l7299 11DA                                     i2l6933 36A2  
                                   i2l5895 086E                                     i2l5879 07E8  
                                   i2l5799 14E6                                     i2l6935 36A4  
                                   i2l5889 083A                                     i2l6973 2146  
                                   i2l6957 34A8                                     i2l7765 1074  
                                   i2l6991 21B4                                     i2l6985 2194  
                                   i2l6977 214E                                     i2l6989 21AE  
                       ?_I2C_LCD_SetCursor 0066                                     _RCREG1 000FAF  
                            CDCTxService@i 006A                                     _RTCCAL 000F3E  
                                   _SPBRG1 000FB0                              USB_CDC_task@i 0077  
                                   _SSP1IF 007CF3                             __CFG_WPCFG$OFF 000000  
                                   _SSPBUF 000FC9                                     _TXREG1 000FAE  
                 i2USBTransferOnePacket@ep 0032                          ??i2_USBDeviceInit 0036  
                          i2ringbuf_pop@rb 0036                            i2ringbuf_num@rb 002E  
          __size_ofi2_USBTransferOnePacket 00BA                            i2ringbuf_put@rb 0036  
                           __CFG_WPDIS$OFF 000000                         epoch_to_caltime@tm 0081  
                        _shortPacketStatus 002B                        ??_I2C_LCD_SetCursor 0067  
                           __CFG_XINST$OFF 000000                          ?_epoch_to_caltime 0081  
                          USBDeviceTasks@i 004B                      caltime_to_epoch@epoch 0081  
              USBStdFeatureReqHandler@pUEP 0043                   USBTransferOnePacket@data 0061  
               USBCtrlTrfInHandler@lastDTS 002F                            ??_USBDeviceInit 0068  
                             ?_ringbuf_pop 0068                               ?_ringbuf_num 0060  
                             ?_ringbuf_put 006F                      caltime_to_epoch@month 0085  
                                   ___lmul 2FAC                               ?_putUSBUSART 0060  
                          _caltime_to_RTCC 1DA6                                     ___wmul 360E  
                       ??_epoch_to_caltime 0083                          __end_of_UART_init 3858  
                                ??___awdiv 0064                          __end_of_UART_task 38C0  
                                ??___awmod 0064                                     _d_to_x 380A  
                                ??___lldiv 0068                       __end_of_getsUSBUSART 1A34  
                             ?_timer0_init 002E                          __end_of_RTCC_init 30FC  
                             ?_timer1_init 0060                                  ??___lwdiv 0064  
                        __end_of_RTCC_task 3528                                  ??___lwmod 006B  
                             ?_timer3_init 002E                                     _lcd_tx 00C5  
                        _USBEnableEndpoint 3528            __size_of_USBStdGetStatusHandler 00AA  
                                   _memset 3644                                     clear_0 2D0A  
                                   clear_1 2D1C                                     clear_2 2D28  
                                   clear_3 2D34                                     clear_4 2D40  
                                   clear_5 2D4C                                     clear_6 2D58  
                                   clear_7 2D64                            __CFG_CLKOEC$OFF 000000  
                         ___awdiv@quotient 0066                            ___awmod@divisor 0062  
                          ___awmod@counter 0064                                     _x_to_d 38C0  
                       ?_USBEnableEndpoint 0036                                     _usb_rx 01DC  
                                   _usb_tx 01E4                       __size_of_display_dec 006A  
                                   _strcat 31C8                                     _strcpy 35D6  
                    ??_USB_CDC_buffer_init 0066              __size_of_USBTransferOnePacket 00D8  
                __size_of_caltime_to_epoch 028E                                  ??_isdigit 0060  
                                ?_I2C_Send 002E                               _st7032_state 00C1  
                             _CDCTxService 0D6C                                  ?_I2C_Stop 002E  
                             __mediumconst FE6C                  __end_of_I2C_LCD_SetCursor 3732  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                        ??_USBEnableEndpoint 0037  
                           ?_I2C_IdleCheck 002E                   USB_CDC_buffer_init@rxbuf 0500  
                 USB_CDC_buffer_init@txbuf 091A                                  ??_sprintf 007E  
                              _CtrlTrfData 000D38                       _controlTransferState 0029  
                     __CFG_LS48MHZ$SYS48X8 000000                                 __accesstop 0060  
                  __end_of__initialization 2D8A                               ?_USB_CDC_ISR 002E  
                             __pbssBIGRAMl 05FA                               ?_USB_CDC_get 002E  
                     __end_of_get_quot_rem 1F50                              ___rparam_used 000001  
                          ??_I2C_LCD_Clear 0066                            _RTCC_from_epoch 38FE  
                 __size_of_USBStallHandler 0046                       __CFG_WPEND$PAGE_WPFP 000000  
                      __size_of_USBSuspend 002C                           terminal_task@op0 0152  
                         terminal_task@op1 016B                           terminal_task@op2 0184  
                         terminal_task@op3 019D                             __pcstackCOMRAM 002E  
                __end_of_USBEnableEndpoint 3564                              __end_of_sd000 FF5C  
                            __end_of_sd001 FEF6                              __end_of_sd002 FF2A  
                             __pidataBANK0 39A2                                  ?_UART_ISR 002E  
         __size_of_USBCtrlEPAllowDataStage 0098              __size_of_USBConfigureEndpoint 0094  
                                ?_OSC_init 002E                              __end_of_setup 258A  
              __end_of_USBCtrlTrfInHandler 24CE                            __CFG_DSWDTPS$G2 000000  
                          _I2C_LCD_Command 359E                     i2_USBTransferOnePacket 27BE  
                     terminal_task@command 00CD                              _I2C_cfct_flag 00B9  
                         I2C_LCD_Command@c 0064                                 ??_I2C_Send 0062  
                        _CDCTxService$5724 0068                                 ??_I2C_Stop 0062  
                               _cdc_notice 0100                                  ?i2_memset 002E  
                               _cdc_rx_len 00BD                                 _cdc_tx_len 00BF  
               caltime_to_epoch@month_2681 0080                   ??_USBCtrlTrfSetupHandler 0048  
                         ?_USBDeviceAttach 002E                     _USBStdGetStatusHandler 2A8A  
                             sprintf@width 008D                                    ??_setup 0091  
                               __pbssBANK0 009E                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
 __end_of_APP_DeviceCDCBasicDemoInitialize 380A  __size_of_APP_DeviceCDCBasicDemoInitialize 002A  
       ??_APP_DeviceCDCBasicDemoInitialize 003A          ?_APP_DeviceCDCBasicDemoInitialize 002E  
         _APP_DeviceCDCBasicDemoInitialize 37E0                    __end_of_caltime_to_RTCC 1E7C  
                          _RTCC_to_caltime 2646                __size_of_USBWakeFromSuspend 0032  
                 __end_of_UART_buffer_init 3420                                _pBDTEntryIn 0010  
         __end_of_USBCtrlEPServiceComplete 185C                __size_of_USBCheckCDCRequest 00B0  
                    __end_of_weekday_3char FF46                      RTCC_task@prev_halfsec 00B6  
                     USBCtrlTrfRxService@i 002E                                    ?___lmul 006D  
                               ??_UART_ISR 003D                                    ?___wmul 0060  
                           ST7032_init@buf 0300                                    ?_d_to_x 002E  
                               ??_OSC_init 0060                                    ?_memset 0060  
                     I2C_LCD_SetCursor@col 0069                             ___lmul@product 0075  
                               _device_dsc FF46                       I2C_LCD_SetCursor@row 0066  
                         _USBCtrlEPService 20F6                                    ?_x_to_d 002E  
                             I2C_Send@data 0062                                 _ep_data_in 0016  
                                  ?_strcat 0060                                    ?_strcpy 0060  
              __end_of_USBCtrlTrfRxService 1674                         _USBCheckStdRequest 1BF2  
                        _configDescriptor1 FE7F                                    i2l10417 324E  
                                  i2l10419 327E                         __CFG_OSC$INTOSCPLL 000000  
                          ??_I2C_IdleCheck 0060                                 ??i2_memset 0034  
              __end_of_USBCtrlTrfTxService 20F6                        _USBStdSetCfgHandler 1A34  
               __size_of_I2C_LCD_SetCursor 002C                     I2C_LCD_SetCursor@F8685 00D7  
                          __CFG_WDTPS$1024 000000                                    _SPBRGH1 000F7F  
                            _I2C_sent_flag 0021                                    _SSP1ADD 000FC8  
                                  _SSP1BUF 000FC9                                    _RTCVALH 000F3B  
                                  _RTCVALL 000F3A                        ?_USBCheckStdRequest 002E  
             __size_of_USBStdGetDscHandler 0132                                    _UIEbits 000F36  
                  __end_of_RTCC_from_epoch 3918                       timer1_init@prescaler 0062  
                                  _UIRbits 000F62                           i2ringbuf_pop@ret 003C  
                         __CFG_CFGPLLEN$ON 000000                              _cdc_trf_state 00BE  
                            ?_month_length 0066                        epoch_to_caltime@day 0087  
                      epoch_to_caltime@num 008B                          RTCC_from_epoch@tm 008F  
                                _I2C_Start 36AA                                    _pCDCDst 00A4  
                                  _pCDCSrc 00A7                      __size_of_getsUSBUSART 00EA  
                   display_time_0802@line0 0099                     display_time_0802@line1 009B  
                                  __Hparam 0000                       ?_USBStdSetCfgHandler 002E  
                                _CDCInitEP 3022                                    __Lparam 0000  
                  __end_of_I2C_LCD_Command 35D6                 __size_of_USBEnableEndpoint 003C  
                               _readBuffer 0240                       ??_USBCheckStdRequest 0048  
            __size_of_USBCtrlTrfOutHandler 005C                              ?_ringbuf_init 0060  
                                  ___awdiv 2352                            __size_of___lmul 0076  
                                  ___awmod 2B34                                    ___lldiv 258A  
                         ??_USBDeviceTasks 004B                            __size_of___wmul 0036  
                                  ___lwdiv 2F34                          ??_USBStallHandler 002E  
                                  ___lwmod 3166                            __size_of_d_to_x 0028  
                     __size_of_ringbuf_pop 00CC                       __size_of_ringbuf_num 00EE  
                     __size_of_ringbuf_put 00D4                            __CFG_STVREN$OFF 000000  
                     __size_of_putUSBUSART 0026                epoch_to_caltime@month_cache 00DB  
                                  __pcinit 2D02                         getsUSBUSART@buffer 0067  
                          __size_of_memset 0034                  __end_of_configDescriptor1 FEC2  
                                  __ramtop 0F00                       __size_of_timer0_init 003A  
                     __size_of_timer1_init 0050                                    __ptext0 0EF4  
                                  __ptext1 24CE                                    __ptext2 36DA  
                                  __ptext3 3334                                    __ptext4 3564  
                                  __ptext5 3976                                    __ptext6 3384  
                                  __ptext7 1054                                    __ptext8 3644  
                                  __ptext9 34B0                                    _inPipes 000A  
                     __size_of_timer3_init 002C                            __size_of_x_to_d 0020  
                            I2C_LCD_Puts@s 0064                _USBDeferOUTDataStagePackets 0024  
                                _T0CONbits 000FD5                            __size_of_strcat 0060  
                         _time_change_flag 00C2                           _caltime_to_epoch 045A  
                          __size_of_strcpy 0038                               __size_of_ISR 00B0  
                                _T1CONbits 000FCD                                    _dpowers FE6D  
                             ??_USBSuspend 0042                    __size_of_RTCC_from_RTCC 001A  
                                  _isdigit 37B6                                  _T3CONbits 000F79  
                         ___awmod@dividend 0060                              I2C_LCD_init@i 0068  
                                _T5CONbits 000F22                            i2_USBDeviceInit 12FA  
                         i2USBDeviceInit@i 0036                                    _uart_rx 01CC  
                                  _uart_tx 01D4                         __end_of_USB_CD_Ptr FE7F  
                                  _sprintf 0000            __size_of_USBCtrlTrfSetupHandler 0082  
                  __end_of_RTCC_to_caltime 2702                      __size_of_get_quot_rem 00D4  
                     end_of_initialization 2D8A                               _getsUSBUSART 194A  
                   __size_ofi2_ringbuf_pop 00AC                     __size_ofi2_ringbuf_num 00BC  
                   __size_ofi2_ringbuf_put 00B6                               _CTMUCONHbits 000FB3  
                       __end_of_USB_SD_Ptr FE7D                               _CTMUCONLbits 000FB2  
                      _pBDTEntryEP0OutNext 001E                             ??_month_length 0067  
                           display_dec@dec 0091                                    memset@c 0062  
                                  memset@n 0064                                    memset@p 0066  
                           display_dec@str 008F            _dummy_encapsulated_cmd_response 01C4  
                 ?_USBStdFeatureReqHandler 002E                           ?_caltime_to_RTCC 0069  
                               ?_I2C_Start 0062                      ??_USBStdSetCfgHandler 0042  
                     __size_of_USB_CDC_ISR 0006                            ___lldiv@divisor 0064  
                     timer3_init@prescaler 0061                                 ?_CDCInitEP 002E  
                          ___lldiv@counter 006C                       __size_of_USB_CDC_get 002C  
                       __end_of_USBSuspend 378A                             ??_ringbuf_init 0066  
                  _USBCtrlEPAllowDataStage 2BD6                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                 _USBCtrlEPServiceComplete 176C                 _USBStatusStageEnabledFlag1 0026  
               _USBStatusStageEnabledFlag2 0027                         USBEnableEndpoint@p 0037  
                                _UART_init 3832                                  _UART_task 38A0  
                         __CFG_DSBOREN$OFF 000000                                  _RTCC_init 3092  
                                _RTCC_task 34EC                  epoch_to_caltime@day_cache 00B2  
                       ST7032_cursor@F8640 00D9                               _get_quot_rem 1E7C  
                __size_of_epoch_to_caltime 01F2                           __CFG_CPUDIV$OSC1 000000  
                       _BothEP0OutUOWNsSet 0020                          __size_of_I2C_Send 0018  
                        __size_of_I2C_Stop 000A                  USBConfigureEndpoint@EPNum 0033  
               ?_USBCtrlEPAllowStatusStage 002E                              ?_USB_CDC_init 002E  
                            ?_USB_CDC_send 006C                              ?_USB_CDC_task 002E  
                         ?_RTCC_from_epoch 008F        USER_USB_CALLBACK_EVENT_HANDLER@size 003E  
                                _USTATcopy 002D                    timer1_init@clock_select 0060  
             __end_of_USBTransferOnePacket 1DA6                           __CFG_IOL1WAY$OFF 000000  
                        putUSBUSART@length 0062                        __CFG_MSSP7B_EN$MSK7 000000  
                         ?_I2C_LCD_Command 002E                             ringbuf_init@rb 0060  
                   _USBCtrlTrfSetupHandler 2EB2                __end_of_USB_CDC_buffer_init 33D2  
                           ringbuf_pop@ret 006E                              ??_display_dec 0093  
                            i2_ringbuf_pop 29DE                              i2_ringbuf_num 2702  
                  ?i2_USBTransferOnePacket 002E                              i2_ringbuf_put 2878  
                    __end_of_USBDeviceInit 11AE                             __end_of___lmul 3022  
                           __end_of___wmul 3644                             __end_of_d_to_x 3832  
                        __size_of_UART_ISR 004A                    __end_ofi2_USBDeviceInit 1436  
                               ?_UART_init 002E                                  i2memset@c 0030  
                                i2memset@n 0032                                  i2memset@p 0034  
                               ?_UART_task 002E                             __end_of_memset 3678  
                               ?_RTCC_init 002E                          __size_of_OSC_init 000E  
                               ?_RTCC_task 002E                           __CFG_DSWDTEN$OFF 000000  
                        _USBBusIsSuspended 00BA                             __end_of_x_to_d 38E0  
                           __end_of_strcat 3228                      epoch_to_caltime@month 008A  
                           __end_of_strcpy 360E                        start_initialization 2D02  
                         month_length@year 006B                    ?_USBStdGetStatusHandler 002E  
                              __end_of_ISR 10B8              USBCtrlTrfRxService@byteToRead 002F  
                            ?_I2C_LCD_Puts 0064                              ?_I2C_LCD_init 002E  
                              _cdc_data_rx 0112                             ??_USB_CDC_init 0069  
                              _cdc_data_tx 0200                          __size_ofi2_memset 002C  
                           ??_USB_CDC_send 006E                              UART_ISR@ascii 003D  
                           ??_USB_CDC_task 0076               __end_of_USBConfigureEndpoint 2D02  
                         ?_RTCC_to_caltime 0062            __end_of_USBStdFeatureReqHandler 0966  
        __end_of_USBCtrlEPAllowStatusStage 2352                   __end_of_USBCtrlEPService 21C4  
                              ??_I2C_Start 0063                  ??_USBCtrlEPAllowDataStage 002F  
                              ??_CDCInitEP 003A                             USBDeviceInit@i 0068  
                        ?_UART_buffer_init 002E                      __end_of_I2C_LCD_Clear 3932  
                   _pBDTEntryEP0OutCurrent 001C                    USBTransferOnePacket@dir 0060  
                  USBTransferOnePacket@len 0063             __end_ofi2_USBTransferOnePacket 2878  
                                 ??___lmul 0075                         ??_UART_buffer_init 0066  
                           ?i2_ringbuf_pop 0036                             ?i2_ringbuf_num 002E  
                           ?i2_ringbuf_put 0036                                   ??___wmul 0064  
                      _USBStdGetDscHandler 1436                                   ??_d_to_x 0068  
                        __CFG_ADCSEL$BIT12 000000                                __pdataBANK0 00D7  
                                 ??_memset 0066                                   ??_x_to_d 0060  
                                 ??_strcat 0064                                   ??_strcpy 0064  
                     __end_of_month_length 1BF2                             _RTCC_from_RTCC 3932  
                   _USBActiveConfiguration 002C             __end_of_USBStdGetStatusHandler 2B34  
                      __end_of_display_dec 3166                                __pbssCOMRAM 0001  
                      RTCC_to_caltime@dumy 0064                              __pcstackBANK0 0060  
                            __pcstackBANK2 02C0               __size_of_USBCtrlTrfInHandler 00BE  
                           ??_I2C_LCD_Puts 0066                             ??_I2C_LCD_init 0067  
                     __end_of_ringbuf_init 3334                       ?_USBStdGetDscHandler 002E  
                             _isdigit$5977 0061                 __end_of_USBWakeFromSuspend 36AA  
                              sprintf@flag 008B                                sprintf@prec 0082  
                          _USBStallHandler 346A                               _pBDTEntryOut 009E  
               __end_of_USBCheckCDCRequest 29DE                   __end_of_caltime_to_epoch 06E8  
                          millis_timer@cnt 00B4                   __size_of_USBDeviceAttach 003C  
                  USB_CDC_get@numBytesRead 006D                           ___lwdiv@dividend 0060  
                                __pintcode 1008                              __pmediumconst FE6C  
                                 ?___awdiv 0060                                   ?___awmod 0060  
                                 ?___lldiv 0060                                   ?___lwdiv 0060  
                                 ?___lwmod 0067                     __end_of_RTCC_from_RTCC 394C  
                          I2C_LCD_Puts@ans 0067                           ?i2_USBDeviceInit 002E  
                              ??_UART_init 0066                                ??_UART_task 0068  
                              ??_RTCC_init 0091                                ??_RTCC_task 0088  
                     _USBTransferOnePacket 1CCE                                I2C_Start@rw 0062  
                                 ?_isdigit 002E                           _epoch_to_caltime 0B7A  
                                 _I2C_Send 394C                                   _I2C_Stop 3992  
                     __CFG_RTCOSC$T1OSCREF 000000                                   _I2C_busy 00B8  
                    __end_of_I2C_IdleCheck 38FE                                _PADCFG1bits 000F3C  
             __end_of_USBCtrlTrfOutHandler 32E0                              ?_I2C_init_old 002E  
                    ??_USBStdGetDscHandler 002E                                _ep_data_out 0019  
                         ___lwdiv@quotient 0065                            ST7032_task@wait 00AA  
                                 ?_sprintf 006C               __size_of_USBCtrlTrfRxService 010C  
            USBConfigureEndpoint@direction 002E                             __size_of_setup 00BC  
                                d_to_x@dec 0068                                   _CTMUCONH 000FB3  
                                 _CTMUCONL 000FB2                                   _CTMUICON 000FB1  
             __size_of_USBCtrlTrfTxService 00D2                   ringbuf_init@internal_buf 0062  
                           ___wmul@product 0064                                   _LATAbits 000F89  
                                 _LATBbits 000F8A                 ??_USBCtrlEPServiceComplete 002F  
                                 _IPR1bits 000F9F                                   _IPR2bits 000FA2  
                                 _PIE1bits 000F9D                                   _PIE2bits 000FA0  
                                 _IPR5bits 000F99                                   _PIE5bits 000F91  
                                 i2u420_40 20A0                            ??i2_ringbuf_pop 0038  
                          ??i2_ringbuf_num 0030                                   i2u420_47 2096  
                                 i2u422_40 20E0                            ??i2_ringbuf_put 0039  
                                 i2u422_47 20D6                                   i2u440_40 153A  
                                 i2u440_47 1530                                   _PIR1bits 000F9E  
                                 _PIR2bits 000FA1                                   i2u437_40 14B2  
                                 i2u437_47 14A8                                   i2u438_40 14E2  
                                 i2u438_47 14D8                                   _PIR5bits 000F98  
               epoch_to_caltime@year_cache 00C3                  USBCtrlEPService@setup_cnt 004A  
                            ??_ringbuf_pop 006A                              ??_ringbuf_num 0062  
                                 i2u697_40 1068                              ??_ringbuf_put 0072  
                                 i2u698_48 106A                                   _RCONbits 000FD0  
                        _display_time_0802 0966                              ??_putUSBUSART 0063  
                                 _UEP0bits 000F26                 _USBDeferINDataStagePackets 0023  
                                 _UART_ISR 3420                                   _SSP1CON1 000FC6  
                                 _SSP1CON2 000FC5                              ??_timer0_init 0060  
                            ??_timer1_init 0061                __size_of_USBCheckStdRequest 00DC  
                            ??_timer3_init 0060                                   _SSP1STAT 000FC7  
                                 _UCONbits 000F65                       __end_of_USB_CDC_init 3984  
                     __end_of_USB_CDC_send 38A0                       __end_of_USB_CDC_task 176C  
                       ?_display_time_0802 0097                                _display_dec 30FC  
                     _USBConfigureEndpoint 2C6E                                   _OSC_init 3984  
                          ?_RTCC_from_RTCC 0086           __size_of_USBStdFeatureReqHandler 027E  
                               _ADCON0bits 000FC2                                 _ADCON1bits 000FC1  
                        ___wmul@multiplier 0060                      ?_USBTransferOnePacket 0060  
                         __CFG_SOSCSEL$LOW 000000                              ?_CDCTxService 002E  
                      ??_display_time_0802 009D                               _RemoteWakeup 0022  
                       I2C_LCD_init@i_3143 0069                                   i2_memset 378A  
                        i2ringbuf_put@data 0038                             ??_I2C_init_old 0060  
                            ringbuf_pop@rb 0068                              ringbuf_num@rb 0060  
                  __end_of_USBStallHandler 34B0                              I2C_Start@adrs 0063  
                            ringbuf_put@rb 006F                          ___lmul@multiplier 006D  
                              _INTCON2bits 000FF1                                  copy_data0 2D7E  
              ??_USBCtrlEPAllowStatusStage 002E                __end_of_USBStdSetCfgHandler 1B14  
                     epoch_to_caltime@year 0089                              ??_USB_CDC_ISR 004C  
                            ??_USB_CDC_get 006D                         __end_of_device_dsc FF58  
                  ?_USBCtrlTrfSetupHandler 002E                  __end_of_display_time_0802 0B7A  
                  USBStdGetStatusHandler@p 002F                                   __Hrparam 0000  
                                 __Lrparam 0000                     USBTransferOnePacket@ep 0064  
                     __end_of_I2C_LCD_Puts 2EB2                                   _SetupPkt 000D30  
                            _weekday_3char FF2A                       __end_of_I2C_LCD_init 2E24  
                    __size_of_month_length 00DE                      ?_USBConfigureEndpoint 002E  
                 __size_of_caltime_to_RTCC 00D6                          ??_USBDeviceAttach 0060  
                         __size_of___awdiv 00BE                           __size_of___awmod 00A2  
                        I2C_IdleCheck@mask 0061                           __size_of___lldiv 00BC  
                         __size_of___lwdiv 0078                           __size_of___lwmod 0062  
                      __end_of_ringbuf_pop 2290                        __end_of_ringbuf_num 194A  
                      __end_of_ringbuf_put 2024                        __end_of_putUSBUSART 387E  
                              _line_coding 01EC                             ??_CDCTxService 0067  
                      __end_of_timer0_init 359E                      __size_of_ringbuf_init 0054  
                      __end_of_timer1_init 3384                                 sprintf@len 0089  
                      __end_of_timer3_init 3706                                 sprintf@val 0087  
                               strcat@from 0062                           __size_of_isdigit 002A  
                  __size_of_USBDeviceTasks 014C                            ___lwdiv@divisor 0062  
                          ___lwdiv@counter 0064                       timer0_init@prescaler 0061  
                                 __ptext10 3832                                   __ptext11 33D2  
                                 __ptext20 2352                                   __ptext12 32E0  
                                 __ptext21 3984                                   __ptext13 3092  
                                 __ptext30 394C                                   __ptext22 2D94  
                                 __ptext14 38FE                                   __ptext31 38E0  
                                 __ptext23 3964                                   __ptext15 0B7A  
                                 __ptext40 2F34                                   __ptext32 0966  
                                 __ptext24 3918                                   __ptext16 1E7C  
                                 __ptext41 1674                                   __ptext33 35D6  
                                 __ptext25 3706                                   __ptext17 258A  
                                 __ptext50 38A0                                   __ptext42 1F50  
                                 __ptext34 30FC                                   __ptext26 359E  
                                 __ptext18 1DA6                                   __ptext51 185C  
                                 __ptext43 21C4                                   __ptext35 31C8  
                                 __ptext27 2E24                                   __ptext19 380A  
                                 __ptext52 34EC                                   __ptext44 387E  
                                 __ptext36 0000                                   __ptext28 3992  
                                 __ptext61 399C                                   __ptext53 3932  
                                 __ptext45 3858                                   __ptext37 37B6  
                                 __ptext29 36AA                                   __ptext70 2BD6  
                                 __ptext62 11AE                                   __ptext54 045A  
                                 __ptext46 3732                                   __ptext38 360E  
                                 __ptext71 1BF2                                   __ptext63 12FA  
                                 __ptext55 1B14                                   __ptext47 194A  
                                 __ptext39 3166                                   __ptext80 3022  
                                 __ptext72 1A34                                   __ptext64 3678  
                                 __ptext56 2B34                                   __ptext48 0D6C  
                                 __ptext81 27BE                                   __ptext73 378A  
                                 __ptext65 375E                                   __ptext57 2FAC  
                                 __ptext49 1CCE                                   __ptext90 2878  
                                 __ptext82 3528                                   __ptext74 2A8A  
                                 __ptext66 346A                                   __ptext58 2646  
                                 __ptext91 29DE                                   __ptext83 2C6E  
                                 __ptext75 1436                                   __ptext67 20F6  
                                 __ptext59 38C0                                   __ptext92 2702  
                                 __ptext84 3284                                   __ptext76 06E8  
                                 __ptext68 2EB2                                   __ptext85 1568  
                                 __ptext77 3228                                   __ptext69 176C  
                                 __ptext86 2290                                   __ptext78 292E  
                                 __ptext87 2410                                   __ptext79 37E0  
                                 __ptext88 2024                                   __ptext89 3420  
                             _SSP1CON1bits 000FC6                               _SSP1CON2bits 000FC5  
                         __size_of_sprintf 045A                                 strcpy@from 0062  
           __end_of_USBCtrlTrfSetupHandler 2F34                              __size_of_main 0160  
                        ?_USBCtrlEPService 002E                               _month_length 1B14  
                       ??_USBCtrlEPService 0048                   __size_of_RTCC_from_epoch 001A  
                      _USBCtrlTrfInHandler 2410                        __end_of_USB_CDC_ISR 39A2  
                      __end_of_USB_CDC_get 375E                                   _outPipes 0001  
                     _USBCtrlTrfOutHandler 3284                                   int$flags 005B  
                             _ringbuf_init 32E0                  _USBCtrlEPAllowStatusStage 2290  
                                x_to_d@hex 0061                               _SSP1STATbits 000FC7  
                   ??_USBTransferOnePacket 0064                   __size_of_I2C_LCD_Command 0038  
                _USBDeferStatusStagePacket 0025                   CDCTxService@byte_to_send 006B  
             __size_of_USB_CDC_buffer_init 004E                  __size_of_UART_buffer_init 004E  
                              _OSCTUNEbits 000F9B                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 002E              USBCtrlTrfTxService@byteToSend 002E  
             I2C_LCD_SetCursor@row_offsets 0067                            display_dec@edit 0092  
                                 isdigit@c 0062                                   memset@p1 0060  
                         ?_USBStallHandler 002E                   USBStdFeatureReqHandler@p 0046  
                         get_quot_rem@quot 0079                  terminal_task@command_init 00C4  
                        RTCC_to_caltime@tm 0062                         USB_CDC_send@length 006C  
                                 intlevel2 0000                                  sprintf@ap 0083  
                                sprintf@cp 0085                                  sprintf@sp 006C  
                   __size_of_USBDeviceInit 015A    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3284  
 __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C          ??_USER_USB_CALLBACK_EVENT_HANDLER 0040  
         ?_USER_USB_CALLBACK_EVENT_HANDLER 003A            _USER_USB_CALLBACK_EVENT_HANDLER 3228  
                         ___lwmod@dividend 0067               i2USBTransferOnePacket@handle 0033  
                         ___lldiv@dividend 0060                                 _RCSTA1bits 000FAC  
                        ?_caltime_to_epoch 0079                 __size_of_display_time_0802 0214  
                 __end_of_epoch_to_caltime 0D6C                   __size_of_RTCC_to_caltime 00BC  
                    __size_of_USB_CDC_init 000E                      __size_of_USB_CDC_send 0022  
                    __size_of_USB_CDC_task 00F8                         USB_CDC_task@length 0079  
                               _OSCCONbits 000FD3                 i2USBTransferOnePacket@data 002F  
                       ??_caltime_to_epoch 007B                       __end_of_I2C_init_old 3976  
                   ??_USBConfigureEndpoint 002F                      ?_USBCtrlTrfOutHandler 002E  
                              _ringbuf_pop 21C4                                _ringbuf_num 185C  
                              _ringbuf_put 1F50                                _putUSBUSART 3858  
                      _USBCtrlTrfRxService 1568                                _timer0_init 3564  
                       _USBWakeFromSuspend 3678                                _timer1_init 3334  
                              _timer3_init 36DA                    _USBStdFeatureReqHandler 06E8  
                       _USBCheckCDCRequest 292E                        _USBCtrlTrfTxService 2024  
                          get_quot_rem@div 007B                            get_quot_rem@num 007D  
                               _RTCCFGbits 000F3F                                   sprintf@c 008C  
                                 sprintf@f 006E                                   strcat@cp 0064  
                                 strcat@to 0060                        ?_USBWakeFromSuspend 002E  
                         ___lldiv@quotient 0068                            ___lwmod@divisor 0069  
                        caltime_to_RTCC@tm 0069                          ??_caltime_to_RTCC 006B  
                    ??_USBCtrlTrfInHandler 002F                                   strcpy@cp 0064  
                                 strcpy@to 0060                      _USBAlternateInterface 00D5  
                          ___lwmod@counter 006B                        ?_USBCheckCDCRequest 002E  
                i2USBTransferOnePacket@dir 002E                  i2USBTransferOnePacket@len 0031  
                      USBEnableEndpoint@ep 0039                            _endpoint_number 002A  
                   __size_of_I2C_LCD_Clear 001A                       ?_USBCtrlTrfRxService 002E  
          epoch_to_caltime@day_since_epoch 0085                              ?_getsUSBUSART 0067  
                             _USB_CDC_init 3976                               _USB_CDC_send 387E  
                             _USB_CDC_task 1674                   ?_USBCtrlEPAllowDataStage 002E  
                     ?_USBCtrlTrfTxService 002E                                _USB_CDC_ISR 399C  
             _USBStatusStageTimeoutCounter 0028                      __size_of_I2C_LCD_Puts 008E  
                              _USB_CDC_get 3732                      __size_of_I2C_LCD_init 0090  
                     ??_USBWakeFromSuspend 0042                 USBTransferOnePacket@handle 0065  
                     __end_of_CDCTxService 0EF4                       ??_USBCheckCDCRequest 002E  
                               _USB_CD_Ptr FE7D                           ??_RTCC_from_RTCC 0088  
