

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 20:54:17 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   111                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   112                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   113                           	dabs	1,0xD00,48,_BDT
   114                           	dabs	1,0xD38,8,_CtrlTrfData
   115                           	dabs	1,0xD30,8,_SetupPkt
   116  0000                     
   117                           	psect	idataBANK0
   118  013918                     __pidataBANK0:
   119                           	opt stack 0
   120                           
   121                           ;initializer for I2C_LCD_SetCursor@F8685
   122  013918  00                 	db	0
   123  013919  40                 	db	64
   124                           
   125                           ;initializer for ST7032_cursor@F8640
   126  01391A  00                 	db	0
   127  01391B  40                 	db	64
   128                           
   129                           ;initializer for epoch_to_caltime@month_cache
   130  01391C  01                 	db	1
   131                           
   132                           	psect	mediumconst
   133  00FE6C                     __pmediumconst:
   134                           	opt stack 0
   135  00FE6C  00                 	db	0
   136  00FE6D                     _dpowers:
   137                           	opt stack 0
   138  00FE6D  0001               	dw	1
   139  00FE6F  000A               	dw	10
   140  00FE71  0064               	dw	100
   141  00FE73  03E8               	dw	1000
   142  00FE75  2710               	dw	10000
   143  00FE77                     __end_of_dpowers:
   144                           	opt stack 0
   145  00FE77                     _USB_SD_Ptr:
   146                           	opt stack 0
   147  00FE77  58                 	db	low _sd000
   148  00FE78  FF                 	db	high _sd000
   149  00FE79  C2                 	db	low _sd001
   150  00FE7A  FE                 	db	high _sd001
   151  00FE7B  F6                 	db	low _sd002
   152  00FE7C  FE                 	db	high _sd002
   153  00FE7D                     __end_of_USB_SD_Ptr:
   154                           	opt stack 0
   155  00FE7D                     _USB_CD_Ptr:
   156                           	opt stack 0
   157  00FE7D  7F                 	db	low _configDescriptor1
   158  00FE7E  FE                 	db	high _configDescriptor1
   159  00FE7F                     __end_of_USB_CD_Ptr:
   160                           	opt stack 0
   161  00FE7F                     _configDescriptor1:
   162                           	opt stack 0
   163  00FE7F  09                 	db	9
   164  00FE80  02                 	db	2
   165  00FE81  43                 	db	67
   166  00FE82  00                 	db	0
   167  00FE83  02                 	db	2
   168  00FE84  01                 	db	1
   169  00FE85  00                 	db	0
   170  00FE86  C0                 	db	192
   171  00FE87  32                 	db	50
   172  00FE88  09                 	db	9
   173  00FE89  04                 	db	4
   174  00FE8A  00                 	db	0
   175  00FE8B  00                 	db	0
   176  00FE8C  01                 	db	1
   177  00FE8D  02                 	db	2
   178  00FE8E  02                 	db	2
   179  00FE8F  01                 	db	1
   180  00FE90  00                 	db	0
   181  00FE91  05                 	db	5
   182  00FE92  24                 	db	36
   183  00FE93  00                 	db	0
   184  00FE94  10                 	db	16
   185  00FE95  01                 	db	1
   186  00FE96  04                 	db	4
   187  00FE97  24                 	db	36
   188  00FE98  02                 	db	2
   189  00FE99  02                 	db	2
   190  00FE9A  05                 	db	5
   191  00FE9B  24                 	db	36
   192  00FE9C  06                 	db	6
   193  00FE9D  00                 	db	0
   194  00FE9E  01                 	db	1
   195  00FE9F  05                 	db	5
   196  00FEA0  24                 	db	36
   197  00FEA1  01                 	db	1
   198  00FEA2  00                 	db	0
   199  00FEA3  01                 	db	1
   200  00FEA4  07                 	db	7
   201  00FEA5  05                 	db	5
   202  00FEA6  81                 	db	129
   203  00FEA7  03                 	db	3
   204  00FEA8  08                 	db	8
   205  00FEA9  00                 	db	0
   206  00FEAA  02                 	db	2
   207  00FEAB  09                 	db	9
   208  00FEAC  04                 	db	4
   209  00FEAD  01                 	db	1
   210  00FEAE  00                 	db	0
   211  00FEAF  02                 	db	2
   212  00FEB0  0A                 	db	10
   213  00FEB1  00                 	db	0
   214  00FEB2  00                 	db	0
   215  00FEB3  00                 	db	0
   216  00FEB4  07                 	db	7
   217  00FEB5  05                 	db	5
   218  00FEB6  02                 	db	2
   219  00FEB7  02                 	db	2
   220  00FEB8  40                 	db	64
   221  00FEB9  00                 	db	0
   222  00FEBA  00                 	db	0
   223  00FEBB  07                 	db	7
   224  00FEBC  05                 	db	5
   225  00FEBD  82                 	db	130
   226  00FEBE  02                 	db	2
   227  00FEBF  40                 	db	64
   228  00FEC0  00                 	db	0
   229  00FEC1  00                 	db	0
   230  00FEC2                     __end_of_configDescriptor1:
   231                           	opt stack 0
   232  00FEC2                     _sd001:
   233                           	opt stack 0
   234  00FEC2  34                 	db	52
   235  00FEC3  03                 	db	3
   236  00FEC4  004D               	dw	77
   237  00FEC6  0069               	dw	105
   238  00FEC8  0063               	dw	99
   239  00FECA  0072               	dw	114
   240  00FECC  006F               	dw	111
   241  00FECE  0063               	dw	99
   242  00FED0  0068               	dw	104
   243  00FED2  0069               	dw	105
   244  00FED4  0070               	dw	112
   245  00FED6  0020               	dw	32
   246  00FED8  0054               	dw	84
   247  00FEDA  0065               	dw	101
   248  00FEDC  0063               	dw	99
   249  00FEDE  0068               	dw	104
   250  00FEE0  006E               	dw	110
   251  00FEE2  006F               	dw	111
   252  00FEE4  006C               	dw	108
   253  00FEE6  006F               	dw	111
   254  00FEE8  0067               	dw	103
   255  00FEEA  0079               	dw	121
   256  00FEEC  0020               	dw	32
   257  00FEEE  0049               	dw	73
   258  00FEF0  006E               	dw	110
   259  00FEF2  0063               	dw	99
   260  00FEF4  002E               	dw	46
   261  00FEF6                     __end_of_sd001:
   262                           	opt stack 0
   263  00FEF6                     _sd002:
   264                           	opt stack 0
   265  00FEF6  34                 	db	52
   266  00FEF7  03                 	db	3
   267  00FEF8  0043               	dw	67
   268  00FEFA  0044               	dw	68
   269  00FEFC  0043               	dw	67
   270  00FEFE  0020               	dw	32
   271  00FF00  0052               	dw	82
   272  00FF02  0053               	dw	83
   273  00FF04  002D               	dw	45
   274  00FF06  0032               	dw	50
   275  00FF08  0033               	dw	51
   276  00FF0A  0032               	dw	50
   277  00FF0C  0020               	dw	32
   278  00FF0E  0045               	dw	69
   279  00FF10  006D               	dw	109
   280  00FF12  0075               	dw	117
   281  00FF14  006C               	dw	108
   282  00FF16  0061               	dw	97
   283  00FF18  0074               	dw	116
   284  00FF1A  0069               	dw	105
   285  00FF1C  006F               	dw	111
   286  00FF1E  006E               	dw	110
   287  00FF20  0020               	dw	32
   288  00FF22  0044               	dw	68
   289  00FF24  0065               	dw	101
   290  00FF26  006D               	dw	109
   291  00FF28  006F               	dw	111
   292  00FF2A                     __end_of_sd002:
   293                           	opt stack 0
   294  00FF2A                     _weekday_3char:
   295                           	opt stack 0
   296  00FF2A  53                 	db	83
   297  00FF2B  55                 	db	85
   298  00FF2C  4E                 	db	78
   299  00FF2D  00                 	db	0
   300  00FF2E  4D                 	db	77
   301  00FF2F  4F                 	db	79
   302  00FF30  4E                 	db	78
   303  00FF31  00                 	db	0
   304  00FF32  54                 	db	84
   305  00FF33  55                 	db	85
   306  00FF34  45                 	db	69
   307  00FF35  00                 	db	0
   308  00FF36  57                 	db	87
   309  00FF37  45                 	db	69
   310  00FF38  44                 	db	68
   311  00FF39  00                 	db	0
   312  00FF3A  54                 	db	84
   313  00FF3B  48                 	db	72
   314  00FF3C  55                 	db	85
   315  00FF3D  00                 	db	0
   316  00FF3E  46                 	db	70
   317  00FF3F  52                 	db	82
   318  00FF40  49                 	db	73
   319  00FF41  00                 	db	0
   320  00FF42  53                 	db	83
   321  00FF43  41                 	db	65
   322  00FF44  54                 	db	84
   323  00FF45  00                 	db	0
   324  00FF46                     __end_of_weekday_3char:
   325                           	opt stack 0
   326  00FF46                     _device_dsc:
   327                           	opt stack 0
   328  00FF46  12                 	db	18
   329  00FF47  01                 	db	1
   330  00FF48  0200               	dw	512
   331  00FF4A  02                 	db	2
   332  00FF4B  00                 	db	0
   333  00FF4C  00                 	db	0
   334  00FF4D  08                 	db	8
   335  00FF4E  04D8               	dw	1240
   336  00FF50  000A               	dw	10
   337  00FF52  0100               	dw	256
   338  00FF54  01                 	db	1
   339  00FF55  02                 	db	2
   340  00FF56  00                 	db	0
   341  00FF57  01                 	db	1
   342  00FF58                     __end_of_device_dsc:
   343                           	opt stack 0
   344  00FF58                     _sd000:
   345                           	opt stack 0
   346  00FF58  04                 	db	4
   347  00FF59  03                 	db	3
   348  00FF5A  0409               	dw	1033
   349  00FF5C                     __end_of_sd000:
   350                           	opt stack 0
   351  0000                     _ANCON0	set	3912
   352  0000                     _ANCON1	set	3913
   353  0000                     _PADCFG1bits	set	3900
   354  0000                     _RTCCAL	set	3902
   355  0000                     _RTCCFGbits	set	3903
   356  0000                     _RTCVALH	set	3899
   357  0000                     _RTCVALL	set	3898
   358  0000                     _T5CONbits	set	3874
   359  0000                     _UADDR	set	3896
   360  0000                     _UCFG	set	3897
   361  0000                     _UEIE	set	3895
   362  0000                     _UEP0bits	set	3878
   363  0000                     _UIE	set	3894
   364  0000                     _UIEbits	set	3894
   365  0000                     _UEP0	set	3878
   366  0000                     _UEP1	set	3879
   367  0000                     _ADRES	set	4035
   368  0000                     _ADCON0bits	set	4034
   369  0000                     _ADCON1bits	set	4033
   370  0000                     _BAUDCON1bits	set	3966
   371  0000                     _CTMUCONH	set	4019
   372  0000                     _CTMUCONHbits	set	4019
   373  0000                     _CTMUCONL	set	4018
   374  0000                     _CTMUCONLbits	set	4018
   375  0000                     _CTMUICON	set	4017
   376  0000                     _EECON2	set	4007
   377  0000                     _INTCON2bits	set	4081
   378  0000                     _INTCONbits	set	4082
   379  0000                     _IPR1bits	set	3999
   380  0000                     _IPR2bits	set	4002
   381  0000                     _IPR5bits	set	3993
   382  0000                     _LATAbits	set	3977
   383  0000                     _LATBbits	set	3978
   384  0000                     _OSCCONbits	set	4051
   385  0000                     _OSCTUNEbits	set	3995
   386  0000                     _PIE1bits	set	3997
   387  0000                     _PIE2bits	set	4000
   388  0000                     _PIE5bits	set	3985
   389  0000                     _PIR1bits	set	3998
   390  0000                     _PIR2bits	set	4001
   391  0000                     _PIR5bits	set	3992
   392  0000                     _RCONbits	set	4048
   393  0000                     _RCREG1	set	4015
   394  0000                     _RCSTA1bits	set	4012
   395  0000                     _SPBRG1	set	4016
   396  0000                     _SPBRGH1	set	3967
   397  0000                     _SSP1ADD	set	4040
   398  0000                     _SSP1BUF	set	4041
   399  0000                     _SSP1CON1	set	4038
   400  0000                     _SSP1CON1bits	set	4038
   401  0000                     _SSP1CON2	set	4037
   402  0000                     _SSP1CON2bits	set	4037
   403  0000                     _SSP1STAT	set	4039
   404  0000                     _SSP1STATbits	set	4039
   405  0000                     _SSPBUF	set	4041
   406  0000                     _T0CONbits	set	4053
   407  0000                     _T1CONbits	set	4045
   408  0000                     _T3CONbits	set	3961
   409  0000                     _TMR1H	set	4047
   410  0000                     _TRISA	set	3986
   411  0000                     _TRISB	set	3987
   412  0000                     _TRISC	set	3988
   413  0000                     _TXREG1	set	4014
   414  0000                     _TXSTA1bits	set	4013
   415  0000                     _UCON	set	3941
   416  0000                     _UCONbits	set	3941
   417  0000                     _UEIR	set	3939
   418  0000                     _UIR	set	3938
   419  0000                     _UIRbits	set	3938
   420  0000                     _USTAT	set	3940
   421  0000                     _BCL1IF	set	32011
   422  0000                     _LATB2	set	31826
   423  0000                     _SSP1IF	set	31987
   424  00FF5C  09                 	db	9
   425  00FF5D  32                 	db	50	;'2'
   426  00FF5E  30                 	db	48	;'0'
   427  00FF5F  25                 	db	37
   428  00FF60  30                 	db	48	;'0'
   429  00FF61  32                 	db	50	;'2'
   430  00FF62  64                 	db	100	;'d'
   431  00FF63  2F                 	db	47
   432  00FF64  25                 	db	37
   433  00FF65  30                 	db	48	;'0'
   434  00FF66  32                 	db	50	;'2'
   435  00FF67  64                 	db	100	;'d'
   436  00FF68  2F                 	db	47
   437  00FF69  25                 	db	37
   438  00FF6A  30                 	db	48	;'0'
   439  00FF6B  32                 	db	50	;'2'
   440  00FF6C  64                 	db	100	;'d'
   441  00FF6D  28                 	db	40
   442  00FF6E  25                 	db	37
   443  00FF6F  73                 	db	115	;'s'
   444  00FF70  29                 	db	41
   445  00FF71  25                 	db	37
   446  00FF72  30                 	db	48	;'0'
   447  00FF73  32                 	db	50	;'2'
   448  00FF74  64                 	db	100	;'d'
   449  00FF75  3A                 	db	58	;':'
   450  00FF76  25                 	db	37
   451  00FF77  30                 	db	48	;'0'
   452  00FF78  32                 	db	50	;'2'
   453  00FF79  64                 	db	100	;'d'
   454  00FF7A  2D                 	db	45
   455  00FF7B  25                 	db	37
   456  00FF7C  30                 	db	48	;'0'
   457  00FF7D  32                 	db	50	;'2'
   458  00FF7E  64                 	db	100	;'d'
   459  00FF7F  0A                 	db	10
   460  00FF80  00                 	db	0
   461  00FF81  61                 	db	97	;'a'
   462  00FF82  64                 	db	100	;'d'
   463  00FF83  6A                 	db	106	;'j'
   464  00FF84  75                 	db	117	;'u'
   465  00FF85  73                 	db	115	;'s'
   466  00FF86  74                 	db	116	;'t'
   467  00FF87  5F                 	db	95	;'_'
   468  00FF88  74                 	db	116	;'t'
   469  00FF89  69                 	db	105	;'i'
   470  00FF8A  6D                 	db	109	;'m'
   471  00FF8B  65                 	db	101	;'e'
   472  00FF8C  00                 	db	0
   473  00FF8D  70                 	db	112	;'p'
   474  00FF8E  72                 	db	114	;'r'
   475  00FF8F  69                 	db	105	;'i'
   476  00FF90  6E                 	db	110	;'n'
   477  00FF91  74                 	db	116	;'t'
   478  00FF92  5F                 	db	95	;'_'
   479  00FF93  74                 	db	116	;'t'
   480  00FF94  69                 	db	105	;'i'
   481  00FF95  6D                 	db	109	;'m'
   482  00FF96  65                 	db	101	;'e'
   483  00FF97  00                 	db	0
   484  00FF98                     STR_41:
   485  00FF98  31                 	db	49	;'1'
   486  00FF99  38                 	db	56	;'8'
   487  00FF9A  46                 	db	70	;'F'
   488  00FF9B  32                 	db	50	;'2'
   489  00FF9C  37                 	db	55	;'7'
   490  00FF9D  4A                 	db	74	;'J'
   491  00FF9E  35                 	db	53	;'5'
   492  00FF9F  33                 	db	51	;'3'
   493  00FFA0  00                 	db	0
   494  00FFA1                     STR_42:
   495  00FFA1  55                 	db	85	;'U'
   496  00FFA2  53                 	db	83	;'S'
   497  00FFA3  42                 	db	66	;'B'
   498  00FFA4  20                 	db	32
   499  00FFA5  55                 	db	85	;'U'
   500  00FFA6  41                 	db	65	;'A'
   501  00FFA7  52                 	db	82	;'R'
   502  00FFA8  54                 	db	84	;'T'
   503  00FFA9  00                 	db	0
   504  00FFAA                     STR_15:
   505  00FFAA  20                 	db	32
   506  00FFAB  20                 	db	32
   507  00FFAC  20                 	db	32
   508  00FFAD  20                 	db	32
   509  00FFAE  20                 	db	32
   510  00FFAF  20                 	db	32
   511  00FFB0  20                 	db	32
   512  00FFB1  20                 	db	32
   513  00FFB2  00                 	db	0
   514  00FFB3  09                 	db	9
   515  00FFB4  65                 	db	101	;'e'
   516  00FFB5  72                 	db	114	;'r'
   517  00FFB6  72                 	db	114	;'r'
   518  00FFB7  6F                 	db	111	;'o'
   519  00FFB8  72                 	db	114	;'r'
   520  00FFB9  0A                 	db	10
   521  00FFBA  00                 	db	0
   522  00FFBB                     STR_43:
   523  00FFBB  28                 	db	40
   524  00FFBC  6E                 	db	110	;'n'
   525  00FFBD  75                 	db	117	;'u'
   526  00FFBE  6C                 	db	108	;'l'
   527  00FFBF  6C                 	db	108	;'l'
   528  00FFC0  29                 	db	41
   529  00FFC1  00                 	db	0
   530  00FFC2  73                 	db	115	;'s'
   531  00FFC3  65                 	db	101	;'e'
   532  00FFC4  63                 	db	99	;'c'
   533  00FFC5  6F                 	db	111	;'o'
   534  00FFC6  6E                 	db	110	;'n'
   535  00FFC7  64                 	db	100	;'d'
   536  00FFC8  00                 	db	0
   537  00FFC9  6D                 	db	109	;'m'
   538  00FFCA  69                 	db	105	;'i'
   539  00FFCB  6E                 	db	110	;'n'
   540  00FFCC  75                 	db	117	;'u'
   541  00FFCD  74                 	db	116	;'t'
   542  00FFCE  65                 	db	101	;'e'
   543  00FFCF  00                 	db	0
   544  00FFD0                     STR_32:
   545  00FFD0  6D                 	db	109	;'m'
   546  00FFD1  6F                 	db	111	;'o'
   547  00FFD2  6E                 	db	110	;'n'
   548  00FFD3  74                 	db	116	;'t'
   549  00FFD4  68                 	db	104	;'h'
   550  00FFD5  00                 	db	0
   551  00FFD6  79                 	db	121	;'y'
   552  00FFD7  65                 	db	101	;'e'
   553  00FFD8  61                 	db	97	;'a'
   554  00FFD9  72                 	db	114	;'r'
   555  00FFDA  00                 	db	0
   556  00FFDB  68                 	db	104	;'h'
   557  00FFDC  6F                 	db	111	;'o'
   558  00FFDD  75                 	db	117	;'u'
   559  00FFDE  72                 	db	114	;'r'
   560  00FFDF  00                 	db	0
   561  00FFE0                     STR_1:
   562  00FFE0  25                 	db	37
   563  00FFE1  30                 	db	48	;'0'
   564  00FFE2  32                 	db	50	;'2'
   565  00FFE3  64                 	db	100	;'d'
   566  00FFE4  00                 	db	0
   567  00FFE5                     STR_19:
   568  00FFE5  08                 	db	8
   569  00FFE6  20                 	db	32
   570  00FFE7  08                 	db	8
   571  00FFE8  00                 	db	0
   572  00FFE9                     STR_34:
   573  00FFE9  64                 	db	100	;'d'
   574  00FFEA  61                 	db	97	;'a'
   575  00FFEB  79                 	db	121	;'y'
   576  00FFEC  00                 	db	0
   577  00FFED                     STR_27:
   578  00FFED  61                 	db	97	;'a'
   579  00FFEE  74                 	db	116	;'t'
   580  00FFEF  00                 	db	0
   581  00FFF0  4D                 	db	77	;'M'
   582  00FFF1  00                 	db	0
   583  00FFF2  6D                 	db	109	;'m'
   584  00FFF3  00                 	db	0
   585  00FFF4  73                 	db	115	;'s'
   586  00FFF5  00                 	db	0
   587  00FFF6  28                 	db	40
   588  00FFF7  00                 	db	0
   589  00FFF8                     STR_9:
   590  00FFF8  2D                 	db	45
   591  00FFF9  00                 	db	0
   592  00FFFA                     STR_4:
   593  00FFFA  2F                 	db	47
   594  00FFFB  00                 	db	0
   595  00FFFC                     STR_7:
   596  00FFFC  3A                 	db	58	;':'
   597  00FFFD  00                 	db	0
   598  0000                     
   599                           ; #config settings
   600  00FFFE  00                 	db	0	; dummy byte at the end
   601  0000                     
   602                           	psect	cinit
   603  012E50                     __pcinit:
   604                           	opt stack 0
   605  012E50                     start_initialization:
   606                           	opt stack 0
   607  012E50                     __initialization:
   608                           	opt stack 0
   609                           
   610                           ; Clear objects allocated to BIGRAMl (2000 bytes)
   611  012E50  EE04  F0C8         	lfsr	0,__pbssBIGRAMl
   612  012E54  EE17 F0D0          	lfsr	1,2000
   613  012E58                     clear_0:
   614  012E58  6AEE               	clrf	postinc0,c
   615  012E5A  50E5               	movf	postdec1,w,c
   616  012E5C  50E1               	movf	fsr1l,w,c
   617  012E5E  E1FC               	bnz	clear_0
   618  012E60  50E2               	movf	fsr1h,w,c
   619  012E62  E1FA               	bnz	clear_0
   620                           
   621                           ; Clear objects allocated to BANK4 (200 bytes)
   622  012E64  EE04  F000         	lfsr	0,__pbssBANK4
   623  012E68  0EC8               	movlw	200
   624  012E6A                     clear_1:
   625  012E6A  6AEE               	clrf	postinc0,c
   626  012E6C  06E8               	decf	wreg,f,c
   627  012E6E  E1FD               	bnz	clear_1
   628                           
   629                           ; Clear objects allocated to BANK3 (100 bytes)
   630  012E70  EE03  F000         	lfsr	0,__pbssBANK3
   631  012E74  0E64               	movlw	100
   632  012E76                     clear_2:
   633  012E76  6AEE               	clrf	postinc0,c
   634  012E78  06E8               	decf	wreg,f,c
   635  012E7A  E1FD               	bnz	clear_2
   636                           
   637                           ; Clear objects allocated to BANK2 (164 bytes)
   638  012E7C  EE02  F000         	lfsr	0,__pbssBANK2
   639  012E80  0EA4               	movlw	164
   640  012E82                     clear_3:
   641  012E82  6AEE               	clrf	postinc0,c
   642  012E84  06E8               	decf	wreg,f,c
   643  012E86  E1FD               	bnz	clear_3
   644                           
   645                           ; Clear objects allocated to BANK1 (245 bytes)
   646  012E88  EE01  F000         	lfsr	0,__pbssBANK1
   647  012E8C  0EF5               	movlw	245
   648  012E8E                     clear_4:
   649  012E8E  6AEE               	clrf	postinc0,c
   650  012E90  06E8               	decf	wreg,f,c
   651  012E92  E1FD               	bnz	clear_4
   652                           
   653                           ; Clear objects allocated to BANK0 (57 bytes)
   654  012E94  EE00  F09E         	lfsr	0,__pbssBANK0
   655  012E98  0E39               	movlw	57
   656  012E9A                     clear_5:
   657  012E9A  6AEE               	clrf	postinc0,c
   658  012E9C  06E8               	decf	wreg,f,c
   659  012E9E  E1FD               	bnz	clear_5
   660                           
   661                           ; Clear objects allocated to COMRAM (45 bytes)
   662  012EA0  EE00  F001         	lfsr	0,__pbssCOMRAM
   663  012EA4  0E2D               	movlw	45
   664  012EA6                     clear_6:
   665  012EA6  6AEE               	clrf	postinc0,c
   666  012EA8  06E8               	decf	wreg,f,c
   667  012EAA  E1FD               	bnz	clear_6
   668                           
   669                           ; Initialize objects allocated to BANK0 (5 bytes)
   670                           ; load TBLPTR registers with __pidataBANK0
   671  012EAC  0E18               	movlw	low __pidataBANK0
   672  012EAE  6EF6               	movwf	tblptrl,c
   673  012EB0  0E39               	movlw	high __pidataBANK0
   674  012EB2  6EF7               	movwf	tblptrh,c
   675  012EB4  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   676  012EB6  6EF8               	movwf	tblptru,c
   677  012EB8  EE00  F0D7         	lfsr	0,__pdataBANK0
   678  012EBC  EE10 F005          	lfsr	1,5
   679  012EC0                     copy_data0:
   680  012EC0  0009               	tblrd		*+
   681  012EC2  CFF5 FFEE          	movff	tablat,postinc0
   682  012EC6  50E5               	movf	postdec1,w,c
   683  012EC8  50E1               	movf	fsr1l,w,c
   684  012ECA  E1FA               	bnz	copy_data0
   685  012ECC                     end_of_initialization:
   686                           	opt stack 0
   687  012ECC                     __end_of__initialization:
   688                           	opt stack 0
   689  012ECC  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   690  012ECE  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   691  012ED0  0100               	movlb	0
   692  012ED2  EFBB  F086         	goto	_main	;jump to C main() function
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           postinc0	equ	0xFEE
   698                           wreg	equ	0xFE8
   699                           postdec1	equ	0xFE5
   700                           fsr1h	equ	0xFE2
   701                           fsr1l	equ	0xFE1
   702                           
   703                           	psect	bssCOMRAM
   704  000001                     __pbssCOMRAM:
   705                           	opt stack 0
   706  000001                     _outPipes:
   707                           	opt stack 0
   708  000001                     	ds	9
   709  00000A                     _inPipes:
   710                           	opt stack 0
   711  00000A                     	ds	6
   712  000010                     _pBDTEntryIn:
   713                           	opt stack 0
   714  000010                     	ds	6
   715  000016                     _ep_data_in:
   716                           	opt stack 0
   717  000016                     	ds	3
   718  000019                     _pBDTEntryEP0OutCurrent:
   719                           	opt stack 0
   720  000019                     	ds	2
   721  00001B                     _pBDTEntryEP0OutNext:
   722                           	opt stack 0
   723  00001B                     	ds	2
   724  00001D                     ST7032_task@st7032_state:
   725                           	opt stack 0
   726  00001D                     	ds	1
   727  00001E                     _BothEP0OutUOWNsSet:
   728                           	opt stack 0
   729  00001E                     	ds	1
   730  00001F                     _I2C_sent_flag:
   731                           	opt stack 0
   732  00001F                     	ds	1
   733  000020                     _RemoteWakeup:
   734                           	opt stack 0
   735  000020                     	ds	1
   736  000021                     _USBDeferINDataStagePackets:
   737                           	opt stack 0
   738  000021                     	ds	1
   739  000022                     _USBDeferOUTDataStagePackets:
   740                           	opt stack 0
   741  000022                     	ds	1
   742  000023                     _USBDeferStatusStagePacket:
   743                           	opt stack 0
   744  000023                     	ds	1
   745  000024                     _USBDeviceState:
   746                           	opt stack 0
   747  000024                     	ds	1
   748  000025                     _USBStatusStageEnabledFlag1:
   749                           	opt stack 0
   750  000025                     	ds	1
   751  000026                     _USBStatusStageEnabledFlag2:
   752                           	opt stack 0
   753  000026                     	ds	1
   754  000027                     _USBStatusStageTimeoutCounter:
   755                           	opt stack 0
   756  000027                     	ds	1
   757  000028                     _cdc_trf_state:
   758                           	opt stack 0
   759  000028                     	ds	1
   760  000029                     _controlTransferState:
   761                           	opt stack 0
   762  000029                     	ds	1
   763  00002A                     _endpoint_number:
   764                           	opt stack 0
   765  00002A                     	ds	1
   766  00002B                     _shortPacketStatus:
   767                           	opt stack 0
   768  00002B                     	ds	1
   769  00002C                     _USBActiveConfiguration:
   770                           	opt stack 0
   771  00002C                     	ds	1
   772  00002D                     _USTATcopy:
   773                           	opt stack 0
   774  00002D                     	ds	1
   775                           tblptru	equ	0xFF8
   776                           tblptrh	equ	0xFF7
   777                           tblptrl	equ	0xFF6
   778                           tablat	equ	0xFF5
   779                           postinc0	equ	0xFEE
   780                           wreg	equ	0xFE8
   781                           postdec1	equ	0xFE5
   782                           fsr1h	equ	0xFE2
   783                           fsr1l	equ	0xFE1
   784                           
   785                           	psect	bssBANK0
   786  00009E                     __pbssBANK0:
   787                           	opt stack 0
   788  00009E                     _pBDTEntryOut:
   789                           	opt stack 0
   790  00009E                     	ds	6
   791  0000A4                     _ep_data_out:
   792                           	opt stack 0
   793  0000A4                     	ds	3
   794  0000A7                     _pCDCDst:
   795                           	opt stack 0
   796  0000A7                     	ds	3
   797  0000AA                     _pCDCSrc:
   798                           	opt stack 0
   799  0000AA                     	ds	3
   800  0000AD                     ST7032_task@wait:
   801                           	opt stack 0
   802  0000AD                     	ds	2
   803  0000AF                     USBCBSendResume@delay_count:
   804                           	opt stack 0
   805  0000AF                     	ds	2
   806  0000B1                     _CDCDataInHandle:
   807                           	opt stack 0
   808  0000B1                     	ds	2
   809  0000B3                     _CDCDataOutHandle:
   810                           	opt stack 0
   811  0000B3                     	ds	2
   812  0000B5                     _pDst:
   813                           	opt stack 0
   814  0000B5                     	ds	2
   815  0000B7                     millis_timer@cnt:
   816                           	opt stack 0
   817  0000B7                     	ds	2
   818  0000B9                     RTCC_task@prev_halfsec:
   819                           	opt stack 0
   820  0000B9                     	ds	1
   821  0000BA                     _I2C_busy:
   822                           	opt stack 0
   823  0000BA                     	ds	1
   824  0000BB                     _I2C_cfct_flag:
   825                           	opt stack 0
   826  0000BB                     	ds	1
   827  0000BC                     _USBBusIsSuspended:
   828                           	opt stack 0
   829  0000BC                     	ds	1
   830  0000BD                     _cdc_mem_type:
   831                           	opt stack 0
   832  0000BD                     	ds	1
   833  0000BE                     _cdc_rx_len:
   834                           	opt stack 0
   835  0000BE                     	ds	1
   836  0000BF                     _cdc_tx_len:
   837                           	opt stack 0
   838  0000BF                     	ds	1
   839  0000C0                     _control_signal_bitmap:
   840                           	opt stack 0
   841  0000C0                     	ds	1
   842  0000C1                     _st7032_state:
   843                           	opt stack 0
   844  0000C1                     	ds	1
   845  0000C2                     _time_change_flag:
   846                           	opt stack 0
   847  0000C2                     	ds	1
   848  0000C3                     epoch_to_caltime@year_cache:
   849                           	opt stack 0
   850  0000C3                     	ds	1
   851  0000C4                     terminal_task@command_init:
   852                           	opt stack 0
   853  0000C4                     	ds	1
   854  0000C5                     _lcd_tx:
   855                           	opt stack 0
   856  0000C5                     	ds	8
   857  0000CD                     terminal_task@command:
   858                           	opt stack 0
   859  0000CD                     	ds	8
   860  0000D5                     _USBAlternateInterface:
   861                           	opt stack 0
   862  0000D5                     	ds	2
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           postinc0	equ	0xFEE
   868                           wreg	equ	0xFE8
   869                           postdec1	equ	0xFE5
   870                           fsr1h	equ	0xFE2
   871                           fsr1l	equ	0xFE1
   872                           
   873                           	psect	dataBANK0
   874  0000D7                     __pdataBANK0:
   875                           	opt stack 0
   876  0000D7                     I2C_LCD_SetCursor@F8685:
   877                           	opt stack 0
   878  0000D7                     	ds	2
   879  0000D9                     ST7032_cursor@F8640:
   880                           	opt stack 0
   881  0000D9                     	ds	2
   882  0000DB                     epoch_to_caltime@month_cache:
   883                           	opt stack 0
   884  0000DB                     	ds	1
   885                           tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           postinc0	equ	0xFEE
   890                           wreg	equ	0xFE8
   891                           postdec1	equ	0xFE5
   892                           fsr1h	equ	0xFE2
   893                           fsr1l	equ	0xFE1
   894                           
   895                           	psect	bssBANK1
   896  000100                     __pbssBANK1:
   897                           	opt stack 0
   898  000100                     _cdc_notice:
   899                           	opt stack 0
   900  000100                     	ds	10
   901  00010A                     _BaudRateGen:
   902                           	opt stack 0
   903  00010A                     	ds	4
   904  00010E                     _ms:
   905                           	opt stack 0
   906  00010E                     	ds	4
   907  000112                     epoch_to_caltime@day_cache:
   908                           	opt stack 0
   909  000112                     	ds	2
   910  000114                     _cdc_data_rx:
   911                           	opt stack 0
   912  000114                     	ds	64
   913  000154                     terminal_task@op0:
   914                           	opt stack 0
   915  000154                     	ds	25
   916  00016D                     terminal_task@op1:
   917                           	opt stack 0
   918  00016D                     	ds	25
   919  000186                     terminal_task@op2:
   920                           	opt stack 0
   921  000186                     	ds	25
   922  00019F                     terminal_task@op3:
   923                           	opt stack 0
   924  00019F                     	ds	25
   925  0001B8                     _now:
   926                           	opt stack 0
   927  0001B8                     	ds	14
   928  0001C6                     _dummy_encapsulated_cmd_response:
   929                           	opt stack 0
   930  0001C6                     	ds	8
   931  0001CE                     _uart_rx:
   932                           	opt stack 0
   933  0001CE                     	ds	8
   934  0001D6                     _uart_tx:
   935                           	opt stack 0
   936  0001D6                     	ds	8
   937  0001DE                     _usb_rx:
   938                           	opt stack 0
   939  0001DE                     	ds	8
   940  0001E6                     _usb_tx:
   941                           	opt stack 0
   942  0001E6                     	ds	8
   943  0001EE                     _line_coding:
   944                           	opt stack 0
   945  0001EE                     	ds	7
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           postdec1	equ	0xFE5
   953                           fsr1h	equ	0xFE2
   954                           fsr1l	equ	0xFE1
   955                           
   956                           	psect	bssBANK2
   957  000200                     __pbssBANK2:
   958                           	opt stack 0
   959  000200                     main_init@usbrx:
   960                           	opt stack 0
   961  000200                     	ds	100
   962  000264                     _cdc_data_tx:
   963                           	opt stack 0
   964  000264                     	ds	64
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           postdec1	equ	0xFE5
   972                           fsr1h	equ	0xFE2
   973                           fsr1l	equ	0xFE1
   974                           
   975                           	psect	bssBANK3
   976  000300                     __pbssBANK3:
   977                           	opt stack 0
   978  000300                     main_init@uartrx:
   979                           	opt stack 0
   980  000300                     	ds	100
   981                           tblptru	equ	0xFF8
   982                           tblptrh	equ	0xFF7
   983                           tblptrl	equ	0xFF6
   984                           tablat	equ	0xFF5
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           postdec1	equ	0xFE5
   988                           fsr1h	equ	0xFE2
   989                           fsr1l	equ	0xFE1
   990                           
   991                           	psect	bssBANK4
   992  000400                     __pbssBANK4:
   993                           	opt stack 0
   994  000400                     ST7032_init@buf:
   995                           	opt stack 0
   996  000400                     	ds	200
   997                           tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           postinc0	equ	0xFEE
  1002                           wreg	equ	0xFE8
  1003                           postdec1	equ	0xFE5
  1004                           fsr1h	equ	0xFE2
  1005                           fsr1l	equ	0xFE1
  1006                           
  1007                           	psect	bssBIGRAMl
  1008  0004C8                     __pbssBIGRAMl:
  1009                           	opt stack 0
  1010  0004C8                     main_init@uarttx:
  1011                           	opt stack 0
  1012  0004C8                     	ds	1000
  1013  0008B0                     main_init@usbtx:
  1014                           	opt stack 0
  1015  0008B0                     	ds	1000
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           postdec1	equ	0xFE5
  1023                           fsr1h	equ	0xFE2
  1024                           fsr1l	equ	0xFE1
  1025                           
  1026                           	psect	cstackBANK2
  1027  0002A4                     __pcstackBANK2:
  1028                           	opt stack 0
  1029  0002A4                     main@s:
  1030                           	opt stack 0
  1031                           
  1032                           ; 40 bytes @ 0x0
  1033  0002A4                     	ds	40
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           postinc0	equ	0xFEE
  1039                           wreg	equ	0xFE8
  1040                           postdec1	equ	0xFE5
  1041                           fsr1h	equ	0xFE2
  1042                           fsr1l	equ	0xFE1
  1043                           
  1044                           	psect	cstackBANK0
  1045  000060                     __pcstackBANK0:
  1046                           	opt stack 0
  1047  000060                     ??_isdigit:
  1048  000060                     ??_I2C_IdleCheck:
  1049  000060                     ??_timer0_init:
  1050  000060                     ??_timer3_init:
  1051  000060                     ??_x_to_d:
  1052  000060                     ?_USBTransferOnePacket:
  1053                           	opt stack 0
  1054  000060                     ?_ringbuf_num:
  1055                           	opt stack 0
  1056  000060                     ?___wmul:
  1057                           	opt stack 0
  1058  000060                     ?___awdiv:
  1059                           	opt stack 0
  1060  000060                     ?___awmod:
  1061                           	opt stack 0
  1062  000060                     ?___lwdiv:
  1063                           	opt stack 0
  1064  000060                     ?___lldiv:
  1065                           	opt stack 0
  1066  000060                     USBTransferOnePacket@dir:
  1067                           	opt stack 0
  1068  000060                     timer1_init@clock_select:
  1069                           	opt stack 0
  1070  000060                     _is_usb_available$5114:
  1071                           	opt stack 0
  1072  000060                     putUSBUSART@data:
  1073                           	opt stack 0
  1074  000060                     ringbuf_init@rb:
  1075                           	opt stack 0
  1076  000060                     ringbuf_num@rb:
  1077                           	opt stack 0
  1078  000060                     ___wmul@multiplier:
  1079                           	opt stack 0
  1080  000060                     ___awdiv@dividend:
  1081                           	opt stack 0
  1082  000060                     ___awmod@dividend:
  1083                           	opt stack 0
  1084  000060                     ___lwdiv@dividend:
  1085                           	opt stack 0
  1086  000060                     memset@p1:
  1087                           	opt stack 0
  1088  000060                     strcat@to:
  1089                           	opt stack 0
  1090  000060                     strcpy@to:
  1091                           	opt stack 0
  1092  000060                     ___lldiv@dividend:
  1093                           	opt stack 0
  1094                           
  1095                           ; 4 bytes @ 0x0
  1096  000060                     	ds	1
  1097  000061                     ??_timer1_init:
  1098  000061                     I2C_IdleCheck@mask:
  1099                           	opt stack 0
  1100  000061                     timer0_init@prescaler:
  1101                           	opt stack 0
  1102  000061                     timer3_init@prescaler:
  1103                           	opt stack 0
  1104  000061                     x_to_d@hex:
  1105                           	opt stack 0
  1106  000061                     _isdigit$5796:
  1107                           	opt stack 0
  1108  000061                     USBTransferOnePacket@data:
  1109                           	opt stack 0
  1110                           
  1111                           ; 2 bytes @ 0x1
  1112  000061                     	ds	1
  1113  000062                     ??_ringbuf_num:
  1114  000062                     putUSBUSART@length:
  1115                           	opt stack 0
  1116  000062                     I2C_Start@rw:
  1117                           	opt stack 0
  1118  000062                     I2C_Send@data:
  1119                           	opt stack 0
  1120  000062                     timer1_init@prescaler:
  1121                           	opt stack 0
  1122  000062                     isdigit@c:
  1123                           	opt stack 0
  1124  000062                     ringbuf_init@internal_buf:
  1125                           	opt stack 0
  1126  000062                     RTCC_to_caltime@tm:
  1127                           	opt stack 0
  1128  000062                     ___wmul@multiplicand:
  1129                           	opt stack 0
  1130  000062                     ___awdiv@divisor:
  1131                           	opt stack 0
  1132  000062                     ___awmod@divisor:
  1133                           	opt stack 0
  1134  000062                     ___lwdiv@divisor:
  1135                           	opt stack 0
  1136  000062                     memset@c:
  1137                           	opt stack 0
  1138  000062                     strcat@from:
  1139                           	opt stack 0
  1140  000062                     strcpy@from:
  1141                           	opt stack 0
  1142                           
  1143                           ; 2 bytes @ 0x2
  1144  000062                     	ds	1
  1145  000063                     USBTransferOnePacket@len:
  1146                           	opt stack 0
  1147  000063                     I2C_Start@adrs:
  1148                           	opt stack 0
  1149                           
  1150                           ; 1 bytes @ 0x3
  1151  000063                     	ds	1
  1152  000064                     USBTransferOnePacket@ep:
  1153                           	opt stack 0
  1154  000064                     RTCC_to_caltime@dumy:
  1155                           	opt stack 0
  1156  000064                     I2C_LCD_Command@c:
  1157                           	opt stack 0
  1158  000064                     ___awdiv@counter:
  1159                           	opt stack 0
  1160  000064                     ___awmod@counter:
  1161                           	opt stack 0
  1162  000064                     ___lwdiv@counter:
  1163                           	opt stack 0
  1164  000064                     ringbuf_init@bufsize:
  1165                           	opt stack 0
  1166  000064                     I2C_LCD_Puts@s:
  1167                           	opt stack 0
  1168  000064                     ___wmul@product:
  1169                           	opt stack 0
  1170  000064                     memset@n:
  1171                           	opt stack 0
  1172  000064                     strcat@cp:
  1173                           	opt stack 0
  1174  000064                     strcpy@cp:
  1175                           	opt stack 0
  1176  000064                     ___lldiv@divisor:
  1177                           	opt stack 0
  1178                           
  1179                           ; 4 bytes @ 0x4
  1180  000064                     	ds	1
  1181  000065                     I2C_LCD_Command@ans:
  1182                           	opt stack 0
  1183  000065                     ___awdiv@sign:
  1184                           	opt stack 0
  1185  000065                     ___awmod@sign:
  1186                           	opt stack 0
  1187  000065                     USBTransferOnePacket@handle:
  1188                           	opt stack 0
  1189  000065                     ___lwdiv@quotient:
  1190                           	opt stack 0
  1191                           
  1192                           ; 2 bytes @ 0x5
  1193  000065                     	ds	1
  1194  000066                     ??_I2C_LCD_Clear:
  1195  000066                     ??_I2C_LCD_Puts:
  1196  000066                     month_length@month:
  1197                           	opt stack 0
  1198  000066                     I2C_LCD_SetCursor@row:
  1199                           	opt stack 0
  1200  000066                     ___awdiv@quotient:
  1201                           	opt stack 0
  1202  000066                     memset@p:
  1203                           	opt stack 0
  1204                           
  1205                           ; 2 bytes @ 0x6
  1206  000066                     	ds	1
  1207  000067                     ??_CDCTxService:
  1208  000067                     ??_month_length:
  1209  000067                     ??_I2C_LCD_init:
  1210  000067                     ?___lwmod:
  1211                           	opt stack 0
  1212  000067                     getsUSBUSART@buffer:
  1213                           	opt stack 0
  1214  000067                     I2C_LCD_SetCursor@row_offsets:
  1215                           	opt stack 0
  1216  000067                     I2C_LCD_Puts@ans:
  1217                           	opt stack 0
  1218  000067                     ___lwmod@dividend:
  1219                           	opt stack 0
  1220                           
  1221                           ; 2 bytes @ 0x7
  1222  000067                     	ds	1
  1223  000068                     USBDeviceInit@i:
  1224                           	opt stack 0
  1225  000068                     d_to_x@dec:
  1226                           	opt stack 0
  1227  000068                     I2C_LCD_init@i:
  1228                           	opt stack 0
  1229  000068                     _CDCTxService$2005:
  1230                           	opt stack 0
  1231  000068                     ringbuf_pop@rb:
  1232                           	opt stack 0
  1233  000068                     ___lldiv@quotient:
  1234                           	opt stack 0
  1235                           
  1236                           ; 4 bytes @ 0x8
  1237  000068                     	ds	1
  1238  000069                     getsUSBUSART@len:
  1239                           	opt stack 0
  1240  000069                     I2C_LCD_SetCursor@col:
  1241                           	opt stack 0
  1242  000069                     I2C_LCD_init@i_4452:
  1243                           	opt stack 0
  1244  000069                     caltime_to_RTCC@tm:
  1245                           	opt stack 0
  1246  000069                     ___lwmod@divisor:
  1247                           	opt stack 0
  1248                           
  1249                           ; 2 bytes @ 0x9
  1250  000069                     	ds	1
  1251  00006A                     ??_getsUSBUSART:
  1252  00006A                     ??_ringbuf_pop:
  1253  00006A                     CDCTxService@i:
  1254                           	opt stack 0
  1255                           
  1256                           ; 1 bytes @ 0xA
  1257  00006A                     	ds	1
  1258  00006B                     CDCTxService@byte_to_send:
  1259                           	opt stack 0
  1260  00006B                     month_length@year:
  1261                           	opt stack 0
  1262  00006B                     ___lwmod@counter:
  1263                           	opt stack 0
  1264  00006B                     _getsUSBUSART$1957:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0xB
  1268  00006B                     	ds	1
  1269  00006C                     ?_sprintf:
  1270                           	opt stack 0
  1271  00006C                     ___lldiv@counter:
  1272                           	opt stack 0
  1273  00006C                     put_string_usb@s:
  1274                           	opt stack 0
  1275  00006C                     sprintf@sp:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0xC
  1279  00006C                     	ds	1
  1280  00006D                     ?_get_string_usb:
  1281                           	opt stack 0
  1282  00006D                     ?___lmul:
  1283                           	opt stack 0
  1284  00006D                     get_string_usb@s:
  1285                           	opt stack 0
  1286  00006D                     ___lmul@multiplier:
  1287                           	opt stack 0
  1288                           
  1289                           ; 4 bytes @ 0xD
  1290  00006D                     	ds	1
  1291  00006E                     ringbuf_pop@ret:
  1292                           	opt stack 0
  1293  00006E                     put_string_usb@len:
  1294                           	opt stack 0
  1295  00006E                     sprintf@f:
  1296                           	opt stack 0
  1297                           
  1298                           ; 2 bytes @ 0xE
  1299  00006E                     	ds	1
  1300  00006F                     ringbuf_put@rb:
  1301                           	opt stack 0
  1302  00006F                     get_string_usb@len:
  1303                           	opt stack 0
  1304                           
  1305                           ; 2 bytes @ 0xF
  1306  00006F                     	ds	1
  1307  000070                     
  1308                           ; 0 bytes @ 0x10
  1309  000070                     	ds	1
  1310  000071                     ??_get_string_usb:
  1311  000071                     ringbuf_put@asciicode:
  1312                           	opt stack 0
  1313  000071                     ___lmul@multiplicand:
  1314                           	opt stack 0
  1315                           
  1316                           ; 4 bytes @ 0x11
  1317  000071                     	ds	1
  1318  000072                     ??_ringbuf_put:
  1319  000072                     get_string_usb@rx_len:
  1320                           	opt stack 0
  1321                           
  1322                           ; 2 bytes @ 0x12
  1323  000072                     	ds	3
  1324  000075                     ___lmul@product:
  1325                           	opt stack 0
  1326                           
  1327                           ; 4 bytes @ 0x15
  1328  000075                     	ds	1
  1329  000076                     USB_task@rx_len:
  1330                           	opt stack 0
  1331                           
  1332                           ; 2 bytes @ 0x16
  1333  000076                     	ds	2
  1334  000078                     USB_task@data:
  1335                           	opt stack 0
  1336                           
  1337                           ; 1 bytes @ 0x18
  1338  000078                     	ds	1
  1339  000079                     ?_get_quot_rem:
  1340                           	opt stack 0
  1341  000079                     get_quot_rem@quot:
  1342                           	opt stack 0
  1343  000079                     caltime_to_epoch@tm:
  1344                           	opt stack 0
  1345                           
  1346                           ; 2 bytes @ 0x19
  1347  000079                     	ds	2
  1348  00007B                     ??_caltime_to_epoch:
  1349  00007B                     get_quot_rem@div:
  1350                           	opt stack 0
  1351                           
  1352                           ; 1 bytes @ 0x1B
  1353  00007B                     	ds	2
  1354  00007D                     get_quot_rem@num:
  1355                           	opt stack 0
  1356                           
  1357                           ; 4 bytes @ 0x1D
  1358  00007D                     	ds	1
  1359  00007E                     ??_sprintf:
  1360                           
  1361                           ; 0 bytes @ 0x1E
  1362  00007E                     	ds	1
  1363  00007F                     caltime_to_epoch@year:
  1364                           	opt stack 0
  1365                           
  1366                           ; 1 bytes @ 0x1F
  1367  00007F                     	ds	1
  1368  000080                     caltime_to_epoch@month_3637:
  1369                           	opt stack 0
  1370                           
  1371                           ; 1 bytes @ 0x20
  1372  000080                     	ds	1
  1373  000081                     epoch_to_caltime@tm:
  1374                           	opt stack 0
  1375  000081                     caltime_to_epoch@epoch:
  1376                           	opt stack 0
  1377                           
  1378                           ; 4 bytes @ 0x21
  1379  000081                     	ds	1
  1380  000082                     sprintf@prec:
  1381                           	opt stack 0
  1382                           
  1383                           ; 1 bytes @ 0x22
  1384  000082                     	ds	1
  1385  000083                     ??_epoch_to_caltime:
  1386  000083                     sprintf@ap:
  1387                           	opt stack 0
  1388                           
  1389                           ; 2 bytes @ 0x23
  1390  000083                     	ds	2
  1391  000085                     caltime_to_epoch@month:
  1392                           	opt stack 0
  1393  000085                     epoch_to_caltime@day_since_epoch:
  1394                           	opt stack 0
  1395  000085                     sprintf@cp:
  1396                           	opt stack 0
  1397                           
  1398                           ; 2 bytes @ 0x25
  1399  000085                     	ds	1
  1400  000086                     RTCC_from_RTCC@tm:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x26
  1404  000086                     	ds	1
  1405  000087                     epoch_to_caltime@day:
  1406                           	opt stack 0
  1407  000087                     sprintf@val:
  1408                           	opt stack 0
  1409                           
  1410                           ; 2 bytes @ 0x27
  1411  000087                     	ds	1
  1412  000088                     
  1413                           ; 0 bytes @ 0x28
  1414  000088                     	ds	1
  1415  000089                     epoch_to_caltime@year:
  1416                           	opt stack 0
  1417  000089                     sprintf@len:
  1418                           	opt stack 0
  1419                           
  1420                           ; 2 bytes @ 0x29
  1421  000089                     	ds	1
  1422  00008A                     epoch_to_caltime@month:
  1423                           	opt stack 0
  1424                           
  1425                           ; 1 bytes @ 0x2A
  1426  00008A                     	ds	1
  1427  00008B                     sprintf@flag:
  1428                           	opt stack 0
  1429  00008B                     epoch_to_caltime@num:
  1430                           	opt stack 0
  1431                           
  1432                           ; 4 bytes @ 0x2B
  1433  00008B                     	ds	1
  1434  00008C                     sprintf@c:
  1435                           	opt stack 0
  1436                           
  1437                           ; 1 bytes @ 0x2C
  1438  00008C                     	ds	1
  1439  00008D                     sprintf@width:
  1440                           	opt stack 0
  1441                           
  1442                           ; 2 bytes @ 0x2D
  1443  00008D                     	ds	2
  1444  00008F                     RTCC_from_epoch@tm:
  1445                           	opt stack 0
  1446  00008F                     display_dec@str:
  1447                           	opt stack 0
  1448                           
  1449                           ; 2 bytes @ 0x2F
  1450  00008F                     	ds	2
  1451  000091                     display_dec@dec:
  1452                           	opt stack 0
  1453                           
  1454                           ; 1 bytes @ 0x31
  1455  000091                     	ds	1
  1456  000092                     display_dec@edit:
  1457                           	opt stack 0
  1458                           
  1459                           ; 1 bytes @ 0x32
  1460  000092                     	ds	1
  1461  000093                     display_dec@s:
  1462                           	opt stack 0
  1463                           
  1464                           ; 4 bytes @ 0x33
  1465  000093                     	ds	4
  1466  000097                     display_time_0802@tm:
  1467                           	opt stack 0
  1468                           
  1469                           ; 2 bytes @ 0x37
  1470  000097                     	ds	2
  1471  000099                     display_time_0802@line0:
  1472                           	opt stack 0
  1473                           
  1474                           ; 2 bytes @ 0x39
  1475  000099                     	ds	2
  1476  00009B                     display_time_0802@line1:
  1477                           	opt stack 0
  1478                           
  1479                           ; 2 bytes @ 0x3B
  1480  00009B                     	ds	2
  1481  00009D                     ??_main:
  1482                           
  1483                           ; 0 bytes @ 0x3D
  1484  00009D                     	ds	1
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           postdec1	equ	0xFE5
  1492                           fsr1h	equ	0xFE2
  1493                           fsr1l	equ	0xFE1
  1494                           
  1495                           	psect	cstackCOMRAM
  1496  00002E                     __pcstackCOMRAM:
  1497                           	opt stack 0
  1498  00002E                     ??_USBStdGetDscHandler:
  1499  00002E                     ??_USBStdGetStatusHandler:
  1500  00002E                     ?i2_USBTransferOnePacket:
  1501                           	opt stack 0
  1502  00002E                     ?i2_ringbuf_num:
  1503                           	opt stack 0
  1504  00002E                     USBConfigureEndpoint@direction:
  1505                           	opt stack 0
  1506  00002E                     USBCtrlTrfTxService@byteToSend:
  1507                           	opt stack 0
  1508  00002E                     USBCtrlTrfRxService@i:
  1509                           	opt stack 0
  1510  00002E                     i2USBTransferOnePacket@dir:
  1511                           	opt stack 0
  1512  00002E                     i2ringbuf_num@rb:
  1513                           	opt stack 0
  1514  00002E                     i2memset@p1:
  1515                           	opt stack 0
  1516                           
  1517                           ; 2 bytes @ 0x0
  1518  00002E                     	ds	1
  1519  00002F                     ??_USBConfigureEndpoint:
  1520  00002F                     USBCtrlTrfRxService@byteToRead:
  1521                           	opt stack 0
  1522  00002F                     USBCtrlTrfInHandler@lastDTS:
  1523                           	opt stack 0
  1524  00002F                     USBStdGetStatusHandler@p:
  1525                           	opt stack 0
  1526  00002F                     i2USBTransferOnePacket@data:
  1527                           	opt stack 0
  1528                           
  1529                           ; 2 bytes @ 0x1
  1530  00002F                     	ds	1
  1531  000030                     ??i2_ringbuf_num:
  1532  000030                     i2memset@c:
  1533                           	opt stack 0
  1534                           
  1535                           ; 2 bytes @ 0x2
  1536  000030                     	ds	1
  1537  000031                     i2USBTransferOnePacket@len:
  1538                           	opt stack 0
  1539                           
  1540                           ; 1 bytes @ 0x3
  1541  000031                     	ds	1
  1542  000032                     i2USBTransferOnePacket@ep:
  1543                           	opt stack 0
  1544  000032                     i2memset@n:
  1545                           	opt stack 0
  1546                           
  1547                           ; 2 bytes @ 0x4
  1548  000032                     	ds	1
  1549  000033                     USBConfigureEndpoint@EPNum:
  1550                           	opt stack 0
  1551  000033                     i2USBTransferOnePacket@handle:
  1552                           	opt stack 0
  1553                           
  1554                           ; 2 bytes @ 0x5
  1555  000033                     	ds	1
  1556  000034                     USBConfigureEndpoint@handle:
  1557                           	opt stack 0
  1558  000034                     i2memset@p:
  1559                           	opt stack 0
  1560                           
  1561                           ; 2 bytes @ 0x6
  1562  000034                     	ds	2
  1563  000036                     USBEnableEndpoint@options:
  1564                           	opt stack 0
  1565  000036                     i2USBDeviceInit@i:
  1566                           	opt stack 0
  1567  000036                     i2ringbuf_put@rb:
  1568                           	opt stack 0
  1569  000036                     i2ringbuf_pop@rb:
  1570                           	opt stack 0
  1571                           
  1572                           ; 2 bytes @ 0x8
  1573  000036                     	ds	1
  1574  000037                     USBEnableEndpoint@p:
  1575                           	opt stack 0
  1576                           
  1577                           ; 2 bytes @ 0x9
  1578  000037                     	ds	1
  1579  000038                     ??i2_ringbuf_pop:
  1580  000038                     i2ringbuf_put@asciicode:
  1581                           	opt stack 0
  1582                           
  1583                           ; 1 bytes @ 0xA
  1584  000038                     	ds	1
  1585  000039                     ??i2_ringbuf_put:
  1586  000039                     USBEnableEndpoint@ep:
  1587                           	opt stack 0
  1588                           
  1589                           ; 1 bytes @ 0xB
  1590  000039                     	ds	1
  1591  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1592                           	opt stack 0
  1593                           
  1594                           ; 2 bytes @ 0xC
  1595  00003A                     	ds	2
  1596  00003C                     i2ringbuf_pop@ret:
  1597                           	opt stack 0
  1598  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1599                           	opt stack 0
  1600                           
  1601                           ; 2 bytes @ 0xE
  1602  00003C                     	ds	1
  1603  00003D                     UART_ISR@ascii:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0xF
  1607  00003D                     	ds	1
  1608  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1609                           	opt stack 0
  1610                           
  1611                           ; 2 bytes @ 0x10
  1612  00003E                     	ds	2
  1613  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1614                           
  1615                           ; 0 bytes @ 0x12
  1616  000040                     	ds	2
  1617  000042                     ??_USBStdFeatureReqHandler:
  1618  000042                     USBStdSetCfgHandler@i:
  1619                           	opt stack 0
  1620                           
  1621                           ; 1 bytes @ 0x14
  1622  000042                     	ds	1
  1623  000043                     USBStdFeatureReqHandler@pUEP:
  1624                           	opt stack 0
  1625                           
  1626                           ; 2 bytes @ 0x15
  1627  000043                     	ds	2
  1628  000045                     USBStdFeatureReqHandler@current_ep_data:
  1629                           	opt stack 0
  1630                           
  1631                           ; 1 bytes @ 0x17
  1632  000045                     	ds	1
  1633  000046                     USBStdFeatureReqHandler@p:
  1634                           	opt stack 0
  1635                           
  1636                           ; 2 bytes @ 0x18
  1637  000046                     	ds	2
  1638  000048                     ??_USBCtrlEPService:
  1639  000048                     
  1640                           ; 0 bytes @ 0x1A
  1641  000048                     	ds	2
  1642  00004A                     USBCtrlEPService@setup_cnt:
  1643                           	opt stack 0
  1644                           
  1645                           ; 1 bytes @ 0x1C
  1646  00004A                     	ds	1
  1647  00004B                     USBDeviceTasks@i:
  1648                           	opt stack 0
  1649                           
  1650                           ; 1 bytes @ 0x1D
  1651  00004B                     	ds	1
  1652  00004C                     ??_ISR:
  1653                           
  1654                           ; 0 bytes @ 0x1E
  1655  00004C                     	ds	15
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           postdec1	equ	0xFE5
  1663                           fsr1h	equ	0xFE2
  1664                           fsr1l	equ	0xFE1
  1665                           
  1666 ;;
  1667 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1668 ;;
  1669 ;; *************** function _main *****************
  1670 ;; Defined at:
  1671 ;;		line 90 in file "main.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  s              40    0[BANK2 ] unsigned char [20][2]
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  2  1477[None  ] int 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1686 ;;      Locals:         0       0       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1687 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1688 ;;      Totals:         0       1       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1689 ;;Total ram usage:       41 bytes
  1690 ;; Hardware stack levels required when called:   17
  1691 ;; This function calls:
  1692 ;;		_I2C_LCD_Clear
  1693 ;;		_I2C_LCD_Puts
  1694 ;;		_I2C_LCD_SetCursor
  1695 ;;		_RTCC_from_RTCC
  1696 ;;		_RTCC_from_epoch
  1697 ;;		_RTCC_task
  1698 ;;		_UART_task
  1699 ;;		_USB_task
  1700 ;;		_display_time_0802
  1701 ;;		_main_init
  1702 ;;		_ringbuf_num
  1703 ;;		_ringbuf_pop
  1704 ;;		_ringbuf_put
  1705 ;; This function is called by:
  1706 ;;		Startup code after reset
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text0
  1711  010D76                     __ptext0:
  1712                           	opt stack 0
  1713  010D76                     _main:
  1714                           	opt stack 14
  1715                           
  1716                           ;main.c: 91: main_init();
  1717                           
  1718                           ;incstack = 0
  1719  010D76  ECDF  F08C         	call	_main_init	;wreg free
  1720                           
  1721                           ;main.c: 93: RTCC_from_RTCC(&now);
  1722  010D7A  0EB8               	movlw	low _now
  1723  010D7C  0100               	movlb	0	; () banked
  1724  010D7E  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  1725  010D80  0E01               	movlw	high _now
  1726  010D82  0100               	movlb	0	; () banked
  1727  010D84  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  1728  010D86  EC5B  F09C         	call	_RTCC_from_RTCC	;wreg free
  1729                           
  1730                           ;main.c: 94: if (now.DD == 0) {
  1731  010D8A  0101               	movlb	1	; () banked
  1732  010D8C  51C0               	movf	(_now+8)& (0+255),w,b
  1733  010D8E  A4D8               	btfss	status,2,c
  1734  010D90  D011               	goto	l9812
  1735                           
  1736                           ; BSR set to: 1
  1737                           ;main.c: 95: now.epoch = 0;
  1738  010D92  0E00               	movlw	0
  1739  010D94  0101               	movlb	1	; () banked
  1740  010D96  6FB8               	movwf	_now& (0+255),b
  1741  010D98  0E00               	movlw	0
  1742  010D9A  6FB9               	movwf	(_now+1)& (0+255),b
  1743  010D9C  0E00               	movlw	0
  1744  010D9E  6FBA               	movwf	(_now+2)& (0+255),b
  1745  010DA0  0E00               	movlw	0
  1746  010DA2  6FBB               	movwf	(_now+3)& (0+255),b
  1747                           
  1748                           ; BSR set to: 1
  1749                           ;main.c: 96: RTCC_from_epoch(&now);
  1750  010DA4  0EB8               	movlw	low _now
  1751  010DA6  0100               	movlb	0	; () banked
  1752  010DA8  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  1753  010DAA  0E01               	movlw	high _now
  1754  010DAC  0100               	movlb	0	; () banked
  1755  010DAE  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  1756  010DB0  EC41  F09C         	call	_RTCC_from_epoch	;wreg free
  1757  010DB4                     l9812:
  1758                           
  1759                           ;main.c: 97: }
  1760                           ;main.c: 99: I2C_LCD_Clear();
  1761  010DB4  EC4E  F09C         	call	_I2C_LCD_Clear	;wreg free
  1762                           
  1763                           ;main.c: 100: I2C_LCD_SetCursor(0, 0);
  1764  010DB8  0E00               	movlw	0
  1765  010DBA  0100               	movlb	0	; () banked
  1766  010DBC  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1767  010DBE  0E00               	movlw	0
  1768  010DC0  EC69  F09B         	call	_I2C_LCD_SetCursor
  1769                           
  1770                           ;main.c: 101: I2C_LCD_Puts("18F27J53");
  1771  010DC4  0E98               	movlw	low STR_41
  1772  010DC6  0100               	movlb	0	; () banked
  1773  010DC8  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  1774  010DCA  0EFF               	movlw	high STR_41
  1775  010DCC  0100               	movlb	0	; () banked
  1776  010DCE  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1777  010DD0  ECE1  F096         	call	_I2C_LCD_Puts	;wreg free
  1778                           
  1779                           ;main.c: 102: I2C_LCD_SetCursor(0, 1);
  1780  010DD4  0E01               	movlw	1
  1781  010DD6  0100               	movlb	0	; () banked
  1782  010DD8  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1783  010DDA  0E00               	movlw	0
  1784  010DDC  EC69  F09B         	call	_I2C_LCD_SetCursor
  1785                           
  1786                           ;main.c: 103: I2C_LCD_Puts("USB UART");
  1787  010DE0  0EA1               	movlw	low STR_42
  1788  010DE2  0100               	movlb	0	; () banked
  1789  010DE4  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  1790  010DE6  0EFF               	movlw	high STR_42
  1791  010DE8  0100               	movlb	0	; () banked
  1792  010DEA  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1793  010DEC  ECE1  F096         	call	_I2C_LCD_Puts	;wreg free
  1794  010DF0  D0B6               	goto	l9866
  1795  010DF2                     l9824:
  1796                           
  1797                           ;main.c: 108: INTCONbits.GIE = 0;
  1798  010DF2  9EF2               	bcf	intcon,7,c	;volatile
  1799                           
  1800                           ;main.c: 110: USB_task();
  1801  010DF4  EC9A  F096         	call	_USB_task	;wreg free
  1802                           
  1803                           ;main.c: 111: UART_task();
  1804  010DF8  ECF6  F09B         	call	_UART_task	;wreg free
  1805                           
  1806                           ;main.c: 112: RTCC_task();
  1807  010DFC  EC13  F09A         	call	_RTCC_task	;wreg free
  1808                           
  1809                           ;main.c: 114: if (ringbuf_num(&usb_rx)) {
  1810  010E00  0EDE               	movlw	low _usb_rx
  1811  010E02  0100               	movlb	0	; () banked
  1812  010E04  6F60               	movwf	ringbuf_num@rb& (0+255),b
  1813  010E06  0E01               	movlw	high _usb_rx
  1814  010E08  0100               	movlb	0	; () banked
  1815  010E0A  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  1816  010E0C  ECF3  F08B         	call	_ringbuf_num	;wreg free
  1817  010E10  0100               	movlb	0	; () banked
  1818  010E12  5160               	movf	?_ringbuf_num& (0+255),w,b
  1819  010E14  0100               	movlb	0	; () banked
  1820  010E16  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1821  010E18  B4D8               	btfsc	status,2,c
  1822  010E1A  D023               	goto	l9838
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 115: ringbuf_put(&usb_tx, ringbuf_pop(&usb_rx));
  1826  010E1C  0EE6               	movlw	low _usb_tx
  1827  010E1E  0100               	movlb	0	; () banked
  1828  010E20  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  1829  010E22  0E01               	movlw	high _usb_tx
  1830  010E24  0100               	movlb	0	; () banked
  1831  010E26  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1832  010E28  0EDE               	movlw	low _usb_rx
  1833  010E2A  0100               	movlb	0	; () banked
  1834  010E2C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  1835  010E2E  0E01               	movlw	high _usb_rx
  1836  010E30  0100               	movlb	0	; () banked
  1837  010E32  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1838  010E34  EC13  F091         	call	_ringbuf_pop	;wreg free
  1839  010E38  0100               	movlb	0	; () banked
  1840  010E3A  6F71               	movwf	ringbuf_put@asciicode& (0+255),b
  1841  010E3C  ECD9  F08F         	call	_ringbuf_put	;wreg free
  1842                           
  1843                           ;main.c: 116: LATBbits.LATB7 = !LATBbits.LATB7;
  1844  010E40  BE8A               	btfsc	3978,7,c	;volatile
  1845  010E42  D004               	goto	u9800
  1846  010E44  0100               	movlb	0	; () banked
  1847  010E46  6B9D               	clrf	??_main& (0+255),b
  1848  010E48  2B9D               	incf	??_main& (0+255),f,b
  1849  010E4A  D002               	goto	u9818
  1850  010E4C                     u9800:
  1851  010E4C  0100               	movlb	0	; () banked
  1852  010E4E  6B9D               	clrf	??_main& (0+255),b
  1853  010E50                     u9818:
  1854  010E50  0100               	movlb	0	; () banked
  1855  010E52  339D               	rrcf	??_main& (0+255),f,b
  1856  010E54  339D               	rrcf	??_main& (0+255),f,b
  1857  010E56  508A               	movf	3978,w,c	;volatile
  1858  010E58  0100               	movlb	0	; () banked
  1859  010E5A  199D               	xorwf	??_main& (0+255),w,b
  1860  010E5C  0B7F               	andlw	-129
  1861  010E5E  199D               	xorwf	??_main& (0+255),w,b
  1862  010E60  6E8A               	movwf	3978,c	;volatile
  1863  010E62                     l9838:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 117: }
  1867                           ;main.c: 118: if (ringbuf_num(&uart_rx)) {
  1868  010E62  0ECE               	movlw	low _uart_rx
  1869  010E64  0100               	movlb	0	; () banked
  1870  010E66  6F60               	movwf	ringbuf_num@rb& (0+255),b
  1871  010E68  0E01               	movlw	high _uart_rx
  1872  010E6A  0100               	movlb	0	; () banked
  1873  010E6C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  1874  010E6E  ECF3  F08B         	call	_ringbuf_num	;wreg free
  1875  010E72  0100               	movlb	0	; () banked
  1876  010E74  5160               	movf	?_ringbuf_num& (0+255),w,b
  1877  010E76  0100               	movlb	0	; () banked
  1878  010E78  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1879  010E7A  B4D8               	btfsc	status,2,c
  1880  010E7C  D024               	goto	l9844
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;main.c: 119: ringbuf_put(&uart_tx, ringbuf_pop(&uart_rx));
  1884  010E7E  0ED6               	movlw	low _uart_tx
  1885  010E80  0100               	movlb	0	; () banked
  1886  010E82  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  1887  010E84  0E01               	movlw	high _uart_tx
  1888  010E86  0100               	movlb	0	; () banked
  1889  010E88  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1890  010E8A  0ECE               	movlw	low _uart_rx
  1891  010E8C  0100               	movlb	0	; () banked
  1892  010E8E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  1893  010E90  0E01               	movlw	high _uart_rx
  1894  010E92  0100               	movlb	0	; () banked
  1895  010E94  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1896  010E96  EC13  F091         	call	_ringbuf_pop	;wreg free
  1897  010E9A  0100               	movlb	0	; () banked
  1898  010E9C  6F71               	movwf	ringbuf_put@asciicode& (0+255),b
  1899  010E9E  ECD9  F08F         	call	_ringbuf_put	;wreg free
  1900                           
  1901                           ;main.c: 120: LATBbits.LATB6 = !LATBbits.LATB6;
  1902  010EA2  BC8A               	btfsc	3978,6,c	;volatile
  1903  010EA4  D004               	goto	u9830
  1904  010EA6  0100               	movlb	0	; () banked
  1905  010EA8  6B9D               	clrf	??_main& (0+255),b
  1906  010EAA  2B9D               	incf	??_main& (0+255),f,b
  1907  010EAC  D002               	goto	u9848
  1908  010EAE                     u9830:
  1909  010EAE  0100               	movlb	0	; () banked
  1910  010EB0  6B9D               	clrf	??_main& (0+255),b
  1911  010EB2                     u9848:
  1912  010EB2  0100               	movlb	0	; () banked
  1913  010EB4  3B9D               	swapf	??_main& (0+255),f,b
  1914  010EB6  479D               	rlncf	??_main& (0+255),f,b
  1915  010EB8  479D               	rlncf	??_main& (0+255),f,b
  1916  010EBA  508A               	movf	3978,w,c	;volatile
  1917  010EBC  0100               	movlb	0	; () banked
  1918  010EBE  199D               	xorwf	??_main& (0+255),w,b
  1919  010EC0  0BBF               	andlw	-65
  1920  010EC2  199D               	xorwf	??_main& (0+255),w,b
  1921  010EC4  6E8A               	movwf	3978,c	;volatile
  1922  010EC6                     l9844:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main.c: 121: }
  1926                           ;main.c: 122: INTCONbits.GIE = 1;
  1927  010EC6  8EF2               	bsf	intcon,7,c	;volatile
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;main.c: 123: LATAbits.LATA2 = !LATAbits.LATA2;
  1931  010EC8  B489               	btfsc	3977,2,c	;volatile
  1932  010ECA  D004               	goto	u9850
  1933  010ECC  0100               	movlb	0	; () banked
  1934  010ECE  6B9D               	clrf	??_main& (0+255),b
  1935  010ED0  2B9D               	incf	??_main& (0+255),f,b
  1936  010ED2  D002               	goto	u9868
  1937  010ED4                     u9850:
  1938  010ED4  0100               	movlb	0	; () banked
  1939  010ED6  6B9D               	clrf	??_main& (0+255),b
  1940  010ED8                     u9868:
  1941  010ED8  0100               	movlb	0	; () banked
  1942  010EDA  479D               	rlncf	??_main& (0+255),f,b
  1943  010EDC  479D               	rlncf	??_main& (0+255),f,b
  1944  010EDE  5089               	movf	3977,w,c	;volatile
  1945  010EE0  0100               	movlb	0	; () banked
  1946  010EE2  199D               	xorwf	??_main& (0+255),w,b
  1947  010EE4  0BFB               	andlw	-5
  1948  010EE6  199D               	xorwf	??_main& (0+255),w,b
  1949  010EE8  6E89               	movwf	3977,c	;volatile
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;main.c: 125: INTCONbits.GIE = 0;
  1953  010EEA  9EF2               	bcf	intcon,7,c	;volatile
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;main.c: 126: if (time_change_flag) {
  1957  010EEC  0100               	movlb	0	; () banked
  1958  010EEE  51C2               	movf	_time_change_flag& (0+255),w,b
  1959  010EF0  B4D8               	btfsc	status,2,c
  1960  010EF2  D035               	goto	l9866
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;main.c: 127: time_change_flag = 0;
  1964  010EF4  0E00               	movlw	0
  1965  010EF6  0100               	movlb	0	; () banked
  1966  010EF8  6FC2               	movwf	_time_change_flag& (0+255),b
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;main.c: 128: char s[2][20];
  1970                           ;main.c: 129: display_time_0802(&now, s[0], s[1]);
  1971  010EFA  0EB8               	movlw	low _now
  1972  010EFC  0100               	movlb	0	; () banked
  1973  010EFE  6F97               	movwf	display_time_0802@tm& (0+255),b
  1974  010F00  0E01               	movlw	high _now
  1975  010F02  0100               	movlb	0	; () banked
  1976  010F04  6F98               	movwf	(display_time_0802@tm+1)& (0+255),b
  1977  010F06  0EA4               	movlw	low main@s
  1978  010F08  0100               	movlb	0	; () banked
  1979  010F0A  6F99               	movwf	display_time_0802@line0& (0+255),b
  1980  010F0C  0E02               	movlw	high main@s
  1981  010F0E  0100               	movlb	0	; () banked
  1982  010F10  6F9A               	movwf	(display_time_0802@line0+1)& (0+255),b
  1983  010F12  0EB8               	movlw	low (main@s+20)
  1984  010F14  0100               	movlb	0	; () banked
  1985  010F16  6F9B               	movwf	display_time_0802@line1& (0+255),b
  1986  010F18  0E02               	movlw	high (main@s+20)
  1987  010F1A  0100               	movlb	0	; () banked
  1988  010F1C  6F9C               	movwf	(display_time_0802@line1+1)& (0+255),b
  1989  010F1E  ECB8  F084         	call	_display_time_0802	;wreg free
  1990                           
  1991                           ;main.c: 130: I2C_LCD_Clear();
  1992  010F22  EC4E  F09C         	call	_I2C_LCD_Clear	;wreg free
  1993                           
  1994                           ;main.c: 131: I2C_LCD_SetCursor(0, 0);
  1995  010F26  0E00               	movlw	0
  1996  010F28  0100               	movlb	0	; () banked
  1997  010F2A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1998  010F2C  0E00               	movlw	0
  1999  010F2E  EC69  F09B         	call	_I2C_LCD_SetCursor
  2000                           
  2001                           ;main.c: 132: I2C_LCD_Puts(s[0]);
  2002  010F32  0EA4               	movlw	low main@s
  2003  010F34  0100               	movlb	0	; () banked
  2004  010F36  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2005  010F38  0E02               	movlw	high main@s
  2006  010F3A  0100               	movlb	0	; () banked
  2007  010F3C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2008  010F3E  ECE1  F096         	call	_I2C_LCD_Puts	;wreg free
  2009                           
  2010                           ;main.c: 133: I2C_LCD_SetCursor(0, 1);
  2011  010F42  0E01               	movlw	1
  2012  010F44  0100               	movlb	0	; () banked
  2013  010F46  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2014  010F48  0E00               	movlw	0
  2015  010F4A  EC69  F09B         	call	_I2C_LCD_SetCursor
  2016                           
  2017                           ;main.c: 134: I2C_LCD_Puts(s[1]);
  2018  010F4E  0EB8               	movlw	low (main@s+20)
  2019  010F50  0100               	movlb	0	; () banked
  2020  010F52  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2021  010F54  0E02               	movlw	high (main@s+20)
  2022  010F56  0100               	movlb	0	; () banked
  2023  010F58  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2024  010F5A  ECE1  F096         	call	_I2C_LCD_Puts	;wreg free
  2025  010F5E                     l9866:
  2026                           
  2027                           ;main.c: 135: }
  2028                           ;main.c: 136: INTCONbits.GIE = 1;
  2029  010F5E  8EF2               	bsf	intcon,7,c	;volatile
  2030  010F60  D748               	goto	l9824
  2031  010F62                     __end_of_main:
  2032                           	opt stack 0
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           intcon	equ	0xFF2
  2038                           postinc0	equ	0xFEE
  2039                           wreg	equ	0xFE8
  2040                           postdec1	equ	0xFE5
  2041                           fsr1h	equ	0xFE2
  2042                           fsr1l	equ	0xFE1
  2043                           status	equ	0xFD8
  2044                           
  2045 ;; *************** function _main_init *****************
  2046 ;; Defined at:
  2047 ;;		line 62 in file "main.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;		None               void
  2054 ;; Registers used:
  2055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:   16
  2068 ;; This function calls:
  2069 ;;		_I2C_LCD_init
  2070 ;;		_OSC_init
  2071 ;;		_RTCC_init
  2072 ;;		_UART_init
  2073 ;;		_USB_init
  2074 ;;		_ringbuf_init
  2075 ;;		_timer0_init
  2076 ;;		_timer1_init
  2077 ;;		_timer3_init
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text1
  2084  0119BE                     __ptext1:
  2085                           	opt stack 0
  2086  0119BE                     _main_init:
  2087                           	opt stack 14
  2088                           
  2089                           ;main.c: 63: OSC_init();
  2090                           
  2091                           ;incstack = 0
  2092  0119BE  EC7D  F09C         	call	_OSC_init	;wreg free
  2093                           
  2094                           ;main.c: 64: TRISA = 0b00010000;
  2095  0119C2  0E10               	movlw	16
  2096  0119C4  6E92               	movwf	3986,c	;volatile
  2097                           
  2098                           ;main.c: 65: TRISB = 0b00111111;
  2099  0119C6  0E3F               	movlw	63
  2100  0119C8  6E93               	movwf	3987,c	;volatile
  2101                           
  2102                           ;main.c: 66: TRISC = 0b10111010;
  2103  0119CA  0EBA               	movlw	186
  2104  0119CC  6E94               	movwf	3988,c	;volatile
  2105                           
  2106                           ;main.c: 67: ANCON0 = 0b11111111;
  2107  0119CE  010F               	movlb	15	; () banked
  2108  0119D0  6948               	setf	72,b	;volatile
  2109                           
  2110                           ; BSR set to: 15
  2111                           ;main.c: 68: ANCON1 = 0b00011111;
  2112  0119D2  0E1F               	movlw	31
  2113  0119D4  010F               	movlb	15	; () banked
  2114  0119D6  6F49               	movwf	73,b	;volatile
  2115                           
  2116                           ; BSR set to: 15
  2117                           ;main.c: 69: INTCON2bits.RBPU = 0;
  2118  0119D8  9EF1               	bcf	intcon2,7,c	;volatile
  2119                           
  2120                           ; BSR set to: 15
  2121                           ;main.c: 71: timer0_init(6);
  2122  0119DA  0E06               	movlw	6
  2123  0119DC  EC4F  F09A         	call	_timer0_init
  2124                           
  2125                           ;main.c: 72: timer1_init(0, 2);
  2126  0119E0  0E02               	movlw	2
  2127  0119E2  0100               	movlb	0	; () banked
  2128  0119E4  6F60               	movwf	timer1_init@clock_select& (0+255),b
  2129  0119E6  0E00               	movlw	0
  2130  0119E8  EC7D  F099         	call	_timer1_init
  2131                           
  2132                           ;main.c: 73: timer3_init(2);
  2133  0119EC  0E02               	movlw	2
  2134  0119EE  EC3D  F09B         	call	_timer3_init
  2135                           
  2136                           ;main.c: 74: I2C_LCD_init();
  2137  0119F2  EC52  F096         	call	_I2C_LCD_init	;wreg free
  2138                           
  2139                           ;main.c: 75: RTCC_init();
  2140  0119F6  EC5A  F098         	call	_RTCC_init	;wreg free
  2141                           
  2142                           ;main.c: 77: USB_init();
  2143  0119FA  EC25  F09C         	call	_USB_init	;wreg free
  2144                           
  2145                           ;main.c: 78: static uint8_t usbtx[1000];
  2146                           ;main.c: 79: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
  2147  0119FE  0EE6               	movlw	low _usb_tx
  2148  011A00  0100               	movlb	0	; () banked
  2149  011A02  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2150  011A04  0E01               	movlw	high _usb_tx
  2151  011A06  0100               	movlb	0	; () banked
  2152  011A08  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2153  011A0A  0EB0               	movlw	low main_init@usbtx
  2154  011A0C  0100               	movlb	0	; () banked
  2155  011A0E  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2156  011A10  0E08               	movlw	high main_init@usbtx
  2157  011A12  0100               	movlb	0	; () banked
  2158  011A14  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2159  011A16  0E03               	movlw	3
  2160  011A18  0100               	movlb	0	; () banked
  2161  011A1A  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2162  011A1C  0EE8               	movlw	232
  2163  011A1E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2164  011A20  EC53  F099         	call	_ringbuf_init	;wreg free
  2165                           
  2166                           ;main.c: 80: static uint8_t usbrx[100];
  2167                           ;main.c: 81: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
  2168  011A24  0EDE               	movlw	low _usb_rx
  2169  011A26  0100               	movlb	0	; () banked
  2170  011A28  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2171  011A2A  0E01               	movlw	high _usb_rx
  2172  011A2C  0100               	movlb	0	; () banked
  2173  011A2E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2174  011A30  0E00               	movlw	low main_init@usbrx
  2175  011A32  0100               	movlb	0	; () banked
  2176  011A34  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2177  011A36  0E02               	movlw	high main_init@usbrx
  2178  011A38  0100               	movlb	0	; () banked
  2179  011A3A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2180  011A3C  0E00               	movlw	0
  2181  011A3E  0100               	movlb	0	; () banked
  2182  011A40  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2183  011A42  0E64               	movlw	100
  2184  011A44  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2185  011A46  EC53  F099         	call	_ringbuf_init	;wreg free
  2186                           
  2187                           ;main.c: 83: UART_init();
  2188  011A4A  ECD4  F09B         	call	_UART_init	;wreg free
  2189                           
  2190                           ;main.c: 84: static uint8_t uarttx[1000];
  2191                           ;main.c: 85: ringbuf_init(&uart_tx, uarttx, sizeof (uarttx));
  2192  011A4E  0ED6               	movlw	low _uart_tx
  2193  011A50  0100               	movlb	0	; () banked
  2194  011A52  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2195  011A54  0E01               	movlw	high _uart_tx
  2196  011A56  0100               	movlb	0	; () banked
  2197  011A58  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2198  011A5A  0EC8               	movlw	low main_init@uarttx
  2199  011A5C  0100               	movlb	0	; () banked
  2200  011A5E  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2201  011A60  0E04               	movlw	high main_init@uarttx
  2202  011A62  0100               	movlb	0	; () banked
  2203  011A64  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2204  011A66  0E03               	movlw	3
  2205  011A68  0100               	movlb	0	; () banked
  2206  011A6A  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2207  011A6C  0EE8               	movlw	232
  2208  011A6E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2209  011A70  EC53  F099         	call	_ringbuf_init	;wreg free
  2210                           
  2211                           ;main.c: 86: static uint8_t uartrx[100];
  2212                           ;main.c: 87: ringbuf_init(&uart_rx, uartrx, sizeof (uartrx));
  2213  011A74  0ECE               	movlw	low _uart_rx
  2214  011A76  0100               	movlb	0	; () banked
  2215  011A78  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2216  011A7A  0E01               	movlw	high _uart_rx
  2217  011A7C  0100               	movlb	0	; () banked
  2218  011A7E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2219  011A80  0E00               	movlw	low main_init@uartrx
  2220  011A82  0100               	movlb	0	; () banked
  2221  011A84  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2222  011A86  0E03               	movlw	high main_init@uartrx
  2223  011A88  0100               	movlb	0	; () banked
  2224  011A8A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2225  011A8C  0E00               	movlw	0
  2226  011A8E  0100               	movlb	0	; () banked
  2227  011A90  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2228  011A92  0E64               	movlw	100
  2229  011A94  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2230  011A96  EC53  F099         	call	_ringbuf_init	;wreg free
  2231  011A9A  0012               	return		;funcret
  2232  011A9C                     __end_of_main_init:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           intcon	equ	0xFF2
  2239                           intcon2	equ	0xFF1
  2240                           postinc0	equ	0xFEE
  2241                           wreg	equ	0xFE8
  2242                           postdec1	equ	0xFE5
  2243                           fsr1h	equ	0xFE2
  2244                           fsr1l	equ	0xFE1
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _timer3_init *****************
  2248 ;; Defined at:
  2249 ;;		line 101 in file "../My_library/My_PIC.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  prescaler       1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;		None               void
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2267 ;;Total ram usage:        2 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:   11
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_main_init
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text2
  2278  01367A                     __ptext2:
  2279                           	opt stack 0
  2280  01367A                     _timer3_init:
  2281                           	opt stack 18
  2282                           
  2283                           ;incstack = 0
  2284                           ;timer3_init@prescaler stored from wreg
  2285  01367A  0100               	movlb	0	; () banked
  2286  01367C  6F61               	movwf	timer3_init@prescaler& (0+255),b
  2287                           
  2288                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  2289  01367E  0E3F               	movlw	-193
  2290  013680  1679               	andwf	3961,f,c	;volatile
  2291                           
  2292                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  2293  013682  9679               	bcf	3961,3,c	;volatile
  2294                           
  2295                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  2296  013684  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  2297  013688  0100               	movlb	0	; () banked
  2298  01368A  3B60               	swapf	??_timer3_init& (0+255),f,b
  2299  01368C  5079               	movf	3961,w,c	;volatile
  2300  01368E  0100               	movlb	0	; () banked
  2301  013690  1960               	xorwf	??_timer3_init& (0+255),w,b
  2302  013692  0BCF               	andlw	-49
  2303  013694  1960               	xorwf	??_timer3_init& (0+255),w,b
  2304  013696  6E79               	movwf	3961,c	;volatile
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  2308  013698  9E79               	bcf	3961,7,c	;volatile
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  2312  01369A  8079               	bsf	3961,0,c	;volatile
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  2316  01369C  92A2               	bcf	4002,1,c	;volatile
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  2320  01369E  92A1               	bcf	4001,1,c	;volatile
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  2324  0136A0  82A0               	bsf	4000,1,c	;volatile
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  2328  0136A2  8CF2               	bsf	intcon,6,c	;volatile
  2329                           
  2330                           ; BSR set to: 0
  2331  0136A4  0012               	return		;funcret
  2332  0136A6                     __end_of_timer3_init:
  2333                           	opt stack 0
  2334                           tblptru	equ	0xFF8
  2335                           tblptrh	equ	0xFF7
  2336                           tblptrl	equ	0xFF6
  2337                           tablat	equ	0xFF5
  2338                           intcon	equ	0xFF2
  2339                           intcon2	equ	0xFF1
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           postdec1	equ	0xFE5
  2343                           fsr1h	equ	0xFE2
  2344                           fsr1l	equ	0xFE1
  2345                           status	equ	0xFD8
  2346                           
  2347 ;; *************** function _timer1_init *****************
  2348 ;; Defined at:
  2349 ;;		line 70 in file "../My_library/My_PIC.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  prescaler       1    wreg     unsigned char 
  2352 ;;  clock_select    1    0[BANK0 ] unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  prescaler       1    2[BANK0 ] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;		None               void
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2364 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;Total ram usage:        3 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:   11
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_main_init
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text3
  2379  0132FA                     __ptext3:
  2380                           	opt stack 0
  2381  0132FA                     _timer1_init:
  2382                           	opt stack 18
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;incstack = 0
  2386                           ;timer1_init@prescaler stored from wreg
  2387  0132FA  0100               	movlb	0	; () banked
  2388  0132FC  6F62               	movwf	timer1_init@prescaler& (0+255),b
  2389                           
  2390                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  2391  0132FE  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  2392  013302  0100               	movlb	0	; () banked
  2393  013304  3B61               	swapf	??_timer1_init& (0+255),f,b
  2394  013306  4761               	rlncf	??_timer1_init& (0+255),f,b
  2395  013308  4761               	rlncf	??_timer1_init& (0+255),f,b
  2396  01330A  50CD               	movf	4045,w,c	;volatile
  2397  01330C  0100               	movlb	0	; () banked
  2398  01330E  1961               	xorwf	??_timer1_init& (0+255),w,b
  2399  013310  0B3F               	andlw	-193
  2400  013312  1961               	xorwf	??_timer1_init& (0+255),w,b
  2401  013314  6ECD               	movwf	4045,c	;volatile
  2402                           
  2403                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  2404  013316  0E02               	movlw	2
  2405  013318  0100               	movlb	0	; () banked
  2406  01331A  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  2407  01331C  A4D8               	btfss	status,2,c
  2408  01331E  D002               	goto	l710
  2409                           
  2410                           ; BSR set to: 0
  2411  013320  86CD               	bsf	4045,3,c	;volatile
  2412  013322  D001               	goto	l8914
  2413  013324                     l710:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  2417  013324  96CD               	bcf	4045,3,c	;volatile
  2418  013326                     l8914:
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  2422  013326  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  2423  01332A  0100               	movlb	0	; () banked
  2424  01332C  3B61               	swapf	??_timer1_init& (0+255),f,b
  2425  01332E  50CD               	movf	4045,w,c	;volatile
  2426  013330  0100               	movlb	0	; () banked
  2427  013332  1961               	xorwf	??_timer1_init& (0+255),w,b
  2428  013334  0BCF               	andlw	-49
  2429  013336  1961               	xorwf	??_timer1_init& (0+255),w,b
  2430  013338  6ECD               	movwf	4045,c	;volatile
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  2434  01333A  84CD               	bsf	4045,2,c	;volatile
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  2438  01333C  92CD               	bcf	4045,1,c	;volatile
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  2442  01333E  80CD               	bsf	4045,0,c	;volatile
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  2446  013340  909F               	bcf	3999,0,c	;volatile
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  2450  013342  909E               	bcf	3998,0,c	;volatile
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  2454  013344  809D               	bsf	3997,0,c	;volatile
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  2458  013346  8CF2               	bsf	intcon,6,c	;volatile
  2459                           
  2460                           ; BSR set to: 0
  2461  013348  0012               	return		;funcret
  2462  01334A                     __end_of_timer1_init:
  2463                           	opt stack 0
  2464                           tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           intcon	equ	0xFF2
  2469                           intcon2	equ	0xFF1
  2470                           postinc0	equ	0xFEE
  2471                           wreg	equ	0xFE8
  2472                           postdec1	equ	0xFE5
  2473                           fsr1h	equ	0xFE2
  2474                           fsr1l	equ	0xFE1
  2475                           status	equ	0xFD8
  2476                           
  2477 ;; *************** function _timer0_init *****************
  2478 ;; Defined at:
  2479 ;;		line 34 in file "../My_library/My_PIC.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  prescaler       1    wreg     unsigned char 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;		None               void
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2495 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2496 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;Total ram usage:        2 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:   11
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_main_init
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text4
  2508  01349E                     __ptext4:
  2509                           	opt stack 0
  2510  01349E                     _timer0_init:
  2511                           	opt stack 18
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;incstack = 0
  2515                           ;timer0_init@prescaler stored from wreg
  2516  01349E  0100               	movlb	0	; () banked
  2517  0134A0  6F61               	movwf	timer0_init@prescaler& (0+255),b
  2518                           
  2519                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  2520  0134A2  8ED5               	bsf	4053,7,c	;volatile
  2521                           
  2522                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  2523  0134A4  8CD5               	bsf	4053,6,c	;volatile
  2524                           
  2525                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  2526  0134A6  9AD5               	bcf	4053,5,c	;volatile
  2527                           
  2528                           ;My_PIC.c: 38: if (prescaler == 0) {
  2529  0134A8  0100               	movlb	0	; () banked
  2530  0134AA  5161               	movf	timer0_init@prescaler& (0+255),w,b
  2531  0134AC  0100               	movlb	0	; () banked
  2532  0134AE  A4D8               	btfss	status,2,c
  2533  0134B0  D002               	goto	l705
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  2537  0134B2  86D5               	bsf	4053,3,c	;volatile
  2538                           
  2539                           ;My_PIC.c: 40: } else {
  2540  0134B4  D00C               	goto	l8902
  2541  0134B6                     l705:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  2545  0134B6  96D5               	bcf	4053,3,c	;volatile
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  2549  0134B8  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  2550  0134BC  0EFF               	movlw	255
  2551  0134BE  0100               	movlb	0	; () banked
  2552  0134C0  2760               	addwf	??_timer0_init& (0+255),f,b
  2553  0134C2  50D5               	movf	4053,w,c	;volatile
  2554  0134C4  0100               	movlb	0	; () banked
  2555  0134C6  1960               	xorwf	??_timer0_init& (0+255),w,b
  2556  0134C8  0BF8               	andlw	-8
  2557  0134CA  1960               	xorwf	??_timer0_init& (0+255),w,b
  2558  0134CC  6ED5               	movwf	4053,c	;volatile
  2559  0134CE                     l8902:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;My_PIC.c: 43: }
  2563                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  2564  0134CE  8AF2               	bsf	intcon,5,c	;volatile
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  2568  0134D0  94F2               	bcf	intcon,2,c	;volatile
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  2572  0134D2  94F1               	bcf	intcon2,2,c	;volatile
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  2576  0134D4  8CF2               	bsf	intcon,6,c	;volatile
  2577                           
  2578                           ; BSR set to: 0
  2579  0134D6  0012               	return		;funcret
  2580  0134D8                     __end_of_timer0_init:
  2581                           	opt stack 0
  2582                           tblptru	equ	0xFF8
  2583                           tblptrh	equ	0xFF7
  2584                           tblptrl	equ	0xFF6
  2585                           tablat	equ	0xFF5
  2586                           intcon	equ	0xFF2
  2587                           intcon2	equ	0xFF1
  2588                           postinc0	equ	0xFEE
  2589                           wreg	equ	0xFE8
  2590                           postdec1	equ	0xFE5
  2591                           fsr1h	equ	0xFE2
  2592                           fsr1l	equ	0xFE1
  2593                           status	equ	0xFD8
  2594                           
  2595 ;; *************** function _ringbuf_init *****************
  2596 ;; Defined at:
  2597 ;;		line 5 in file "../My_library/My_ringbuf.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  2600 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  2601 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  2602 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  2603 ;;		 -> main_init@uartrx(100), main_init@uarttx(1000), main_init@usbrx(100), main_init@usbtx(1000), 
  2604 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
  2605 ;;  bufsize         2    4[BANK0 ] unsigned int 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;		None               void
  2610 ;; Registers used:
  2611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2617 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2620 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;Total ram usage:        6 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:   11
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_main_init
  2628 ;;		_ST7032_init
  2629 ;;		_terminal_task
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text5
  2634  0132A6                     __ptext5:
  2635                           	opt stack 0
  2636  0132A6                     _ringbuf_init:
  2637                           	opt stack 18
  2638                           
  2639                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;incstack = 0
  2643  0132A6  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  2644  0132AA  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  2645  0132AE  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  2646  0132B2  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  2647                           
  2648                           ;My_ringbuf.c: 7: rb->size = bufsize;
  2649  0132B6  0100               	movlb	0	; () banked
  2650  0132B8  EE20 F002          	lfsr	2,2
  2651  0132BC  5160               	movf	ringbuf_init@rb& (0+255),w,b
  2652  0132BE  26D9               	addwf	fsr2l,f,c
  2653  0132C0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2654  0132C2  22DA               	addwfc	fsr2h,f,c
  2655  0132C4  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  2656  0132C8  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;My_ringbuf.c: 8: rb->head = 0;
  2660  0132CC  0100               	movlb	0	; () banked
  2661  0132CE  EE20 F004          	lfsr	2,4
  2662  0132D2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  2663  0132D4  26D9               	addwf	fsr2l,f,c
  2664  0132D6  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2665  0132D8  22DA               	addwfc	fsr2h,f,c
  2666  0132DA  0E00               	movlw	0
  2667  0132DC  6EDE               	movwf	postinc2,c
  2668  0132DE  0E00               	movlw	0
  2669  0132E0  6EDD               	movwf	postdec2,c
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;My_ringbuf.c: 9: rb->tail = 0;
  2673  0132E2  0100               	movlb	0	; () banked
  2674  0132E4  EE20 F006          	lfsr	2,6
  2675  0132E8  5160               	movf	ringbuf_init@rb& (0+255),w,b
  2676  0132EA  26D9               	addwf	fsr2l,f,c
  2677  0132EC  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2678  0132EE  22DA               	addwfc	fsr2h,f,c
  2679  0132F0  0E00               	movlw	0
  2680  0132F2  6EDE               	movwf	postinc2,c
  2681  0132F4  0E00               	movlw	0
  2682  0132F6  6EDD               	movwf	postdec2,c
  2683                           
  2684                           ; BSR set to: 0
  2685  0132F8  0012               	return		;funcret
  2686  0132FA                     __end_of_ringbuf_init:
  2687                           	opt stack 0
  2688                           tblptru	equ	0xFF8
  2689                           tblptrh	equ	0xFF7
  2690                           tblptrl	equ	0xFF6
  2691                           tablat	equ	0xFF5
  2692                           intcon	equ	0xFF2
  2693                           intcon2	equ	0xFF1
  2694                           postinc0	equ	0xFEE
  2695                           wreg	equ	0xFE8
  2696                           postdec1	equ	0xFE5
  2697                           fsr1h	equ	0xFE2
  2698                           fsr1l	equ	0xFE1
  2699                           postinc2	equ	0xFDE
  2700                           postdec2	equ	0xFDD
  2701                           fsr2h	equ	0xFDA
  2702                           fsr2l	equ	0xFD9
  2703                           status	equ	0xFD8
  2704                           
  2705 ;; *************** function _USB_init *****************
  2706 ;; Defined at:
  2707 ;;		line 11 in file "../My_library/My_usb_cdc.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;		None               void
  2714 ;; Registers used:
  2715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:   13
  2728 ;; This function calls:
  2729 ;;		_USBDeviceAttach
  2730 ;;		_USBDeviceInit
  2731 ;; This function is called by:
  2732 ;;		_main_init
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text6
  2737  01384A                     __ptext6:
  2738                           	opt stack 0
  2739  01384A                     _USB_init:
  2740                           	opt stack 16
  2741                           
  2742                           ;My_usb_cdc.c: 12: USBDeviceInit();
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;incstack = 0
  2746  01384A  EC6E  F088         	call	_USBDeviceInit	;wreg free
  2747                           
  2748                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  2749  01384E  EC6C  F09A         	call	_USBDeviceAttach	;wreg free
  2750                           
  2751                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
  2752  013852  0E00               	movlw	0
  2753  013854  0101               	movlb	1	; () banked
  2754  013856  6FEE               	movwf	_line_coding& (0+255),b
  2755  013858  0EC2               	movlw	194
  2756  01385A  6FEF               	movwf	(_line_coding+1)& (0+255),b
  2757  01385C  0E01               	movlw	1
  2758  01385E  6FF0               	movwf	(_line_coding+2)& (0+255),b
  2759  013860  0E00               	movlw	0
  2760  013862  6FF1               	movwf	(_line_coding+3)& (0+255),b
  2761                           
  2762                           ; BSR set to: 1
  2763  013864  0012               	return		;funcret
  2764  013866                     __end_of_USB_init:
  2765                           	opt stack 0
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           intcon	equ	0xFF2
  2771                           intcon2	equ	0xFF1
  2772                           postinc0	equ	0xFEE
  2773                           wreg	equ	0xFE8
  2774                           postdec1	equ	0xFE5
  2775                           fsr1h	equ	0xFE2
  2776                           fsr1l	equ	0xFE1
  2777                           postinc2	equ	0xFDE
  2778                           postdec2	equ	0xFDD
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _USBDeviceInit *****************
  2784 ;; Defined at:
  2785 ;;		line 298 in file "../My_library/usb/usb_device.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  i               1    8[BANK0 ] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2803 ;;Total ram usage:        1 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:   12
  2806 ;; This function calls:
  2807 ;;		_memset
  2808 ;; This function is called by:
  2809 ;;		_USB_init
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text7
  2814  0110DC                     __ptext7:
  2815                           	opt stack 0
  2816  0110DC                     _USBDeviceInit:
  2817                           	opt stack 16
  2818                           
  2819                           ;usb_device.c: 300: uint8_t i;
  2820                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  2821                           
  2822                           ; BSR set to: 1
  2823                           ;incstack = 0
  2824  0110DC  98A0               	bcf	4000,4,c	;volatile
  2825                           
  2826                           ;usb_device.c: 305: {UEIR = 0;};
  2827  0110DE  0E00               	movlw	0
  2828  0110E0  6E63               	movwf	3939,c	;volatile
  2829                           
  2830                           ;usb_device.c: 308: {UIR = 0;};
  2831  0110E2  0E00               	movlw	0
  2832  0110E4  6E62               	movwf	3938,c	;volatile
  2833                           
  2834                           ;usb_device.c: 311: UEP0 = 0;
  2835  0110E6  0E00               	movlw	0
  2836  0110E8  010F               	movlb	15	; () banked
  2837  0110EA  6F26               	movwf	38,b	;volatile
  2838                           
  2839                           ; BSR set to: 15
  2840                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  2841  0110EC  0E27               	movlw	39
  2842  0110EE  0100               	movlb	0	; () banked
  2843  0110F0  6F60               	movwf	memset@p1& (0+255),b
  2844  0110F2  0E0F               	movlw	15
  2845  0110F4  0100               	movlb	0	; () banked
  2846  0110F6  6F61               	movwf	(memset@p1+1)& (0+255),b
  2847  0110F8  0E00               	movlw	0
  2848  0110FA  0100               	movlb	0	; () banked
  2849  0110FC  6F63               	movwf	(memset@c+1)& (0+255),b
  2850  0110FE  0E00               	movlw	0
  2851  011100  6F62               	movwf	memset@c& (0+255),b
  2852  011102  0E00               	movlw	0
  2853  011104  0100               	movlb	0	; () banked
  2854  011106  6F65               	movwf	(memset@n+1)& (0+255),b
  2855  011108  0E02               	movlw	2
  2856  01110A  6F64               	movwf	memset@n& (0+255),b
  2857  01110C  ECDB  F09A         	call	_memset	;wreg free
  2858                           
  2859                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2860  011110  0E16               	movlw	22
  2861  011112  010F               	movlb	15	; () banked
  2862  011114  6F39               	movwf	57,b	;volatile
  2863                           
  2864                           ; BSR set to: 15
  2865  011116  0E9F               	movlw	159
  2866  011118  010F               	movlb	15	; () banked
  2867  01111A  6F37               	movwf	55,b	;volatile
  2868                           
  2869                           ; BSR set to: 15
  2870  01111C  0E7B               	movlw	123
  2871  01111E  010F               	movlb	15	; () banked
  2872  011120  6F36               	movwf	54,b	;volatile
  2873                           
  2874                           ; BSR set to: 15
  2875                           ;usb_device.c: 318: ;
  2876                           ;usb_device.c: 321: ;
  2877                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  2878  011122  0E00               	movlw	0
  2879  011124  0100               	movlb	0	; () banked
  2880  011126  6F68               	movwf	USBDeviceInit@i& (0+255),b
  2881  011128                     l8504:
  2882                           
  2883                           ; BSR set to: 0
  2884  011128  0E0B               	movlw	11
  2885  01112A  0100               	movlb	0	; () banked
  2886  01112C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  2887  01112E  D001               	goto	l8508
  2888  011130  D010               	goto	l146
  2889  011132                     l8508:
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;usb_device.c: 325: {
  2893                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  2894  011132  0100               	movlb	0	; () banked
  2895  011134  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2896  011136  0D04               	mullw	4
  2897  011138  0E00               	movlw	0
  2898  01113A  24F3               	addwf	prodl,w,c
  2899  01113C  6ED9               	movwf	fsr2l,c
  2900  01113E  0E0D               	movlw	13
  2901  011140  20F4               	addwfc	prodh,w,c
  2902  011142  6EDA               	movwf	fsr2h,c
  2903  011144  6ADE               	clrf	postinc2,c
  2904  011146  6ADE               	clrf	postinc2,c
  2905  011148  6ADE               	clrf	postinc2,c
  2906  01114A  6ADD               	clrf	postdec2,c
  2907                           
  2908                           ; BSR set to: 0
  2909  01114C  0100               	movlb	0	; () banked
  2910  01114E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  2911  011150  D7EB               	goto	l8504
  2912  011152                     l146:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;usb_device.c: 327: }
  2916                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  2917  011152  8C65               	bsf	3941,6,c	;volatile
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;usb_device.c: 333: UADDR = 0x00;
  2921  011154  0E00               	movlw	0
  2922  011156  010F               	movlb	15	; () banked
  2923  011158  6F38               	movwf	56,b	;volatile
  2924                           
  2925                           ; BSR set to: 15
  2926                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  2927  01115A  9865               	bcf	3941,4,c	;volatile
  2928                           
  2929                           ; BSR set to: 15
  2930                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  2931  01115C  9C65               	bcf	3941,6,c	;volatile
  2932                           
  2933                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  2934  01115E  D009               	goto	l8528
  2935  011160                     l8520:
  2936                           
  2937                           ;usb_device.c: 343: {
  2938                           ;usb_device.c: 344: (UIR &= 0xF7);
  2939  011160  9662               	bcf	3938,3,c	;volatile
  2940                           
  2941                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  2942  011162  0E00               	movlw	0
  2943  011164  6E0D               	movwf	_inPipes+3,c	;volatile
  2944                           
  2945                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  2946  011166  0E00               	movlw	0
  2947  011168  6E04               	movwf	_outPipes+3,c	;volatile
  2948                           
  2949                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  2950  01116A  0E00               	movlw	0
  2951  01116C  6E06               	movwf	_outPipes+5,c	;volatile
  2952  01116E  0E00               	movlw	0
  2953  011170  6E05               	movwf	_outPipes+4,c	;volatile
  2954  011172                     l8528:
  2955  011172  B662               	btfsc	3938,3,c	;volatile
  2956  011174  D7F5               	goto	l8520
  2957                           
  2958                           ;usb_device.c: 349: }
  2959                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  2960  011176  0E01               	movlw	1
  2961  011178  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  2962                           
  2963                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  2964  01117A  0E01               	movlw	1
  2965  01117C  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  2966                           
  2967                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  2968  01117E  0E00               	movlw	0
  2969  011180  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
  2970                           
  2971                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  2972  011182  0E00               	movlw	0
  2973  011184  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  2974                           
  2975                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  2976  011186  0E00               	movlw	0
  2977  011188  0100               	movlb	0	; () banked
  2978  01118A  6FBC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  2979                           
  2980                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  2981  01118C  0E00               	movlw	0
  2982  01118E  0100               	movlb	0	; () banked
  2983  011190  6F68               	movwf	USBDeviceInit@i& (0+255),b
  2984  011192                     l8532:
  2985                           
  2986                           ; BSR set to: 0
  2987  011192  0E02               	movlw	2
  2988  011194  0100               	movlb	0	; () banked
  2989  011196  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  2990  011198  D001               	goto	l8536
  2991  01119A  D033               	goto	l8542
  2992  01119C                     l8536:
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;usb_device.c: 363: {
  2996                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  2997  01119C  0100               	movlb	0	; () banked
  2998  01119E  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2999  0111A0  0D02               	mullw	2
  3000  0111A2  0E10               	movlw	low _pBDTEntryIn
  3001  0111A4  24F3               	addwf	prodl,w,c
  3002  0111A6  6ED9               	movwf	fsr2l,c
  3003  0111A8  0E00               	movlw	high _pBDTEntryIn
  3004  0111AA  20F4               	addwfc	prodh,w,c
  3005  0111AC  6EDA               	movwf	fsr2h,c
  3006  0111AE  0E00               	movlw	0
  3007  0111B0  6EDE               	movwf	postinc2,c
  3008  0111B2  0E00               	movlw	0
  3009  0111B4  6EDD               	movwf	postdec2,c
  3010                           
  3011                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  3012  0111B6  0100               	movlb	0	; () banked
  3013  0111B8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  3014  0111BA  0D02               	mullw	2
  3015  0111BC  0E9E               	movlw	low _pBDTEntryOut
  3016  0111BE  24F3               	addwf	prodl,w,c
  3017  0111C0  6ED9               	movwf	fsr2l,c
  3018  0111C2  0E00               	movlw	high _pBDTEntryOut
  3019  0111C4  20F4               	addwfc	prodh,w,c
  3020  0111C6  6EDA               	movwf	fsr2h,c
  3021  0111C8  0E00               	movlw	0
  3022  0111CA  6EDE               	movwf	postinc2,c
  3023  0111CC  0E00               	movlw	0
  3024  0111CE  6EDD               	movwf	postdec2,c
  3025                           
  3026                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  3027  0111D0  0100               	movlb	0	; () banked
  3028  0111D2  5168               	movf	USBDeviceInit@i& (0+255),w,b
  3029  0111D4  0D01               	mullw	1
  3030  0111D6  0E16               	movlw	low _ep_data_in
  3031  0111D8  24F3               	addwf	prodl,w,c
  3032  0111DA  6ED9               	movwf	fsr2l,c
  3033  0111DC  0E00               	movlw	high _ep_data_in
  3034  0111DE  20F4               	addwfc	prodh,w,c
  3035  0111E0  6EDA               	movwf	fsr2h,c
  3036  0111E2  0E00               	movlw	0
  3037  0111E4  6EDF               	movwf	indf2,c
  3038                           
  3039                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  3040  0111E6  0100               	movlb	0	; () banked
  3041  0111E8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  3042  0111EA  0D01               	mullw	1
  3043  0111EC  0EA4               	movlw	low _ep_data_out
  3044  0111EE  24F3               	addwf	prodl,w,c
  3045  0111F0  6ED9               	movwf	fsr2l,c
  3046  0111F2  0E00               	movlw	high _ep_data_out
  3047  0111F4  20F4               	addwfc	prodh,w,c
  3048  0111F6  6EDA               	movwf	fsr2h,c
  3049  0111F8  0E00               	movlw	0
  3050  0111FA  6EDF               	movwf	indf2,c
  3051                           
  3052                           ; BSR set to: 0
  3053  0111FC  0100               	movlb	0	; () banked
  3054  0111FE  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  3055  011200  D7C8               	goto	l8532
  3056  011202                     l8542:
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;usb_device.c: 368: }
  3060                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3061  011202  0E08               	movlw	8
  3062  011204  6E10               	movwf	_pBDTEntryIn,c
  3063  011206  0E0D               	movlw	13
  3064  011208  6E11               	movwf	_pBDTEntryIn+1,c
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  3068  01120A  0E16               	movlw	22
  3069  01120C  010F               	movlb	15	; () banked
  3070  01120E  6F26               	movwf	38,b	;volatile
  3071                           
  3072                           ; BSR set to: 15
  3073                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  3074  011210  0E0D               	movlw	13
  3075  011212  010D               	movlb	13	; () banked
  3076  011214  6F03               	movwf	3,b	;volatile
  3077  011216  0E30               	movlw	48
  3078  011218  6F02               	movwf	2,b	;volatile
  3079                           
  3080                           ; BSR set to: 13
  3081                           ;usb_device.c: 376: BDT[0].CNT = 8;
  3082  01121A  0E08               	movlw	8
  3083  01121C  010D               	movlb	13	; () banked
  3084  01121E  6F01               	movwf	1,b	;volatile
  3085                           
  3086                           ; BSR set to: 13
  3087                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  3088  011220  0E04               	movlw	4
  3089  011222  010D               	movlb	13	; () banked
  3090  011224  6F00               	movwf	0,b	;volatile
  3091                           
  3092                           ; BSR set to: 13
  3093                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  3094  011226  010D               	movlb	13	; () banked
  3095  011228  8F00               	bsf	0,7,b	;volatile
  3096                           
  3097                           ; BSR set to: 13
  3098                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  3099  01122A  0E00               	movlw	0
  3100  01122C  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  3101                           
  3102                           ; BSR set to: 13
  3103                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  3104  01122E  0E00               	movlw	0
  3105  011230  6E24               	movwf	_USBDeviceState,c	;volatile
  3106                           
  3107                           ; BSR set to: 13
  3108  011232  0012               	return		;funcret
  3109  011234                     __end_of_USBDeviceInit:
  3110                           	opt stack 0
  3111                           tblptru	equ	0xFF8
  3112                           tblptrh	equ	0xFF7
  3113                           tblptrl	equ	0xFF6
  3114                           tablat	equ	0xFF5
  3115                           prodh	equ	0xFF4
  3116                           prodl	equ	0xFF3
  3117                           intcon	equ	0xFF2
  3118                           intcon2	equ	0xFF1
  3119                           postinc0	equ	0xFEE
  3120                           wreg	equ	0xFE8
  3121                           postdec1	equ	0xFE5
  3122                           fsr1h	equ	0xFE2
  3123                           fsr1l	equ	0xFE1
  3124                           indf2	equ	0xFDF
  3125                           postinc2	equ	0xFDE
  3126                           postdec2	equ	0xFDD
  3127                           fsr2h	equ	0xFDA
  3128                           fsr2l	equ	0xFD9
  3129                           status	equ	0xFD8
  3130                           
  3131 ;; *************** function _memset *****************
  3132 ;; Defined at:
  3133 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  p1              2    0[BANK0 ] PTR void 
  3136 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  3137 ;;  c               2    2[BANK0 ] int 
  3138 ;;  n               2    4[BANK0 ] unsigned int 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  p               2    6[BANK0 ] PTR unsigned char 
  3141 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  2    0[BANK0 ] PTR void 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3151 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3152 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3154 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3155 ;;Total ram usage:        8 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:   11
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_USBDeviceInit
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text8
  3166  0135B6                     __ptext8:
  3167                           	opt stack 0
  3168  0135B6                     _memset:
  3169                           	opt stack 16
  3170                           
  3171                           ; BSR set to: 13
  3172                           ;incstack = 0
  3173  0135B6  C060  F066         	movff	memset@p1,memset@p
  3174  0135BA  C061  F067         	movff	memset@p1+1,memset@p+1
  3175  0135BE  D009               	goto	l8276
  3176  0135C0                     l8272:
  3177  0135C0  C066  FFD9         	movff	memset@p,fsr2l
  3178  0135C4  C067  FFDA         	movff	memset@p+1,fsr2h
  3179  0135C8  C062  FFDF         	movff	memset@c,indf2
  3180  0135CC  0100               	movlb	0	; () banked
  3181  0135CE  4B66               	infsnz	memset@p& (0+255),f,b
  3182  0135D0  2B67               	incf	(memset@p+1)& (0+255),f,b
  3183  0135D2                     l8276:
  3184  0135D2  0100               	movlb	0	; () banked
  3185  0135D4  0764               	decf	memset@n& (0+255),f,b
  3186  0135D6  A0D8               	btfss	status,0,c
  3187  0135D8  0765               	decf	(memset@n+1)& (0+255),f,b
  3188  0135DA  0100               	movlb	0	; () banked
  3189  0135DC  2964               	incf	memset@n& (0+255),w,b
  3190  0135DE  E1F0               	bnz	l8272
  3191  0135E0  0100               	movlb	0	; () banked
  3192  0135E2  2965               	incf	(memset@n+1)& (0+255),w,b
  3193  0135E4  B4D8               	btfsc	status,2,c
  3194  0135E6  0012               	return	
  3195  0135E8  D7EB               	goto	l8272
  3196  0135EA                     __end_of_memset:
  3197                           	opt stack 0
  3198                           tblptru	equ	0xFF8
  3199                           tblptrh	equ	0xFF7
  3200                           tblptrl	equ	0xFF6
  3201                           tablat	equ	0xFF5
  3202                           prodh	equ	0xFF4
  3203                           prodl	equ	0xFF3
  3204                           intcon	equ	0xFF2
  3205                           intcon2	equ	0xFF1
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           postdec1	equ	0xFE5
  3209                           fsr1h	equ	0xFE2
  3210                           fsr1l	equ	0xFE1
  3211                           indf2	equ	0xFDF
  3212                           postinc2	equ	0xFDE
  3213                           postdec2	equ	0xFDD
  3214                           fsr2h	equ	0xFDA
  3215                           fsr2l	equ	0xFD9
  3216                           status	equ	0xFD8
  3217                           
  3218 ;; *************** function _USBDeviceAttach *****************
  3219 ;; Defined at:
  3220 ;;		line 1352 in file "../My_library/usb/usb_device.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;		None               void
  3227 ;; Registers used:
  3228 ;;		wreg, status,2
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:   11
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_USB_init
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text9
  3249  0134D8                     __ptext9:
  3250                           	opt stack 0
  3251  0134D8                     _USBDeviceAttach:
  3252                           	opt stack 17
  3253                           
  3254                           ;usb_device.c: 1356: {
  3255                           ;usb_device.c: 1357: if(1 == 1)
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;incstack = 0
  3259  0134D8  5024               	movf	_USBDeviceState,w,c	;volatile
  3260  0134DA  A4D8               	btfss	status,2,c
  3261  0134DC  0012               	return	
  3262                           
  3263                           ;usb_device.c: 1358: {
  3264                           ;usb_device.c: 1360: UCON = 0;
  3265  0134DE  0E00               	movlw	0
  3266  0134E0  6E65               	movwf	3941,c	;volatile
  3267                           
  3268                           ;usb_device.c: 1363: UIE = 0;
  3269  0134E2  0E00               	movlw	0
  3270  0134E4  010F               	movlb	15	; () banked
  3271  0134E6  6F36               	movwf	54,b	;volatile
  3272                           
  3273                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  3274  0134E8  0E16               	movlw	22
  3275  0134EA  010F               	movlb	15	; () banked
  3276  0134EC  6F39               	movwf	57,b	;volatile
  3277  0134EE  0E9F               	movlw	159
  3278  0134F0  010F               	movlb	15	; () banked
  3279  0134F2  6F37               	movwf	55,b	;volatile
  3280  0134F4  0E7B               	movlw	123
  3281  0134F6  010F               	movlb	15	; () banked
  3282  0134F8  6F36               	movwf	54,b	;volatile
  3283                           
  3284                           ; BSR set to: 15
  3285                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  3286  0134FA  8ED0               	bsf	4048,7,c	;volatile
  3287                           
  3288                           ; BSR set to: 15
  3289  0134FC  88A2               	bsf	4002,4,c	;volatile
  3290                           
  3291                           ; BSR set to: 15
  3292  0134FE  88A0               	bsf	4000,4,c	;volatile
  3293                           
  3294                           ; BSR set to: 15
  3295  013500  8EF2               	bsf	intcon,7,c	;volatile
  3296                           
  3297                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3298  013502  D001               	goto	l207
  3299  013504                     l208:
  3300  013504  8665               	bsf	3941,3,c	;volatile
  3301  013506                     l207:
  3302  013506  A665               	btfss	3941,3,c	;volatile
  3303  013508  D7FD               	goto	l208
  3304                           
  3305                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  3306  01350A  0E01               	movlw	1
  3307  01350C  6E24               	movwf	_USBDeviceState,c	;volatile
  3308  01350E  0012               	return	
  3309  013510                     __end_of_USBDeviceAttach:
  3310                           	opt stack 0
  3311                           tblptru	equ	0xFF8
  3312                           tblptrh	equ	0xFF7
  3313                           tblptrl	equ	0xFF6
  3314                           tablat	equ	0xFF5
  3315                           prodh	equ	0xFF4
  3316                           prodl	equ	0xFF3
  3317                           intcon	equ	0xFF2
  3318                           intcon2	equ	0xFF1
  3319                           postinc0	equ	0xFEE
  3320                           wreg	equ	0xFE8
  3321                           postdec1	equ	0xFE5
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           indf2	equ	0xFDF
  3325                           postinc2	equ	0xFDE
  3326                           postdec2	equ	0xFDD
  3327                           fsr2h	equ	0xFDA
  3328                           fsr2l	equ	0xFD9
  3329                           status	equ	0xFD8
  3330                           
  3331 ;; *************** function _UART_init *****************
  3332 ;; Defined at:
  3333 ;;		line 10 in file "../My_library/My_UART.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;		None               void
  3340 ;; Registers used:
  3341 ;;		wreg, status,2
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:   11
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_main_init
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text10
  3362  0137A8                     __ptext10:
  3363                           	opt stack 0
  3364  0137A8                     _UART_init:
  3365                           	opt stack 18
  3366                           
  3367                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  3368                           
  3369                           ;incstack = 0
  3370  0137A8  9CAD               	bcf	4013,6,c	;volatile
  3371                           
  3372                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  3373  0137AA  8AAD               	bsf	4013,5,c	;volatile
  3374                           
  3375                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  3376  0137AC  98AD               	bcf	4013,4,c	;volatile
  3377                           
  3378                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  3379  0137AE  94AD               	bcf	4013,2,c	;volatile
  3380                           
  3381                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  3382  0137B0  8EAC               	bsf	4012,7,c	;volatile
  3383                           
  3384                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  3385  0137B2  9CAC               	bcf	4012,6,c	;volatile
  3386                           
  3387                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  3388  0137B4  88AC               	bsf	4012,4,c	;volatile
  3389                           
  3390                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  3391  0137B6  867E               	bsf	3966,3,c	;volatile
  3392                           
  3393                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  3394  0137B8  0E19               	movlw	25
  3395  0137BA  6EB0               	movwf	4016,c	;volatile
  3396                           
  3397                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  3398  0137BC  0E00               	movlw	0
  3399  0137BE  6E7F               	movwf	3967,c	;volatile
  3400                           
  3401                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  3402  0137C0  9A9F               	bcf	3999,5,c	;volatile
  3403                           
  3404                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  3405  0137C2  989F               	bcf	3999,4,c	;volatile
  3406                           
  3407                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  3408  0137C4  8A9D               	bsf	3997,5,c	;volatile
  3409                           
  3410                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  3411  0137C6  8CF2               	bsf	intcon,6,c	;volatile
  3412  0137C8  0012               	return		;funcret
  3413  0137CA                     __end_of_UART_init:
  3414                           	opt stack 0
  3415                           tblptru	equ	0xFF8
  3416                           tblptrh	equ	0xFF7
  3417                           tblptrl	equ	0xFF6
  3418                           tablat	equ	0xFF5
  3419                           prodh	equ	0xFF4
  3420                           prodl	equ	0xFF3
  3421                           intcon	equ	0xFF2
  3422                           intcon2	equ	0xFF1
  3423                           postinc0	equ	0xFEE
  3424                           wreg	equ	0xFE8
  3425                           postdec1	equ	0xFE5
  3426                           fsr1h	equ	0xFE2
  3427                           fsr1l	equ	0xFE1
  3428                           indf2	equ	0xFDF
  3429                           postinc2	equ	0xFDE
  3430                           postdec2	equ	0xFDD
  3431                           fsr2h	equ	0xFDA
  3432                           fsr2l	equ	0xFD9
  3433                           status	equ	0xFD8
  3434                           
  3435 ;; *************** function _RTCC_init *****************
  3436 ;; Defined at:
  3437 ;;		line 22 in file "../My_library/My_RTCC.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;		None               void
  3444 ;; Registers used:
  3445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:   15
  3458 ;; This function calls:
  3459 ;;		_RTCC_from_RTCC
  3460 ;;		_RTCC_from_epoch
  3461 ;; This function is called by:
  3462 ;;		_main_init
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text11
  3467  0130B4                     __ptext11:
  3468                           	opt stack 0
  3469  0130B4                     _RTCC_init:
  3470                           	opt stack 14
  3471                           
  3472                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  3473                           
  3474                           ;incstack = 0
  3475  0130B4  010F               	movlb	15	; () banked
  3476  0130B6  8B3F               	bsf	63,5,b	;volatile
  3477                           
  3478                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  3479  0130B8  010F               	movlb	15	; () banked
  3480  0130BA  BB3F               	btfsc	63,5,b	;volatile
  3481  0130BC  D006               	goto	l8992
  3482                           
  3483                           ; BSR set to: 15
  3484                           ;My_RTCC.c: 25: EECON2 = 0x55;
  3485  0130BE  0E55               	movlw	85
  3486  0130C0  6EA7               	movwf	4007,c	;volatile
  3487                           
  3488                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  3489  0130C2  0EAA               	movlw	170
  3490  0130C4  6EA7               	movwf	4007,c	;volatile
  3491                           
  3492                           ; BSR set to: 15
  3493                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  3494  0130C6  010F               	movlb	15	; () banked
  3495  0130C8  8B3F               	bsf	63,5,b	;volatile
  3496  0130CA                     l8992:
  3497                           
  3498                           ; BSR set to: 15
  3499                           ;My_RTCC.c: 28: }
  3500                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  3501  0130CA  010F               	movlb	15	; () banked
  3502  0130CC  8F3F               	bsf	63,7,b	;volatile
  3503                           
  3504                           ; BSR set to: 15
  3505                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  3506  0130CE  010F               	movlb	15	; () banked
  3507  0130D0  953F               	bcf	63,2,b	;volatile
  3508                           
  3509                           ; BSR set to: 15
  3510                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  3511  0130D2  010F               	movlb	15	; () banked
  3512  0130D4  833C               	bsf	60,1,b	;volatile
  3513                           
  3514                           ; BSR set to: 15
  3515                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  3516  0130D6  010F               	movlb	15	; () banked
  3517  0130D8  853C               	bsf	60,2,b	;volatile
  3518                           
  3519                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  3520  0130DA  0E00               	movlw	0
  3521  0130DC  010F               	movlb	15	; () banked
  3522  0130DE  6F3E               	movwf	62,b	;volatile
  3523                           
  3524                           ; BSR set to: 15
  3525                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  3526  0130E0  86CD               	bsf	4045,3,c	;volatile
  3527                           
  3528                           ; BSR set to: 15
  3529                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
  3530  0130E2  0EB8               	movlw	low _now
  3531  0130E4  0100               	movlb	0	; () banked
  3532  0130E6  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3533  0130E8  0E01               	movlw	high _now
  3534  0130EA  0100               	movlb	0	; () banked
  3535  0130EC  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3536  0130EE  EC5B  F09C         	call	_RTCC_from_RTCC	;wreg free
  3537                           
  3538                           ;My_RTCC.c: 37: if (now.DD == 0) {
  3539  0130F2  0101               	movlb	1	; () banked
  3540  0130F4  51C0               	movf	(_now+8)& (0+255),w,b
  3541  0130F6  A4D8               	btfss	status,2,c
  3542  0130F8  0012               	return	
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;My_RTCC.c: 38: now.epoch = 0;
  3546  0130FA  0E00               	movlw	0
  3547  0130FC  0101               	movlb	1	; () banked
  3548  0130FE  6FB8               	movwf	_now& (0+255),b
  3549  013100  0E00               	movlw	0
  3550  013102  6FB9               	movwf	(_now+1)& (0+255),b
  3551  013104  0E00               	movlw	0
  3552  013106  6FBA               	movwf	(_now+2)& (0+255),b
  3553  013108  0E00               	movlw	0
  3554  01310A  6FBB               	movwf	(_now+3)& (0+255),b
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
  3558  01310C  0EB8               	movlw	low _now
  3559  01310E  0100               	movlb	0	; () banked
  3560  013110  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  3561  013112  0E01               	movlw	high _now
  3562  013114  0100               	movlb	0	; () banked
  3563  013116  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  3564  013118  EC41  F09C         	call	_RTCC_from_epoch	;wreg free
  3565  01311C  0012               	return	
  3566  01311E                     __end_of_RTCC_init:
  3567                           	opt stack 0
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           prodh	equ	0xFF4
  3573                           prodl	equ	0xFF3
  3574                           intcon	equ	0xFF2
  3575                           intcon2	equ	0xFF1
  3576                           postinc0	equ	0xFEE
  3577                           wreg	equ	0xFE8
  3578                           postdec1	equ	0xFE5
  3579                           fsr1h	equ	0xFE2
  3580                           fsr1l	equ	0xFE1
  3581                           indf2	equ	0xFDF
  3582                           postinc2	equ	0xFDE
  3583                           postdec2	equ	0xFDD
  3584                           fsr2h	equ	0xFDA
  3585                           fsr2l	equ	0xFD9
  3586                           status	equ	0xFD8
  3587                           
  3588 ;; *************** function _RTCC_from_epoch *****************
  3589 ;; Defined at:
  3590 ;;		line 210 in file "../My_library/My_RTCC.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  tm              2   47[BANK0 ] PTR struct .
  3593 ;;		 -> now(14), 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;		None
  3596 ;; Return value:  Size  Location     Type
  3597 ;;		None               void
  3598 ;; Registers used:
  3599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3608 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3609 ;;Total ram usage:        2 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:   14
  3612 ;; This function calls:
  3613 ;;		_caltime_to_RTCC
  3614 ;;		_epoch_to_caltime
  3615 ;; This function is called by:
  3616 ;;		_RTCC_init
  3617 ;;		_main
  3618 ;;		_RTCC_adjust_time_inc
  3619 ;;		_RTCC_adjust_time_dec
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text12
  3624  013882                     __ptext12:
  3625                           	opt stack 0
  3626  013882                     _RTCC_from_epoch:
  3627                           	opt stack 14
  3628                           
  3629                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
  3630                           
  3631                           ;incstack = 0
  3632  013882  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  3633  013886  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  3634  01388A  ECC2  F085         	call	_epoch_to_caltime	;wreg free
  3635                           
  3636                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
  3637  01388E  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  3638  013892  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  3639  013896  EC04  F08F         	call	_caltime_to_RTCC	;wreg free
  3640  01389A  0012               	return		;funcret
  3641  01389C                     __end_of_RTCC_from_epoch:
  3642                           	opt stack 0
  3643                           tblptru	equ	0xFF8
  3644                           tblptrh	equ	0xFF7
  3645                           tblptrl	equ	0xFF6
  3646                           tablat	equ	0xFF5
  3647                           prodh	equ	0xFF4
  3648                           prodl	equ	0xFF3
  3649                           intcon	equ	0xFF2
  3650                           intcon2	equ	0xFF1
  3651                           postinc0	equ	0xFEE
  3652                           wreg	equ	0xFE8
  3653                           postdec1	equ	0xFE5
  3654                           fsr1h	equ	0xFE2
  3655                           fsr1l	equ	0xFE1
  3656                           indf2	equ	0xFDF
  3657                           postinc2	equ	0xFDE
  3658                           postdec2	equ	0xFDD
  3659                           fsr2h	equ	0xFDA
  3660                           fsr2l	equ	0xFD9
  3661                           status	equ	0xFD8
  3662                           
  3663 ;; *************** function _epoch_to_caltime *****************
  3664 ;; Defined at:
  3665 ;;		line 125 in file "../My_library/My_RTCC.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  tm              2   33[BANK0 ] PTR struct .
  3668 ;;		 -> now(14), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  num             4   43[BANK0 ] unsigned long 
  3671 ;;  day             2   39[BANK0 ] unsigned int 
  3672 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  3673 ;;  month           1   42[BANK0 ] unsigned char 
  3674 ;;  year            1   41[BANK0 ] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;		None               void
  3677 ;; Registers used:
  3678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3684 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3685 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3687 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3688 ;;Total ram usage:       14 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:   13
  3691 ;; This function calls:
  3692 ;;		_get_quot_rem
  3693 ;;		_month_length
  3694 ;; This function is called by:
  3695 ;;		_RTCC_from_epoch
  3696 ;;		_RTCC_from_caltime
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text13
  3701  010B84                     __ptext13:
  3702                           	opt stack 0
  3703  010B84                     _epoch_to_caltime:
  3704                           	opt stack 14
  3705                           
  3706                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
  3707                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
  3708                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
  3709                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
  3710                           ;My_RTCC.c: 132: uint16_t day;
  3711                           ;My_RTCC.c: 133: uint8_t year = 0;
  3712                           
  3713                           ;incstack = 0
  3714  010B84  0E00               	movlw	0
  3715  010B86  0100               	movlb	0	; () banked
  3716  010B88  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  3717                           
  3718                           ;My_RTCC.c: 134: uint8_t month = 1;
  3719  010B8A  0E01               	movlw	1
  3720  010B8C  0100               	movlb	0	; () banked
  3721  010B8E  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;My_RTCC.c: 135: epoch_t num;
  3725                           ;My_RTCC.c: 137: num = tm->epoch;
  3726  010B90  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  3727  010B94  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  3728  010B98  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  3729  010B9C  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  3730  010BA0  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  3731  010BA4  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
  3735  010BA8  0E8B               	movlw	low epoch_to_caltime@num
  3736  010BAA  0100               	movlb	0	; () banked
  3737  010BAC  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3738  010BAE  0E00               	movlw	high epoch_to_caltime@num
  3739  010BB0  0100               	movlb	0	; () banked
  3740  010BB2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3741  010BB4  0E3C               	movlw	60
  3742  010BB6  0100               	movlb	0	; () banked
  3743  010BB8  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3744  010BBA  EC6F  F08F         	call	_get_quot_rem	;wreg free
  3745  010BBE  0100               	movlb	0	; () banked
  3746  010BC0  EE20 F004          	lfsr	2,4
  3747  010BC4  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3748  010BC6  26D9               	addwf	fsr2l,f,c
  3749  010BC8  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3750  010BCA  22DA               	addwfc	fsr2h,f,c
  3751  010BCC  0100               	movlb	0	; () banked
  3752  010BCE  C079  FFDF         	movff	?_get_quot_rem,indf2
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
  3756  010BD2  0E8B               	movlw	low epoch_to_caltime@num
  3757  010BD4  0100               	movlb	0	; () banked
  3758  010BD6  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3759  010BD8  0E00               	movlw	high epoch_to_caltime@num
  3760  010BDA  0100               	movlb	0	; () banked
  3761  010BDC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3762  010BDE  0E3C               	movlw	60
  3763  010BE0  0100               	movlb	0	; () banked
  3764  010BE2  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3765  010BE4  EC6F  F08F         	call	_get_quot_rem	;wreg free
  3766  010BE8  0100               	movlb	0	; () banked
  3767  010BEA  EE20 F005          	lfsr	2,5
  3768  010BEE  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3769  010BF0  26D9               	addwf	fsr2l,f,c
  3770  010BF2  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3771  010BF4  22DA               	addwfc	fsr2h,f,c
  3772  010BF6  0100               	movlb	0	; () banked
  3773  010BF8  C079  FFDF         	movff	?_get_quot_rem,indf2
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
  3777  010BFC  0E8B               	movlw	low epoch_to_caltime@num
  3778  010BFE  0100               	movlb	0	; () banked
  3779  010C00  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3780  010C02  0E00               	movlw	high epoch_to_caltime@num
  3781  010C04  0100               	movlb	0	; () banked
  3782  010C06  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3783  010C08  0E18               	movlw	24
  3784  010C0A  0100               	movlb	0	; () banked
  3785  010C0C  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3786  010C0E  EC6F  F08F         	call	_get_quot_rem	;wreg free
  3787  010C12  0100               	movlb	0	; () banked
  3788  010C14  EE20 F006          	lfsr	2,6
  3789  010C18  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3790  010C1A  26D9               	addwf	fsr2l,f,c
  3791  010C1C  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3792  010C1E  22DA               	addwfc	fsr2h,f,c
  3793  010C20  0100               	movlb	0	; () banked
  3794  010C22  C079  FFDF         	movff	?_get_quot_rem,indf2
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;My_RTCC.c: 141: day = num;
  3798  010C26  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  3799  010C2A  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;My_RTCC.c: 142: day_since_epoch = day;
  3803  010C2E  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  3804  010C32  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;My_RTCC.c: 144: num += 6;
  3808  010C36  0E06               	movlw	6
  3809  010C38  0100               	movlb	0	; () banked
  3810  010C3A  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  3811  010C3C  0E00               	movlw	0
  3812  010C3E  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  3813  010C40  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  3814  010C42  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
  3818  010C44  0E8B               	movlw	low epoch_to_caltime@num
  3819  010C46  0100               	movlb	0	; () banked
  3820  010C48  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3821  010C4A  0E00               	movlw	high epoch_to_caltime@num
  3822  010C4C  0100               	movlb	0	; () banked
  3823  010C4E  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3824  010C50  0E07               	movlw	7
  3825  010C52  0100               	movlb	0	; () banked
  3826  010C54  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3827  010C56  EC6F  F08F         	call	_get_quot_rem	;wreg free
  3828  010C5A  0100               	movlb	0	; () banked
  3829  010C5C  EE20 F007          	lfsr	2,7
  3830  010C60  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3831  010C62  26D9               	addwf	fsr2l,f,c
  3832  010C64  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3833  010C66  22DA               	addwfc	fsr2h,f,c
  3834  010C68  0100               	movlb	0	; () banked
  3835  010C6A  C079  FFDF         	movff	?_get_quot_rem,indf2
  3836                           
  3837                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
  3838  010C6E  D03F               	goto	l8382
  3839  010C70                     l874:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;My_RTCC.c: 155: LATB2 = 1;
  3843  010C70  848A               	bsf	3978,2,c	;volatile
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;My_RTCC.c: 156: day = day - month_length(year, month);
  3847  010C72  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  3848  010C76  0100               	movlb	0	; () banked
  3849  010C78  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  3850  010C7A  EC4E  F08D         	call	_month_length
  3851  010C7E  0100               	movlb	0	; () banked
  3852  010C80  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  3853  010C82  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  3854  010C84  0100               	movlb	0	; () banked
  3855  010C86  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  3856  010C88  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3857  010C8A  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3858  010C8C  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3859  010C8E  0100               	movlb	0	; () banked
  3860  010C90  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  3861  010C92  0100               	movlb	0	; () banked
  3862  010C94  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  3863  010C96  0100               	movlb	0	; () banked
  3864  010C98  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  3865  010C9A  0100               	movlb	0	; () banked
  3866  010C9C  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  3867  010C9E  0100               	movlb	0	; () banked
  3868  010CA0  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3869  010CA2  0100               	movlb	0	; () banked
  3870  010CA4  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;My_RTCC.c: 157: if (month == 12) {
  3874  010CA6  0E0C               	movlw	12
  3875  010CA8  0100               	movlb	0	; () banked
  3876  010CAA  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  3877  010CAC  A4D8               	btfss	status,2,c
  3878  010CAE  D019               	goto	l8376
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;My_RTCC.c: 158: month = 1;
  3882  010CB0  0E01               	movlw	1
  3883  010CB2  0100               	movlb	0	; () banked
  3884  010CB4  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;My_RTCC.c: 159: year++;
  3888  010CB6  0100               	movlb	0	; () banked
  3889  010CB8  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;My_RTCC.c: 161: if (year >= 100) {
  3893  010CBA  0E63               	movlw	99
  3894  010CBC  0100               	movlb	0	; () banked
  3895  010CBE  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  3896  010CC0  D012               	goto	l8378
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
  3900  010CC2  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  3901  010CC6  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  3902  010CCA  0E80               	movlw	128
  3903  010CCC  5EDE               	subwf	postinc2,f,c
  3904  010CCE  0E13               	movlw	19
  3905  010CD0  5ADE               	subwfb	postinc2,f,c
  3906  010CD2  0E19               	movlw	25
  3907  010CD4  5ADE               	subwfb	postinc2,f,c
  3908  010CD6  0EBC               	movlw	188
  3909  010CD8  5ADE               	subwfb	postinc2,f,c
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;My_RTCC.c: 163: year = 0;
  3913  010CDA  0E00               	movlw	0
  3914  010CDC  0100               	movlb	0	; () banked
  3915  010CDE  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;My_RTCC.c: 164: }
  3919                           ;My_RTCC.c: 165: } else {
  3920  010CE0  D002               	goto	l8378
  3921  010CE2                     l8376:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;My_RTCC.c: 166: month++;
  3925  010CE2  0100               	movlb	0	; () banked
  3926  010CE4  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  3927  010CE6                     l8378:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;My_RTCC.c: 167: }
  3931                           ;My_RTCC.c: 168: month_cache = month;
  3932  010CE6  C08A  F0DB         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;My_RTCC.c: 169: year_cache = year;
  3936  010CEA  C089  F0C3         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  3937  010CEE                     l8382:
  3938                           
  3939                           ; BSR set to: 0
  3940  010CEE  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  3941  010CF2  0100               	movlb	0	; () banked
  3942  010CF4  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  3943  010CF6  EC4E  F08D         	call	_month_length
  3944  010CFA  0100               	movlb	0	; () banked
  3945  010CFC  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  3946  010CFE  0100               	movlb	0	; () banked
  3947  010D00  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  3948  010D02  0100               	movlb	0	; () banked
  3949  010D04  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  3950  010D06  0E00               	movlw	0
  3951  010D08  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  3952  010D0A  B0D8               	btfsc	status,0,c
  3953  010D0C  D7B1               	goto	l874
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;My_RTCC.c: 170: }
  3957                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
  3958                           
  3959                           ; BSR set to: 0
  3960  010D0E  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  3961  010D12  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  3962  010D16  0100               	movlb	0	; () banked
  3963  010D18  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  3964  010D1A  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3965  010D1C  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3966  010D1E  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3967  010D20  0100               	movlb	0	; () banked
  3968  010D22  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  3969  010D24  0100               	movlb	0	; () banked
  3970  010D26  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  3971  010D28  0101               	movlb	1	; () banked
  3972  010D2A  6F12               	movwf	epoch_to_caltime@day_cache& (0+255),b
  3973  010D2C  0100               	movlb	0	; () banked
  3974  010D2E  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  3975  010D30  0100               	movlb	0	; () banked
  3976  010D32  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3977  010D34  0101               	movlb	1	; () banked
  3978  010D36  6F13               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  3979                           
  3980                           ; BSR set to: 1
  3981                           ;My_RTCC.c: 172: day++;
  3982  010D38  0100               	movlb	0	; () banked
  3983  010D3A  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  3984  010D3C  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;My_RTCC.c: 174: tm->YY = year;
  3988  010D3E  0100               	movlb	0	; () banked
  3989  010D40  EE20 F00A          	lfsr	2,10
  3990  010D44  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3991  010D46  26D9               	addwf	fsr2l,f,c
  3992  010D48  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3993  010D4A  22DA               	addwfc	fsr2h,f,c
  3994  010D4C  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;My_RTCC.c: 175: tm->MM = month;
  3998  010D50  0100               	movlb	0	; () banked
  3999  010D52  EE20 F009          	lfsr	2,9
  4000  010D56  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4001  010D58  26D9               	addwf	fsr2l,f,c
  4002  010D5A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4003  010D5C  22DA               	addwfc	fsr2h,f,c
  4004  010D5E  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;My_RTCC.c: 176: tm->DD = day;
  4008  010D62  0100               	movlb	0	; () banked
  4009  010D64  EE20 F008          	lfsr	2,8
  4010  010D68  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4011  010D6A  26D9               	addwf	fsr2l,f,c
  4012  010D6C  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4013  010D6E  22DA               	addwfc	fsr2h,f,c
  4014  010D70  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  4015                           
  4016                           ; BSR set to: 0
  4017  010D74  0012               	return		;funcret
  4018  010D76                     __end_of_epoch_to_caltime:
  4019                           	opt stack 0
  4020                           tblptru	equ	0xFF8
  4021                           tblptrh	equ	0xFF7
  4022                           tblptrl	equ	0xFF6
  4023                           tablat	equ	0xFF5
  4024                           prodh	equ	0xFF4
  4025                           prodl	equ	0xFF3
  4026                           intcon	equ	0xFF2
  4027                           intcon2	equ	0xFF1
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           postdec1	equ	0xFE5
  4031                           fsr1h	equ	0xFE2
  4032                           fsr1l	equ	0xFE1
  4033                           indf2	equ	0xFDF
  4034                           postinc2	equ	0xFDE
  4035                           postdec2	equ	0xFDD
  4036                           fsr2h	equ	0xFDA
  4037                           fsr2l	equ	0xFD9
  4038                           status	equ	0xFD8
  4039                           
  4040 ;; *************** function _get_quot_rem *****************
  4041 ;; Defined at:
  4042 ;;		line 80 in file "../My_library/My_RTCC.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  4045 ;;		 -> epoch_to_caltime@num(4), 
  4046 ;;  div             1   27[BANK0 ] unsigned char 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  num             4   29[BANK0 ] unsigned long 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  4   25[BANK0 ] unsigned long 
  4051 ;; Registers used:
  4052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4058 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4059 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4061 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4062 ;;Total ram usage:        8 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:   12
  4065 ;; This function calls:
  4066 ;;		___lldiv
  4067 ;;		___lmul
  4068 ;; This function is called by:
  4069 ;;		_epoch_to_caltime
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text14
  4074  011EDE                     __ptext14:
  4075                           	opt stack 0
  4076  011EDE                     _get_quot_rem:
  4077                           	opt stack 14
  4078                           
  4079                           ;My_RTCC.c: 83: epoch_t num = *quot;
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;incstack = 0
  4083  011EDE  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  4084  011EE2  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  4085  011EE6  CFDE F07D          	movff	postinc2,get_quot_rem@num
  4086  011EEA  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  4087  011EEE  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  4088  011EF2  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  4089                           
  4090                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
  4091  011EF6  0100               	movlb	0	; () banked
  4092  011EF8  517B               	movf	get_quot_rem@div& (0+255),w,b
  4093  011EFA  0100               	movlb	0	; () banked
  4094  011EFC  6F64               	movwf	___lldiv@divisor& (0+255),b
  4095  011EFE  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  4096  011F00  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  4097  011F02  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  4098  011F04  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  4099  011F08  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  4100  011F0C  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  4101  011F10  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  4102  011F14  EC39  F092         	call	___lldiv	;wreg free
  4103  011F18  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  4104  011F1C  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  4105  011F20  0100               	movlb	0	; () banked
  4106  011F22  C060  FFDE         	movff	?___lldiv,postinc2
  4107  011F26  0100               	movlb	0	; () banked
  4108  011F28  C061  FFDE         	movff	?___lldiv+1,postinc2
  4109  011F2C  0100               	movlb	0	; () banked
  4110  011F2E  C062  FFDE         	movff	?___lldiv+2,postinc2
  4111  011F32  0100               	movlb	0	; () banked
  4112  011F34  C063  FFDD         	movff	?___lldiv+3,postdec2
  4113  011F38  52DD               	movf	postdec2,f,c
  4114  011F3A  52DD               	movf	postdec2,f,c
  4115  011F3C  CFDE F06D          	movff	postinc2,___lmul@multiplier
  4116  011F40  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  4117  011F44  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  4118  011F48  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  4119  011F4C  0100               	movlb	0	; () banked
  4120  011F4E  517B               	movf	get_quot_rem@div& (0+255),w,b
  4121  011F50  0100               	movlb	0	; () banked
  4122  011F52  6F71               	movwf	___lmul@multiplicand& (0+255),b
  4123  011F54  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  4124  011F56  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4125  011F58  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4126  011F5A  ECE8  F097         	call	___lmul	;wreg free
  4127  011F5E  0100               	movlb	0	; () banked
  4128  011F60  1F6D               	comf	?___lmul& (0+255),f,b
  4129  011F62  0100               	movlb	0	; () banked
  4130  011F64  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  4131  011F66  0100               	movlb	0	; () banked
  4132  011F68  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  4133  011F6A  0100               	movlb	0	; () banked
  4134  011F6C  1F70               	comf	(?___lmul+3)& (0+255),f,b
  4135  011F6E  0100               	movlb	0	; () banked
  4136  011F70  2B6D               	incf	?___lmul& (0+255),f,b
  4137  011F72  0E00               	movlw	0
  4138  011F74  0100               	movlb	0	; () banked
  4139  011F76  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  4140  011F78  0100               	movlb	0	; () banked
  4141  011F7A  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  4142  011F7C  0100               	movlb	0	; () banked
  4143  011F7E  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  4144  011F80  0100               	movlb	0	; () banked
  4145  011F82  517D               	movf	get_quot_rem@num& (0+255),w,b
  4146  011F84  0100               	movlb	0	; () banked
  4147  011F86  256D               	addwf	?___lmul& (0+255),w,b
  4148  011F88  0100               	movlb	0	; () banked
  4149  011F8A  6F79               	movwf	?_get_quot_rem& (0+255),b
  4150  011F8C  0100               	movlb	0	; () banked
  4151  011F8E  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  4152  011F90  0100               	movlb	0	; () banked
  4153  011F92  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  4154  011F94  0100               	movlb	0	; () banked
  4155  011F96  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  4156  011F98  0100               	movlb	0	; () banked
  4157  011F9A  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  4158  011F9C  0100               	movlb	0	; () banked
  4159  011F9E  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  4160  011FA0  0100               	movlb	0	; () banked
  4161  011FA2  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  4162  011FA4  0100               	movlb	0	; () banked
  4163  011FA6  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  4164  011FA8  0100               	movlb	0	; () banked
  4165  011FAA  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  4166  011FAC  0100               	movlb	0	; () banked
  4167  011FAE  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  4168  011FB0  0012               	return	
  4169  011FB2                     __end_of_get_quot_rem:
  4170                           	opt stack 0
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           prodh	equ	0xFF4
  4176                           prodl	equ	0xFF3
  4177                           intcon	equ	0xFF2
  4178                           intcon2	equ	0xFF1
  4179                           postinc0	equ	0xFEE
  4180                           wreg	equ	0xFE8
  4181                           postdec1	equ	0xFE5
  4182                           fsr1h	equ	0xFE2
  4183                           fsr1l	equ	0xFE1
  4184                           indf2	equ	0xFDF
  4185                           postinc2	equ	0xFDE
  4186                           postdec2	equ	0xFDD
  4187                           fsr2h	equ	0xFDA
  4188                           fsr2l	equ	0xFD9
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function ___lldiv *****************
  4192 ;; Defined at:
  4193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  dividend        4    0[BANK0 ] unsigned long 
  4196 ;;  divisor         4    4[BANK0 ] unsigned long 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  quotient        4    8[BANK0 ] unsigned long 
  4199 ;;  counter         1   12[BANK0 ] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  4    0[BANK0 ] unsigned long 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4209 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4210 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4212 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4213 ;;Total ram usage:       13 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:   11
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_get_quot_rem
  4220 ;;		_CTMU_read
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text15
  4225  012472                     __ptext15:
  4226                           	opt stack 0
  4227  012472                     ___lldiv:
  4228                           	opt stack 14
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;incstack = 0
  4232  012472  0E00               	movlw	0
  4233  012474  0100               	movlb	0	; () banked
  4234  012476  6F68               	movwf	___lldiv@quotient& (0+255),b
  4235  012478  0E00               	movlw	0
  4236  01247A  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  4237  01247C  0E00               	movlw	0
  4238  01247E  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  4239  012480  0E00               	movlw	0
  4240  012482  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  4241                           
  4242                           ; BSR set to: 0
  4243  012484  0100               	movlb	0	; () banked
  4244  012486  5164               	movf	___lldiv@divisor& (0+255),w,b
  4245  012488  0100               	movlb	0	; () banked
  4246  01248A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4247  01248C  0100               	movlb	0	; () banked
  4248  01248E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4249  012490  0100               	movlb	0	; () banked
  4250  012492  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  4251  012494  B4D8               	btfsc	status,2,c
  4252  012496  D042               	goto	l1919
  4253                           
  4254                           ; BSR set to: 0
  4255  012498  0E01               	movlw	1
  4256  01249A  0100               	movlb	0	; () banked
  4257  01249C  6F6C               	movwf	___lldiv@counter& (0+255),b
  4258  01249E  D008               	goto	l8204
  4259  0124A0                     l8202:
  4260                           
  4261                           ; BSR set to: 0
  4262  0124A0  0100               	movlb	0	; () banked
  4263  0124A2  90D8               	bcf	status,0,c
  4264  0124A4  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  4265  0124A6  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4266  0124A8  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4267  0124AA  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4268  0124AC  0100               	movlb	0	; () banked
  4269  0124AE  2B6C               	incf	___lldiv@counter& (0+255),f,b
  4270  0124B0                     l8204:
  4271                           
  4272                           ; BSR set to: 0
  4273  0124B0  0100               	movlb	0	; () banked
  4274  0124B2  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4275  0124B4  D7F5               	goto	l8202
  4276  0124B6                     l8206:
  4277                           
  4278                           ; BSR set to: 0
  4279  0124B6  0100               	movlb	0	; () banked
  4280  0124B8  90D8               	bcf	status,0,c
  4281  0124BA  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  4282  0124BC  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4283  0124BE  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4284  0124C0  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4285                           
  4286                           ; BSR set to: 0
  4287  0124C2  0100               	movlb	0	; () banked
  4288  0124C4  5164               	movf	___lldiv@divisor& (0+255),w,b
  4289  0124C6  0100               	movlb	0	; () banked
  4290  0124C8  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  4291  0124CA  0100               	movlb	0	; () banked
  4292  0124CC  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4293  0124CE  0100               	movlb	0	; () banked
  4294  0124D0  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4295  0124D2  0100               	movlb	0	; () banked
  4296  0124D4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4297  0124D6  0100               	movlb	0	; () banked
  4298  0124D8  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4299  0124DA  0100               	movlb	0	; () banked
  4300  0124DC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4301  0124DE  0100               	movlb	0	; () banked
  4302  0124E0  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4303  0124E2  A0D8               	btfss	status,0,c
  4304  0124E4  D012               	goto	l8214
  4305                           
  4306                           ; BSR set to: 0
  4307  0124E6  0100               	movlb	0	; () banked
  4308  0124E8  5164               	movf	___lldiv@divisor& (0+255),w,b
  4309  0124EA  0100               	movlb	0	; () banked
  4310  0124EC  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  4311  0124EE  0100               	movlb	0	; () banked
  4312  0124F0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4313  0124F2  0100               	movlb	0	; () banked
  4314  0124F4  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4315  0124F6  0100               	movlb	0	; () banked
  4316  0124F8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4317  0124FA  0100               	movlb	0	; () banked
  4318  0124FC  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4319  0124FE  0100               	movlb	0	; () banked
  4320  012500  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4321  012502  0100               	movlb	0	; () banked
  4322  012504  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4323                           
  4324                           ; BSR set to: 0
  4325  012506  0100               	movlb	0	; () banked
  4326  012508  8168               	bsf	___lldiv@quotient& (0+255),0,b
  4327  01250A                     l8214:
  4328                           
  4329                           ; BSR set to: 0
  4330  01250A  0100               	movlb	0	; () banked
  4331  01250C  90D8               	bcf	status,0,c
  4332  01250E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4333  012510  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4334  012512  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4335  012514  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  4336                           
  4337                           ; BSR set to: 0
  4338  012516  0100               	movlb	0	; () banked
  4339  012518  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  4340  01251A  D7CD               	goto	l8206
  4341  01251C                     l1919:
  4342                           
  4343                           ; BSR set to: 0
  4344  01251C  C068  F060         	movff	___lldiv@quotient,?___lldiv
  4345  012520  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  4346  012524  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  4347  012528  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  4348                           
  4349                           ; BSR set to: 0
  4350  01252C  0012               	return		;funcret
  4351  01252E                     __end_of___lldiv:
  4352                           	opt stack 0
  4353                           tblptru	equ	0xFF8
  4354                           tblptrh	equ	0xFF7
  4355                           tblptrl	equ	0xFF6
  4356                           tablat	equ	0xFF5
  4357                           prodh	equ	0xFF4
  4358                           prodl	equ	0xFF3
  4359                           intcon	equ	0xFF2
  4360                           intcon2	equ	0xFF1
  4361                           postinc0	equ	0xFEE
  4362                           wreg	equ	0xFE8
  4363                           postdec1	equ	0xFE5
  4364                           fsr1h	equ	0xFE2
  4365                           fsr1l	equ	0xFE1
  4366                           indf2	equ	0xFDF
  4367                           postinc2	equ	0xFDE
  4368                           postdec2	equ	0xFDD
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           status	equ	0xFD8
  4372                           
  4373 ;; *************** function _caltime_to_RTCC *****************
  4374 ;; Defined at:
  4375 ;;		line 105 in file "../My_library/My_RTCC.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  tm              2    9[BANK0 ] PTR struct .
  4378 ;;		 -> now(14), 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;		None               void
  4383 ;; Registers used:
  4384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4390 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4393 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4394 ;;Total ram usage:        2 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:   13
  4397 ;; This function calls:
  4398 ;;		_d_to_x
  4399 ;; This function is called by:
  4400 ;;		_RTCC_from_epoch
  4401 ;;		_RTCC_from_caltime
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text16
  4406  011E08                     __ptext16:
  4407                           	opt stack 0
  4408  011E08                     _caltime_to_RTCC:
  4409                           	opt stack 14
  4410  011E08                     l861:
  4411  011E08  010F               	movlb	15	; () banked
  4412  011E0A  B93F               	btfsc	63,4,b	;volatile
  4413  011E0C  D7FD               	goto	l861
  4414                           
  4415                           ; BSR set to: 15
  4416                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
  4417  011E0E  010F               	movlb	15	; () banked
  4418  011E10  813F               	bsf	63,0,b	;volatile
  4419                           
  4420                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
  4421  011E12  010F               	movlb	15	; () banked
  4422  011E14  833F               	bsf	63,1,b	;volatile
  4423                           
  4424                           ; BSR set to: 15
  4425                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
  4426  011E16  0100               	movlb	0	; () banked
  4427  011E18  EE20 F00A          	lfsr	2,10
  4428  011E1C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4429  011E1E  26D9               	addwf	fsr2l,f,c
  4430  011E20  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4431  011E22  22DA               	addwfc	fsr2h,f,c
  4432  011E24  50DF               	movf	indf2,w,c
  4433  011E26  ECC0  F09B         	call	_d_to_x
  4434  011E2A  010F               	movlb	15	; () banked
  4435  011E2C  6F3A               	movwf	58,b	;volatile
  4436                           
  4437                           ; BSR set to: 15
  4438                           ;My_RTCC.c: 110: RTCVALH = 0x00;
  4439  011E2E  0E00               	movlw	0
  4440  011E30  010F               	movlb	15	; () banked
  4441  011E32  6F3B               	movwf	59,b	;volatile
  4442                           
  4443                           ; BSR set to: 15
  4444                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
  4445  011E34  010F               	movlb	15	; () banked
  4446  011E36  913F               	bcf	63,0,b	;volatile
  4447                           
  4448                           ; BSR set to: 15
  4449                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
  4450  011E38  010F               	movlb	15	; () banked
  4451  011E3A  833F               	bsf	63,1,b	;volatile
  4452                           
  4453                           ; BSR set to: 15
  4454                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
  4455  011E3C  0100               	movlb	0	; () banked
  4456  011E3E  EE20 F008          	lfsr	2,8
  4457  011E42  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4458  011E44  26D9               	addwf	fsr2l,f,c
  4459  011E46  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4460  011E48  22DA               	addwfc	fsr2h,f,c
  4461  011E4A  50DF               	movf	indf2,w,c
  4462  011E4C  ECC0  F09B         	call	_d_to_x
  4463  011E50  010F               	movlb	15	; () banked
  4464  011E52  6F3A               	movwf	58,b	;volatile
  4465                           
  4466                           ; BSR set to: 15
  4467                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
  4468  011E54  0100               	movlb	0	; () banked
  4469  011E56  EE20 F009          	lfsr	2,9
  4470  011E5A  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4471  011E5C  26D9               	addwf	fsr2l,f,c
  4472  011E5E  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4473  011E60  22DA               	addwfc	fsr2h,f,c
  4474  011E62  50DF               	movf	indf2,w,c
  4475  011E64  ECC0  F09B         	call	_d_to_x
  4476  011E68  010F               	movlb	15	; () banked
  4477  011E6A  6F3B               	movwf	59,b	;volatile
  4478                           
  4479                           ; BSR set to: 15
  4480                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
  4481  011E6C  010F               	movlb	15	; () banked
  4482  011E6E  813F               	bsf	63,0,b	;volatile
  4483                           
  4484                           ; BSR set to: 15
  4485                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
  4486  011E70  010F               	movlb	15	; () banked
  4487  011E72  933F               	bcf	63,1,b	;volatile
  4488                           
  4489                           ; BSR set to: 15
  4490                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
  4491  011E74  0100               	movlb	0	; () banked
  4492  011E76  EE20 F006          	lfsr	2,6
  4493  011E7A  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4494  011E7C  26D9               	addwf	fsr2l,f,c
  4495  011E7E  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4496  011E80  22DA               	addwfc	fsr2h,f,c
  4497  011E82  50DF               	movf	indf2,w,c
  4498  011E84  ECC0  F09B         	call	_d_to_x
  4499  011E88  010F               	movlb	15	; () banked
  4500  011E8A  6F3A               	movwf	58,b	;volatile
  4501                           
  4502                           ; BSR set to: 15
  4503                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
  4504  011E8C  0100               	movlb	0	; () banked
  4505  011E8E  EE20 F007          	lfsr	2,7
  4506  011E92  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4507  011E94  26D9               	addwf	fsr2l,f,c
  4508  011E96  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4509  011E98  22DA               	addwfc	fsr2h,f,c
  4510  011E9A  50DF               	movf	indf2,w,c
  4511  011E9C  ECC0  F09B         	call	_d_to_x
  4512  011EA0  010F               	movlb	15	; () banked
  4513  011EA2  6F3B               	movwf	59,b	;volatile
  4514                           
  4515                           ; BSR set to: 15
  4516                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
  4517  011EA4  010F               	movlb	15	; () banked
  4518  011EA6  913F               	bcf	63,0,b	;volatile
  4519                           
  4520                           ; BSR set to: 15
  4521                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
  4522  011EA8  010F               	movlb	15	; () banked
  4523  011EAA  933F               	bcf	63,1,b	;volatile
  4524                           
  4525                           ; BSR set to: 15
  4526                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
  4527  011EAC  0100               	movlb	0	; () banked
  4528  011EAE  EE20 F004          	lfsr	2,4
  4529  011EB2  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4530  011EB4  26D9               	addwf	fsr2l,f,c
  4531  011EB6  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4532  011EB8  22DA               	addwfc	fsr2h,f,c
  4533  011EBA  50DF               	movf	indf2,w,c
  4534  011EBC  ECC0  F09B         	call	_d_to_x
  4535  011EC0  010F               	movlb	15	; () banked
  4536  011EC2  6F3A               	movwf	58,b	;volatile
  4537                           
  4538                           ; BSR set to: 15
  4539                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
  4540  011EC4  0100               	movlb	0	; () banked
  4541  011EC6  EE20 F005          	lfsr	2,5
  4542  011ECA  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4543  011ECC  26D9               	addwf	fsr2l,f,c
  4544  011ECE  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4545  011ED0  22DA               	addwfc	fsr2h,f,c
  4546  011ED2  50DF               	movf	indf2,w,c
  4547  011ED4  ECC0  F09B         	call	_d_to_x
  4548  011ED8  010F               	movlb	15	; () banked
  4549  011EDA  6F3B               	movwf	59,b	;volatile
  4550                           
  4551                           ; BSR set to: 15
  4552  011EDC  0012               	return		;funcret
  4553  011EDE                     __end_of_caltime_to_RTCC:
  4554                           	opt stack 0
  4555                           tblptru	equ	0xFF8
  4556                           tblptrh	equ	0xFF7
  4557                           tblptrl	equ	0xFF6
  4558                           tablat	equ	0xFF5
  4559                           prodh	equ	0xFF4
  4560                           prodl	equ	0xFF3
  4561                           intcon	equ	0xFF2
  4562                           intcon2	equ	0xFF1
  4563                           postinc0	equ	0xFEE
  4564                           wreg	equ	0xFE8
  4565                           postdec1	equ	0xFE5
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           indf2	equ	0xFDF
  4569                           postinc2	equ	0xFDE
  4570                           postdec2	equ	0xFDD
  4571                           fsr2h	equ	0xFDA
  4572                           fsr2l	equ	0xFD9
  4573                           status	equ	0xFD8
  4574                           
  4575 ;; *************** function _d_to_x *****************
  4576 ;; Defined at:
  4577 ;;		line 45 in file "../My_library/My_RTCC.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  dec             1    wreg     unsigned char 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  dec             1    8[BANK0 ] unsigned char 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      unsigned char 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4592 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4594 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4595 ;;Total ram usage:        1 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:   12
  4598 ;; This function calls:
  4599 ;;		___awdiv
  4600 ;; This function is called by:
  4601 ;;		_caltime_to_RTCC
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text17
  4606  013780                     __ptext17:
  4607                           	opt stack 0
  4608  013780                     _d_to_x:
  4609                           	opt stack 14
  4610                           
  4611                           ; BSR set to: 15
  4612                           ;incstack = 0
  4613                           ;d_to_x@dec stored from wreg
  4614  013780  0100               	movlb	0	; () banked
  4615  013782  6F68               	movwf	d_to_x@dec& (0+255),b
  4616                           
  4617                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
  4618  013784  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  4619  013788  0100               	movlb	0	; () banked
  4620  01378A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4621  01378C  0E00               	movlw	0
  4622  01378E  0100               	movlb	0	; () banked
  4623  013790  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4624  013792  0E0A               	movlw	10
  4625  013794  6F62               	movwf	___awdiv@divisor& (0+255),b
  4626  013796  ECDA  F091         	call	___awdiv	;wreg free
  4627  01379A  0100               	movlb	0	; () banked
  4628  01379C  5160               	movf	?___awdiv& (0+255),w,b
  4629  01379E  0D06               	mullw	6
  4630  0137A0  50F3               	movf	prodl,w,c
  4631  0137A2  0100               	movlb	0	; () banked
  4632  0137A4  2568               	addwf	d_to_x@dec& (0+255),w,b
  4633  0137A6  0012               	return	
  4634  0137A8                     __end_of_d_to_x:
  4635                           	opt stack 0
  4636                           tblptru	equ	0xFF8
  4637                           tblptrh	equ	0xFF7
  4638                           tblptrl	equ	0xFF6
  4639                           tablat	equ	0xFF5
  4640                           prodh	equ	0xFF4
  4641                           prodl	equ	0xFF3
  4642                           intcon	equ	0xFF2
  4643                           intcon2	equ	0xFF1
  4644                           postinc0	equ	0xFEE
  4645                           wreg	equ	0xFE8
  4646                           postdec1	equ	0xFE5
  4647                           fsr1h	equ	0xFE2
  4648                           fsr1l	equ	0xFE1
  4649                           indf2	equ	0xFDF
  4650                           postinc2	equ	0xFDE
  4651                           postdec2	equ	0xFDD
  4652                           fsr2h	equ	0xFDA
  4653                           fsr2l	equ	0xFD9
  4654                           status	equ	0xFD8
  4655                           
  4656 ;; *************** function ___awdiv *****************
  4657 ;; Defined at:
  4658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  dividend        2    0[BANK0 ] int 
  4661 ;;  divisor         2    2[BANK0 ] int 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  quotient        2    6[BANK0 ] int 
  4664 ;;  sign            1    5[BANK0 ] unsigned char 
  4665 ;;  counter         1    4[BANK0 ] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  2    0[BANK0 ] int 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4675 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4676 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4678 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4679 ;;Total ram usage:        8 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:   11
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_d_to_x
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text18
  4690  0123B4                     __ptext18:
  4691                           	opt stack 0
  4692  0123B4                     ___awdiv:
  4693                           	opt stack 14
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;incstack = 0
  4697  0123B4  0E00               	movlw	0
  4698  0123B6  0100               	movlb	0	; () banked
  4699  0123B8  6F65               	movwf	___awdiv@sign& (0+255),b
  4700                           
  4701                           ; BSR set to: 0
  4702  0123BA  0100               	movlb	0	; () banked
  4703  0123BC  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4704  0123BE  D008               	goto	l8124
  4705                           
  4706                           ; BSR set to: 0
  4707  0123C0  0100               	movlb	0	; () banked
  4708  0123C2  6D62               	negf	___awdiv@divisor& (0+255),b
  4709  0123C4  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4710  0123C6  B0D8               	btfsc	status,0,c
  4711  0123C8  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4712                           
  4713                           ; BSR set to: 0
  4714  0123CA  0E01               	movlw	1
  4715  0123CC  0100               	movlb	0	; () banked
  4716  0123CE  6F65               	movwf	___awdiv@sign& (0+255),b
  4717  0123D0                     l8124:
  4718                           
  4719                           ; BSR set to: 0
  4720  0123D0  0100               	movlb	0	; () banked
  4721  0123D2  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4722  0123D4  D008               	goto	l8130
  4723                           
  4724                           ; BSR set to: 0
  4725  0123D6  0100               	movlb	0	; () banked
  4726  0123D8  6D60               	negf	___awdiv@dividend& (0+255),b
  4727  0123DA  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4728  0123DC  B0D8               	btfsc	status,0,c
  4729  0123DE  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4730                           
  4731                           ; BSR set to: 0
  4732  0123E0  0E01               	movlw	1
  4733  0123E2  0100               	movlb	0	; () banked
  4734  0123E4  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  4735  0123E6                     l8130:
  4736                           
  4737                           ; BSR set to: 0
  4738  0123E6  0E00               	movlw	0
  4739  0123E8  0100               	movlb	0	; () banked
  4740  0123EA  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  4741  0123EC  0E00               	movlw	0
  4742  0123EE  6F66               	movwf	___awdiv@quotient& (0+255),b
  4743                           
  4744                           ; BSR set to: 0
  4745  0123F0  0100               	movlb	0	; () banked
  4746  0123F2  5162               	movf	___awdiv@divisor& (0+255),w,b
  4747  0123F4  0100               	movlb	0	; () banked
  4748  0123F6  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4749  0123F8  B4D8               	btfsc	status,2,c
  4750  0123FA  D02C               	goto	l8152
  4751                           
  4752                           ; BSR set to: 0
  4753  0123FC  0E01               	movlw	1
  4754  0123FE  0100               	movlb	0	; () banked
  4755  012400  6F64               	movwf	___awdiv@counter& (0+255),b
  4756  012402  D006               	goto	l8138
  4757  012404                     l8136:
  4758                           
  4759                           ; BSR set to: 0
  4760  012404  0100               	movlb	0	; () banked
  4761  012406  90D8               	bcf	status,0,c
  4762  012408  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  4763  01240A  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4764  01240C  0100               	movlb	0	; () banked
  4765  01240E  2B64               	incf	___awdiv@counter& (0+255),f,b
  4766  012410                     l8138:
  4767                           
  4768                           ; BSR set to: 0
  4769  012410  0100               	movlb	0	; () banked
  4770  012412  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4771  012414  D7F7               	goto	l8136
  4772  012416                     l8140:
  4773                           
  4774                           ; BSR set to: 0
  4775  012416  0100               	movlb	0	; () banked
  4776  012418  90D8               	bcf	status,0,c
  4777  01241A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  4778  01241C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4779                           
  4780                           ; BSR set to: 0
  4781  01241E  0100               	movlb	0	; () banked
  4782  012420  5162               	movf	___awdiv@divisor& (0+255),w,b
  4783  012422  0100               	movlb	0	; () banked
  4784  012424  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  4785  012426  0100               	movlb	0	; () banked
  4786  012428  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4787  01242A  0100               	movlb	0	; () banked
  4788  01242C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4789  01242E  A0D8               	btfss	status,0,c
  4790  012430  D00A               	goto	l8148
  4791                           
  4792                           ; BSR set to: 0
  4793  012432  0100               	movlb	0	; () banked
  4794  012434  5162               	movf	___awdiv@divisor& (0+255),w,b
  4795  012436  0100               	movlb	0	; () banked
  4796  012438  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  4797  01243A  0100               	movlb	0	; () banked
  4798  01243C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4799  01243E  0100               	movlb	0	; () banked
  4800  012440  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4801                           
  4802                           ; BSR set to: 0
  4803  012442  0100               	movlb	0	; () banked
  4804  012444  8166               	bsf	___awdiv@quotient& (0+255),0,b
  4805  012446                     l8148:
  4806                           
  4807                           ; BSR set to: 0
  4808  012446  0100               	movlb	0	; () banked
  4809  012448  90D8               	bcf	status,0,c
  4810  01244A  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4811  01244C  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  4812                           
  4813                           ; BSR set to: 0
  4814  01244E  0100               	movlb	0	; () banked
  4815  012450  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  4816  012452  D7E1               	goto	l8140
  4817  012454                     l8152:
  4818                           
  4819                           ; BSR set to: 0
  4820  012454  0100               	movlb	0	; () banked
  4821  012456  5165               	movf	___awdiv@sign& (0+255),w,b
  4822  012458  0100               	movlb	0	; () banked
  4823  01245A  B4D8               	btfsc	status,2,c
  4824  01245C  D005               	goto	l8156
  4825                           
  4826                           ; BSR set to: 0
  4827  01245E  0100               	movlb	0	; () banked
  4828  012460  6D66               	negf	___awdiv@quotient& (0+255),b
  4829  012462  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4830  012464  B0D8               	btfsc	status,0,c
  4831  012466  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4832  012468                     l8156:
  4833                           
  4834                           ; BSR set to: 0
  4835  012468  C066  F060         	movff	___awdiv@quotient,?___awdiv
  4836  01246C  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  4837  012470  0012               	return	
  4838  012472                     __end_of___awdiv:
  4839                           	opt stack 0
  4840                           tblptru	equ	0xFF8
  4841                           tblptrh	equ	0xFF7
  4842                           tblptrl	equ	0xFF6
  4843                           tablat	equ	0xFF5
  4844                           prodh	equ	0xFF4
  4845                           prodl	equ	0xFF3
  4846                           intcon	equ	0xFF2
  4847                           intcon2	equ	0xFF1
  4848                           postinc0	equ	0xFEE
  4849                           wreg	equ	0xFE8
  4850                           postdec1	equ	0xFE5
  4851                           fsr1h	equ	0xFE2
  4852                           fsr1l	equ	0xFE1
  4853                           indf2	equ	0xFDF
  4854                           postinc2	equ	0xFDE
  4855                           postdec2	equ	0xFDD
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function _OSC_init *****************
  4861 ;; Defined at:
  4862 ;;		line 8 in file "../My_library/My_PIC.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;		None
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;		None               void
  4869 ;; Registers used:
  4870 ;;		wreg, status,2
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;Total ram usage:        0 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:   11
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_main_init
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text19
  4891  0138FA                     __ptext19:
  4892                           	opt stack 0
  4893  0138FA                     _OSC_init:
  4894                           	opt stack 18
  4895                           
  4896                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;incstack = 0
  4900  0138FA  88D3               	bsf	4051,4,c	;volatile
  4901  0138FC  8AD3               	bsf	4051,5,c	;volatile
  4902  0138FE  8CD3               	bsf	4051,6,c	;volatile
  4903                           
  4904                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  4905  013900  8C9B               	bsf	3995,6,c	;volatile
  4906                           
  4907                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  4908  013902  0EFC               	movlw	-4
  4909  013904  16D3               	andwf	4051,f,c	;volatile
  4910  013906  0012               	return		;funcret
  4911  013908                     __end_of_OSC_init:
  4912                           	opt stack 0
  4913                           tblptru	equ	0xFF8
  4914                           tblptrh	equ	0xFF7
  4915                           tblptrl	equ	0xFF6
  4916                           tablat	equ	0xFF5
  4917                           prodh	equ	0xFF4
  4918                           prodl	equ	0xFF3
  4919                           intcon	equ	0xFF2
  4920                           intcon2	equ	0xFF1
  4921                           postinc0	equ	0xFEE
  4922                           wreg	equ	0xFE8
  4923                           postdec1	equ	0xFE5
  4924                           fsr1h	equ	0xFE2
  4925                           fsr1l	equ	0xFE1
  4926                           indf2	equ	0xFDF
  4927                           postinc2	equ	0xFDE
  4928                           postdec2	equ	0xFDD
  4929                           fsr2h	equ	0xFDA
  4930                           fsr2l	equ	0xFD9
  4931                           status	equ	0xFD8
  4932                           
  4933 ;; *************** function _I2C_LCD_init *****************
  4934 ;; Defined at:
  4935 ;;		line 211 in file "../My_library/My_ST7032.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  i               1    9[BANK0 ] unsigned char 
  4940 ;;  i               1    8[BANK0 ] unsigned char 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;		None               void
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4951 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4954 ;;Total ram usage:        3 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:   15
  4957 ;; This function calls:
  4958 ;;		_I2C_LCD_Clear
  4959 ;;		_I2C_LCD_Command
  4960 ;;		_I2C_init_old
  4961 ;; This function is called by:
  4962 ;;		_main_init
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text20
  4967  012CA4                     __ptext20:
  4968                           	opt stack 0
  4969  012CA4                     _I2C_LCD_init:
  4970                           	opt stack 14
  4971                           
  4972                           ;My_ST7032.c: 212: I2C_init_old();
  4973                           
  4974                           ;incstack = 0
  4975  012CA4  EC74  F09C         	call	_I2C_init_old	;wreg free
  4976                           
  4977                           ;My_ST7032.c: 214: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  4978  012CA8  0E00               	movlw	0
  4979  012CAA  0100               	movlb	0	; () banked
  4980  012CAC  6F68               	movwf	I2C_LCD_init@i& (0+255),b
  4981  012CAE                     l9036:
  4982                           
  4983                           ; BSR set to: 0
  4984  012CAE  0E27               	movlw	39
  4985  012CB0  0100               	movlb	0	; () banked
  4986  012CB2  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
  4987  012CB4  D001               	goto	l9040
  4988  012CB6  D00C               	goto	l9044
  4989  012CB8                     l9040:
  4990                           
  4991                           ; BSR set to: 0
  4992  012CB8  0E10               	movlw	16
  4993  012CBA  0100               	movlb	0	; () banked
  4994  012CBC  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  4995  012CBE  0E94               	movlw	148
  4996  012CC0                     u9887:
  4997  012CC0  2EE8               	decfsz	wreg,f,c
  4998  012CC2  D7FE               	goto	u9887
  4999  012CC4  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  5000  012CC6  D7FC               	goto	u9887
  5001  012CC8  D000               	nop2	
  5002  012CCA  0100               	movlb	0	; () banked
  5003  012CCC  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
  5004  012CCE  D7EF               	goto	l9036
  5005  012CD0                     l9044:
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;My_ST7032.c: 215: I2C_LCD_Command(0x38);
  5009  012CD0  0E38               	movlw	56
  5010  012CD2  ECA4  F09A         	call	_I2C_LCD_Command
  5011                           
  5012                           ;My_ST7032.c: 216: I2C_LCD_Command(0x39);
  5013  012CD6  0E39               	movlw	57
  5014  012CD8  ECA4  F09A         	call	_I2C_LCD_Command
  5015                           
  5016                           ;My_ST7032.c: 217: I2C_LCD_Command(0x14);
  5017  012CDC  0E14               	movlw	20
  5018  012CDE  ECA4  F09A         	call	_I2C_LCD_Command
  5019                           
  5020                           ;My_ST7032.c: 218: I2C_LCD_Command(0x70);
  5021  012CE2  0E70               	movlw	112
  5022  012CE4  ECA4  F09A         	call	_I2C_LCD_Command
  5023                           
  5024                           ;My_ST7032.c: 219: I2C_LCD_Command(0x56);
  5025  012CE8  0E56               	movlw	86
  5026  012CEA  ECA4  F09A         	call	_I2C_LCD_Command
  5027                           
  5028                           ;My_ST7032.c: 220: I2C_LCD_Command(0x6C);
  5029  012CEE  0E6C               	movlw	108
  5030  012CF0  ECA4  F09A         	call	_I2C_LCD_Command
  5031                           
  5032                           ;My_ST7032.c: 221: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000
      +                          /4000.0)));
  5033  012CF4  0E00               	movlw	0
  5034  012CF6  0100               	movlb	0	; () banked
  5035  012CF8  6F69               	movwf	I2C_LCD_init@i_4452& (0+255),b
  5036  012CFA                     l9048:
  5037                           
  5038                           ; BSR set to: 0
  5039  012CFA  0E27               	movlw	39
  5040  012CFC  0100               	movlb	0	; () banked
  5041  012CFE  6569               	cpfsgt	I2C_LCD_init@i_4452& (0+255),b
  5042  012D00  D001               	goto	l9052
  5043  012D02  D00C               	goto	l9056
  5044  012D04                     l9052:
  5045                           
  5046                           ; BSR set to: 0
  5047  012D04  0E10               	movlw	16
  5048  012D06  0100               	movlb	0	; () banked
  5049  012D08  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  5050  012D0A  0E94               	movlw	148
  5051  012D0C                     u9897:
  5052  012D0C  2EE8               	decfsz	wreg,f,c
  5053  012D0E  D7FE               	goto	u9897
  5054  012D10  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  5055  012D12  D7FC               	goto	u9897
  5056  012D14  D000               	nop2	
  5057  012D16  0100               	movlb	0	; () banked
  5058  012D18  2B69               	incf	I2C_LCD_init@i_4452& (0+255),f,b
  5059  012D1A  D7EF               	goto	l9048
  5060  012D1C                     l9056:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;My_ST7032.c: 222: I2C_LCD_Command(0x38);
  5064  012D1C  0E38               	movlw	56
  5065  012D1E  ECA4  F09A         	call	_I2C_LCD_Command
  5066                           
  5067                           ;My_ST7032.c: 223: I2C_LCD_Command(0x0C);
  5068  012D22  0E0C               	movlw	12
  5069  012D24  ECA4  F09A         	call	_I2C_LCD_Command
  5070                           
  5071                           ;My_ST7032.c: 224: I2C_LCD_Command(0x06);
  5072  012D28  0E06               	movlw	6
  5073  012D2A  ECA4  F09A         	call	_I2C_LCD_Command
  5074                           
  5075                           ;My_ST7032.c: 225: I2C_LCD_Clear();
  5076  012D2E  EC4E  F09C         	call	_I2C_LCD_Clear	;wreg free
  5077  012D32  0012               	return		;funcret
  5078  012D34                     __end_of_I2C_LCD_init:
  5079                           	opt stack 0
  5080                           tblptru	equ	0xFF8
  5081                           tblptrh	equ	0xFF7
  5082                           tblptrl	equ	0xFF6
  5083                           tablat	equ	0xFF5
  5084                           prodh	equ	0xFF4
  5085                           prodl	equ	0xFF3
  5086                           intcon	equ	0xFF2
  5087                           intcon2	equ	0xFF1
  5088                           postinc0	equ	0xFEE
  5089                           wreg	equ	0xFE8
  5090                           postdec1	equ	0xFE5
  5091                           fsr1h	equ	0xFE2
  5092                           fsr1l	equ	0xFE1
  5093                           indf2	equ	0xFDF
  5094                           postinc2	equ	0xFDE
  5095                           postdec2	equ	0xFDD
  5096                           fsr2h	equ	0xFDA
  5097                           fsr2l	equ	0xFD9
  5098                           status	equ	0xFD8
  5099                           
  5100 ;; *************** function _I2C_init_old *****************
  5101 ;; Defined at:
  5102 ;;		line 62 in file "../My_library/My_I2C.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;		None
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;		None
  5107 ;; Return value:  Size  Location     Type
  5108 ;;		None               void
  5109 ;; Registers used:
  5110 ;;		wreg, status,2
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5120 ;;Total ram usage:        0 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:   11
  5123 ;; This function calls:
  5124 ;;		Nothing
  5125 ;; This function is called by:
  5126 ;;		_I2C_LCD_init
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	text21
  5131  0138E8                     __ptext21:
  5132                           	opt stack 0
  5133  0138E8                     _I2C_init_old:
  5134                           	opt stack 17
  5135                           
  5136                           ;My_I2C.c: 63: SSP1STAT = 0b10000000;
  5137                           
  5138                           ;incstack = 0
  5139  0138E8  0E80               	movlw	128
  5140  0138EA  6EC7               	movwf	4039,c	;volatile
  5141                           
  5142                           ;My_I2C.c: 64: SSP1CON1 = 0b00101000;
  5143  0138EC  0E28               	movlw	40
  5144  0138EE  6EC6               	movwf	4038,c	;volatile
  5145                           
  5146                           ;My_I2C.c: 65: SSP1ADD = 0x13;
  5147  0138F0  0E13               	movlw	19
  5148  0138F2  6EC8               	movwf	4040,c	;volatile
  5149                           
  5150                           ;My_I2C.c: 68: SSP1IF = 0;
  5151  0138F4  969E               	bcf	3998,3,c	;volatile
  5152                           
  5153                           ;My_I2C.c: 69: BCL1IF = 0;
  5154  0138F6  96A1               	bcf	4001,3,c	;volatile
  5155  0138F8  0012               	return		;funcret
  5156  0138FA                     __end_of_I2C_init_old:
  5157                           	opt stack 0
  5158                           tblptru	equ	0xFF8
  5159                           tblptrh	equ	0xFF7
  5160                           tblptrl	equ	0xFF6
  5161                           tablat	equ	0xFF5
  5162                           prodh	equ	0xFF4
  5163                           prodl	equ	0xFF3
  5164                           intcon	equ	0xFF2
  5165                           intcon2	equ	0xFF1
  5166                           postinc0	equ	0xFEE
  5167                           wreg	equ	0xFE8
  5168                           postdec1	equ	0xFE5
  5169                           fsr1h	equ	0xFE2
  5170                           fsr1l	equ	0xFE1
  5171                           indf2	equ	0xFDF
  5172                           postinc2	equ	0xFDE
  5173                           postdec2	equ	0xFDD
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function _I2C_LCD_Clear *****************
  5179 ;; Defined at:
  5180 ;;		line 154 in file "../My_library/My_ST7032.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;		None               void
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;Total ram usage:        1 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:   14
  5201 ;; This function calls:
  5202 ;;		_I2C_LCD_Command
  5203 ;; This function is called by:
  5204 ;;		_I2C_LCD_init
  5205 ;;		_main
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text22
  5210  01389C                     __ptext22:
  5211                           	opt stack 0
  5212  01389C                     _I2C_LCD_Clear:
  5213                           	opt stack 14
  5214                           
  5215                           ;My_ST7032.c: 155: I2C_LCD_Command(0x01);
  5216                           
  5217                           ;incstack = 0
  5218  01389C  0E01               	movlw	1
  5219  01389E  ECA4  F09A         	call	_I2C_LCD_Command
  5220                           
  5221                           ;My_ST7032.c: 156: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  5222  0138A2  0E12               	movlw	18
  5223  0138A4  0100               	movlb	0	; () banked
  5224  0138A6  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
  5225  0138A8  0E23               	movlw	35
  5226  0138AA                     u9907:
  5227  0138AA  2EE8               	decfsz	wreg,f,c
  5228  0138AC  D7FE               	goto	u9907
  5229  0138AE  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  5230  0138B0  D7FC               	goto	u9907
  5231  0138B2  F000               	nop	
  5232  0138B4  0012               	return		;funcret
  5233  0138B6                     __end_of_I2C_LCD_Clear:
  5234                           	opt stack 0
  5235                           tblptru	equ	0xFF8
  5236                           tblptrh	equ	0xFF7
  5237                           tblptrl	equ	0xFF6
  5238                           tablat	equ	0xFF5
  5239                           prodh	equ	0xFF4
  5240                           prodl	equ	0xFF3
  5241                           intcon	equ	0xFF2
  5242                           intcon2	equ	0xFF1
  5243                           postinc0	equ	0xFEE
  5244                           wreg	equ	0xFE8
  5245                           postdec1	equ	0xFE5
  5246                           fsr1h	equ	0xFE2
  5247                           fsr1l	equ	0xFE1
  5248                           indf2	equ	0xFDF
  5249                           postinc2	equ	0xFDE
  5250                           postdec2	equ	0xFDD
  5251                           fsr2h	equ	0xFDA
  5252                           fsr2l	equ	0xFD9
  5253                           status	equ	0xFD8
  5254                           
  5255 ;; *************** function _display_time_0802 *****************
  5256 ;; Defined at:
  5257 ;;		line 224 in file "../My_library/My_RTCC.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  tm              2   55[BANK0 ] PTR struct .
  5260 ;;		 -> now(14), 
  5261 ;;  line0           2   57[BANK0 ] PTR unsigned char 
  5262 ;;		 -> main@s(40), 
  5263 ;;  line1           2   59[BANK0 ] PTR unsigned char 
  5264 ;;		 -> main@s(40), 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;		None               void
  5269 ;; Registers used:
  5270 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5276 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5279 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5280 ;;Total ram usage:        6 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:   15
  5283 ;; This function calls:
  5284 ;;		_RTCC_from_RTCC
  5285 ;;		_display_dec
  5286 ;;		_strcat
  5287 ;;		_strcpy
  5288 ;; This function is called by:
  5289 ;;		_main
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text23
  5294  010970                     __ptext23:
  5295                           	opt stack 0
  5296  010970                     _display_time_0802:
  5297                           	opt stack 15
  5298                           
  5299                           ;My_RTCC.c: 225: RTCC_from_RTCC(&now);
  5300                           
  5301                           ;incstack = 0
  5302  010970  0EB8               	movlw	low _now
  5303  010972  0100               	movlb	0	; () banked
  5304  010974  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5305  010976  0E01               	movlw	high _now
  5306  010978  0100               	movlb	0	; () banked
  5307  01097A  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5308  01097C  EC5B  F09C         	call	_RTCC_from_RTCC	;wreg free
  5309                           
  5310                           ;My_RTCC.c: 227: strcpy(line0, "");
  5311  010980  C099  F060         	movff	display_time_0802@line0,strcpy@to
  5312  010984  C09A  F061         	movff	display_time_0802@line0+1,strcpy@to+1
  5313  010988  0EE8               	movlw	low (STR_19+3)
  5314  01098A  0100               	movlb	0	; () banked
  5315  01098C  6F62               	movwf	strcpy@from& (0+255),b
  5316  01098E  0EFF               	movlw	high (STR_19+3)
  5317  010990  0100               	movlb	0	; () banked
  5318  010992  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5319  010994  EC88  F09A         	call	_strcpy	;wreg free
  5320                           
  5321                           ;My_RTCC.c: 228: display_dec(line0, tm->YY, tm->edit.flag.YY);
  5322  010998  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  5323  01099C  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  5324  0109A0  0100               	movlb	0	; () banked
  5325  0109A2  EE20 F00A          	lfsr	2,10
  5326  0109A6  5197               	movf	display_time_0802@tm& (0+255),w,b
  5327  0109A8  26D9               	addwf	fsr2l,f,c
  5328  0109AA  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5329  0109AC  22DA               	addwfc	fsr2h,f,c
  5330  0109AE  50DF               	movf	indf2,w,c
  5331  0109B0  0100               	movlb	0	; () banked
  5332  0109B2  6F91               	movwf	display_dec@dec& (0+255),b
  5333  0109B4  0100               	movlb	0	; () banked
  5334  0109B6  EE20 F00D          	lfsr	2,13
  5335  0109BA  5197               	movf	display_time_0802@tm& (0+255),w,b
  5336  0109BC  26D9               	addwf	fsr2l,f,c
  5337  0109BE  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5338  0109C0  22DA               	addwfc	fsr2h,f,c
  5339  0109C2  0E00               	movlw	0
  5340  0109C4  BADF               	btfsc	indf2,5,c
  5341  0109C6  0E01               	movlw	1
  5342  0109C8  0100               	movlb	0	; () banked
  5343  0109CA  6F92               	movwf	display_dec@edit& (0+255),b
  5344  0109CC  EC8F  F098         	call	_display_dec	;wreg free
  5345                           
  5346                           ;My_RTCC.c: 229: strcat(line0, "/");
  5347  0109D0  C099  F060         	movff	display_time_0802@line0,strcat@to
  5348  0109D4  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  5349  0109D8  0EFA               	movlw	low STR_4
  5350  0109DA  0100               	movlb	0	; () banked
  5351  0109DC  6F62               	movwf	strcat@from& (0+255),b
  5352  0109DE  0EFF               	movlw	high STR_4
  5353  0109E0  0100               	movlb	0	; () banked
  5354  0109E2  6F63               	movwf	(strcat@from+1)& (0+255),b
  5355  0109E4  ECF5  F098         	call	_strcat	;wreg free
  5356                           
  5357                           ;My_RTCC.c: 230: display_dec(line0, tm->MM, tm->edit.flag.MM);
  5358  0109E8  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  5359  0109EC  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  5360  0109F0  0100               	movlb	0	; () banked
  5361  0109F2  EE20 F009          	lfsr	2,9
  5362  0109F6  5197               	movf	display_time_0802@tm& (0+255),w,b
  5363  0109F8  26D9               	addwf	fsr2l,f,c
  5364  0109FA  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5365  0109FC  22DA               	addwfc	fsr2h,f,c
  5366  0109FE  50DF               	movf	indf2,w,c
  5367  010A00  0100               	movlb	0	; () banked
  5368  010A02  6F91               	movwf	display_dec@dec& (0+255),b
  5369  010A04  0100               	movlb	0	; () banked
  5370  010A06  EE20 F00D          	lfsr	2,13
  5371  010A0A  5197               	movf	display_time_0802@tm& (0+255),w,b
  5372  010A0C  26D9               	addwf	fsr2l,f,c
  5373  010A0E  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5374  010A10  22DA               	addwfc	fsr2h,f,c
  5375  010A12  0E00               	movlw	0
  5376  010A14  B8DF               	btfsc	indf2,4,c
  5377  010A16  0E01               	movlw	1
  5378  010A18  0100               	movlb	0	; () banked
  5379  010A1A  6F92               	movwf	display_dec@edit& (0+255),b
  5380  010A1C  EC8F  F098         	call	_display_dec	;wreg free
  5381                           
  5382                           ;My_RTCC.c: 231: strcat(line0, "/");
  5383  010A20  C099  F060         	movff	display_time_0802@line0,strcat@to
  5384  010A24  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  5385  010A28  0EFA               	movlw	low STR_4
  5386  010A2A  0100               	movlb	0	; () banked
  5387  010A2C  6F62               	movwf	strcat@from& (0+255),b
  5388  010A2E  0EFF               	movlw	high STR_4
  5389  010A30  0100               	movlb	0	; () banked
  5390  010A32  6F63               	movwf	(strcat@from+1)& (0+255),b
  5391  010A34  ECF5  F098         	call	_strcat	;wreg free
  5392                           
  5393                           ;My_RTCC.c: 232: display_dec(line0, tm->DD, tm->edit.flag.DD);
  5394  010A38  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  5395  010A3C  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  5396  010A40  0100               	movlb	0	; () banked
  5397  010A42  EE20 F008          	lfsr	2,8
  5398  010A46  5197               	movf	display_time_0802@tm& (0+255),w,b
  5399  010A48  26D9               	addwf	fsr2l,f,c
  5400  010A4A  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5401  010A4C  22DA               	addwfc	fsr2h,f,c
  5402  010A4E  50DF               	movf	indf2,w,c
  5403  010A50  0100               	movlb	0	; () banked
  5404  010A52  6F91               	movwf	display_dec@dec& (0+255),b
  5405  010A54  0100               	movlb	0	; () banked
  5406  010A56  EE20 F00D          	lfsr	2,13
  5407  010A5A  5197               	movf	display_time_0802@tm& (0+255),w,b
  5408  010A5C  26D9               	addwf	fsr2l,f,c
  5409  010A5E  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5410  010A60  22DA               	addwfc	fsr2h,f,c
  5411  010A62  0E00               	movlw	0
  5412  010A64  B6DF               	btfsc	indf2,3,c
  5413  010A66  0E01               	movlw	1
  5414  010A68  0100               	movlb	0	; () banked
  5415  010A6A  6F92               	movwf	display_dec@edit& (0+255),b
  5416  010A6C  EC8F  F098         	call	_display_dec	;wreg free
  5417                           
  5418                           ;My_RTCC.c: 234: strcpy(line1, "");
  5419  010A70  C09B  F060         	movff	display_time_0802@line1,strcpy@to
  5420  010A74  C09C  F061         	movff	display_time_0802@line1+1,strcpy@to+1
  5421  010A78  0EE8               	movlw	low (STR_19+3)
  5422  010A7A  0100               	movlb	0	; () banked
  5423  010A7C  6F62               	movwf	strcpy@from& (0+255),b
  5424  010A7E  0EFF               	movlw	high (STR_19+3)
  5425  010A80  0100               	movlb	0	; () banked
  5426  010A82  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5427  010A84  EC88  F09A         	call	_strcpy	;wreg free
  5428                           
  5429                           ;My_RTCC.c: 235: display_dec(line1, tm->hh, tm->edit.flag.hh);
  5430  010A88  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  5431  010A8C  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  5432  010A90  0100               	movlb	0	; () banked
  5433  010A92  EE20 F006          	lfsr	2,6
  5434  010A96  5197               	movf	display_time_0802@tm& (0+255),w,b
  5435  010A98  26D9               	addwf	fsr2l,f,c
  5436  010A9A  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5437  010A9C  22DA               	addwfc	fsr2h,f,c
  5438  010A9E  50DF               	movf	indf2,w,c
  5439  010AA0  0100               	movlb	0	; () banked
  5440  010AA2  6F91               	movwf	display_dec@dec& (0+255),b
  5441  010AA4  0100               	movlb	0	; () banked
  5442  010AA6  EE20 F00D          	lfsr	2,13
  5443  010AAA  5197               	movf	display_time_0802@tm& (0+255),w,b
  5444  010AAC  26D9               	addwf	fsr2l,f,c
  5445  010AAE  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5446  010AB0  22DA               	addwfc	fsr2h,f,c
  5447  010AB2  0E00               	movlw	0
  5448  010AB4  B4DF               	btfsc	indf2,2,c
  5449  010AB6  0E01               	movlw	1
  5450  010AB8  0100               	movlb	0	; () banked
  5451  010ABA  6F92               	movwf	display_dec@edit& (0+255),b
  5452  010ABC  EC8F  F098         	call	_display_dec	;wreg free
  5453                           
  5454                           ;My_RTCC.c: 236: if (now.colon) strcat(line1, ":");
  5455  010AC0  0101               	movlb	1	; () banked
  5456  010AC2  51C3               	movf	(_now+11)& (0+255),w,b
  5457  010AC4  B4D8               	btfsc	status,2,c
  5458  010AC6  D00D               	goto	l9158
  5459                           
  5460                           ; BSR set to: 1
  5461  010AC8  C09B  F060         	movff	display_time_0802@line1,strcat@to
  5462  010ACC  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  5463  010AD0  0EFC               	movlw	low STR_7
  5464  010AD2  0100               	movlb	0	; () banked
  5465  010AD4  6F62               	movwf	strcat@from& (0+255),b
  5466  010AD6  0EFF               	movlw	high STR_7
  5467  010AD8  0100               	movlb	0	; () banked
  5468  010ADA  6F63               	movwf	(strcat@from+1)& (0+255),b
  5469  010ADC  ECF5  F098         	call	_strcat	;wreg free
  5470  010AE0  D00C               	goto	l9160
  5471  010AE2                     l9158:
  5472                           
  5473                           ;My_RTCC.c: 237: else strcat(line1, " ");
  5474  010AE2  C09B  F060         	movff	display_time_0802@line1,strcat@to
  5475  010AE6  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  5476  010AEA  0EB1               	movlw	low (STR_15+7)
  5477  010AEC  0100               	movlb	0	; () banked
  5478  010AEE  6F62               	movwf	strcat@from& (0+255),b
  5479  010AF0  0EFF               	movlw	high (STR_15+7)
  5480  010AF2  0100               	movlb	0	; () banked
  5481  010AF4  6F63               	movwf	(strcat@from+1)& (0+255),b
  5482  010AF6  ECF5  F098         	call	_strcat	;wreg free
  5483  010AFA                     l9160:
  5484                           
  5485                           ;My_RTCC.c: 238: display_dec(line1, tm->mm, tm->edit.flag.mm);
  5486  010AFA  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  5487  010AFE  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  5488  010B02  0100               	movlb	0	; () banked
  5489  010B04  EE20 F005          	lfsr	2,5
  5490  010B08  5197               	movf	display_time_0802@tm& (0+255),w,b
  5491  010B0A  26D9               	addwf	fsr2l,f,c
  5492  010B0C  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5493  010B0E  22DA               	addwfc	fsr2h,f,c
  5494  010B10  50DF               	movf	indf2,w,c
  5495  010B12  0100               	movlb	0	; () banked
  5496  010B14  6F91               	movwf	display_dec@dec& (0+255),b
  5497  010B16  0100               	movlb	0	; () banked
  5498  010B18  EE20 F00D          	lfsr	2,13
  5499  010B1C  5197               	movf	display_time_0802@tm& (0+255),w,b
  5500  010B1E  26D9               	addwf	fsr2l,f,c
  5501  010B20  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5502  010B22  22DA               	addwfc	fsr2h,f,c
  5503  010B24  0E00               	movlw	0
  5504  010B26  B2DF               	btfsc	indf2,1,c
  5505  010B28  0E01               	movlw	1
  5506  010B2A  0100               	movlb	0	; () banked
  5507  010B2C  6F92               	movwf	display_dec@edit& (0+255),b
  5508  010B2E  EC8F  F098         	call	_display_dec	;wreg free
  5509                           
  5510                           ;My_RTCC.c: 239: strcat(line1, "-");
  5511  010B32  C09B  F060         	movff	display_time_0802@line1,strcat@to
  5512  010B36  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  5513  010B3A  0EF8               	movlw	low STR_9
  5514  010B3C  0100               	movlb	0	; () banked
  5515  010B3E  6F62               	movwf	strcat@from& (0+255),b
  5516  010B40  0EFF               	movlw	high STR_9
  5517  010B42  0100               	movlb	0	; () banked
  5518  010B44  6F63               	movwf	(strcat@from+1)& (0+255),b
  5519  010B46  ECF5  F098         	call	_strcat	;wreg free
  5520                           
  5521                           ;My_RTCC.c: 240: display_dec(line1, tm->ss, tm->edit.flag.ss);
  5522  010B4A  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  5523  010B4E  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  5524  010B52  0100               	movlb	0	; () banked
  5525  010B54  EE20 F004          	lfsr	2,4
  5526  010B58  5197               	movf	display_time_0802@tm& (0+255),w,b
  5527  010B5A  26D9               	addwf	fsr2l,f,c
  5528  010B5C  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5529  010B5E  22DA               	addwfc	fsr2h,f,c
  5530  010B60  50DF               	movf	indf2,w,c
  5531  010B62  0100               	movlb	0	; () banked
  5532  010B64  6F91               	movwf	display_dec@dec& (0+255),b
  5533  010B66  0100               	movlb	0	; () banked
  5534  010B68  EE20 F00D          	lfsr	2,13
  5535  010B6C  5197               	movf	display_time_0802@tm& (0+255),w,b
  5536  010B6E  26D9               	addwf	fsr2l,f,c
  5537  010B70  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5538  010B72  22DA               	addwfc	fsr2h,f,c
  5539  010B74  0E00               	movlw	0
  5540  010B76  B0DF               	btfsc	indf2,0,c
  5541  010B78  0E01               	movlw	1
  5542  010B7A  0100               	movlb	0	; () banked
  5543  010B7C  6F92               	movwf	display_dec@edit& (0+255),b
  5544  010B7E  EC8F  F098         	call	_display_dec	;wreg free
  5545  010B82  0012               	return		;funcret
  5546  010B84                     __end_of_display_time_0802:
  5547                           	opt stack 0
  5548                           tblptru	equ	0xFF8
  5549                           tblptrh	equ	0xFF7
  5550                           tblptrl	equ	0xFF6
  5551                           tablat	equ	0xFF5
  5552                           prodh	equ	0xFF4
  5553                           prodl	equ	0xFF3
  5554                           intcon	equ	0xFF2
  5555                           intcon2	equ	0xFF1
  5556                           postinc0	equ	0xFEE
  5557                           wreg	equ	0xFE8
  5558                           postdec1	equ	0xFE5
  5559                           fsr1h	equ	0xFE2
  5560                           fsr1l	equ	0xFE1
  5561                           indf2	equ	0xFDF
  5562                           postinc2	equ	0xFDE
  5563                           postdec2	equ	0xFDD
  5564                           fsr2h	equ	0xFDA
  5565                           fsr2l	equ	0xFD9
  5566                           status	equ	0xFD8
  5567                           
  5568 ;; *************** function _strcpy *****************
  5569 ;; Defined at:
  5570 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  to              2    0[BANK0 ] PTR unsigned char 
  5573 ;;		 -> main@s(40), 
  5574 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  5575 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  5578 ;;		 -> main@s(40), 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  2    0[BANK0 ] PTR unsigned char 
  5581 ;; Registers used:
  5582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5588 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5589 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5591 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5592 ;;Total ram usage:        6 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; Hardware stack levels required when called:   11
  5595 ;; This function calls:
  5596 ;;		Nothing
  5597 ;; This function is called by:
  5598 ;;		_display_time_0802
  5599 ;;		_display_time_1602
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text24
  5604  013510                     __ptext24:
  5605                           	opt stack 0
  5606  013510                     _strcpy:
  5607                           	opt stack 18
  5608                           
  5609                           ;incstack = 0
  5610  013510  C060  F064         	movff	strcpy@to,strcpy@cp
  5611  013514  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  5612  013518  D006               	goto	l9028
  5613  01351A                     l9026:
  5614  01351A  0100               	movlb	0	; () banked
  5615  01351C  4B64               	infsnz	strcpy@cp& (0+255),f,b
  5616  01351E  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  5617  013520  0100               	movlb	0	; () banked
  5618  013522  4B62               	infsnz	strcpy@from& (0+255),f,b
  5619  013524  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  5620  013526                     l9028:
  5621  013526  C062  FFF6         	movff	strcpy@from,tblptrl
  5622  01352A  C063  FFF7         	movff	strcpy@from+1,tblptrh
  5623  01352E                     	if	0	;tblptru may be non-zero
  5624  01352E                     	endif
  5625  01352E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5626  01352E  0E00               	movlw	low (__mediumconst shr (0+16))
  5627  013530  6EF8               	movwf	tblptru,c
  5628  013532                     	endif
  5629  013532  C064  FFD9         	movff	strcpy@cp,fsr2l
  5630  013536  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  5631  01353A  0008               	tblrd		*
  5632  01353C  CFF5 FFDF          	movff	tablat,indf2
  5633  013540  50DF               	movf	indf2,w,c
  5634  013542  B4D8               	btfsc	status,2,c
  5635  013544  0012               	return	
  5636  013546  D7E9               	goto	l9026
  5637  013548                     __end_of_strcpy:
  5638                           	opt stack 0
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           intcon	equ	0xFF2
  5646                           intcon2	equ	0xFF1
  5647                           postinc0	equ	0xFEE
  5648                           wreg	equ	0xFE8
  5649                           postdec1	equ	0xFE5
  5650                           fsr1h	equ	0xFE2
  5651                           fsr1l	equ	0xFE1
  5652                           indf2	equ	0xFDF
  5653                           postinc2	equ	0xFDE
  5654                           postdec2	equ	0xFDD
  5655                           fsr2h	equ	0xFDA
  5656                           fsr2l	equ	0xFD9
  5657                           status	equ	0xFD8
  5658                           
  5659 ;; *************** function _display_dec *****************
  5660 ;; Defined at:
  5661 ;;		line 217 in file "../My_library/My_RTCC.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  str             2   47[BANK0 ] PTR unsigned char 
  5664 ;;		 -> main@s(40), 
  5665 ;;  dec             1   49[BANK0 ] unsigned char 
  5666 ;;  edit            1   50[BANK0 ] unsigned char 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  s               4   51[BANK0 ] unsigned char [4]
  5669 ;; Return value:  Size  Location     Type
  5670 ;;		None               void
  5671 ;; Registers used:
  5672 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5681 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5682 ;;Total ram usage:        8 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:   13
  5685 ;; This function calls:
  5686 ;;		_sprintf
  5687 ;;		_strcat
  5688 ;; This function is called by:
  5689 ;;		_display_time_0802
  5690 ;;		_display_time_1602
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text25
  5695  01311E                     __ptext25:
  5696                           	opt stack 0
  5697  01311E                     _display_dec:
  5698                           	opt stack 16
  5699                           
  5700                           ;My_RTCC.c: 218: char s[4];
  5701                           ;My_RTCC.c: 219: sprintf(s, "%02d", dec);
  5702                           
  5703                           ;incstack = 0
  5704  01311E  0E93               	movlw	low display_dec@s
  5705  013120  0100               	movlb	0	; () banked
  5706  013122  6F6C               	movwf	sprintf@sp& (0+255),b
  5707  013124  0E00               	movlw	high display_dec@s
  5708  013126  0100               	movlb	0	; () banked
  5709  013128  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  5710  01312A  0EE0               	movlw	low STR_1
  5711  01312C  0100               	movlb	0	; () banked
  5712  01312E  6F6E               	movwf	sprintf@f& (0+255),b
  5713  013130  0EFF               	movlw	high STR_1
  5714  013132  0100               	movlb	0	; () banked
  5715  013134  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  5716  013136  C091  F070         	movff	display_dec@dec,?_sprintf+4
  5717  01313A  0100               	movlb	0	; () banked
  5718  01313C  6B71               	clrf	(?_sprintf+5)& (0+255),b
  5719  01313E  EC00  F080         	call	_sprintf	;wreg free
  5720                           
  5721                           ;My_RTCC.c: 220: if (edit && now.halfsec)strcat(str, "  ");
  5722  013142  0100               	movlb	0	; () banked
  5723  013144  5192               	movf	display_dec@edit& (0+255),w,b
  5724  013146  0100               	movlb	0	; () banked
  5725  013148  B4D8               	btfsc	status,2,c
  5726  01314A  D011               	goto	l9022
  5727                           
  5728                           ; BSR set to: 0
  5729  01314C  0101               	movlb	1	; () banked
  5730  01314E  51C4               	movf	(_now+12)& (0+255),w,b
  5731  013150  B4D8               	btfsc	status,2,c
  5732  013152  D00D               	goto	l9022
  5733                           
  5734                           ; BSR set to: 1
  5735  013154  C08F  F060         	movff	display_dec@str,strcat@to
  5736  013158  C090  F061         	movff	display_dec@str+1,strcat@to+1
  5737  01315C  0EB0               	movlw	low (STR_15+6)
  5738  01315E  0100               	movlb	0	; () banked
  5739  013160  6F62               	movwf	strcat@from& (0+255),b
  5740  013162  0EFF               	movlw	high (STR_15+6)
  5741  013164  0100               	movlb	0	; () banked
  5742  013166  6F63               	movwf	(strcat@from+1)& (0+255),b
  5743  013168  ECF5  F098         	call	_strcat	;wreg free
  5744  01316C  0012               	return	
  5745  01316E                     l9022:
  5746                           
  5747                           ;My_RTCC.c: 221: else strcat(str, s);
  5748  01316E  C08F  F060         	movff	display_dec@str,strcat@to
  5749  013172  C090  F061         	movff	display_dec@str+1,strcat@to+1
  5750  013176  0E93               	movlw	low display_dec@s
  5751  013178  0100               	movlb	0	; () banked
  5752  01317A  6F62               	movwf	strcat@from& (0+255),b
  5753  01317C  0E00               	movlw	high display_dec@s
  5754  01317E  0100               	movlb	0	; () banked
  5755  013180  6F63               	movwf	(strcat@from+1)& (0+255),b
  5756  013182  ECF5  F098         	call	_strcat	;wreg free
  5757  013186  0012               	return	
  5758  013188                     __end_of_display_dec:
  5759                           	opt stack 0
  5760                           tblptru	equ	0xFF8
  5761                           tblptrh	equ	0xFF7
  5762                           tblptrl	equ	0xFF6
  5763                           tablat	equ	0xFF5
  5764                           prodh	equ	0xFF4
  5765                           prodl	equ	0xFF3
  5766                           intcon	equ	0xFF2
  5767                           intcon2	equ	0xFF1
  5768                           postinc0	equ	0xFEE
  5769                           wreg	equ	0xFE8
  5770                           postdec1	equ	0xFE5
  5771                           fsr1h	equ	0xFE2
  5772                           fsr1l	equ	0xFE1
  5773                           indf2	equ	0xFDF
  5774                           postinc2	equ	0xFDE
  5775                           postdec2	equ	0xFDD
  5776                           fsr2h	equ	0xFDA
  5777                           fsr2l	equ	0xFD9
  5778                           status	equ	0xFD8
  5779                           
  5780 ;; *************** function _strcat *****************
  5781 ;; Defined at:
  5782 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  to              2    0[BANK0 ] PTR unsigned char 
  5785 ;;		 -> main@s(40), 
  5786 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  5787 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
  5788 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
  5789 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
  5790 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  5793 ;;		 -> main@s(40), 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  2    0[BANK0 ] PTR unsigned char 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5804 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5806 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5807 ;;Total ram usage:        6 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:   11
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_display_dec
  5814 ;;		_display_time_0802
  5815 ;;		_display_time_1602
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text26
  5820  0131EA                     __ptext26:
  5821                           	opt stack 0
  5822  0131EA                     _strcat:
  5823                           	opt stack 18
  5824                           
  5825                           ;incstack = 0
  5826  0131EA  C060  F064         	movff	strcat@to,strcat@cp
  5827  0131EE  C061  F065         	movff	strcat@to+1,strcat@cp+1
  5828  0131F2  D003               	goto	l8870
  5829  0131F4                     l8868:
  5830  0131F4  0100               	movlb	0	; () banked
  5831  0131F6  4B64               	infsnz	strcat@cp& (0+255),f,b
  5832  0131F8  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  5833  0131FA                     l8870:
  5834  0131FA  C064  FFD9         	movff	strcat@cp,fsr2l
  5835  0131FE  C065  FFDA         	movff	strcat@cp+1,fsr2h
  5836  013202  50DF               	movf	indf2,w,c
  5837  013204  B4D8               	btfsc	status,2,c
  5838  013206  D007               	goto	l8874
  5839  013208  D7F5               	goto	l8868
  5840  01320A                     l8872:
  5841  01320A  0100               	movlb	0	; () banked
  5842  01320C  4B64               	infsnz	strcat@cp& (0+255),f,b
  5843  01320E  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  5844  013210  0100               	movlb	0	; () banked
  5845  013212  4B62               	infsnz	strcat@from& (0+255),f,b
  5846  013214  2B63               	incf	(strcat@from+1)& (0+255),f,b
  5847  013216                     l8874:
  5848  013216  C062  FFF6         	movff	strcat@from,tblptrl
  5849  01321A  C063  FFF7         	movff	strcat@from+1,tblptrh
  5850  01321E  0E00               	movlw	low (__mediumconst shr (0+16))
  5851  013220  6EF8               	movwf	tblptru,c
  5852  013222  C064  FFD9         	movff	strcat@cp,fsr2l
  5853  013226  C065  FFDA         	movff	strcat@cp+1,fsr2h
  5854  01322A  0E0E               	movlw	(high __ramtop+-1)
  5855  01322C  64F7               	cpfsgt	tblptrh,c
  5856  01322E  D003               	bra	u8717
  5857  013230  0008               	tblrd		*
  5858  013232  50F5               	movf	tablat,w,c
  5859  013234  D005               	bra	u8710
  5860  013236                     u8717:
  5861  013236  CFF6 FFE9          	movff	tblptrl,fsr0l
  5862  01323A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5863  01323E  50EF               	movf	indf0,w,c
  5864  013240                     u8710:
  5865  013240  6EDF               	movwf	indf2,c
  5866  013242  50DF               	movf	indf2,w,c
  5867  013244  B4D8               	btfsc	status,2,c
  5868  013246  0012               	return	
  5869  013248  D7E0               	goto	l8872
  5870  01324A                     __end_of_strcat:
  5871                           	opt stack 0
  5872                           tblptru	equ	0xFF8
  5873                           tblptrh	equ	0xFF7
  5874                           tblptrl	equ	0xFF6
  5875                           tablat	equ	0xFF5
  5876                           prodh	equ	0xFF4
  5877                           prodl	equ	0xFF3
  5878                           intcon	equ	0xFF2
  5879                           intcon2	equ	0xFF1
  5880                           indf0	equ	0xFEF
  5881                           postinc0	equ	0xFEE
  5882                           fsr0h	equ	0xFEA
  5883                           fsr0l	equ	0xFE9
  5884                           wreg	equ	0xFE8
  5885                           postdec1	equ	0xFE5
  5886                           fsr1h	equ	0xFE2
  5887                           fsr1l	equ	0xFE1
  5888                           indf2	equ	0xFDF
  5889                           postinc2	equ	0xFDE
  5890                           postdec2	equ	0xFDD
  5891                           fsr2h	equ	0xFDA
  5892                           fsr2l	equ	0xFD9
  5893                           status	equ	0xFD8
  5894                           
  5895 ;; *************** function _sprintf *****************
  5896 ;; Defined at:
  5897 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  5900 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  5901 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  5902 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  tmpval          4    0        struct .
  5905 ;;  width           2   45[BANK0 ] int 
  5906 ;;  len             2   41[BANK0 ] unsigned int 
  5907 ;;  val             2   39[BANK0 ] unsigned int 
  5908 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  5909 ;;		 -> STR_43(7), weekday_3char(28), 
  5910 ;;  ap              2   35[BANK0 ] PTR void [1]
  5911 ;;		 -> ?_sprintf(2), 
  5912 ;;  c               1   44[BANK0 ] char 
  5913 ;;  flag            1   43[BANK0 ] unsigned char 
  5914 ;;  prec            1   34[BANK0 ] char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  2   12[BANK0 ] int 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5924 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;Total ram usage:       35 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:   12
  5931 ;; This function calls:
  5932 ;;		___lwdiv
  5933 ;;		___lwmod
  5934 ;;		___wmul
  5935 ;;		_isdigit
  5936 ;; This function is called by:
  5937 ;;		_display_dec
  5938 ;;		_print_time_dec
  5939 ;;		_print_time
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text27
  5944  010000                     __ptext27:
  5945                           	opt stack 0
  5946  010000                     _sprintf:
  5947                           	opt stack 16
  5948                           
  5949                           ;doprnt.c: 494: va_list ap;
  5950                           ;doprnt.c: 499: signed char c;
  5951                           ;doprnt.c: 501: int width;
  5952                           ;doprnt.c: 506: signed char prec;
  5953                           ;doprnt.c: 508: unsigned char flag;
  5954                           ;doprnt.c: 523: union {
  5955                           ;doprnt.c: 524: unsigned long vd;
  5956                           ;doprnt.c: 525: double integ;
  5957                           ;doprnt.c: 526: } tmpval;
  5958                           ;doprnt.c: 528: unsigned int val;
  5959                           ;doprnt.c: 529: unsigned len;
  5960                           ;doprnt.c: 530: const char * cp;
  5961                           ;doprnt.c: 533: *ap = __va_start();
  5962                           
  5963                           ;incstack = 0
  5964  010000  0E70               	movlw	low (?_sprintf+4)
  5965  010002  0100               	movlb	0	; () banked
  5966  010004  6F83               	movwf	sprintf@ap& (0+255),b
  5967  010006  0E00               	movlw	high (?_sprintf+4)
  5968  010008  0100               	movlb	0	; () banked
  5969  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  5970                           
  5971                           ;doprnt.c: 536: while(c = *f++) {
  5972  01000C  D20F               	goto	l8860
  5973  01000E                     l8720:
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;doprnt.c: 538: if(c != '%')
  5977  01000E  0E25               	movlw	37
  5978  010010  0100               	movlb	0	; () banked
  5979  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  5980  010014  B4D8               	btfsc	status,2,c
  5981  010016  D00A               	goto	l8726
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;doprnt.c: 540: {
  5985                           ;doprnt.c: 541: ((*sp++ = (c)));
  5986  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  5987  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  5988  010020  C08C  FFDF         	movff	sprintf@c,indf2
  5989                           
  5990                           ; BSR set to: 0
  5991  010024  0100               	movlb	0	; () banked
  5992  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  5993  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  5994                           
  5995                           ;doprnt.c: 542: continue;
  5996  01002A  D200               	goto	l8860
  5997  01002C                     l8726:
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;doprnt.c: 543: }
  6001                           ;doprnt.c: 546: width = 0;
  6002  01002C  0E00               	movlw	0
  6003  01002E  0100               	movlb	0	; () banked
  6004  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6005  010032  0E00               	movlw	0
  6006  010034  6F8D               	movwf	sprintf@width& (0+255),b
  6007                           
  6008                           ;doprnt.c: 548: flag = 0;
  6009  010036  0E00               	movlw	0
  6010  010038  0100               	movlb	0	; () banked
  6011  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;doprnt.c: 551: switch(*f) {
  6015                           
  6016                           ;doprnt.c: 550: for(;;) {
  6017  01003C  D005               	goto	l8732
  6018  01003E                     l8728:
  6019                           
  6020                           ;doprnt.c: 580: flag |= 0x04;
  6021  01003E  0100               	movlb	0	; () banked
  6022  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  6023                           
  6024                           ;doprnt.c: 581: f++;
  6025  010042  0100               	movlb	0	; () banked
  6026  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6027  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6028  010048                     l8732:
  6029  010048  C06E  FFF6         	movff	sprintf@f,tblptrl
  6030  01004C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6031  010050                     	if	0	;tblptru may be non-zero
  6032  010050                     	endif
  6033  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6034  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  6035  010052  6EF8               	movwf	tblptru,c
  6036  010054                     	endif
  6037  010054  0008               	tblrd		*
  6038  010056  50F5               	movf	tablat,w,c
  6039                           
  6040                           ; Switch size 1, requested type "space"
  6041                           ; Number of cases is 1, Range of values is 48 to 48
  6042                           ; switch strategies available:
  6043                           ; Name         Instructions Cycles
  6044                           ; simple_byte            4     3 (average)
  6045                           ;	Chosen strategy is simple_byte
  6046  010058  0A30               	xorlw	48	; case 48
  6047  01005A  B4D8               	btfsc	status,2,c
  6048  01005C  D7F0               	goto	l8728
  6049                           
  6050                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6051                           
  6052                           ;doprnt.c: 586: }
  6053                           
  6054                           ;doprnt.c: 585: break;
  6055  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
  6056  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6057  010066                     	if	0	;tblptru may be non-zero
  6058  010066                     	endif
  6059  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6060  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  6061  010068  6EF8               	movwf	tblptru,c
  6062  01006A                     	endif
  6063  01006A  0008               	tblrd		*
  6064  01006C  50F5               	movf	tablat,w,c
  6065  01006E  ECAB  F09B         	call	_isdigit
  6066  010072  A0D8               	btfss	status,0,c
  6067  010074  D0CB               	goto	l8782
  6068                           
  6069                           ;doprnt.c: 598: width = 0;
  6070  010076  0E00               	movlw	0
  6071  010078  0100               	movlb	0	; () banked
  6072  01007A  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6073  01007C  0E00               	movlw	0
  6074  01007E  6F8D               	movwf	sprintf@width& (0+255),b
  6075  010080                     l8738:
  6076                           
  6077                           ;doprnt.c: 600: width *= 10;
  6078  010080  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  6079  010084  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  6080  010088  0E00               	movlw	0
  6081  01008A  0100               	movlb	0	; () banked
  6082  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6083  01008E  0E0A               	movlw	10
  6084  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6085  010092  ECC0  F09A         	call	___wmul	;wreg free
  6086  010096  C060  F08D         	movff	?___wmul,sprintf@width
  6087  01009A  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  6088                           
  6089                           ;doprnt.c: 601: width += *f++ - '0';
  6090  01009E  0ED0               	movlw	208
  6091  0100A0  0100               	movlb	0	; () banked
  6092  0100A2  6F7E               	movwf	??_sprintf& (0+255),b
  6093  0100A4  0EFF               	movlw	255
  6094  0100A6  0100               	movlb	0	; () banked
  6095  0100A8  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  6096  0100AA  C06E  FFF6         	movff	sprintf@f,tblptrl
  6097  0100AE  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6098  0100B2                     	if	0	;tblptru may be non-zero
  6099  0100B2                     	endif
  6100  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6101  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  6102  0100B4  6EF8               	movwf	tblptru,c
  6103  0100B6                     	endif
  6104  0100B6  0008               	tblrd		*
  6105  0100B8  50F5               	movf	tablat,w,c
  6106  0100BA  0100               	movlb	0	; () banked
  6107  0100BC  6F80               	movwf	(??_sprintf+2)& (0+255),b
  6108  0100BE  6B81               	clrf	(??_sprintf+3)& (0+255),b
  6109  0100C0  0100               	movlb	0	; () banked
  6110  0100C2  517E               	movf	??_sprintf& (0+255),w,b
  6111  0100C4  0100               	movlb	0	; () banked
  6112  0100C6  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  6113  0100C8  0100               	movlb	0	; () banked
  6114  0100CA  517F               	movf	(??_sprintf+1)& (0+255),w,b
  6115  0100CC  0100               	movlb	0	; () banked
  6116  0100CE  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  6117  0100D0  0100               	movlb	0	; () banked
  6118  0100D2  5180               	movf	(??_sprintf+2)& (0+255),w,b
  6119  0100D4  0100               	movlb	0	; () banked
  6120  0100D6  278D               	addwf	sprintf@width& (0+255),f,b
  6121  0100D8  0100               	movlb	0	; () banked
  6122  0100DA  5181               	movf	(??_sprintf+3)& (0+255),w,b
  6123  0100DC  0100               	movlb	0	; () banked
  6124  0100DE  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  6125                           
  6126                           ; BSR set to: 0
  6127  0100E0  0100               	movlb	0	; () banked
  6128  0100E2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6129  0100E4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6133  0100E6  C06E  FFF6         	movff	sprintf@f,tblptrl
  6134  0100EA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6135  0100EE                     	if	0	;tblptru may be non-zero
  6136  0100EE                     	endif
  6137  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6138  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  6139  0100F0  6EF8               	movwf	tblptru,c
  6140  0100F2                     	endif
  6141  0100F2  0008               	tblrd		*
  6142  0100F4  50F5               	movf	tablat,w,c
  6143  0100F6  ECAB  F09B         	call	_isdigit
  6144  0100FA  A0D8               	btfss	status,0,c
  6145  0100FC  D087               	goto	l8782
  6146  0100FE  D7C0               	goto	l8738
  6147  010100                     l8746:
  6148                           
  6149                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6150  010100  C083  FFD9         	movff	sprintf@ap,fsr2l
  6151  010104  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  6152  010108  CFDE F085          	movff	postinc2,sprintf@cp
  6153  01010C  CFDD F086          	movff	postdec2,sprintf@cp+1
  6154  010110  0E02               	movlw	2
  6155  010112  0100               	movlb	0	; () banked
  6156  010114  2783               	addwf	sprintf@ap& (0+255),f,b
  6157  010116  0E00               	movlw	0
  6158  010118  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;doprnt.c: 740: if(!cp)
  6162  01011A  0100               	movlb	0	; () banked
  6163  01011C  5185               	movf	sprintf@cp& (0+255),w,b
  6164  01011E  0100               	movlb	0	; () banked
  6165  010120  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  6166  010122  A4D8               	btfss	status,2,c
  6167  010124  D006               	goto	l8754
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;doprnt.c: 741: cp = "(null)";
  6171  010126  0EBB               	movlw	low STR_43
  6172  010128  0100               	movlb	0	; () banked
  6173  01012A  6F85               	movwf	sprintf@cp& (0+255),b
  6174  01012C  0EFF               	movlw	high STR_43
  6175  01012E  0100               	movlb	0	; () banked
  6176  010130  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  6177  010132                     l8754:
  6178                           
  6179                           ; BSR set to: 0
  6180                           ;doprnt.c: 745: len = 0;
  6181  010132  0E00               	movlw	0
  6182  010134  0100               	movlb	0	; () banked
  6183  010136  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  6184  010138  0E00               	movlw	0
  6185  01013A  6F89               	movwf	sprintf@len& (0+255),b
  6186                           
  6187                           ;doprnt.c: 746: while(cp[len])
  6188  01013C  D003               	goto	l8758
  6189  01013E                     l8756:
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;doprnt.c: 747: len++;
  6193  01013E  0100               	movlb	0	; () banked
  6194  010140  4B89               	infsnz	sprintf@len& (0+255),f,b
  6195  010142  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  6196  010144                     l8758:
  6197                           
  6198                           ; BSR set to: 0
  6199  010144  0100               	movlb	0	; () banked
  6200  010146  5189               	movf	sprintf@len& (0+255),w,b
  6201  010148  0100               	movlb	0	; () banked
  6202  01014A  2585               	addwf	sprintf@cp& (0+255),w,b
  6203  01014C  0100               	movlb	0	; () banked
  6204  01014E  6F7E               	movwf	??_sprintf& (0+255),b
  6205  010150  0100               	movlb	0	; () banked
  6206  010152  518A               	movf	(sprintf@len+1)& (0+255),w,b
  6207  010154  0100               	movlb	0	; () banked
  6208  010156  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  6209  010158  0100               	movlb	0	; () banked
  6210  01015A  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  6211  01015C  C07E  FFF6         	movff	??_sprintf,tblptrl
  6212  010160  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  6213  010164                     	if	0	;tblptru may be non-zero
  6214  010164                     	endif
  6215  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6216  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  6217  010166  6EF8               	movwf	tblptru,c
  6218  010168                     	endif
  6219  010168  0008               	tblrd		*
  6220  01016A  50F5               	movf	tablat,w,c
  6221  01016C  0900               	iorlw	0
  6222  01016E  A4D8               	btfss	status,2,c
  6223  010170  D7E6               	goto	l8756
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;doprnt.c: 757: if(width > len)
  6227                           
  6228                           ; BSR set to: 0
  6229  010172  0100               	movlb	0	; () banked
  6230  010174  518D               	movf	sprintf@width& (0+255),w,b
  6231  010176  0100               	movlb	0	; () banked
  6232  010178  5D89               	subwf	sprintf@len& (0+255),w,b
  6233  01017A  0100               	movlb	0	; () banked
  6234  01017C  518E               	movf	(sprintf@width+1)& (0+255),w,b
  6235  01017E  0100               	movlb	0	; () banked
  6236  010180  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  6237  010182  B0D8               	btfsc	status,0,c
  6238  010184  D009               	goto	l8764
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;doprnt.c: 758: width -= len;
  6242  010186  0100               	movlb	0	; () banked
  6243  010188  5189               	movf	sprintf@len& (0+255),w,b
  6244  01018A  0100               	movlb	0	; () banked
  6245  01018C  5F8D               	subwf	sprintf@width& (0+255),f,b
  6246  01018E  0100               	movlb	0	; () banked
  6247  010190  518A               	movf	(sprintf@len+1)& (0+255),w,b
  6248  010192  0100               	movlb	0	; () banked
  6249  010194  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  6250  010196  D00F               	goto	l8770
  6251  010198                     l8764:
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;doprnt.c: 759: else
  6255                           ;doprnt.c: 760: width = 0;
  6256  010198  0E00               	movlw	0
  6257  01019A  0100               	movlb	0	; () banked
  6258  01019C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6259  01019E  0E00               	movlw	0
  6260  0101A0  6F8D               	movwf	sprintf@width& (0+255),b
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;doprnt.c: 764: while(width--)
  6264  0101A2  D009               	goto	l8770
  6265  0101A4                     l8766:
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6269  0101A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6270  0101A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6271  0101AC  0E20               	movlw	32
  6272  0101AE  6EDF               	movwf	indf2,c
  6273                           
  6274                           ; BSR set to: 0
  6275  0101B0  0100               	movlb	0	; () banked
  6276  0101B2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6277  0101B4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6278  0101B6                     l8770:
  6279                           
  6280                           ; BSR set to: 0
  6281  0101B6  0100               	movlb	0	; () banked
  6282  0101B8  078D               	decf	sprintf@width& (0+255),f,b
  6283  0101BA  A0D8               	btfss	status,0,c
  6284  0101BC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6285  0101BE  0100               	movlb	0	; () banked
  6286  0101C0  298D               	incf	sprintf@width& (0+255),w,b
  6287  0101C2  E1F0               	bnz	l8766
  6288  0101C4  0100               	movlb	0	; () banked
  6289  0101C6  298E               	incf	(sprintf@width+1)& (0+255),w,b
  6290  0101C8  B4D8               	btfsc	status,2,c
  6291  0101CA  D014               	goto	l8778
  6292  0101CC  D7EB               	goto	l8766
  6293  0101CE                     l8772:
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6297  0101CE  C085  FFF6         	movff	sprintf@cp,tblptrl
  6298  0101D2  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  6299  0101D6                     	if	0	;tblptru may be non-zero
  6300  0101D6                     	endif
  6301  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6302  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  6303  0101D8  6EF8               	movwf	tblptru,c
  6304  0101DA                     	endif
  6305  0101DA  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6306  0101DE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6307  0101E2  0008               	tblrd		*
  6308  0101E4  CFF5 FFDF          	movff	tablat,indf2
  6309                           
  6310                           ; BSR set to: 0
  6311  0101E8  0100               	movlb	0	; () banked
  6312  0101EA  4B85               	infsnz	sprintf@cp& (0+255),f,b
  6313  0101EC  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  6314                           
  6315                           ; BSR set to: 0
  6316  0101EE  0100               	movlb	0	; () banked
  6317  0101F0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6318  0101F2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6319  0101F4                     l8778:
  6320                           
  6321                           ; BSR set to: 0
  6322  0101F4  0100               	movlb	0	; () banked
  6323  0101F6  0789               	decf	sprintf@len& (0+255),f,b
  6324  0101F8  A0D8               	btfss	status,0,c
  6325  0101FA  078A               	decf	(sprintf@len+1)& (0+255),f,b
  6326  0101FC  0100               	movlb	0	; () banked
  6327  0101FE  2989               	incf	sprintf@len& (0+255),w,b
  6328  010200  E1E6               	bnz	l8772
  6329  010202  0100               	movlb	0	; () banked
  6330  010204  298A               	incf	(sprintf@len+1)& (0+255),w,b
  6331  010206  B4D8               	btfsc	status,2,c
  6332  010208  D111               	goto	l8860
  6333  01020A  D7E1               	goto	l8772
  6334  01020C                     l8782:
  6335  01020C  C06E  FFF6         	movff	sprintf@f,tblptrl
  6336  010210  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6337  010214  0100               	movlb	0	; () banked
  6338  010216  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6339  010218  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6340  01021A                     	if	0	;tblptru may be non-zero
  6341  01021A                     	endif
  6342  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6343  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  6344  01021C  6EF8               	movwf	tblptru,c
  6345  01021E                     	endif
  6346  01021E  0008               	tblrd		*
  6347  010220  CFF5 F08C          	movff	tablat,sprintf@c
  6348  010224  0100               	movlb	0	; () banked
  6349  010226  518C               	movf	sprintf@c& (0+255),w,b
  6350                           
  6351                           ; Switch size 1, requested type "space"
  6352                           ; Number of cases is 4, Range of values is 0 to 115
  6353                           ; switch strategies available:
  6354                           ; Name         Instructions Cycles
  6355                           ; simple_byte           13     7 (average)
  6356                           ;	Chosen strategy is simple_byte
  6357  010228  0A00               	xorlw	0	; case 0
  6358  01022A  B4D8               	btfsc	status,2,c
  6359  01022C  D10F               	goto	l8862
  6360  01022E  0A64               	xorlw	100	; case 100
  6361  010230  B4D8               	btfsc	status,2,c
  6362  010232  D007               	goto	l8784
  6363  010234  0A0D               	xorlw	13	; case 105
  6364  010236  B4D8               	btfsc	status,2,c
  6365  010238  D004               	goto	l8784
  6366  01023A  0A1A               	xorlw	26	; case 115
  6367  01023C  B4D8               	btfsc	status,2,c
  6368  01023E  D760               	goto	l8746
  6369  010240  D0F5               	goto	l8860
  6370  010242                     l8784:
  6371                           
  6372                           ;doprnt.c: 1253: {
  6373                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6374  010242  C083  FFD9         	movff	sprintf@ap,fsr2l
  6375  010246  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  6376  01024A  CFDE F087          	movff	postinc2,sprintf@val
  6377  01024E  CFDD F088          	movff	postdec2,sprintf@val+1
  6378  010252  0E02               	movlw	2
  6379  010254  0100               	movlb	0	; () banked
  6380  010256  2783               	addwf	sprintf@ap& (0+255),f,b
  6381  010258  0E00               	movlw	0
  6382  01025A  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;doprnt.c: 1261: if((int)val < 0) {
  6386  01025C  0100               	movlb	0	; () banked
  6387  01025E  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  6388  010260  D008               	goto	l8794
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;doprnt.c: 1262: flag |= 0x03;
  6392  010262  0E03               	movlw	3
  6393  010264  0100               	movlb	0	; () banked
  6394  010266  138B               	iorwf	sprintf@flag& (0+255),f,b
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;doprnt.c: 1263: val = -val;
  6398  010268  0100               	movlb	0	; () banked
  6399  01026A  6D87               	negf	sprintf@val& (0+255),b
  6400  01026C  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  6401  01026E  B0D8               	btfsc	status,0,c
  6402  010270  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  6403  010272                     l8794:
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;doprnt.c: 1264: }
  6407                           ;doprnt.c: 1266: }
  6408                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6409  010272  0E01               	movlw	1
  6410  010274  0100               	movlb	0	; () banked
  6411  010276  6F8C               	movwf	sprintf@c& (0+255),b
  6412  010278                     l8796:
  6413                           
  6414                           ; BSR set to: 0
  6415  010278  0E05               	movlw	5
  6416  01027A  0100               	movlb	0	; () banked
  6417  01027C  198C               	xorwf	sprintf@c& (0+255),w,b
  6418  01027E  B4D8               	btfsc	status,2,c
  6419  010280  D019               	goto	l8808
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;doprnt.c: 1306: if(val < dpowers[c])
  6423                           
  6424                           ; BSR set to: 0
  6425                           
  6426                           ; BSR set to: 0
  6427  010282  0100               	movlb	0	; () banked
  6428  010284  518C               	movf	sprintf@c& (0+255),w,b
  6429  010286  0D02               	mullw	2
  6430  010288  0E6D               	movlw	low _dpowers
  6431  01028A  24F3               	addwf	prodl,w,c
  6432  01028C  6EF6               	movwf	tblptrl,c
  6433  01028E  0EFE               	movlw	high _dpowers
  6434  010290  20F4               	addwfc	prodh,w,c
  6435  010292  6EF7               	movwf	tblptrh,c
  6436  010294                     	if	1	;There are 3 active tblptr bytes
  6437  010294  6AF8               	clrf	tblptru,c
  6438  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  6439  010298  22F8               	addwfc	tblptru,f,c
  6440  01029A                     	endif
  6441  01029A  0009               	tblrd		*+
  6442  01029C  50F5               	movf	tablat,w,c
  6443  01029E  0100               	movlb	0	; () banked
  6444  0102A0  5D87               	subwf	sprintf@val& (0+255),w,b
  6445  0102A2  0009               	tblrd		*+
  6446  0102A4  50F5               	movf	tablat,w,c
  6447  0102A6  0100               	movlb	0	; () banked
  6448  0102A8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  6449  0102AA  A0D8               	btfss	status,0,c
  6450  0102AC  D003               	goto	l8808
  6451                           
  6452                           ; BSR set to: 0
  6453                           
  6454                           ; BSR set to: 0
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;doprnt.c: 1307: break;
  6458  0102AE  0100               	movlb	0	; () banked
  6459  0102B0  2B8C               	incf	sprintf@c& (0+255),f,b
  6460  0102B2  D7E2               	goto	l8796
  6461  0102B4                     l8808:
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6465  0102B4  0100               	movlb	0	; () banked
  6466  0102B6  518D               	movf	sprintf@width& (0+255),w,b
  6467  0102B8  0100               	movlb	0	; () banked
  6468  0102BA  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6469  0102BC  B4D8               	btfsc	status,2,c
  6470  0102BE  D00B               	goto	l8814
  6471                           
  6472                           ; BSR set to: 0
  6473  0102C0  C08B  F07E         	movff	sprintf@flag,??_sprintf
  6474  0102C4  0E03               	movlw	3
  6475  0102C6  0100               	movlb	0	; () banked
  6476  0102C8  177E               	andwf	??_sprintf& (0+255),f,b
  6477  0102CA  B4D8               	btfsc	status,2,c
  6478  0102CC  D004               	goto	l8814
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;doprnt.c: 1346: width--;
  6482  0102CE  0100               	movlb	0	; () banked
  6483  0102D0  078D               	decf	sprintf@width& (0+255),f,b
  6484  0102D2  A0D8               	btfss	status,0,c
  6485  0102D4  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6486  0102D6                     l8814:
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;doprnt.c: 1381: if(width > c)
  6490  0102D6  0E80               	movlw	128
  6491  0102D8  0100               	movlb	0	; () banked
  6492  0102DA  BF8C               	btfsc	sprintf@c& (0+255),7,b
  6493  0102DC  0E7F               	movlw	127
  6494  0102DE  0100               	movlb	0	; () banked
  6495  0102E0  6F7E               	movwf	??_sprintf& (0+255),b
  6496  0102E2  0100               	movlb	0	; () banked
  6497  0102E4  518D               	movf	sprintf@width& (0+255),w,b
  6498  0102E6  0100               	movlb	0	; () banked
  6499  0102E8  5D8C               	subwf	sprintf@c& (0+255),w,b
  6500  0102EA  0100               	movlb	0	; () banked
  6501  0102EC  518E               	movf	(sprintf@width+1)& (0+255),w,b
  6502  0102EE  0A80               	xorlw	128
  6503  0102F0  0100               	movlb	0	; () banked
  6504  0102F2  597E               	subwfb	??_sprintf& (0+255),w,b
  6505  0102F4  B0D8               	btfsc	status,0,c
  6506  0102F6  D00B               	goto	l8818
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;doprnt.c: 1382: width -= c;
  6510  0102F8  0100               	movlb	0	; () banked
  6511  0102FA  518C               	movf	sprintf@c& (0+255),w,b
  6512  0102FC  0100               	movlb	0	; () banked
  6513  0102FE  5F8D               	subwf	sprintf@width& (0+255),f,b
  6514  010300  0E00               	movlw	0
  6515  010302  0100               	movlb	0	; () banked
  6516  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  6517  010306  0EFF               	movlw	255
  6518  010308  0100               	movlb	0	; () banked
  6519  01030A  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  6520  01030C  D005               	goto	l8820
  6521  01030E                     l8818:
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;doprnt.c: 1383: else
  6525                           ;doprnt.c: 1384: width = 0;
  6526  01030E  0E00               	movlw	0
  6527  010310  0100               	movlb	0	; () banked
  6528  010312  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6529  010314  0E00               	movlw	0
  6530  010316  6F8D               	movwf	sprintf@width& (0+255),b
  6531  010318                     l8820:
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;doprnt.c: 1387: if(flag & 0x04) {
  6535  010318  0100               	movlb	0	; () banked
  6536  01031A  A58B               	btfss	sprintf@flag& (0+255),2,b
  6537  01031C  D024               	goto	l8836
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;doprnt.c: 1392: if(flag & 0x03)
  6541  01031E  C08B  F07E         	movff	sprintf@flag,??_sprintf
  6542  010322  0E03               	movlw	3
  6543  010324  0100               	movlb	0	; () banked
  6544  010326  177E               	andwf	??_sprintf& (0+255),f,b
  6545  010328  B4D8               	btfsc	status,2,c
  6546  01032A  D009               	goto	l8828
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  6550  01032C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6551  010330  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6552  010334  0E2D               	movlw	45
  6553  010336  6EDF               	movwf	indf2,c
  6554                           
  6555                           ; BSR set to: 0
  6556  010338  0100               	movlb	0	; () banked
  6557  01033A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6558  01033C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6559  01033E                     l8828:
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;doprnt.c: 1415: if(width)
  6563  01033E  0100               	movlb	0	; () banked
  6564  010340  518D               	movf	sprintf@width& (0+255),w,b
  6565  010342  0100               	movlb	0	; () banked
  6566  010344  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6567  010346  B4D8               	btfsc	status,2,c
  6568  010348  D037               	goto	l8850
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  6572                           
  6573                           ; BSR set to: 0
  6574                           
  6575                           ;doprnt.c: 1416: do
  6576  01034A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6577  01034E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6578  010352  0E30               	movlw	48
  6579  010354  6EDF               	movwf	indf2,c
  6580                           
  6581                           ; BSR set to: 0
  6582  010356  0100               	movlb	0	; () banked
  6583  010358  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6584  01035A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;doprnt.c: 1418: while(--width);
  6588  01035C  0100               	movlb	0	; () banked
  6589  01035E  078D               	decf	sprintf@width& (0+255),f,b
  6590  010360  A0D8               	btfss	status,0,c
  6591  010362  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6592  010364  D7EC               	goto	l8828
  6593  010366                     l8836:
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;doprnt.c: 1422: {
  6597                           ;doprnt.c: 1424: if(width
  6598                           ;doprnt.c: 1428: )
  6599  010366  0100               	movlb	0	; () banked
  6600  010368  518D               	movf	sprintf@width& (0+255),w,b
  6601  01036A  0100               	movlb	0	; () banked
  6602  01036C  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6603  01036E  B4D8               	btfsc	status,2,c
  6604  010370  D013               	goto	l8844
  6605  010372                     l8838:
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  6609  010372  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6610  010376  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6611  01037A  0E20               	movlw	32
  6612  01037C  6EDF               	movwf	indf2,c
  6613                           
  6614                           ; BSR set to: 0
  6615  01037E  0100               	movlb	0	; () banked
  6616  010380  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6617  010382  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;doprnt.c: 1431: while(--width);
  6621  010384  0100               	movlb	0	; () banked
  6622  010386  078D               	decf	sprintf@width& (0+255),f,b
  6623  010388  A0D8               	btfss	status,0,c
  6624  01038A  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6625  01038C  0100               	movlb	0	; () banked
  6626  01038E  518D               	movf	sprintf@width& (0+255),w,b
  6627  010390  0100               	movlb	0	; () banked
  6628  010392  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6629  010394  A4D8               	btfss	status,2,c
  6630  010396  D7ED               	goto	l8838
  6631  010398                     l8844:
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;doprnt.c: 1438: if(flag & 0x03)
  6635  010398  C08B  F07E         	movff	sprintf@flag,??_sprintf
  6636  01039C  0E03               	movlw	3
  6637  01039E  0100               	movlb	0	; () banked
  6638  0103A0  177E               	andwf	??_sprintf& (0+255),f,b
  6639  0103A2  B4D8               	btfsc	status,2,c
  6640  0103A4  D009               	goto	l8850
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6644  0103A6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6645  0103AA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6646  0103AE  0E2D               	movlw	45
  6647  0103B0  6EDF               	movwf	indf2,c
  6648                           
  6649                           ; BSR set to: 0
  6650  0103B2  0100               	movlb	0	; () banked
  6651  0103B4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6652  0103B6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6653  0103B8                     l8850:
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;doprnt.c: 1469: }
  6657                           ;doprnt.c: 1472: prec = c;
  6658  0103B8  C08C  F082         	movff	sprintf@c,sprintf@prec
  6659                           
  6660                           ;doprnt.c: 1474: while(prec--) {
  6661  0103BC  D031               	goto	l8858
  6662  0103BE                     l8852:
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;doprnt.c: 1478: {
  6666                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6667  0103BE  0100               	movlb	0	; () banked
  6668  0103C0  5182               	movf	sprintf@prec& (0+255),w,b
  6669  0103C2  0D02               	mullw	2
  6670  0103C4  0E6D               	movlw	low _dpowers
  6671  0103C6  24F3               	addwf	prodl,w,c
  6672  0103C8  6EF6               	movwf	tblptrl,c
  6673  0103CA  0EFE               	movlw	high _dpowers
  6674  0103CC  20F4               	addwfc	prodh,w,c
  6675  0103CE  6EF7               	movwf	tblptrh,c
  6676  0103D0                     	if	1	;There are 3 active tblptr bytes
  6677  0103D0  6AF8               	clrf	tblptru,c
  6678  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  6679  0103D4  22F8               	addwfc	tblptru,f,c
  6680  0103D6                     	endif
  6681  0103D6  0009               	tblrd		*+
  6682  0103D8  CFF5 F062          	movff	tablat,___lwdiv@divisor
  6683  0103DC  000A               	tblrd		*-
  6684  0103DE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  6685  0103E2  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  6686  0103E6  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  6687  0103EA  ECAC  F097         	call	___lwdiv	;wreg free
  6688  0103EE  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  6689  0103F2  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  6690  0103F6  0E00               	movlw	0
  6691  0103F8  0100               	movlb	0	; () banked
  6692  0103FA  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  6693  0103FC  0E0A               	movlw	10
  6694  0103FE  6F69               	movwf	___lwmod@divisor& (0+255),b
  6695  010400  ECC4  F098         	call	___lwmod	;wreg free
  6696  010404  0100               	movlb	0	; () banked
  6697  010406  5167               	movf	?___lwmod& (0+255),w,b
  6698  010408  0F30               	addlw	48
  6699  01040A  0100               	movlb	0	; () banked
  6700  01040C  6F8C               	movwf	sprintf@c& (0+255),b
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;doprnt.c: 1523: }
  6704                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6705  01040E  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6706  010412  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6707  010416  C08C  FFDF         	movff	sprintf@c,indf2
  6708                           
  6709                           ; BSR set to: 0
  6710  01041A  0100               	movlb	0	; () banked
  6711  01041C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6712  01041E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6713  010420                     l8858:
  6714                           
  6715                           ; BSR set to: 0
  6716  010420  0100               	movlb	0	; () banked
  6717  010422  0782               	decf	sprintf@prec& (0+255),f,b
  6718  010424  0100               	movlb	0	; () banked
  6719  010426  2982               	incf	sprintf@prec& (0+255),w,b
  6720  010428  A4D8               	btfss	status,2,c
  6721  01042A  D7C9               	goto	l8852
  6722  01042C                     l8860:
  6723                           
  6724                           ; BSR set to: 0
  6725  01042C  C06E  FFF6         	movff	sprintf@f,tblptrl
  6726  010430  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6727  010434  0100               	movlb	0	; () banked
  6728  010436  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6729  010438  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6730  01043A                     	if	0	;tblptru may be non-zero
  6731  01043A                     	endif
  6732  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6733  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  6734  01043C  6EF8               	movwf	tblptru,c
  6735  01043E                     	endif
  6736  01043E  0008               	tblrd		*
  6737  010440  CFF5 F08C          	movff	tablat,sprintf@c
  6738  010444  0100               	movlb	0	; () banked
  6739  010446  518C               	movf	sprintf@c& (0+255),w,b
  6740  010448  A4D8               	btfss	status,2,c
  6741  01044A  D5E1               	goto	l8720
  6742  01044C                     l8862:
  6743                           
  6744                           ;doprnt.c: 1538: *sp = 0;
  6745  01044C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6746  010450  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6747  010454  0E00               	movlw	0
  6748  010456  6EDF               	movwf	indf2,c
  6749  010458  0012               	return	
  6750  01045A                     __end_of_sprintf:
  6751                           	opt stack 0
  6752                           tblptru	equ	0xFF8
  6753                           tblptrh	equ	0xFF7
  6754                           tblptrl	equ	0xFF6
  6755                           tablat	equ	0xFF5
  6756                           prodh	equ	0xFF4
  6757                           prodl	equ	0xFF3
  6758                           intcon	equ	0xFF2
  6759                           intcon2	equ	0xFF1
  6760                           indf0	equ	0xFEF
  6761                           postinc0	equ	0xFEE
  6762                           fsr0h	equ	0xFEA
  6763                           fsr0l	equ	0xFE9
  6764                           wreg	equ	0xFE8
  6765                           postdec1	equ	0xFE5
  6766                           fsr1h	equ	0xFE2
  6767                           fsr1l	equ	0xFE1
  6768                           indf2	equ	0xFDF
  6769                           postinc2	equ	0xFDE
  6770                           postdec2	equ	0xFDD
  6771                           fsr2h	equ	0xFDA
  6772                           fsr2l	equ	0xFD9
  6773                           status	equ	0xFD8
  6774                           
  6775 ;; *************** function _isdigit *****************
  6776 ;; Defined at:
  6777 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  c               1    wreg     unsigned char 
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;  c               1    2[BANK0 ] unsigned char 
  6782 ;; Return value:  Size  Location     Type
  6783 ;;		None               void
  6784 ;; Registers used:
  6785 ;;		wreg, status,2, status,0
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6792 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6794 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6795 ;;Total ram usage:        3 bytes
  6796 ;; Hardware stack levels used:    1
  6797 ;; Hardware stack levels required when called:   11
  6798 ;; This function calls:
  6799 ;;		Nothing
  6800 ;; This function is called by:
  6801 ;;		_sprintf
  6802 ;;		_atoi
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text28
  6807  013756                     __ptext28:
  6808                           	opt stack 0
  6809  013756                     _isdigit:
  6810                           	opt stack 16
  6811                           
  6812                           ;incstack = 0
  6813                           ;isdigit@c stored from wreg
  6814  013756  0100               	movlb	0	; () banked
  6815  013758  6F62               	movwf	isdigit@c& (0+255),b
  6816  01375A  0E00               	movlw	0
  6817  01375C  0100               	movlb	0	; () banked
  6818  01375E  6F61               	movwf	_isdigit$5796& (0+255),b
  6819                           
  6820                           ; BSR set to: 0
  6821  013760  0E3A               	movlw	58
  6822  013762  0100               	movlb	0	; () banked
  6823  013764  6162               	cpfslt	isdigit@c& (0+255),b
  6824  013766  D007               	goto	l8442
  6825                           
  6826                           ; BSR set to: 0
  6827  013768  0E2F               	movlw	47
  6828  01376A  0100               	movlb	0	; () banked
  6829  01376C  6562               	cpfsgt	isdigit@c& (0+255),b
  6830  01376E  D003               	goto	l8442
  6831                           
  6832                           ; BSR set to: 0
  6833  013770  0E01               	movlw	1
  6834  013772  0100               	movlb	0	; () banked
  6835  013774  6F61               	movwf	_isdigit$5796& (0+255),b
  6836  013776                     l8442:
  6837                           
  6838                           ; BSR set to: 0
  6839  013776  C061  F060         	movff	_isdigit$5796,??_isdigit
  6840  01377A  0100               	movlb	0	; () banked
  6841  01377C  3160               	rrcf	??_isdigit& (0+255),w,b
  6842  01377E  0012               	return	
  6843  013780                     __end_of_isdigit:
  6844                           	opt stack 0
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           intcon	equ	0xFF2
  6852                           intcon2	equ	0xFF1
  6853                           indf0	equ	0xFEF
  6854                           postinc0	equ	0xFEE
  6855                           fsr0h	equ	0xFEA
  6856                           fsr0l	equ	0xFE9
  6857                           wreg	equ	0xFE8
  6858                           postdec1	equ	0xFE5
  6859                           fsr1h	equ	0xFE2
  6860                           fsr1l	equ	0xFE1
  6861                           indf2	equ	0xFDF
  6862                           postinc2	equ	0xFDE
  6863                           postdec2	equ	0xFDD
  6864                           fsr2h	equ	0xFDA
  6865                           fsr2l	equ	0xFD9
  6866                           status	equ	0xFD8
  6867                           
  6868 ;; *************** function ___wmul *****************
  6869 ;; Defined at:
  6870 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6873 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  product         2    4[BANK0 ] unsigned int 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  2    0[BANK0 ] unsigned int 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0, prodl, prodh
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6885 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6888 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6889 ;;Total ram usage:        6 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:   11
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_sprintf
  6896 ;;		_atoi
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text29
  6901  013580                     __ptext29:
  6902                           	opt stack 0
  6903  013580                     ___wmul:
  6904                           	opt stack 16
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;incstack = 0
  6908  013580  0100               	movlb	0	; () banked
  6909  013582  5160               	movf	___wmul@multiplier& (0+255),w,b
  6910  013584  0100               	movlb	0	; () banked
  6911  013586  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6912  013588  CFF3 F064          	movff	prodl,___wmul@product
  6913  01358C  CFF4 F065          	movff	prodh,___wmul@product+1
  6914  013590  0100               	movlb	0	; () banked
  6915  013592  5160               	movf	___wmul@multiplier& (0+255),w,b
  6916  013594  0100               	movlb	0	; () banked
  6917  013596  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6918  013598  50F3               	movf	prodl,w,c
  6919  01359A  0100               	movlb	0	; () banked
  6920  01359C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6921  01359E  0100               	movlb	0	; () banked
  6922  0135A0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6923  0135A2  0100               	movlb	0	; () banked
  6924  0135A4  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6925  0135A6  50F3               	movf	prodl,w,c
  6926  0135A8  0100               	movlb	0	; () banked
  6927  0135AA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6928                           
  6929                           ; BSR set to: 0
  6930  0135AC  C064  F060         	movff	___wmul@product,?___wmul
  6931  0135B0  C065  F061         	movff	___wmul@product+1,?___wmul+1
  6932  0135B4  0012               	return	
  6933  0135B6                     __end_of___wmul:
  6934                           	opt stack 0
  6935                           tblptru	equ	0xFF8
  6936                           tblptrh	equ	0xFF7
  6937                           tblptrl	equ	0xFF6
  6938                           tablat	equ	0xFF5
  6939                           prodh	equ	0xFF4
  6940                           prodl	equ	0xFF3
  6941                           intcon	equ	0xFF2
  6942                           intcon2	equ	0xFF1
  6943                           indf0	equ	0xFEF
  6944                           postinc0	equ	0xFEE
  6945                           fsr0h	equ	0xFEA
  6946                           fsr0l	equ	0xFE9
  6947                           wreg	equ	0xFE8
  6948                           postdec1	equ	0xFE5
  6949                           fsr1h	equ	0xFE2
  6950                           fsr1l	equ	0xFE1
  6951                           indf2	equ	0xFDF
  6952                           postinc2	equ	0xFDE
  6953                           postdec2	equ	0xFDD
  6954                           fsr2h	equ	0xFDA
  6955                           fsr2l	equ	0xFD9
  6956                           status	equ	0xFD8
  6957                           
  6958 ;; *************** function ___lwmod *****************
  6959 ;; Defined at:
  6960 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;  dividend        2    7[BANK0 ] unsigned int 
  6963 ;;  divisor         2    9[BANK0 ] unsigned int 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  counter         1   11[BANK0 ] unsigned char 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  2    7[BANK0 ] unsigned int 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6975 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;Total ram usage:        5 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:   11
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_sprintf
  6986 ;;		_ringbuf_put_num
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           	psect	text30
  6991  013188                     __ptext30:
  6992                           	opt stack 0
  6993  013188                     ___lwmod:
  6994                           	opt stack 16
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;incstack = 0
  6998  013188  0100               	movlb	0	; () banked
  6999  01318A  5169               	movf	___lwmod@divisor& (0+255),w,b
  7000  01318C  0100               	movlb	0	; () banked
  7001  01318E  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7002  013190  B4D8               	btfsc	status,2,c
  7003  013192  D026               	goto	l1982
  7004                           
  7005                           ; BSR set to: 0
  7006  013194  0E01               	movlw	1
  7007  013196  0100               	movlb	0	; () banked
  7008  013198  6F6B               	movwf	___lwmod@counter& (0+255),b
  7009  01319A  D006               	goto	l8480
  7010  01319C                     l8478:
  7011                           
  7012                           ; BSR set to: 0
  7013  01319C  0100               	movlb	0	; () banked
  7014  01319E  90D8               	bcf	status,0,c
  7015  0131A0  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  7016  0131A2  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7017  0131A4  0100               	movlb	0	; () banked
  7018  0131A6  2B6B               	incf	___lwmod@counter& (0+255),f,b
  7019  0131A8                     l8480:
  7020                           
  7021                           ; BSR set to: 0
  7022  0131A8  0100               	movlb	0	; () banked
  7023  0131AA  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7024  0131AC  D7F7               	goto	l8478
  7025  0131AE                     l8482:
  7026                           
  7027                           ; BSR set to: 0
  7028  0131AE  0100               	movlb	0	; () banked
  7029  0131B0  5169               	movf	___lwmod@divisor& (0+255),w,b
  7030  0131B2  0100               	movlb	0	; () banked
  7031  0131B4  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  7032  0131B6  0100               	movlb	0	; () banked
  7033  0131B8  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7034  0131BA  0100               	movlb	0	; () banked
  7035  0131BC  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7036  0131BE  A0D8               	btfss	status,0,c
  7037  0131C0  D008               	goto	l8486
  7038                           
  7039                           ; BSR set to: 0
  7040  0131C2  0100               	movlb	0	; () banked
  7041  0131C4  5169               	movf	___lwmod@divisor& (0+255),w,b
  7042  0131C6  0100               	movlb	0	; () banked
  7043  0131C8  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  7044  0131CA  0100               	movlb	0	; () banked
  7045  0131CC  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7046  0131CE  0100               	movlb	0	; () banked
  7047  0131D0  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7048  0131D2                     l8486:
  7049                           
  7050                           ; BSR set to: 0
  7051  0131D2  0100               	movlb	0	; () banked
  7052  0131D4  90D8               	bcf	status,0,c
  7053  0131D6  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7054  0131D8  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  7055                           
  7056                           ; BSR set to: 0
  7057  0131DA  0100               	movlb	0	; () banked
  7058  0131DC  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  7059  0131DE  D7E7               	goto	l8482
  7060  0131E0                     l1982:
  7061                           
  7062                           ; BSR set to: 0
  7063  0131E0  C067  F067         	movff	___lwmod@dividend,?___lwmod
  7064  0131E4  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  7065                           
  7066                           ; BSR set to: 0
  7067  0131E8  0012               	return		;funcret
  7068  0131EA                     __end_of___lwmod:
  7069                           	opt stack 0
  7070                           tblptru	equ	0xFF8
  7071                           tblptrh	equ	0xFF7
  7072                           tblptrl	equ	0xFF6
  7073                           tablat	equ	0xFF5
  7074                           prodh	equ	0xFF4
  7075                           prodl	equ	0xFF3
  7076                           intcon	equ	0xFF2
  7077                           intcon2	equ	0xFF1
  7078                           indf0	equ	0xFEF
  7079                           postinc0	equ	0xFEE
  7080                           fsr0h	equ	0xFEA
  7081                           fsr0l	equ	0xFE9
  7082                           wreg	equ	0xFE8
  7083                           postdec1	equ	0xFE5
  7084                           fsr1h	equ	0xFE2
  7085                           fsr1l	equ	0xFE1
  7086                           indf2	equ	0xFDF
  7087                           postinc2	equ	0xFDE
  7088                           postdec2	equ	0xFDD
  7089                           fsr2h	equ	0xFDA
  7090                           fsr2l	equ	0xFD9
  7091                           status	equ	0xFD8
  7092                           
  7093 ;; *************** function ___lwdiv *****************
  7094 ;; Defined at:
  7095 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  dividend        2    0[BANK0 ] unsigned int 
  7098 ;;  divisor         2    2[BANK0 ] unsigned int 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  quotient        2    5[BANK0 ] unsigned int 
  7101 ;;  counter         1    4[BANK0 ] unsigned char 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  2    0[BANK0 ] unsigned int 
  7104 ;; Registers used:
  7105 ;;		wreg, status,2, status,0
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7112 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7114 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7115 ;;Total ram usage:        7 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:   11
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_sprintf
  7122 ;;		_ringbuf_put_num
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           	psect	text31
  7127  012F58                     __ptext31:
  7128                           	opt stack 0
  7129  012F58                     ___lwdiv:
  7130                           	opt stack 16
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;incstack = 0
  7134  012F58  0E00               	movlw	0
  7135  012F5A  0100               	movlb	0	; () banked
  7136  012F5C  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7137  012F5E  0E00               	movlw	0
  7138  012F60  6F65               	movwf	___lwdiv@quotient& (0+255),b
  7139                           
  7140                           ; BSR set to: 0
  7141  012F62  0100               	movlb	0	; () banked
  7142  012F64  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7143  012F66  0100               	movlb	0	; () banked
  7144  012F68  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7145  012F6A  B4D8               	btfsc	status,2,c
  7146  012F6C  D02C               	goto	l1972
  7147                           
  7148                           ; BSR set to: 0
  7149  012F6E  0E01               	movlw	1
  7150  012F70  0100               	movlb	0	; () banked
  7151  012F72  6F64               	movwf	___lwdiv@counter& (0+255),b
  7152  012F74  D006               	goto	l8460
  7153  012F76                     l8458:
  7154                           
  7155                           ; BSR set to: 0
  7156  012F76  0100               	movlb	0	; () banked
  7157  012F78  90D8               	bcf	status,0,c
  7158  012F7A  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  7159  012F7C  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7160  012F7E  0100               	movlb	0	; () banked
  7161  012F80  2B64               	incf	___lwdiv@counter& (0+255),f,b
  7162  012F82                     l8460:
  7163                           
  7164                           ; BSR set to: 0
  7165  012F82  0100               	movlb	0	; () banked
  7166  012F84  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7167  012F86  D7F7               	goto	l8458
  7168  012F88                     l8462:
  7169                           
  7170                           ; BSR set to: 0
  7171  012F88  0100               	movlb	0	; () banked
  7172  012F8A  90D8               	bcf	status,0,c
  7173  012F8C  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  7174  012F8E  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7175                           
  7176                           ; BSR set to: 0
  7177  012F90  0100               	movlb	0	; () banked
  7178  012F92  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7179  012F94  0100               	movlb	0	; () banked
  7180  012F96  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  7181  012F98  0100               	movlb	0	; () banked
  7182  012F9A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7183  012F9C  0100               	movlb	0	; () banked
  7184  012F9E  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7185  012FA0  A0D8               	btfss	status,0,c
  7186  012FA2  D00A               	goto	l8470
  7187                           
  7188                           ; BSR set to: 0
  7189  012FA4  0100               	movlb	0	; () banked
  7190  012FA6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7191  012FA8  0100               	movlb	0	; () banked
  7192  012FAA  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  7193  012FAC  0100               	movlb	0	; () banked
  7194  012FAE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7195  012FB0  0100               	movlb	0	; () banked
  7196  012FB2  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7197                           
  7198                           ; BSR set to: 0
  7199  012FB4  0100               	movlb	0	; () banked
  7200  012FB6  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  7201  012FB8                     l8470:
  7202                           
  7203                           ; BSR set to: 0
  7204  012FB8  0100               	movlb	0	; () banked
  7205  012FBA  90D8               	bcf	status,0,c
  7206  012FBC  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7207  012FBE  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  7208                           
  7209                           ; BSR set to: 0
  7210  012FC0  0100               	movlb	0	; () banked
  7211  012FC2  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  7212  012FC4  D7E1               	goto	l8462
  7213  012FC6                     l1972:
  7214                           
  7215                           ; BSR set to: 0
  7216  012FC6  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  7217  012FCA  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7218                           
  7219                           ; BSR set to: 0
  7220  012FCE  0012               	return		;funcret
  7221  012FD0                     __end_of___lwdiv:
  7222                           	opt stack 0
  7223                           tblptru	equ	0xFF8
  7224                           tblptrh	equ	0xFF7
  7225                           tblptrl	equ	0xFF6
  7226                           tablat	equ	0xFF5
  7227                           prodh	equ	0xFF4
  7228                           prodl	equ	0xFF3
  7229                           intcon	equ	0xFF2
  7230                           intcon2	equ	0xFF1
  7231                           indf0	equ	0xFEF
  7232                           postinc0	equ	0xFEE
  7233                           fsr0h	equ	0xFEA
  7234                           fsr0l	equ	0xFE9
  7235                           wreg	equ	0xFE8
  7236                           postdec1	equ	0xFE5
  7237                           fsr1h	equ	0xFE2
  7238                           fsr1l	equ	0xFE1
  7239                           indf2	equ	0xFDF
  7240                           postinc2	equ	0xFDE
  7241                           postdec2	equ	0xFDD
  7242                           fsr2h	equ	0xFDA
  7243                           fsr2l	equ	0xFD9
  7244                           status	equ	0xFD8
  7245                           
  7246 ;; *************** function _USB_task *****************
  7247 ;; Defined at:
  7248 ;;		line 66 in file "../My_library/My_usb_cdc.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;		None
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  rx_len          2   22[BANK0 ] int 
  7253 ;;  data            1   24[BANK0 ] unsigned char 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;		None               void
  7256 ;; Registers used:
  7257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7264 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7266 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7267 ;;Total ram usage:        3 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:   14
  7270 ;; This function calls:
  7271 ;;		_get_string_usb
  7272 ;;		_put_string_usb
  7273 ;;		_ringbuf_num
  7274 ;;		_ringbuf_pop
  7275 ;;		_ringbuf_put
  7276 ;; This function is called by:
  7277 ;;		_main
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text32
  7282  012D34                     __ptext32:
  7283                           	opt stack 0
  7284  012D34                     _USB_task:
  7285                           	opt stack 16
  7286                           
  7287                           ;My_usb_cdc.c: 67: char data;
  7288                           ;My_usb_cdc.c: 68: int rx_len;
  7289                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;incstack = 0
  7293  012D34  0E78               	movlw	low USB_task@data
  7294  012D36  0100               	movlb	0	; () banked
  7295  012D38  6F6D               	movwf	get_string_usb@s& (0+255),b
  7296  012D3A  0E00               	movlw	high USB_task@data
  7297  012D3C  0100               	movlb	0	; () banked
  7298  012D3E  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
  7299  012D40  0E00               	movlw	0
  7300  012D42  0100               	movlb	0	; () banked
  7301  012D44  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
  7302  012D46  0E01               	movlw	1
  7303  012D48  6F6F               	movwf	get_string_usb@len& (0+255),b
  7304  012D4A  ECA5  F099         	call	_get_string_usb	;wreg free
  7305  012D4E  C06D  F076         	movff	?_get_string_usb,USB_task@rx_len
  7306  012D52  C06E  F077         	movff	?_get_string_usb+1,USB_task@rx_len+1
  7307                           
  7308                           ;My_usb_cdc.c: 70: if (rx_len) {
  7309  012D56  0100               	movlb	0	; () banked
  7310  012D58  5176               	movf	USB_task@rx_len& (0+255),w,b
  7311  012D5A  0100               	movlb	0	; () banked
  7312  012D5C  1177               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
  7313  012D5E  B4D8               	btfsc	status,2,c
  7314  012D60  D00A               	goto	l1370
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
  7318  012D62  0EDE               	movlw	low _usb_rx
  7319  012D64  0100               	movlb	0	; () banked
  7320  012D66  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  7321  012D68  0E01               	movlw	high _usb_rx
  7322  012D6A  0100               	movlb	0	; () banked
  7323  012D6C  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  7324  012D6E  C078  F071         	movff	USB_task@data,ringbuf_put@asciicode
  7325  012D72  ECD9  F08F         	call	_ringbuf_put	;wreg free
  7326  012D76                     l1370:
  7327                           
  7328                           ;My_usb_cdc.c: 72: }
  7329                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
  7330  012D76  0EE6               	movlw	low _usb_tx
  7331  012D78  0100               	movlb	0	; () banked
  7332  012D7A  6F60               	movwf	ringbuf_num@rb& (0+255),b
  7333  012D7C  0E01               	movlw	high _usb_tx
  7334  012D7E  0100               	movlb	0	; () banked
  7335  012D80  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  7336  012D82  ECF3  F08B         	call	_ringbuf_num	;wreg free
  7337  012D86  0100               	movlb	0	; () banked
  7338  012D88  5160               	movf	?_ringbuf_num& (0+255),w,b
  7339  012D8A  0100               	movlb	0	; () banked
  7340  012D8C  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  7341  012D8E  B4D8               	btfsc	status,2,c
  7342  012D90  0012               	return	
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
  7346  012D92  0EE6               	movlw	low _usb_tx
  7347  012D94  0100               	movlb	0	; () banked
  7348  012D96  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  7349  012D98  0E01               	movlw	high _usb_tx
  7350  012D9A  0100               	movlb	0	; () banked
  7351  012D9C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  7352  012D9E  EC13  F091         	call	_ringbuf_pop	;wreg free
  7353  012DA2  0100               	movlb	0	; () banked
  7354  012DA4  6F78               	movwf	USB_task@data& (0+255),b
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
  7358  012DA6  0E78               	movlw	low USB_task@data
  7359  012DA8  0100               	movlb	0	; () banked
  7360  012DAA  6F6C               	movwf	put_string_usb@s& (0+255),b
  7361  012DAC  0E00               	movlw	high USB_task@data
  7362  012DAE  0100               	movlb	0	; () banked
  7363  012DB0  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
  7364  012DB2  0E00               	movlw	0
  7365  012DB4  0100               	movlb	0	; () banked
  7366  012DB6  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
  7367  012DB8  0E01               	movlw	1
  7368  012DBA  6F6E               	movwf	put_string_usb@len& (0+255),b
  7369  012DBC  EC53  F09B         	call	_put_string_usb	;wreg free
  7370  012DC0  0012               	return	
  7371  012DC2                     __end_of_USB_task:
  7372                           	opt stack 0
  7373                           tblptru	equ	0xFF8
  7374                           tblptrh	equ	0xFF7
  7375                           tblptrl	equ	0xFF6
  7376                           tablat	equ	0xFF5
  7377                           prodh	equ	0xFF4
  7378                           prodl	equ	0xFF3
  7379                           intcon	equ	0xFF2
  7380                           intcon2	equ	0xFF1
  7381                           indf0	equ	0xFEF
  7382                           postinc0	equ	0xFEE
  7383                           fsr0h	equ	0xFEA
  7384                           fsr0l	equ	0xFE9
  7385                           wreg	equ	0xFE8
  7386                           postdec1	equ	0xFE5
  7387                           fsr1h	equ	0xFE2
  7388                           fsr1l	equ	0xFE1
  7389                           indf2	equ	0xFDF
  7390                           postinc2	equ	0xFDE
  7391                           postdec2	equ	0xFDD
  7392                           fsr2h	equ	0xFDA
  7393                           fsr2l	equ	0xFD9
  7394                           status	equ	0xFD8
  7395                           
  7396 ;; *************** function _ringbuf_put *****************
  7397 ;; Defined at:
  7398 ;;		line 20 in file "../My_library/My_ringbuf.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  7401 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  7402 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  7403 ;;  asciicode       1   17[BANK0 ] unsigned char 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;		None               void
  7408 ;; Registers used:
  7409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7415 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7417 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7418 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7419 ;;Total ram usage:        7 bytes
  7420 ;; Hardware stack levels used:    1
  7421 ;; Hardware stack levels required when called:   12
  7422 ;; This function calls:
  7423 ;;		_ringbuf_num
  7424 ;; This function is called by:
  7425 ;;		_USB_task
  7426 ;;		_main
  7427 ;;		_ringbuf_put_num
  7428 ;;		_ringbuf_put_str
  7429 ;;		_ST7032_command
  7430 ;;		_ST7032_put
  7431 ;;		_ST7032_create_char
  7432 ;;		_ST7032_init
  7433 ;;		_terminal_task
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text33
  7438  011FB2                     __ptext33:
  7439                           	opt stack 0
  7440  011FB2                     _ringbuf_put:
  7441                           	opt stack 18
  7442                           
  7443                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  7444                           
  7445                           ;incstack = 0
  7446  011FB2  C06F  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  7447  011FB6  C070  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  7448  011FBA  ECF3  F08B         	call	_ringbuf_num	;wreg free
  7449  011FBE  0100               	movlb	0	; () banked
  7450  011FC0  EE20 F002          	lfsr	2,2
  7451  011FC4  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7452  011FC6  26D9               	addwf	fsr2l,f,c
  7453  011FC8  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7454  011FCA  22DA               	addwfc	fsr2h,f,c
  7455  011FCC  50DE               	movf	postinc2,w,c
  7456  011FCE  0100               	movlb	0	; () banked
  7457  011FD0  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  7458  011FD2  50DE               	movf	postinc2,w,c
  7459  011FD4  0100               	movlb	0	; () banked
  7460  011FD6  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  7461  011FD8  B0D8               	btfsc	status,0,c
  7462  011FDA  0012               	return	
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  7466  011FDC  0100               	movlb	0	; () banked
  7467  011FDE  EE20 F004          	lfsr	2,4
  7468  011FE2  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7469  011FE4  26D9               	addwf	fsr2l,f,c
  7470  011FE6  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7471  011FE8  22DA               	addwfc	fsr2h,f,c
  7472  011FEA  CFDE F072          	movff	postinc2,??_ringbuf_put
  7473  011FEE  CFDD F073          	movff	postdec2,??_ringbuf_put+1
  7474  011FF2  C06F  FFD9         	movff	ringbuf_put@rb,fsr2l
  7475  011FF6  C070  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  7476  011FFA  CFDE F074          	movff	postinc2,??_ringbuf_put+2
  7477  011FFE  CFDD F075          	movff	postdec2,??_ringbuf_put+3
  7478  012002  0100               	movlb	0	; () banked
  7479  012004  5172               	movf	??_ringbuf_put& (0+255),w,b
  7480  012006  0100               	movlb	0	; () banked
  7481  012008  2574               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  7482  01200A  6ED9               	movwf	fsr2l,c
  7483  01200C  0100               	movlb	0	; () banked
  7484  01200E  5173               	movf	(??_ringbuf_put+1)& (0+255),w,b
  7485  012010  0100               	movlb	0	; () banked
  7486  012012  2175               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  7487  012014  6EDA               	movwf	fsr2h,c
  7488  012016  C071  FFDF         	movff	ringbuf_put@asciicode,indf2
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  7492  01201A  0100               	movlb	0	; () banked
  7493  01201C  EE20 F002          	lfsr	2,2
  7494  012020  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7495  012022  26D9               	addwf	fsr2l,f,c
  7496  012024  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7497  012026  22DA               	addwfc	fsr2h,f,c
  7498  012028  0100               	movlb	0	; () banked
  7499  01202A  EE10 F004          	lfsr	1,4
  7500  01202E  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7501  012030  26E1               	addwf	fsr1l,f,c
  7502  012032  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7503  012034  22E2               	addwfc	fsr1h,f,c
  7504  012036  CFE6 F074          	movff	postinc1,??_ringbuf_put+2
  7505  01203A  CFE5 F075          	movff	postdec1,??_ringbuf_put+3
  7506  01203E  0E01               	movlw	1
  7507  012040  0100               	movlb	0	; () banked
  7508  012042  2774               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  7509  012044  0E00               	movlw	0
  7510  012046  2375               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  7511  012048  50DE               	movf	postinc2,w,c
  7512  01204A  0100               	movlb	0	; () banked
  7513  01204C  5D74               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  7514  01204E  50DE               	movf	postinc2,w,c
  7515  012050  0100               	movlb	0	; () banked
  7516  012052  5975               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  7517  012054  B0D8               	btfsc	status,0,c
  7518  012056  D00B               	goto	l8964
  7519                           
  7520                           ; BSR set to: 0
  7521  012058  0100               	movlb	0	; () banked
  7522  01205A  EE20 F004          	lfsr	2,4
  7523  01205E  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7524  012060  26D9               	addwf	fsr2l,f,c
  7525  012062  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7526  012064  22DA               	addwfc	fsr2h,f,c
  7527  012066  2ADE               	incf	postinc2,f,c
  7528  012068  0E00               	movlw	0
  7529  01206A  22DD               	addwfc	postdec2,f,c
  7530  01206C  0012               	return	
  7531  01206E                     l8964:
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;My_ringbuf.c: 24: else rb->head = 0;
  7535  01206E  0100               	movlb	0	; () banked
  7536  012070  EE20 F004          	lfsr	2,4
  7537  012074  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7538  012076  26D9               	addwf	fsr2l,f,c
  7539  012078  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7540  01207A  22DA               	addwfc	fsr2h,f,c
  7541  01207C  0E00               	movlw	0
  7542  01207E  6EDE               	movwf	postinc2,c
  7543  012080  0E00               	movlw	0
  7544  012082  6EDD               	movwf	postdec2,c
  7545                           
  7546                           ; BSR set to: 0
  7547  012084  0012               	return	
  7548  012086                     __end_of_ringbuf_put:
  7549                           	opt stack 0
  7550                           tblptru	equ	0xFF8
  7551                           tblptrh	equ	0xFF7
  7552                           tblptrl	equ	0xFF6
  7553                           tablat	equ	0xFF5
  7554                           prodh	equ	0xFF4
  7555                           prodl	equ	0xFF3
  7556                           intcon	equ	0xFF2
  7557                           intcon2	equ	0xFF1
  7558                           indf0	equ	0xFEF
  7559                           postinc0	equ	0xFEE
  7560                           fsr0h	equ	0xFEA
  7561                           fsr0l	equ	0xFE9
  7562                           wreg	equ	0xFE8
  7563                           postinc1	equ	0xFE6
  7564                           postdec1	equ	0xFE5
  7565                           fsr1h	equ	0xFE2
  7566                           fsr1l	equ	0xFE1
  7567                           indf2	equ	0xFDF
  7568                           postinc2	equ	0xFDE
  7569                           postdec2	equ	0xFDD
  7570                           fsr2h	equ	0xFDA
  7571                           fsr2l	equ	0xFD9
  7572                           status	equ	0xFD8
  7573                           
  7574 ;; *************** function _ringbuf_pop *****************
  7575 ;; Defined at:
  7576 ;;		line 45 in file "../My_library/My_ringbuf.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  7579 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  7580 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  ret             1   14[BANK0 ] unsigned char 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  1    wreg      unsigned char 
  7585 ;; Registers used:
  7586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7592 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7594 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7595 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7596 ;;Total ram usage:        7 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:   12
  7599 ;; This function calls:
  7600 ;;		_ringbuf_num
  7601 ;; This function is called by:
  7602 ;;		_USB_task
  7603 ;;		_main
  7604 ;;		_ST7032_task
  7605 ;;		_terminal_task
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text34
  7610  012226                     __ptext34:
  7611                           	opt stack 0
  7612  012226                     _ringbuf_pop:
  7613                           	opt stack 18
  7614                           
  7615                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;incstack = 0
  7619  012226  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  7620  01222A  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  7621  01222E  ECF3  F08B         	call	_ringbuf_num	;wreg free
  7622  012232  0100               	movlb	0	; () banked
  7623  012234  5160               	movf	?_ringbuf_num& (0+255),w,b
  7624  012236  0100               	movlb	0	; () banked
  7625  012238  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  7626  01223A  B4D8               	btfsc	status,2,c
  7627  01223C  D058               	goto	l8982
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  7631  01223E  0100               	movlb	0	; () banked
  7632  012240  EE20 F006          	lfsr	2,6
  7633  012244  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7634  012246  26D9               	addwf	fsr2l,f,c
  7635  012248  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7636  01224A  22DA               	addwfc	fsr2h,f,c
  7637  01224C  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  7638  012250  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  7639  012254  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  7640  012258  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  7641  01225C  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  7642  012260  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  7643  012264  0100               	movlb	0	; () banked
  7644  012266  516A               	movf	??_ringbuf_pop& (0+255),w,b
  7645  012268  0100               	movlb	0	; () banked
  7646  01226A  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  7647  01226C  6ED9               	movwf	fsr2l,c
  7648  01226E  0100               	movlb	0	; () banked
  7649  012270  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  7650  012272  0100               	movlb	0	; () banked
  7651  012274  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  7652  012276  6EDA               	movwf	fsr2h,c
  7653  012278  50DF               	movf	indf2,w,c
  7654  01227A  0100               	movlb	0	; () banked
  7655  01227C  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  7659  01227E  0100               	movlb	0	; () banked
  7660  012280  EE20 F002          	lfsr	2,2
  7661  012284  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7662  012286  26D9               	addwf	fsr2l,f,c
  7663  012288  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7664  01228A  22DA               	addwfc	fsr2h,f,c
  7665  01228C  0100               	movlb	0	; () banked
  7666  01228E  EE10 F006          	lfsr	1,6
  7667  012292  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7668  012294  26E1               	addwf	fsr1l,f,c
  7669  012296  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7670  012298  22E2               	addwfc	fsr1h,f,c
  7671  01229A  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  7672  01229E  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  7673  0122A2  0E01               	movlw	1
  7674  0122A4  0100               	movlb	0	; () banked
  7675  0122A6  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  7676  0122A8  0E00               	movlw	0
  7677  0122AA  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  7678  0122AC  50DE               	movf	postinc2,w,c
  7679  0122AE  0100               	movlb	0	; () banked
  7680  0122B0  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  7681  0122B2  50DE               	movf	postinc2,w,c
  7682  0122B4  0100               	movlb	0	; () banked
  7683  0122B6  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  7684  0122B8  B0D8               	btfsc	status,0,c
  7685  0122BA  D00B               	goto	l8974
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;My_ringbuf.c: 49: rb->tail++;
  7689  0122BC  0100               	movlb	0	; () banked
  7690  0122BE  EE20 F006          	lfsr	2,6
  7691  0122C2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7692  0122C4  26D9               	addwf	fsr2l,f,c
  7693  0122C6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7694  0122C8  22DA               	addwfc	fsr2h,f,c
  7695  0122CA  2ADE               	incf	postinc2,f,c
  7696  0122CC  0E00               	movlw	0
  7697  0122CE  22DD               	addwfc	postdec2,f,c
  7698                           
  7699                           ;My_ringbuf.c: 50: } else {
  7700  0122D0  D00B               	goto	l8976
  7701  0122D2                     l8974:
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;My_ringbuf.c: 51: rb->tail = 0;
  7705  0122D2  0100               	movlb	0	; () banked
  7706  0122D4  EE20 F006          	lfsr	2,6
  7707  0122D8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7708  0122DA  26D9               	addwf	fsr2l,f,c
  7709  0122DC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7710  0122DE  22DA               	addwfc	fsr2h,f,c
  7711  0122E0  0E00               	movlw	0
  7712  0122E2  6EDE               	movwf	postinc2,c
  7713  0122E4  0E00               	movlw	0
  7714  0122E6  6EDD               	movwf	postdec2,c
  7715  0122E8                     l8976:
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;My_ringbuf.c: 52: }
  7719                           ;My_ringbuf.c: 53: return ret;
  7720  0122E8  0100               	movlb	0	; () banked
  7721  0122EA  516E               	movf	ringbuf_pop@ret& (0+255),w,b
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;My_ringbuf.c: 54: } else {
  7725                           
  7726                           ; BSR set to: 0
  7727  0122EC  0012               	return	
  7728  0122EE                     l8982:
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;My_ringbuf.c: 55: return 0;
  7732  0122EE  0E00               	movlw	0
  7733                           
  7734                           ; BSR set to: 0
  7735  0122F0  0012               	return	
  7736  0122F2                     __end_of_ringbuf_pop:
  7737                           	opt stack 0
  7738                           tblptru	equ	0xFF8
  7739                           tblptrh	equ	0xFF7
  7740                           tblptrl	equ	0xFF6
  7741                           tablat	equ	0xFF5
  7742                           prodh	equ	0xFF4
  7743                           prodl	equ	0xFF3
  7744                           intcon	equ	0xFF2
  7745                           intcon2	equ	0xFF1
  7746                           indf0	equ	0xFEF
  7747                           postinc0	equ	0xFEE
  7748                           fsr0h	equ	0xFEA
  7749                           fsr0l	equ	0xFE9
  7750                           wreg	equ	0xFE8
  7751                           postinc1	equ	0xFE6
  7752                           postdec1	equ	0xFE5
  7753                           fsr1h	equ	0xFE2
  7754                           fsr1l	equ	0xFE1
  7755                           indf2	equ	0xFDF
  7756                           postinc2	equ	0xFDE
  7757                           postdec2	equ	0xFDD
  7758                           fsr2h	equ	0xFDA
  7759                           fsr2l	equ	0xFD9
  7760                           status	equ	0xFD8
  7761                           
  7762 ;; *************** function _put_string_usb *****************
  7763 ;; Defined at:
  7764 ;;		line 21 in file "../My_library/My_usb_cdc.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  s               2   12[BANK0 ] PTR unsigned char 
  7767 ;;		 -> USB_task@data(1), 
  7768 ;;  len             2   14[BANK0 ] int 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;		None
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  2   12[BANK0 ] int 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7780 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;Total ram usage:        4 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:   13
  7787 ;; This function calls:
  7788 ;;		_CDCTxService
  7789 ;;		_is_usb_available
  7790 ;;		_putUSBUSART
  7791 ;; This function is called by:
  7792 ;;		_USB_task
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text35
  7797  0136A6                     __ptext35:
  7798                           	opt stack 0
  7799  0136A6                     _put_string_usb:
  7800                           	opt stack 16
  7801                           
  7802                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;incstack = 0
  7806  0136A6  EC33  F09C         	call	_is_usb_available	;wreg free
  7807  0136AA  0900               	iorlw	0
  7808  0136AC  B4D8               	btfsc	status,2,c
  7809  0136AE  0012               	return	
  7810  0136B0  D002               	goto	l9088
  7811  0136B2                     l9086:
  7812  0136B2  ECB1  F087         	call	_CDCTxService	;wreg free
  7813  0136B6                     l9088:
  7814  0136B6  5028               	movf	_cdc_trf_state,w,c
  7815  0136B8  A4D8               	btfss	status,2,c
  7816  0136BA  D7FB               	goto	l9086
  7817                           
  7818                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
  7819  0136BC  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
  7820  0136C0  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
  7821  0136C4  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
  7822  0136C8  ECE5  F09B         	call	_putUSBUSART	;wreg free
  7823                           
  7824                           ;My_usb_cdc.c: 28: CDCTxService();
  7825  0136CC  ECB1  F087         	call	_CDCTxService	;wreg free
  7826  0136D0  0012               	return	
  7827  0136D2                     __end_of_put_string_usb:
  7828                           	opt stack 0
  7829                           tblptru	equ	0xFF8
  7830                           tblptrh	equ	0xFF7
  7831                           tblptrl	equ	0xFF6
  7832                           tablat	equ	0xFF5
  7833                           prodh	equ	0xFF4
  7834                           prodl	equ	0xFF3
  7835                           intcon	equ	0xFF2
  7836                           intcon2	equ	0xFF1
  7837                           indf0	equ	0xFEF
  7838                           postinc0	equ	0xFEE
  7839                           fsr0h	equ	0xFEA
  7840                           fsr0l	equ	0xFE9
  7841                           wreg	equ	0xFE8
  7842                           postinc1	equ	0xFE6
  7843                           postdec1	equ	0xFE5
  7844                           fsr1h	equ	0xFE2
  7845                           fsr1l	equ	0xFE1
  7846                           indf2	equ	0xFDF
  7847                           postinc2	equ	0xFDE
  7848                           postdec2	equ	0xFDD
  7849                           fsr2h	equ	0xFDA
  7850                           fsr2l	equ	0xFD9
  7851                           status	equ	0xFD8
  7852                           
  7853 ;; *************** function _putUSBUSART *****************
  7854 ;; Defined at:
  7855 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  data            2    0[BANK0 ] PTR unsigned char 
  7858 ;;		 -> USB_task@data(1), 
  7859 ;;  length          1    2[BANK0 ] unsigned char 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;		None               void
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7871 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7874 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7875 ;;Total ram usage:        3 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:   11
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_put_string_usb
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text36
  7886  0137CA                     __ptext36:
  7887                           	opt stack 0
  7888  0137CA                     _putUSBUSART:
  7889                           	opt stack 17
  7890                           
  7891                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
  7892                           
  7893                           ;incstack = 0
  7894  0137CA  98A0               	bcf	4000,4,c	;volatile
  7895                           
  7896                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  7897  0137CC  5028               	movf	_cdc_trf_state,w,c
  7898  0137CE  A4D8               	btfss	status,2,c
  7899  0137D0  D00B               	goto	l8612
  7900                           
  7901                           ;usb_device_cdc.c: 640: {
  7902                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  7903  0137D2  C060  F0AA         	movff	putUSBUSART@data,_pCDCSrc
  7904  0137D6  C061  F0AB         	movff	putUSBUSART@data+1,_pCDCSrc+1
  7905  0137DA  C062  F0BF         	movff	putUSBUSART@length,_cdc_tx_len
  7906  0137DE  0E01               	movlw	1
  7907  0137E0  0100               	movlb	0	; () banked
  7908  0137E2  6FBD               	movwf	_cdc_mem_type& (0+255),b
  7909                           
  7910                           ; BSR set to: 0
  7911  0137E4  0E01               	movlw	1
  7912  0137E6  6E28               	movwf	_cdc_trf_state,c
  7913  0137E8                     l8612:
  7914                           
  7915                           ;usb_device_cdc.c: 642: }
  7916                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
  7917  0137E8  88A0               	bsf	4000,4,c	;volatile
  7918  0137EA  0012               	return		;funcret
  7919  0137EC                     __end_of_putUSBUSART:
  7920                           	opt stack 0
  7921                           tblptru	equ	0xFF8
  7922                           tblptrh	equ	0xFF7
  7923                           tblptrl	equ	0xFF6
  7924                           tablat	equ	0xFF5
  7925                           prodh	equ	0xFF4
  7926                           prodl	equ	0xFF3
  7927                           intcon	equ	0xFF2
  7928                           intcon2	equ	0xFF1
  7929                           indf0	equ	0xFEF
  7930                           postinc0	equ	0xFEE
  7931                           fsr0h	equ	0xFEA
  7932                           fsr0l	equ	0xFE9
  7933                           wreg	equ	0xFE8
  7934                           postinc1	equ	0xFE6
  7935                           postdec1	equ	0xFE5
  7936                           fsr1h	equ	0xFE2
  7937                           fsr1l	equ	0xFE1
  7938                           indf2	equ	0xFDF
  7939                           postinc2	equ	0xFDE
  7940                           postdec2	equ	0xFDD
  7941                           fsr2h	equ	0xFDA
  7942                           fsr2l	equ	0xFD9
  7943                           status	equ	0xFD8
  7944                           
  7945 ;; *************** function _get_string_usb *****************
  7946 ;; Defined at:
  7947 ;;		line 32 in file "../My_library/My_usb_cdc.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  s               2   13[BANK0 ] PTR unsigned char 
  7950 ;;		 -> USB_task@data(1), 
  7951 ;;  len             2   15[BANK0 ] int 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  rx_len          2   18[BANK0 ] int 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  2   13[BANK0 ] int 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7963 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7965 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7966 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7967 ;;Total ram usage:        7 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:   13
  7970 ;; This function calls:
  7971 ;;		_CDCTxService
  7972 ;;		_getsUSBUSART
  7973 ;;		_is_usb_available
  7974 ;; This function is called by:
  7975 ;;		_USB_task
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           	psect	text37
  7980  01334A                     __ptext37:
  7981                           	opt stack 0
  7982  01334A                     _get_string_usb:
  7983                           	opt stack 16
  7984                           
  7985                           ;My_usb_cdc.c: 33: int rx_len;
  7986                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
  7987                           
  7988                           ;incstack = 0
  7989  01334A  EC33  F09C         	call	_is_usb_available	;wreg free
  7990  01334E  0900               	iorlw	0
  7991  013350  A4D8               	btfss	status,2,c
  7992  013352  D008               	goto	l9104
  7993                           
  7994                           ;My_usb_cdc.c: 36: return 0;
  7995  013354  0E00               	movlw	0
  7996  013356  0100               	movlb	0	; () banked
  7997  013358  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
  7998  01335A  0E00               	movlw	0
  7999  01335C  6F6D               	movwf	?_get_string_usb& (0+255),b
  8000                           
  8001                           ; BSR set to: 0
  8002  01335E  0012               	return	
  8003  013360                     l9102:
  8004  013360  ECB1  F087         	call	_CDCTxService	;wreg free
  8005  013364                     l9104:
  8006  013364  5028               	movf	_cdc_trf_state,w,c
  8007  013366  A4D8               	btfss	status,2,c
  8008  013368  D7FB               	goto	l9102
  8009                           
  8010                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
  8011  01336A  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
  8012  01336E  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
  8013  013372  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
  8014  013376  EC6A  F08C         	call	_getsUSBUSART	;wreg free
  8015  01337A  0100               	movlb	0	; () banked
  8016  01337C  6F71               	movwf	??_get_string_usb& (0+255),b
  8017  01337E  0100               	movlb	0	; () banked
  8018  013380  5171               	movf	??_get_string_usb& (0+255),w,b
  8019  013382  0100               	movlb	0	; () banked
  8020  013384  6F72               	movwf	get_string_usb@rx_len& (0+255),b
  8021  013386  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
  8022                           
  8023                           ;My_usb_cdc.c: 40: CDCTxService();
  8024  013388  ECB1  F087         	call	_CDCTxService	;wreg free
  8025                           
  8026                           ;My_usb_cdc.c: 41: return rx_len;
  8027  01338C  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
  8028  013390  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
  8029  013394  0012               	return	
  8030  013396                     __end_of_get_string_usb:
  8031                           	opt stack 0
  8032                           tblptru	equ	0xFF8
  8033                           tblptrh	equ	0xFF7
  8034                           tblptrl	equ	0xFF6
  8035                           tablat	equ	0xFF5
  8036                           prodh	equ	0xFF4
  8037                           prodl	equ	0xFF3
  8038                           intcon	equ	0xFF2
  8039                           intcon2	equ	0xFF1
  8040                           indf0	equ	0xFEF
  8041                           postinc0	equ	0xFEE
  8042                           fsr0h	equ	0xFEA
  8043                           fsr0l	equ	0xFE9
  8044                           wreg	equ	0xFE8
  8045                           postinc1	equ	0xFE6
  8046                           postdec1	equ	0xFE5
  8047                           fsr1h	equ	0xFE2
  8048                           fsr1l	equ	0xFE1
  8049                           indf2	equ	0xFDF
  8050                           postinc2	equ	0xFDE
  8051                           postdec2	equ	0xFDD
  8052                           fsr2h	equ	0xFDA
  8053                           fsr2l	equ	0xFD9
  8054                           status	equ	0xFD8
  8055                           
  8056 ;; *************** function _is_usb_available *****************
  8057 ;; Defined at:
  8058 ;;		line 17 in file "../My_library/My_usb_cdc.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;		None
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;		None
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      unsigned char 
  8065 ;; Registers used:
  8066 ;;		wreg, status,2, status,0
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8075 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8076 ;;Total ram usage:        1 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; Hardware stack levels required when called:   11
  8079 ;; This function calls:
  8080 ;;		Nothing
  8081 ;; This function is called by:
  8082 ;;		_put_string_usb
  8083 ;;		_get_string_usb
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           	psect	text38
  8088  013866                     __ptext38:
  8089                           	opt stack 0
  8090  013866                     _is_usb_available:
  8091                           	opt stack 17
  8092                           
  8093                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
  8094                           
  8095                           ;incstack = 0
  8096  013866  0E00               	movlw	0
  8097  013868  0100               	movlb	0	; () banked
  8098  01386A  6F60               	movwf	_is_usb_available$5114& (0+255),b
  8099                           
  8100                           ; BSR set to: 0
  8101  01386C  0E1F               	movlw	31
  8102  01386E  6424               	cpfsgt	_USBDeviceState,c	;volatile
  8103  013870  D005               	goto	l1338
  8104                           
  8105                           ; BSR set to: 0
  8106  013872  B265               	btfsc	3941,1,c	;volatile
  8107  013874  D003               	goto	l1338
  8108                           
  8109                           ; BSR set to: 0
  8110  013876  0E01               	movlw	1
  8111  013878  0100               	movlb	0	; () banked
  8112  01387A  6F60               	movwf	_is_usb_available$5114& (0+255),b
  8113  01387C                     l1338:
  8114                           
  8115                           ; BSR set to: 0
  8116  01387C  0100               	movlb	0	; () banked
  8117  01387E  5160               	movf	_is_usb_available$5114& (0+255),w,b
  8118  013880  0012               	return	
  8119  013882                     __end_of_is_usb_available:
  8120                           	opt stack 0
  8121                           tblptru	equ	0xFF8
  8122                           tblptrh	equ	0xFF7
  8123                           tblptrl	equ	0xFF6
  8124                           tablat	equ	0xFF5
  8125                           prodh	equ	0xFF4
  8126                           prodl	equ	0xFF3
  8127                           intcon	equ	0xFF2
  8128                           intcon2	equ	0xFF1
  8129                           indf0	equ	0xFEF
  8130                           postinc0	equ	0xFEE
  8131                           fsr0h	equ	0xFEA
  8132                           fsr0l	equ	0xFE9
  8133                           wreg	equ	0xFE8
  8134                           postinc1	equ	0xFE6
  8135                           postdec1	equ	0xFE5
  8136                           fsr1h	equ	0xFE2
  8137                           fsr1l	equ	0xFE1
  8138                           indf2	equ	0xFDF
  8139                           postinc2	equ	0xFDE
  8140                           postdec2	equ	0xFDD
  8141                           fsr2h	equ	0xFDA
  8142                           fsr2l	equ	0xFD9
  8143                           status	equ	0xFD8
  8144                           
  8145 ;; *************** function _getsUSBUSART *****************
  8146 ;; Defined at:
  8147 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
  8150 ;;		 -> USB_task@data(1), 
  8151 ;;  len             1    9[BANK0 ] unsigned char 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1    wreg      unsigned char 
  8156 ;; Registers used:
  8157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8163 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8164 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8165 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8166 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8167 ;;Total ram usage:        6 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; Hardware stack levels required when called:   12
  8170 ;; This function calls:
  8171 ;;		_USBTransferOnePacket
  8172 ;; This function is called by:
  8173 ;;		_get_string_usb
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177                           	psect	text39
  8178  0118D4                     __ptext39:
  8179                           	opt stack 0
  8180  0118D4                     _getsUSBUSART:
  8181                           	opt stack 16
  8182                           
  8183                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;incstack = 0
  8187  0118D4  0E00               	movlw	0
  8188  0118D6  0100               	movlb	0	; () banked
  8189  0118D8  6FBE               	movwf	_cdc_rx_len& (0+255),b
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  8193  0118DA  0100               	movlb	0	; () banked
  8194  0118DC  51B3               	movf	_CDCDataOutHandle& (0+255),w,b
  8195  0118DE  0100               	movlb	0	; () banked
  8196  0118E0  11B4               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  8197  0118E2  B4D8               	btfsc	status,2,c
  8198  0118E4  D013               	goto	l8578
  8199                           
  8200                           ; BSR set to: 0
  8201  0118E6  C0B3  FFD9         	movff	_CDCDataOutHandle,fsr2l
  8202  0118EA  C0B4  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  8203  0118EE  0100               	movlb	0	; () banked
  8204  0118F0  AEDF               	btfss	indf2,7,c
  8205  0118F2  D004               	goto	u8240
  8206  0118F4  0100               	movlb	0	; () banked
  8207  0118F6  6B6A               	clrf	??_getsUSBUSART& (0+255),b
  8208  0118F8  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
  8209  0118FA  D002               	goto	u8248
  8210  0118FC                     u8240:
  8211  0118FC  0100               	movlb	0	; () banked
  8212  0118FE  6B6A               	clrf	??_getsUSBUSART& (0+255),b
  8213  011900                     u8248:
  8214  011900  0100               	movlb	0	; () banked
  8215  011902  516A               	movf	??_getsUSBUSART& (0+255),w,b
  8216  011904  0100               	movlb	0	; () banked
  8217  011906  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
  8218  011908  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
  8219  01190A  D005               	goto	l8580
  8220  01190C                     l8578:
  8221                           
  8222                           ; BSR set to: 0
  8223  01190C  0E00               	movlw	0
  8224  01190E  0100               	movlb	0	; () banked
  8225  011910  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
  8226  011912  0E00               	movlw	0
  8227  011914  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
  8228  011916                     l8580:
  8229                           
  8230                           ; BSR set to: 0
  8231  011916  0100               	movlb	0	; () banked
  8232  011918  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
  8233  01191A  0100               	movlb	0	; () banked
  8234  01191C  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
  8235  01191E  A4D8               	btfss	status,2,c
  8236  011920  D04B               	goto	l8596
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;usb_device_cdc.c: 547: {
  8240                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  8241  011922  0100               	movlb	0	; () banked
  8242  011924  EE20 F001          	lfsr	2,1
  8243  011928  51B3               	movf	_CDCDataOutHandle& (0+255),w,b
  8244  01192A  26D9               	addwf	fsr2l,f,c
  8245  01192C  51B4               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  8246  01192E  22DA               	addwfc	fsr2h,f,c
  8247  011930  0100               	movlb	0	; () banked
  8248  011932  5169               	movf	getsUSBUSART@len& (0+255),w,b
  8249  011934  5CDE               	subwf	postinc2,w,c
  8250  011936  B0D8               	btfsc	status,0,c
  8251  011938  D00A               	goto	l8586
  8252                           
  8253                           ; BSR set to: 0
  8254                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  8255  01193A  0100               	movlb	0	; () banked
  8256  01193C  EE20 F001          	lfsr	2,1
  8257  011940  51B3               	movf	_CDCDataOutHandle& (0+255),w,b
  8258  011942  26D9               	addwf	fsr2l,f,c
  8259  011944  51B4               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  8260  011946  22DA               	addwfc	fsr2h,f,c
  8261  011948  50DF               	movf	indf2,w,c
  8262  01194A  0100               	movlb	0	; () banked
  8263  01194C  6F69               	movwf	getsUSBUSART@len& (0+255),b
  8264  01194E                     l8586:
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  8268  01194E  0E00               	movlw	0
  8269  011950  0100               	movlb	0	; () banked
  8270  011952  6FBE               	movwf	_cdc_rx_len& (0+255),b
  8271  011954  D018               	goto	l8592
  8272  011956                     l8588:
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  8276  011956  0100               	movlb	0	; () banked
  8277  011958  51BE               	movf	_cdc_rx_len& (0+255),w,b
  8278  01195A  0D01               	mullw	1
  8279  01195C  0E14               	movlw	low _cdc_data_rx
  8280  01195E  24F3               	addwf	prodl,w,c
  8281  011960  6ED9               	movwf	fsr2l,c
  8282  011962  0E01               	movlw	high _cdc_data_rx
  8283  011964  20F4               	addwfc	prodh,w,c
  8284  011966  6EDA               	movwf	fsr2h,c
  8285  011968  0100               	movlb	0	; () banked
  8286  01196A  51BE               	movf	_cdc_rx_len& (0+255),w,b
  8287  01196C  0D01               	mullw	1
  8288  01196E  50F3               	movf	prodl,w,c
  8289  011970  0100               	movlb	0	; () banked
  8290  011972  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
  8291  011974  6EE1               	movwf	fsr1l,c
  8292  011976  50F4               	movf	prodh,w,c
  8293  011978  0100               	movlb	0	; () banked
  8294  01197A  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
  8295  01197C  6EE2               	movwf	fsr1h,c
  8296  01197E  CFDF FFE7          	movff	indf2,indf1
  8297                           
  8298                           ; BSR set to: 0
  8299  011982  0100               	movlb	0	; () banked
  8300  011984  2BBE               	incf	_cdc_rx_len& (0+255),f,b
  8301  011986                     l8592:
  8302                           
  8303                           ; BSR set to: 0
  8304  011986  0100               	movlb	0	; () banked
  8305  011988  5169               	movf	getsUSBUSART@len& (0+255),w,b
  8306  01198A  0100               	movlb	0	; () banked
  8307  01198C  5DBE               	subwf	_cdc_rx_len& (0+255),w,b
  8308  01198E  A0D8               	btfss	status,0,c
  8309  011990  D7E2               	goto	l8588
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8313                           
  8314                           ; BSR set to: 0
  8315  011992  0E00               	movlw	0
  8316  011994  0100               	movlb	0	; () banked
  8317  011996  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8318  011998  0E14               	movlw	low _cdc_data_rx
  8319  01199A  0100               	movlb	0	; () banked
  8320  01199C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8321  01199E  0E01               	movlw	high _cdc_data_rx
  8322  0119A0  0100               	movlb	0	; () banked
  8323  0119A2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8324  0119A4  0E40               	movlw	64
  8325  0119A6  0100               	movlb	0	; () banked
  8326  0119A8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  8327  0119AA  0E02               	movlw	2
  8328  0119AC  EC98  F08E         	call	_USBTransferOnePacket
  8329  0119B0  C060  F0B3         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  8330  0119B4  C061  F0B4         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8331  0119B8                     l8596:
  8332                           
  8333                           ;usb_device_cdc.c: 567: }
  8334                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  8335  0119B8  0100               	movlb	0	; () banked
  8336  0119BA  51BE               	movf	_cdc_rx_len& (0+255),w,b
  8337  0119BC  0012               	return	
  8338  0119BE                     __end_of_getsUSBUSART:
  8339                           	opt stack 0
  8340                           tblptru	equ	0xFF8
  8341                           tblptrh	equ	0xFF7
  8342                           tblptrl	equ	0xFF6
  8343                           tablat	equ	0xFF5
  8344                           prodh	equ	0xFF4
  8345                           prodl	equ	0xFF3
  8346                           intcon	equ	0xFF2
  8347                           intcon2	equ	0xFF1
  8348                           indf0	equ	0xFEF
  8349                           postinc0	equ	0xFEE
  8350                           fsr0h	equ	0xFEA
  8351                           fsr0l	equ	0xFE9
  8352                           wreg	equ	0xFE8
  8353                           indf1	equ	0xFE7
  8354                           postinc1	equ	0xFE6
  8355                           postdec1	equ	0xFE5
  8356                           fsr1h	equ	0xFE2
  8357                           fsr1l	equ	0xFE1
  8358                           indf2	equ	0xFDF
  8359                           postinc2	equ	0xFDE
  8360                           postdec2	equ	0xFDD
  8361                           fsr2h	equ	0xFDA
  8362                           fsr2l	equ	0xFD9
  8363                           status	equ	0xFD8
  8364                           
  8365 ;; *************** function _CDCTxService *****************
  8366 ;; Defined at:
  8367 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;		None
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
  8372 ;;  i               1   10[BANK0 ] unsigned char 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;		None               void
  8375 ;; Registers used:
  8376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8384 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8385 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8386 ;;Total ram usage:        5 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:   12
  8389 ;; This function calls:
  8390 ;;		_USBTransferOnePacket
  8391 ;; This function is called by:
  8392 ;;		_put_string_usb
  8393 ;;		_get_string_usb
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text40
  8398  010F62                     __ptext40:
  8399                           	opt stack 0
  8400  010F62                     _CDCTxService:
  8401                           	opt stack 16
  8402                           
  8403                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  8404                           ;usb_device_cdc.c: 896: uint8_t i;
  8405                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;incstack = 0
  8409  010F62  98A0               	bcf	4000,4,c	;volatile
  8410                           
  8411                           ;usb_device_cdc.c: 900: {};
  8412                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  8413  010F64  0100               	movlb	0	; () banked
  8414  010F66  51B1               	movf	_CDCDataInHandle& (0+255),w,b
  8415  010F68  0100               	movlb	0	; () banked
  8416  010F6A  11B2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  8417  010F6C  B4D8               	btfsc	status,2,c
  8418  010F6E  D013               	goto	l8620
  8419                           
  8420                           ; BSR set to: 0
  8421  010F70  C0B1  FFD9         	movff	_CDCDataInHandle,fsr2l
  8422  010F74  C0B2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  8423  010F78  0100               	movlb	0	; () banked
  8424  010F7A  AEDF               	btfss	indf2,7,c
  8425  010F7C  D004               	goto	u8300
  8426  010F7E  0100               	movlb	0	; () banked
  8427  010F80  6B67               	clrf	??_CDCTxService& (0+255),b
  8428  010F82  2B67               	incf	??_CDCTxService& (0+255),f,b
  8429  010F84  D002               	goto	u8308
  8430  010F86                     u8300:
  8431  010F86  0100               	movlb	0	; () banked
  8432  010F88  6B67               	clrf	??_CDCTxService& (0+255),b
  8433  010F8A                     u8308:
  8434  010F8A  0100               	movlb	0	; () banked
  8435  010F8C  5167               	movf	??_CDCTxService& (0+255),w,b
  8436  010F8E  0100               	movlb	0	; () banked
  8437  010F90  6F68               	movwf	_CDCTxService$2005& (0+255),b
  8438  010F92  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
  8439  010F94  D005               	goto	l8622
  8440  010F96                     l8620:
  8441                           
  8442                           ; BSR set to: 0
  8443  010F96  0E00               	movlw	0
  8444  010F98  0100               	movlb	0	; () banked
  8445  010F9A  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
  8446  010F9C  0E00               	movlw	0
  8447  010F9E  6F68               	movwf	_CDCTxService$2005& (0+255),b
  8448  010FA0                     l8622:
  8449                           
  8450                           ; BSR set to: 0
  8451  010FA0  0100               	movlb	0	; () banked
  8452  010FA2  5168               	movf	_CDCTxService$2005& (0+255),w,b
  8453  010FA4  0100               	movlb	0	; () banked
  8454  010FA6  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
  8455  010FA8  B4D8               	btfsc	status,2,c
  8456  010FAA  D002               	goto	l8626
  8457                           
  8458                           ; BSR set to: 0
  8459                           ;usb_device_cdc.c: 903: {
  8460                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
  8461  010FAC  88A0               	bsf	4000,4,c	;volatile
  8462                           
  8463                           ;usb_device_cdc.c: 905: return;
  8464  010FAE  0012               	return	
  8465  010FB0                     l8626:
  8466                           
  8467                           ; BSR set to: 0
  8468                           ;usb_device_cdc.c: 906: }
  8469                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  8470  010FB0  0E03               	movlw	3
  8471  010FB2  1828               	xorwf	_cdc_trf_state,w,c
  8472  010FB4  A4D8               	btfss	status,2,c
  8473  010FB6  D002               	goto	l504
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  8477  010FB8  0E00               	movlw	0
  8478  010FBA  6E28               	movwf	_cdc_trf_state,c
  8479  010FBC                     l504:
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  8483  010FBC  5028               	movf	_cdc_trf_state,w,c
  8484  010FBE  A4D8               	btfss	status,2,c
  8485  010FC0  D002               	goto	l8632
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;usb_device_cdc.c: 920: {
  8489                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
  8490  010FC2  88A0               	bsf	4000,4,c	;volatile
  8491                           
  8492                           ;usb_device_cdc.c: 922: return;
  8493  010FC4  0012               	return	
  8494  010FC6                     l8632:
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;usb_device_cdc.c: 923: }
  8498                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  8499  010FC6  0E02               	movlw	2
  8500  010FC8  1828               	xorwf	_cdc_trf_state,w,c
  8501  010FCA  A4D8               	btfss	status,2,c
  8502  010FCC  D016               	goto	l8638
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;usb_device_cdc.c: 929: {
  8506                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  8507  010FCE  0E01               	movlw	1
  8508  010FD0  0100               	movlb	0	; () banked
  8509  010FD2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8510  010FD4  0E00               	movlw	0
  8511  010FD6  0100               	movlb	0	; () banked
  8512  010FD8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8513  010FDA  0E00               	movlw	0
  8514  010FDC  0100               	movlb	0	; () banked
  8515  010FDE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8516  010FE0  0E00               	movlw	0
  8517  010FE2  0100               	movlb	0	; () banked
  8518  010FE4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  8519  010FE6  0E02               	movlw	2
  8520  010FE8  EC98  F08E         	call	_USBTransferOnePacket
  8521  010FEC  C060  F0B1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  8522  010FF0  C061  F0B2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  8523                           
  8524                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  8525  010FF4  0E03               	movlw	3
  8526  010FF6  6E28               	movwf	_cdc_trf_state,c
  8527                           
  8528                           ;usb_device_cdc.c: 933: }
  8529  010FF8  D06F               	goto	l8682
  8530  010FFA                     l8638:
  8531                           
  8532                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  8533  010FFA  0428               	decf	_cdc_trf_state,w,c
  8534  010FFC  A4D8               	btfss	status,2,c
  8535  010FFE  D06C               	goto	l8682
  8536                           
  8537                           ;usb_device_cdc.c: 935: {
  8538                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  8539  011000  0E40               	movlw	64
  8540  011002  0100               	movlb	0	; () banked
  8541  011004  65BF               	cpfsgt	_cdc_tx_len& (0+255),b
  8542  011006  D004               	goto	l509
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  8546  011008  0E40               	movlw	64
  8547  01100A  0100               	movlb	0	; () banked
  8548  01100C  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
  8549  01100E  D002               	goto	l8644
  8550  011010                     l509:
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;usb_device_cdc.c: 941: else
  8554                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  8555  011010  C0BF  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  8556  011014                     l8644:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  8560  011014  0100               	movlb	0	; () banked
  8561  011016  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
  8562  011018  0800               	sublw	0
  8563  01101A  0100               	movlb	0	; () banked
  8564  01101C  25BF               	addwf	_cdc_tx_len& (0+255),w,b
  8565  01101E  0100               	movlb	0	; () banked
  8566  011020  6FBF               	movwf	_cdc_tx_len& (0+255),b
  8567                           
  8568                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  8569  011022  0E64               	movlw	low _cdc_data_tx
  8570  011024  0100               	movlb	0	; () banked
  8571  011026  6FA7               	movwf	_pCDCDst& (0+255),b
  8572  011028  0E02               	movlw	high _cdc_data_tx
  8573  01102A  0100               	movlb	0	; () banked
  8574  01102C  6FA8               	movwf	(_pCDCDst+1)& (0+255),b
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;usb_device_cdc.c: 951: i = byte_to_send;
  8578  01102E  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  8582  011032  0100               	movlb	0	; () banked
  8583  011034  51BD               	movf	_cdc_mem_type& (0+255),w,b
  8584  011036  B4D8               	btfsc	status,2,c
  8585  011038  D013               	goto	l8660
  8586  01103A  D02A               	goto	l8670
  8587  01103C                     l8652:
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;usb_device_cdc.c: 955: {
  8591                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  8592  01103C  C0AA  FFD9         	movff	_pCDCSrc,fsr2l
  8593  011040  C0AB  FFDA         	movff	_pCDCSrc+1,fsr2h
  8594  011044  C0A7  FFE1         	movff	_pCDCDst,fsr1l
  8595  011048  C0A8  FFE2         	movff	_pCDCDst+1,fsr1h
  8596  01104C  CFDF FFE7          	movff	indf2,indf1
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  8600  011050  0100               	movlb	0	; () banked
  8601  011052  4BA7               	infsnz	_pCDCDst& (0+255),f,b
  8602  011054  2BA8               	incf	(_pCDCDst+1)& (0+255),f,b
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  8606  011056  0100               	movlb	0	; () banked
  8607  011058  4BAA               	infsnz	_pCDCSrc& (0+255),f,b
  8608  01105A  2BAB               	incf	(_pCDCSrc+1)& (0+255),f,b
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;usb_device_cdc.c: 959: i--;
  8612  01105C  0100               	movlb	0	; () banked
  8613  01105E  076A               	decf	CDCTxService@i& (0+255),f,b
  8614  011060                     l8660:
  8615                           
  8616                           ; BSR set to: 0
  8617  011060  0100               	movlb	0	; () banked
  8618  011062  516A               	movf	CDCTxService@i& (0+255),w,b
  8619  011064  0100               	movlb	0	; () banked
  8620  011066  B4D8               	btfsc	status,2,c
  8621  011068  D018               	goto	l8672
  8622  01106A  D7E8               	goto	l8652
  8623  01106C                     l8662:
  8624                           
  8625                           ; BSR set to: 0
  8626                           ;usb_device_cdc.c: 965: {
  8627                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  8628  01106C  C0AA  FFD9         	movff	_pCDCSrc,fsr2l
  8629  011070  C0AB  FFDA         	movff	_pCDCSrc+1,fsr2h
  8630  011074  C0A7  FFE1         	movff	_pCDCDst,fsr1l
  8631  011078  C0A8  FFE2         	movff	_pCDCDst+1,fsr1h
  8632  01107C  CFDF FFE7          	movff	indf2,indf1
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  8636  011080  0100               	movlb	0	; () banked
  8637  011082  4BA7               	infsnz	_pCDCDst& (0+255),f,b
  8638  011084  2BA8               	incf	(_pCDCDst+1)& (0+255),f,b
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  8642  011086  0100               	movlb	0	; () banked
  8643  011088  4BAA               	infsnz	_pCDCSrc& (0+255),f,b
  8644  01108A  2BAB               	incf	(_pCDCSrc+1)& (0+255),f,b
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;usb_device_cdc.c: 969: i--;
  8648  01108C  0100               	movlb	0	; () banked
  8649  01108E  076A               	decf	CDCTxService@i& (0+255),f,b
  8650  011090                     l8670:
  8651                           
  8652                           ; BSR set to: 0
  8653  011090  0100               	movlb	0	; () banked
  8654  011092  516A               	movf	CDCTxService@i& (0+255),w,b
  8655  011094  0100               	movlb	0	; () banked
  8656  011096  A4D8               	btfss	status,2,c
  8657  011098  D7E9               	goto	l8662
  8658  01109A                     l8672:
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;usb_device_cdc.c: 970: }
  8662                           ;usb_device_cdc.c: 971: }
  8663                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  8664  01109A  0100               	movlb	0	; () banked
  8665  01109C  51BF               	movf	_cdc_tx_len& (0+255),w,b
  8666  01109E  A4D8               	btfss	status,2,c
  8667  0110A0  D009               	goto	l8680
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;usb_device_cdc.c: 978: {
  8671                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  8672  0110A2  0E40               	movlw	64
  8673  0110A4  0100               	movlb	0	; () banked
  8674  0110A6  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  8675  0110A8  A4D8               	btfss	status,2,c
  8676  0110AA  D002               	goto	l8678
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  8680  0110AC  0E02               	movlw	2
  8681  0110AE  D001               	goto	L1
  8682  0110B0                     l8678:
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;usb_device_cdc.c: 981: else
  8686                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  8687  0110B0  0E03               	movlw	3
  8688  0110B2                     L1:
  8689  0110B2  6E28               	movwf	_cdc_trf_state,c
  8690  0110B4                     l8680:
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;usb_device_cdc.c: 983: }
  8694                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  8695  0110B4  0E01               	movlw	1
  8696  0110B6  0100               	movlb	0	; () banked
  8697  0110B8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8698  0110BA  0E64               	movlw	low _cdc_data_tx
  8699  0110BC  0100               	movlb	0	; () banked
  8700  0110BE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8701  0110C0  0E02               	movlw	high _cdc_data_tx
  8702  0110C2  0100               	movlb	0	; () banked
  8703  0110C4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8704  0110C6  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  8705  0110CA  0E02               	movlw	2
  8706  0110CC  EC98  F08E         	call	_USBTransferOnePacket
  8707  0110D0  C060  F0B1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  8708  0110D4  C061  F0B2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  8709  0110D8                     l8682:
  8710                           
  8711                           ;usb_device_cdc.c: 986: }
  8712                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
  8713  0110D8  88A0               	bsf	4000,4,c	;volatile
  8714  0110DA  0012               	return		;funcret
  8715  0110DC                     __end_of_CDCTxService:
  8716                           	opt stack 0
  8717                           tblptru	equ	0xFF8
  8718                           tblptrh	equ	0xFF7
  8719                           tblptrl	equ	0xFF6
  8720                           tablat	equ	0xFF5
  8721                           prodh	equ	0xFF4
  8722                           prodl	equ	0xFF3
  8723                           intcon	equ	0xFF2
  8724                           intcon2	equ	0xFF1
  8725                           indf0	equ	0xFEF
  8726                           postinc0	equ	0xFEE
  8727                           fsr0h	equ	0xFEA
  8728                           fsr0l	equ	0xFE9
  8729                           wreg	equ	0xFE8
  8730                           indf1	equ	0xFE7
  8731                           postinc1	equ	0xFE6
  8732                           postdec1	equ	0xFE5
  8733                           fsr1h	equ	0xFE2
  8734                           fsr1l	equ	0xFE1
  8735                           indf2	equ	0xFDF
  8736                           postinc2	equ	0xFDE
  8737                           postdec2	equ	0xFDD
  8738                           fsr2h	equ	0xFDA
  8739                           fsr2l	equ	0xFD9
  8740                           status	equ	0xFD8
  8741                           
  8742 ;; *************** function _USBTransferOnePacket *****************
  8743 ;; Defined at:
  8744 ;;		line 995 in file "../My_library/usb/usb_device.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;  ep              1    wreg     unsigned char 
  8747 ;;  dir             1    0[BANK0 ] unsigned char 
  8748 ;;  data            2    1[BANK0 ] PTR unsigned char 
  8749 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8750 ;;  len             1    3[BANK0 ] unsigned char 
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;  ep              1    4[BANK0 ] unsigned char 
  8753 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
  8754 ;;		 -> NULL(0), BDT(48), 
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  2    0[BANK0 ] PTR void 
  8757 ;; Registers used:
  8758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8764 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8765 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8767 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;Total ram usage:        7 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; Hardware stack levels required when called:   11
  8771 ;; This function calls:
  8772 ;;		Nothing
  8773 ;; This function is called by:
  8774 ;;		_getsUSBUSART
  8775 ;;		_CDCTxService
  8776 ;;		_USBCDCEventHandler
  8777 ;; This function uses a non-reentrant model
  8778 ;;
  8779                           
  8780                           	psect	text41
  8781  011D30                     __ptext41:
  8782                           	opt stack 0
  8783  011D30                     _USBTransferOnePacket:
  8784                           	opt stack 16
  8785                           
  8786                           ;incstack = 0
  8787                           ;USBTransferOnePacket@ep stored from wreg
  8788  011D30  0100               	movlb	0	; () banked
  8789  011D32  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
  8790                           
  8791                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8792                           ;usb_device.c: 1000: if(dir != 0)
  8793  011D34  0100               	movlb	0	; () banked
  8794  011D36  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  8795  011D38  0100               	movlb	0	; () banked
  8796  011D3A  B4D8               	btfsc	status,2,c
  8797  011D3C  D008               	goto	l8282
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;usb_device.c: 1001: {
  8801                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8802  011D3E  0100               	movlb	0	; () banked
  8803  011D40  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8804  011D42  0D02               	mullw	2
  8805  011D44  0E10               	movlw	low _pBDTEntryIn
  8806  011D46  24F3               	addwf	prodl,w,c
  8807  011D48  6ED9               	movwf	fsr2l,c
  8808  011D4A  0E00               	movlw	high _pBDTEntryIn
  8809  011D4C  D007               	goto	L2
  8810  011D4E                     l8282:
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;usb_device.c: 1005: else
  8814                           ;usb_device.c: 1006: {
  8815                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8816  011D4E  0100               	movlb	0	; () banked
  8817  011D50  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8818  011D52  0D02               	mullw	2
  8819  011D54  0E9E               	movlw	low _pBDTEntryOut
  8820  011D56  24F3               	addwf	prodl,w,c
  8821  011D58  6ED9               	movwf	fsr2l,c
  8822  011D5A  0E00               	movlw	high _pBDTEntryOut
  8823  011D5C                     L2:
  8824  011D5C  20F4               	addwfc	prodh,w,c
  8825  011D5E  6EDA               	movwf	fsr2h,c
  8826  011D60  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
  8827  011D64  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;usb_device.c: 1009: }
  8831                           ;usb_device.c: 1013: if(handle == 0)
  8832                           
  8833                           ; BSR set to: 0
  8834  011D68  0100               	movlb	0	; () banked
  8835  011D6A  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8836  011D6C  0100               	movlb	0	; () banked
  8837  011D6E  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8838  011D70  A4D8               	btfss	status,2,c
  8839  011D72  D007               	goto	l8290
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;usb_device.c: 1014: {
  8843                           ;usb_device.c: 1015: return 0;
  8844  011D74  0E00               	movlw	0
  8845  011D76  0100               	movlb	0	; () banked
  8846  011D78  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  8847  011D7A  0E00               	movlw	0
  8848  011D7C  0100               	movlb	0	; () banked
  8849  011D7E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  8850                           
  8851                           ; BSR set to: 0
  8852  011D80  0012               	return	
  8853  011D82                     l8290:
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;usb_device.c: 1016: }
  8857                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8858  011D82  0100               	movlb	0	; () banked
  8859  011D84  EE20 F002          	lfsr	2,2
  8860  011D88  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8861  011D8A  26D9               	addwf	fsr2l,f,c
  8862  011D8C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8863  011D8E  22DA               	addwfc	fsr2h,f,c
  8864  011D90  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  8865  011D94  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  8866                           
  8867                           ;usb_device.c: 1030: handle->CNT = len;
  8868  011D98  0100               	movlb	0	; () banked
  8869  011D9A  EE20 F001          	lfsr	2,1
  8870  011D9E  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8871  011DA0  26D9               	addwf	fsr2l,f,c
  8872  011DA2  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8873  011DA4  22DA               	addwfc	fsr2h,f,c
  8874  011DA6  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8878  011DAA  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8879  011DAE  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8880  011DB2  0E40               	movlw	64
  8881  011DB4  16DF               	andwf	indf2,f,c
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8885  011DB6  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8886  011DBA  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8887  011DBE  0E00               	movlw	0
  8888  011DC0  86DB               	bsf	plusw2,3,c
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8892  011DC2  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8893  011DC6  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8894  011DCA  0E00               	movlw	0
  8895  011DCC  8EDB               	bsf	plusw2,7,c
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;usb_device.c: 1036: if(dir != 0)
  8899  011DCE  0100               	movlb	0	; () banked
  8900  011DD0  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  8901  011DD2  0100               	movlb	0	; () banked
  8902  011DD4  B4D8               	btfsc	status,2,c
  8903  011DD6  D008               	goto	l8302
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;usb_device.c: 1037: {
  8907                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  8908  011DD8  0100               	movlb	0	; () banked
  8909  011DDA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8910  011DDC  0D02               	mullw	2
  8911  011DDE  0E10               	movlw	low _pBDTEntryIn
  8912  011DE0  24F3               	addwf	prodl,w,c
  8913  011DE2  6ED9               	movwf	fsr2l,c
  8914  011DE4  0E00               	movlw	high _pBDTEntryIn
  8915  011DE6  D007               	goto	L3
  8916  011DE8                     l8302:
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;usb_device.c: 1041: else
  8920                           ;usb_device.c: 1042: {
  8921                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  8922  011DE8  0100               	movlb	0	; () banked
  8923  011DEA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8924  011DEC  0D02               	mullw	2
  8925  011DEE  0E9E               	movlw	low _pBDTEntryOut
  8926  011DF0  24F3               	addwf	prodl,w,c
  8927  011DF2  6ED9               	movwf	fsr2l,c
  8928  011DF4  0E00               	movlw	high _pBDTEntryOut
  8929  011DF6                     L3:
  8930  011DF6  20F4               	addwfc	prodh,w,c
  8931  011DF8  6EDA               	movwf	fsr2h,c
  8932  011DFA  0E04               	movlw	4
  8933  011DFC  1ADF               	xorwf	indf2,f,c
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;usb_device.c: 1045: }
  8937                           ;usb_device.c: 1046: return (void*)handle;
  8938                           
  8939                           ; BSR set to: 0
  8940  011DFE  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  8941  011E02  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  8942  011E06  0012               	return	
  8943  011E08                     __end_of_USBTransferOnePacket:
  8944                           	opt stack 0
  8945                           tblptru	equ	0xFF8
  8946                           tblptrh	equ	0xFF7
  8947                           tblptrl	equ	0xFF6
  8948                           tablat	equ	0xFF5
  8949                           prodh	equ	0xFF4
  8950                           prodl	equ	0xFF3
  8951                           intcon	equ	0xFF2
  8952                           intcon2	equ	0xFF1
  8953                           indf0	equ	0xFEF
  8954                           postinc0	equ	0xFEE
  8955                           fsr0h	equ	0xFEA
  8956                           fsr0l	equ	0xFE9
  8957                           wreg	equ	0xFE8
  8958                           indf1	equ	0xFE7
  8959                           postinc1	equ	0xFE6
  8960                           postdec1	equ	0xFE5
  8961                           fsr1h	equ	0xFE2
  8962                           fsr1l	equ	0xFE1
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           postdec2	equ	0xFDD
  8966                           plusw2	equ	0xFDB
  8967                           fsr2h	equ	0xFDA
  8968                           fsr2l	equ	0xFD9
  8969                           status	equ	0xFD8
  8970                           
  8971 ;; *************** function _UART_task *****************
  8972 ;; Defined at:
  8973 ;;		line 43 in file "../My_library/My_UART.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;		None
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;		None
  8978 ;; Return value:  Size  Location     Type
  8979 ;;		None               void
  8980 ;; Registers used:
  8981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8991 ;;Total ram usage:        0 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:   12
  8994 ;; This function calls:
  8995 ;;		_ringbuf_num
  8996 ;; This function is called by:
  8997 ;;		_main
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           	psect	text42
  9002  0137EC                     __ptext42:
  9003                           	opt stack 0
  9004  0137EC                     _UART_task:
  9005                           	opt stack 18
  9006                           
  9007                           ;My_UART.c: 44: if (ringbuf_num(&uart_tx)) {
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;incstack = 0
  9011  0137EC  0ED6               	movlw	low _uart_tx
  9012  0137EE  0100               	movlb	0	; () banked
  9013  0137F0  6F60               	movwf	ringbuf_num@rb& (0+255),b
  9014  0137F2  0E01               	movlw	high _uart_tx
  9015  0137F4  0100               	movlb	0	; () banked
  9016  0137F6  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  9017  0137F8  ECF3  F08B         	call	_ringbuf_num	;wreg free
  9018  0137FC  0100               	movlb	0	; () banked
  9019  0137FE  5160               	movf	?_ringbuf_num& (0+255),w,b
  9020  013800  0100               	movlb	0	; () banked
  9021  013802  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9022  013804  B4D8               	btfsc	status,2,c
  9023  013806  0012               	return	
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
  9027  013808  889D               	bsf	3997,4,c	;volatile
  9028  01380A  0012               	return	
  9029  01380C                     __end_of_UART_task:
  9030                           	opt stack 0
  9031                           tblptru	equ	0xFF8
  9032                           tblptrh	equ	0xFF7
  9033                           tblptrl	equ	0xFF6
  9034                           tablat	equ	0xFF5
  9035                           prodh	equ	0xFF4
  9036                           prodl	equ	0xFF3
  9037                           intcon	equ	0xFF2
  9038                           intcon2	equ	0xFF1
  9039                           indf0	equ	0xFEF
  9040                           postinc0	equ	0xFEE
  9041                           fsr0h	equ	0xFEA
  9042                           fsr0l	equ	0xFE9
  9043                           wreg	equ	0xFE8
  9044                           indf1	equ	0xFE7
  9045                           postinc1	equ	0xFE6
  9046                           postdec1	equ	0xFE5
  9047                           fsr1h	equ	0xFE2
  9048                           fsr1l	equ	0xFE1
  9049                           indf2	equ	0xFDF
  9050                           postinc2	equ	0xFDE
  9051                           postdec2	equ	0xFDD
  9052                           plusw2	equ	0xFDB
  9053                           fsr2h	equ	0xFDA
  9054                           fsr2l	equ	0xFD9
  9055                           status	equ	0xFD8
  9056                           
  9057 ;; *************** function _ringbuf_num *****************
  9058 ;; Defined at:
  9059 ;;		line 12 in file "../My_library/My_ringbuf.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  9062 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  9063 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  2    0[BANK0 ] unsigned int 
  9068 ;; Registers used:
  9069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9075 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9077 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9078 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9079 ;;Total ram usage:        8 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:   11
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_ringbuf_put
  9086 ;;		_ringbuf_pop
  9087 ;;		_UART_task
  9088 ;;		_USB_task
  9089 ;;		_main
  9090 ;;		_ringbuf_backspace
  9091 ;;		_ST7032_task
  9092 ;;		_terminal_task
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text43
  9097  0117E6                     __ptext43:
  9098                           	opt stack 0
  9099  0117E6                     _ringbuf_num:
  9100                           	opt stack 18
  9101                           
  9102                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;incstack = 0
  9106  0117E6  0100               	movlb	0	; () banked
  9107  0117E8  EE20 F006          	lfsr	2,6
  9108  0117EC  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9109  0117EE  26D9               	addwf	fsr2l,f,c
  9110  0117F0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9111  0117F2  22DA               	addwfc	fsr2h,f,c
  9112  0117F4  0100               	movlb	0	; () banked
  9113  0117F6  EE10 F004          	lfsr	1,4
  9114  0117FA  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9115  0117FC  26E1               	addwf	fsr1l,f,c
  9116  0117FE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9117  011800  22E2               	addwfc	fsr1h,f,c
  9118  011802  50DE               	movf	postinc2,w,c
  9119  011804  5CE6               	subwf	postinc1,w,c
  9120  011806  50DE               	movf	postinc2,w,c
  9121  011808  58E6               	subwfb	postinc1,w,c
  9122  01180A  A0D8               	btfss	status,0,c
  9123  01180C  D028               	goto	l8698
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  9127  01180E  0100               	movlb	0	; () banked
  9128  011810  EE20 F004          	lfsr	2,4
  9129  011814  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9130  011816  26D9               	addwf	fsr2l,f,c
  9131  011818  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9132  01181A  22DA               	addwfc	fsr2h,f,c
  9133  01181C  CFDE F062          	movff	postinc2,??_ringbuf_num
  9134  011820  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  9135  011824  0100               	movlb	0	; () banked
  9136  011826  EE20 F006          	lfsr	2,6
  9137  01182A  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9138  01182C  26D9               	addwf	fsr2l,f,c
  9139  01182E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9140  011830  22DA               	addwfc	fsr2h,f,c
  9141  011832  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  9142  011836  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  9143  01183A  0100               	movlb	0	; () banked
  9144  01183C  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
  9145  01183E  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
  9146  011840  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  9147  011842  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
  9148  011844  0100               	movlb	0	; () banked
  9149  011846  5162               	movf	??_ringbuf_num& (0+255),w,b
  9150  011848  0100               	movlb	0	; () banked
  9151  01184A  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  9152  01184C  0100               	movlb	0	; () banked
  9153  01184E  6F60               	movwf	?_ringbuf_num& (0+255),b
  9154  011850  0100               	movlb	0	; () banked
  9155  011852  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  9156  011854  0100               	movlb	0	; () banked
  9157  011856  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  9158  011858  0100               	movlb	0	; () banked
  9159  01185A  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  9160                           
  9161                           ; BSR set to: 0
  9162                           ;My_ringbuf.c: 15: } else {
  9163                           
  9164                           ; BSR set to: 0
  9165  01185C  0012               	return	
  9166  01185E                     l8698:
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  9170  01185E  0100               	movlb	0	; () banked
  9171  011860  EE20 F004          	lfsr	2,4
  9172  011864  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9173  011866  26D9               	addwf	fsr2l,f,c
  9174  011868  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9175  01186A  22DA               	addwfc	fsr2h,f,c
  9176  01186C  CFDE F062          	movff	postinc2,??_ringbuf_num
  9177  011870  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  9178  011874  0100               	movlb	0	; () banked
  9179  011876  EE20 F002          	lfsr	2,2
  9180  01187A  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9181  01187C  26D9               	addwf	fsr2l,f,c
  9182  01187E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9183  011880  22DA               	addwfc	fsr2h,f,c
  9184  011882  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  9185  011886  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  9186  01188A  0100               	movlb	0	; () banked
  9187  01188C  EE20 F006          	lfsr	2,6
  9188  011890  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9189  011892  26D9               	addwf	fsr2l,f,c
  9190  011894  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9191  011896  22DA               	addwfc	fsr2h,f,c
  9192  011898  CFDE F066          	movff	postinc2,??_ringbuf_num+4
  9193  01189C  CFDD F067          	movff	postdec2,??_ringbuf_num+5
  9194  0118A0  0100               	movlb	0	; () banked
  9195  0118A2  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
  9196  0118A4  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
  9197  0118A6  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  9198  0118A8  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
  9199  0118AA  0100               	movlb	0	; () banked
  9200  0118AC  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
  9201  0118AE  0100               	movlb	0	; () banked
  9202  0118B0  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  9203  0118B2  0100               	movlb	0	; () banked
  9204  0118B4  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
  9205  0118B6  0100               	movlb	0	; () banked
  9206  0118B8  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  9207  0118BA  0100               	movlb	0	; () banked
  9208  0118BC  5162               	movf	??_ringbuf_num& (0+255),w,b
  9209  0118BE  0100               	movlb	0	; () banked
  9210  0118C0  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  9211  0118C2  0100               	movlb	0	; () banked
  9212  0118C4  6F60               	movwf	?_ringbuf_num& (0+255),b
  9213  0118C6  0100               	movlb	0	; () banked
  9214  0118C8  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  9215  0118CA  0100               	movlb	0	; () banked
  9216  0118CC  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  9217  0118CE  0100               	movlb	0	; () banked
  9218  0118D0  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  9219                           
  9220                           ; BSR set to: 0
  9221  0118D2  0012               	return	
  9222  0118D4                     __end_of_ringbuf_num:
  9223                           	opt stack 0
  9224                           tblptru	equ	0xFF8
  9225                           tblptrh	equ	0xFF7
  9226                           tblptrl	equ	0xFF6
  9227                           tablat	equ	0xFF5
  9228                           prodh	equ	0xFF4
  9229                           prodl	equ	0xFF3
  9230                           intcon	equ	0xFF2
  9231                           intcon2	equ	0xFF1
  9232                           indf0	equ	0xFEF
  9233                           postinc0	equ	0xFEE
  9234                           fsr0h	equ	0xFEA
  9235                           fsr0l	equ	0xFE9
  9236                           wreg	equ	0xFE8
  9237                           indf1	equ	0xFE7
  9238                           postinc1	equ	0xFE6
  9239                           postdec1	equ	0xFE5
  9240                           fsr1h	equ	0xFE2
  9241                           fsr1l	equ	0xFE1
  9242                           indf2	equ	0xFDF
  9243                           postinc2	equ	0xFDE
  9244                           postdec2	equ	0xFDD
  9245                           plusw2	equ	0xFDB
  9246                           fsr2h	equ	0xFDA
  9247                           fsr2l	equ	0xFD9
  9248                           status	equ	0xFD8
  9249                           
  9250 ;; *************** function _RTCC_task *****************
  9251 ;; Defined at:
  9252 ;;		line 352 in file "../My_library/My_RTCC.c"
  9253 ;; Parameters:    Size  Location     Type
  9254 ;;		None
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;		None
  9257 ;; Return value:  Size  Location     Type
  9258 ;;		None               void
  9259 ;; Registers used:
  9260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9270 ;;Total ram usage:        0 bytes
  9271 ;; Hardware stack levels used:    1
  9272 ;; Hardware stack levels required when called:   15
  9273 ;; This function calls:
  9274 ;;		_RTCC_from_RTCC
  9275 ;; This function is called by:
  9276 ;;		_main
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text44
  9281  013426                     __ptext44:
  9282                           	opt stack 0
  9283  013426                     _RTCC_task:
  9284                           	opt stack 15
  9285                           
  9286                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
  9287                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;incstack = 0
  9291  013426  010F               	movlb	15	; () banked
  9292  013428  B93F               	btfsc	63,4,b	;volatile
  9293  01342A  0012               	return	
  9294                           
  9295                           ; BSR set to: 15
  9296                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
  9297                           
  9298                           ; BSR set to: 15
  9299                           
  9300                           ; BSR set to: 15
  9301  01342C  0E00               	movlw	0
  9302  01342E  B73F               	btfsc	63,3,b	;volatile
  9303  013430  0E01               	movlw	1
  9304  013432  0101               	movlb	1	; () banked
  9305  013434  6FC4               	movwf	(_now+12)& (0+255),b
  9306                           
  9307                           ; BSR set to: 1
  9308                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
  9309  013436  0100               	movlb	0	; () banked
  9310  013438  51B9               	movf	RTCC_task@prev_halfsec& (0+255),w,b
  9311  01343A  0101               	movlb	1	; () banked
  9312  01343C  19C4               	xorwf	(_now+12)& (0+255),w,b
  9313  01343E  B4D8               	btfsc	status,2,c
  9314  013440  0012               	return	
  9315                           
  9316                           ; BSR set to: 1
  9317                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
  9318  013442  C1C4  F0B9         	movff	_now+12,RTCC_task@prev_halfsec
  9319                           
  9320                           ;My_RTCC.c: 358: now.colon = now.halfsec;
  9321  013446  C1C4  F1C3         	movff	_now+12,_now+11
  9322                           
  9323                           ; BSR set to: 1
  9324                           ;My_RTCC.c: 359: time_change_flag = 1;
  9325  01344A  0E01               	movlw	1
  9326  01344C  0100               	movlb	0	; () banked
  9327  01344E  6FC2               	movwf	_time_change_flag& (0+255),b
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
  9331  013450  0EB8               	movlw	low _now
  9332  013452  0100               	movlb	0	; () banked
  9333  013454  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  9334  013456  0E01               	movlw	high _now
  9335  013458  0100               	movlb	0	; () banked
  9336  01345A  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  9337  01345C  EC5B  F09C         	call	_RTCC_from_RTCC	;wreg free
  9338  013460  0012               	return	
  9339  013462                     __end_of_RTCC_task:
  9340                           	opt stack 0
  9341                           tblptru	equ	0xFF8
  9342                           tblptrh	equ	0xFF7
  9343                           tblptrl	equ	0xFF6
  9344                           tablat	equ	0xFF5
  9345                           prodh	equ	0xFF4
  9346                           prodl	equ	0xFF3
  9347                           intcon	equ	0xFF2
  9348                           intcon2	equ	0xFF1
  9349                           indf0	equ	0xFEF
  9350                           postinc0	equ	0xFEE
  9351                           fsr0h	equ	0xFEA
  9352                           fsr0l	equ	0xFE9
  9353                           wreg	equ	0xFE8
  9354                           indf1	equ	0xFE7
  9355                           postinc1	equ	0xFE6
  9356                           postdec1	equ	0xFE5
  9357                           fsr1h	equ	0xFE2
  9358                           fsr1l	equ	0xFE1
  9359                           indf2	equ	0xFDF
  9360                           postinc2	equ	0xFDE
  9361                           postdec2	equ	0xFDD
  9362                           plusw2	equ	0xFDB
  9363                           fsr2h	equ	0xFDA
  9364                           fsr2l	equ	0xFD9
  9365                           status	equ	0xFD8
  9366                           
  9367 ;; *************** function _RTCC_from_RTCC *****************
  9368 ;; Defined at:
  9369 ;;		line 199 in file "../My_library/My_RTCC.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  tm              2   38[BANK0 ] PTR struct .
  9372 ;;		 -> now(14), 
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;		None
  9375 ;; Return value:  Size  Location     Type
  9376 ;;		None               void
  9377 ;; Registers used:
  9378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9384 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9388 ;;Total ram usage:        2 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; Hardware stack levels required when called:   14
  9391 ;; This function calls:
  9392 ;;		_RTCC_to_caltime
  9393 ;;		_caltime_to_epoch
  9394 ;; This function is called by:
  9395 ;;		_RTCC_init
  9396 ;;		_display_time_0802
  9397 ;;		_RTCC_task
  9398 ;;		_main
  9399 ;;		_display_time_1602
  9400 ;;		_RTCC_adjust_time_inc
  9401 ;;		_RTCC_adjust_time_dec
  9402 ;;		_print_time
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text45
  9407  0138B6                     __ptext45:
  9408                           	opt stack 0
  9409  0138B6                     _RTCC_from_RTCC:
  9410                           	opt stack 14
  9411                           
  9412                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
  9413                           
  9414                           ;incstack = 0
  9415  0138B6  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
  9416  0138BA  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
  9417  0138BE  EC97  F092         	call	_RTCC_to_caltime	;wreg free
  9418                           
  9419                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
  9420  0138C2  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
  9421  0138C6  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
  9422  0138CA  EC2D  F082         	call	_caltime_to_epoch	;wreg free
  9423  0138CE  0012               	return		;funcret
  9424  0138D0                     __end_of_RTCC_from_RTCC:
  9425                           	opt stack 0
  9426                           tblptru	equ	0xFF8
  9427                           tblptrh	equ	0xFF7
  9428                           tblptrl	equ	0xFF6
  9429                           tablat	equ	0xFF5
  9430                           prodh	equ	0xFF4
  9431                           prodl	equ	0xFF3
  9432                           intcon	equ	0xFF2
  9433                           intcon2	equ	0xFF1
  9434                           indf0	equ	0xFEF
  9435                           postinc0	equ	0xFEE
  9436                           fsr0h	equ	0xFEA
  9437                           fsr0l	equ	0xFE9
  9438                           wreg	equ	0xFE8
  9439                           indf1	equ	0xFE7
  9440                           postinc1	equ	0xFE6
  9441                           postdec1	equ	0xFE5
  9442                           fsr1h	equ	0xFE2
  9443                           fsr1l	equ	0xFE1
  9444                           indf2	equ	0xFDF
  9445                           postinc2	equ	0xFDE
  9446                           postdec2	equ	0xFDD
  9447                           plusw2	equ	0xFDB
  9448                           fsr2h	equ	0xFDA
  9449                           fsr2l	equ	0xFD9
  9450                           status	equ	0xFD8
  9451                           
  9452 ;; *************** function _caltime_to_epoch *****************
  9453 ;; Defined at:
  9454 ;;		line 179 in file "../My_library/My_RTCC.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;  tm              2   25[BANK0 ] PTR struct .
  9457 ;;		 -> now(14), 
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;  month           1   37[BANK0 ] unsigned char 
  9460 ;;  month           1   32[BANK0 ] unsigned char 
  9461 ;;  year            1   31[BANK0 ] unsigned char 
  9462 ;;  epoch           4   33[BANK0 ] unsigned long 
  9463 ;; Return value:  Size  Location     Type
  9464 ;;		None               void
  9465 ;; Registers used:
  9466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9467 ;; Tracked objects:
  9468 ;;		On entry : 0/0
  9469 ;;		On exit  : 0/0
  9470 ;;		Unchanged: 0/0
  9471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9472 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9473 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9474 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9475 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9476 ;;Total ram usage:       13 bytes
  9477 ;; Hardware stack levels used:    1
  9478 ;; Hardware stack levels required when called:   13
  9479 ;; This function calls:
  9480 ;;		___lmul
  9481 ;;		_month_length
  9482 ;; This function is called by:
  9483 ;;		_RTCC_from_RTCC
  9484 ;;		_RTCC_from_caltime
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text46
  9489  01045A                     __ptext46:
  9490                           	opt stack 0
  9491  01045A                     _caltime_to_epoch:
  9492                           	opt stack 14
  9493                           
  9494                           ;My_RTCC.c: 180: epoch_t epoch = 0;
  9495                           
  9496                           ;incstack = 0
  9497  01045A  0E00               	movlw	0
  9498  01045C  0100               	movlb	0	; () banked
  9499  01045E  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
  9500  010460  0E00               	movlw	0
  9501  010462  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  9502  010464  0E00               	movlw	0
  9503  010466  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  9504  010468  0E00               	movlw	0
  9505  01046A  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  9506                           
  9507                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
  9508  01046C  0E00               	movlw	0
  9509  01046E  0100               	movlb	0	; () banked
  9510  010470  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
  9511  010472  D037               	goto	l8410
  9512  010474                     l8396:
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
  9516  010474  0E01               	movlw	1
  9517  010476  0100               	movlb	0	; () banked
  9518  010478  6F85               	movwf	caltime_to_epoch@month& (0+255),b
  9519  01047A                     l8398:
  9520                           
  9521                           ; BSR set to: 0
  9522  01047A  0E0C               	movlw	12
  9523  01047C  0100               	movlb	0	; () banked
  9524  01047E  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
  9525  010480  D001               	goto	l8402
  9526  010482  D02D               	goto	l8408
  9527  010484                     l8402:
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  9531  010484  C085  F066         	movff	caltime_to_epoch@month,month_length@month
  9532  010488  0100               	movlb	0	; () banked
  9533  01048A  517F               	movf	caltime_to_epoch@year& (0+255),w,b
  9534  01048C  EC4E  F08D         	call	_month_length
  9535  010490  0100               	movlb	0	; () banked
  9536  010492  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9537  010494  0100               	movlb	0	; () banked
  9538  010496  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9539  010498  0100               	movlb	0	; () banked
  9540  01049A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9541  01049C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9542  01049E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9543  0104A0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9544  0104A2  0E80               	movlw	128
  9545  0104A4  0100               	movlb	0	; () banked
  9546  0104A6  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9547  0104A8  0E51               	movlw	81
  9548  0104AA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9549  0104AC  0E01               	movlw	1
  9550  0104AE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9551  0104B0  0E00               	movlw	0
  9552  0104B2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9553  0104B4  ECE8  F097         	call	___lmul	;wreg free
  9554  0104B8  0100               	movlb	0	; () banked
  9555  0104BA  516D               	movf	?___lmul& (0+255),w,b
  9556  0104BC  0100               	movlb	0	; () banked
  9557  0104BE  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9558  0104C0  0100               	movlb	0	; () banked
  9559  0104C2  516E               	movf	(?___lmul+1)& (0+255),w,b
  9560  0104C4  0100               	movlb	0	; () banked
  9561  0104C6  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9562  0104C8  0100               	movlb	0	; () banked
  9563  0104CA  516F               	movf	(?___lmul+2)& (0+255),w,b
  9564  0104CC  0100               	movlb	0	; () banked
  9565  0104CE  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9566  0104D0  0100               	movlb	0	; () banked
  9567  0104D2  5170               	movf	(?___lmul+3)& (0+255),w,b
  9568  0104D4  0100               	movlb	0	; () banked
  9569  0104D6  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9570                           
  9571                           ; BSR set to: 0
  9572  0104D8  0100               	movlb	0	; () banked
  9573  0104DA  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
  9574  0104DC  D7CE               	goto	l8398
  9575  0104DE                     l8408:
  9576                           
  9577                           ; BSR set to: 0
  9578  0104DE  0100               	movlb	0	; () banked
  9579  0104E0  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
  9580  0104E2                     l8410:
  9581                           
  9582                           ; BSR set to: 0
  9583  0104E2  0100               	movlb	0	; () banked
  9584  0104E4  EE20 F00A          	lfsr	2,10
  9585  0104E8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9586  0104EA  26D9               	addwf	fsr2l,f,c
  9587  0104EC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9588  0104EE  22DA               	addwfc	fsr2h,f,c
  9589  0104F0  50DE               	movf	postinc2,w,c
  9590  0104F2  0100               	movlb	0	; () banked
  9591  0104F4  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
  9592  0104F6  A0D8               	btfss	status,0,c
  9593  0104F8  D7BD               	goto	l8396
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;My_RTCC.c: 184: }
  9597                           ;My_RTCC.c: 185: }
  9598                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
  9599                           
  9600                           ; BSR set to: 0
  9601  0104FA  0E01               	movlw	1
  9602  0104FC  0100               	movlb	0	; () banked
  9603  0104FE  6F80               	movwf	caltime_to_epoch@month_3637& (0+255),b
  9604  010500  D032               	goto	l8418
  9605  010502                     l8414:
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
  9609  010502  C080  F066         	movff	caltime_to_epoch@month_3637,month_length@month
  9610  010506  0100               	movlb	0	; () banked
  9611  010508  EE20 F00A          	lfsr	2,10
  9612  01050C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9613  01050E  26D9               	addwf	fsr2l,f,c
  9614  010510  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9615  010512  22DA               	addwfc	fsr2h,f,c
  9616  010514  50DF               	movf	indf2,w,c
  9617  010516  EC4E  F08D         	call	_month_length
  9618  01051A  0100               	movlb	0	; () banked
  9619  01051C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9620  01051E  0100               	movlb	0	; () banked
  9621  010520  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9622  010522  0100               	movlb	0	; () banked
  9623  010524  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9624  010526  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9625  010528  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9626  01052A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9627  01052C  0E80               	movlw	128
  9628  01052E  0100               	movlb	0	; () banked
  9629  010530  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9630  010532  0E51               	movlw	81
  9631  010534  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9632  010536  0E01               	movlw	1
  9633  010538  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9634  01053A  0E00               	movlw	0
  9635  01053C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9636  01053E  ECE8  F097         	call	___lmul	;wreg free
  9637  010542  0100               	movlb	0	; () banked
  9638  010544  516D               	movf	?___lmul& (0+255),w,b
  9639  010546  0100               	movlb	0	; () banked
  9640  010548  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9641  01054A  0100               	movlb	0	; () banked
  9642  01054C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9643  01054E  0100               	movlb	0	; () banked
  9644  010550  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9645  010552  0100               	movlb	0	; () banked
  9646  010554  516F               	movf	(?___lmul+2)& (0+255),w,b
  9647  010556  0100               	movlb	0	; () banked
  9648  010558  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9649  01055A  0100               	movlb	0	; () banked
  9650  01055C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9651  01055E  0100               	movlb	0	; () banked
  9652  010560  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9653                           
  9654                           ; BSR set to: 0
  9655  010562  0100               	movlb	0	; () banked
  9656  010564  2B80               	incf	caltime_to_epoch@month_3637& (0+255),f,b
  9657  010566                     l8418:
  9658                           
  9659                           ; BSR set to: 0
  9660  010566  0100               	movlb	0	; () banked
  9661  010568  EE20 F009          	lfsr	2,9
  9662  01056C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9663  01056E  26D9               	addwf	fsr2l,f,c
  9664  010570  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9665  010572  22DA               	addwfc	fsr2h,f,c
  9666  010574  50DE               	movf	postinc2,w,c
  9667  010576  0100               	movlb	0	; () banked
  9668  010578  5D80               	subwf	caltime_to_epoch@month_3637& (0+255),w,b
  9669  01057A  A0D8               	btfss	status,0,c
  9670  01057C  D7C2               	goto	l8414
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;My_RTCC.c: 188: }
  9674                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
  9675                           
  9676                           ; BSR set to: 0
  9677  01057E  0EFF               	movlw	255
  9678  010580  0100               	movlb	0	; () banked
  9679  010582  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9680  010584  0EFF               	movlw	255
  9681  010586  0100               	movlb	0	; () banked
  9682  010588  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  9683  01058A  0100               	movlb	0	; () banked
  9684  01058C  EE20 F008          	lfsr	2,8
  9685  010590  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9686  010592  26D9               	addwf	fsr2l,f,c
  9687  010594  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9688  010596  22DA               	addwfc	fsr2h,f,c
  9689  010598  50DF               	movf	indf2,w,c
  9690  01059A  0100               	movlb	0	; () banked
  9691  01059C  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  9692  01059E  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  9693  0105A0  0100               	movlb	0	; () banked
  9694  0105A2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9695  0105A4  0100               	movlb	0	; () banked
  9696  0105A6  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  9697  0105A8  0100               	movlb	0	; () banked
  9698  0105AA  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  9699  0105AC  0100               	movlb	0	; () banked
  9700  0105AE  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  9701  0105B0  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  9702  0105B4  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  9703  0105B8  0100               	movlb	0	; () banked
  9704  0105BA  0E00               	movlw	0
  9705  0105BC  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  9706  0105BE  0EFF               	movlw	-1
  9707  0105C0  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  9708  0105C2  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  9709  0105C4  0E80               	movlw	128
  9710  0105C6  0100               	movlb	0	; () banked
  9711  0105C8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9712  0105CA  0E51               	movlw	81
  9713  0105CC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9714  0105CE  0E01               	movlw	1
  9715  0105D0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9716  0105D2  0E00               	movlw	0
  9717  0105D4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9718  0105D6  ECE8  F097         	call	___lmul	;wreg free
  9719  0105DA  0100               	movlb	0	; () banked
  9720  0105DC  516D               	movf	?___lmul& (0+255),w,b
  9721  0105DE  0100               	movlb	0	; () banked
  9722  0105E0  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9723  0105E2  0100               	movlb	0	; () banked
  9724  0105E4  516E               	movf	(?___lmul+1)& (0+255),w,b
  9725  0105E6  0100               	movlb	0	; () banked
  9726  0105E8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9727  0105EA  0100               	movlb	0	; () banked
  9728  0105EC  516F               	movf	(?___lmul+2)& (0+255),w,b
  9729  0105EE  0100               	movlb	0	; () banked
  9730  0105F0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9731  0105F2  0100               	movlb	0	; () banked
  9732  0105F4  5170               	movf	(?___lmul+3)& (0+255),w,b
  9733  0105F6  0100               	movlb	0	; () banked
  9734  0105F8  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9735                           
  9736                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
  9737  0105FA  0100               	movlb	0	; () banked
  9738  0105FC  EE20 F006          	lfsr	2,6
  9739  010600  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9740  010602  26D9               	addwf	fsr2l,f,c
  9741  010604  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9742  010606  22DA               	addwfc	fsr2h,f,c
  9743  010608  50DF               	movf	indf2,w,c
  9744  01060A  0100               	movlb	0	; () banked
  9745  01060C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9746  01060E  0100               	movlb	0	; () banked
  9747  010610  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9748  010612  0100               	movlb	0	; () banked
  9749  010614  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9750  010616  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9751  010618  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9752  01061A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9753  01061C  0E10               	movlw	16
  9754  01061E  0100               	movlb	0	; () banked
  9755  010620  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9756  010622  0E0E               	movlw	14
  9757  010624  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9758  010626  0E00               	movlw	0
  9759  010628  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9760  01062A  0E00               	movlw	0
  9761  01062C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9762  01062E  ECE8  F097         	call	___lmul	;wreg free
  9763  010632  0100               	movlb	0	; () banked
  9764  010634  516D               	movf	?___lmul& (0+255),w,b
  9765  010636  0100               	movlb	0	; () banked
  9766  010638  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9767  01063A  0100               	movlb	0	; () banked
  9768  01063C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9769  01063E  0100               	movlb	0	; () banked
  9770  010640  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9771  010642  0100               	movlb	0	; () banked
  9772  010644  516F               	movf	(?___lmul+2)& (0+255),w,b
  9773  010646  0100               	movlb	0	; () banked
  9774  010648  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9775  01064A  0100               	movlb	0	; () banked
  9776  01064C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9777  01064E  0100               	movlb	0	; () banked
  9778  010650  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9779                           
  9780                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
  9781  010652  0100               	movlb	0	; () banked
  9782  010654  EE20 F005          	lfsr	2,5
  9783  010658  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9784  01065A  26D9               	addwf	fsr2l,f,c
  9785  01065C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9786  01065E  22DA               	addwfc	fsr2h,f,c
  9787  010660  50DF               	movf	indf2,w,c
  9788  010662  0100               	movlb	0	; () banked
  9789  010664  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9790  010666  0100               	movlb	0	; () banked
  9791  010668  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9792  01066A  0100               	movlb	0	; () banked
  9793  01066C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9794  01066E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9795  010670  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9796  010672  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9797  010674  0E3C               	movlw	60
  9798  010676  0100               	movlb	0	; () banked
  9799  010678  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9800  01067A  0E00               	movlw	0
  9801  01067C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9802  01067E  0E00               	movlw	0
  9803  010680  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9804  010682  0E00               	movlw	0
  9805  010684  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9806  010686  ECE8  F097         	call	___lmul	;wreg free
  9807  01068A  0100               	movlb	0	; () banked
  9808  01068C  516D               	movf	?___lmul& (0+255),w,b
  9809  01068E  0100               	movlb	0	; () banked
  9810  010690  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9811  010692  0100               	movlb	0	; () banked
  9812  010694  516E               	movf	(?___lmul+1)& (0+255),w,b
  9813  010696  0100               	movlb	0	; () banked
  9814  010698  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9815  01069A  0100               	movlb	0	; () banked
  9816  01069C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9817  01069E  0100               	movlb	0	; () banked
  9818  0106A0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9819  0106A2  0100               	movlb	0	; () banked
  9820  0106A4  5170               	movf	(?___lmul+3)& (0+255),w,b
  9821  0106A6  0100               	movlb	0	; () banked
  9822  0106A8  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;My_RTCC.c: 192: epoch += tm->ss;
  9826  0106AA  0100               	movlb	0	; () banked
  9827  0106AC  EE20 F004          	lfsr	2,4
  9828  0106B0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9829  0106B2  26D9               	addwf	fsr2l,f,c
  9830  0106B4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9831  0106B6  22DA               	addwfc	fsr2h,f,c
  9832  0106B8  50DF               	movf	indf2,w,c
  9833  0106BA  0100               	movlb	0	; () banked
  9834  0106BC  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9835  0106BE  0100               	movlb	0	; () banked
  9836  0106C0  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9837  0106C2  0100               	movlb	0	; () banked
  9838  0106C4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9839  0106C6  0E00               	movlw	0
  9840  0106C8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9841  0106CA  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9842  0106CC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;My_RTCC.c: 194: tm->epoch = epoch;
  9846  0106CE  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
  9847  0106D2  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
  9848  0106D6  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  9849  0106DA  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  9850  0106DE  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  9851  0106E2  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  9852                           
  9853                           ; BSR set to: 0
  9854  0106E6  0012               	return		;funcret
  9855  0106E8                     __end_of_caltime_to_epoch:
  9856                           	opt stack 0
  9857                           tblptru	equ	0xFF8
  9858                           tblptrh	equ	0xFF7
  9859                           tblptrl	equ	0xFF6
  9860                           tablat	equ	0xFF5
  9861                           prodh	equ	0xFF4
  9862                           prodl	equ	0xFF3
  9863                           intcon	equ	0xFF2
  9864                           intcon2	equ	0xFF1
  9865                           indf0	equ	0xFEF
  9866                           postinc0	equ	0xFEE
  9867                           fsr0h	equ	0xFEA
  9868                           fsr0l	equ	0xFE9
  9869                           wreg	equ	0xFE8
  9870                           indf1	equ	0xFE7
  9871                           postinc1	equ	0xFE6
  9872                           postdec1	equ	0xFE5
  9873                           fsr1h	equ	0xFE2
  9874                           fsr1l	equ	0xFE1
  9875                           indf2	equ	0xFDF
  9876                           postinc2	equ	0xFDE
  9877                           postdec2	equ	0xFDD
  9878                           plusw2	equ	0xFDB
  9879                           fsr2h	equ	0xFDA
  9880                           fsr2l	equ	0xFD9
  9881                           status	equ	0xFD8
  9882                           
  9883 ;; *************** function _month_length *****************
  9884 ;; Defined at:
  9885 ;;		line 55 in file "../My_library/My_RTCC.c"
  9886 ;; Parameters:    Size  Location     Type
  9887 ;;  year            1    wreg     unsigned char 
  9888 ;;  month           1    6[BANK0 ] unsigned char 
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;  year            1   11[BANK0 ] unsigned char 
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      unsigned char 
  9893 ;; Registers used:
  9894 ;;		wreg, status,2, status,0, cstack
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9900 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9902 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9903 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9904 ;;Total ram usage:        6 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:   12
  9907 ;; This function calls:
  9908 ;;		___awmod
  9909 ;; This function is called by:
  9910 ;;		_epoch_to_caltime
  9911 ;;		_caltime_to_epoch
  9912 ;;		_RTCC_adjust_time_inc
  9913 ;;		_RTCC_adjust_time_dec
  9914 ;;		_terminal_time
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           	psect	text47
  9919  011A9C                     __ptext47:
  9920                           	opt stack 0
  9921  011A9C                     _month_length:
  9922                           	opt stack 14
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;incstack = 0
  9926                           ;month_length@year stored from wreg
  9927  011A9C  0100               	movlb	0	; () banked
  9928  011A9E  6F6B               	movwf	month_length@year& (0+255),b
  9929                           
  9930                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
  9931  011AA0  0E02               	movlw	2
  9932  011AA2  0100               	movlb	0	; () banked
  9933  011AA4  1966               	xorwf	month_length@month& (0+255),w,b
  9934  011AA6  A4D8               	btfss	status,2,c
  9935  011AA8  D03E               	goto	l8260
  9936                           
  9937                           ; BSR set to: 0
  9938  011AAA  C06B  F060         	movff	month_length@year,___awmod@dividend
  9939  011AAE  0100               	movlb	0	; () banked
  9940  011AB0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9941  011AB2  0E00               	movlw	0
  9942  011AB4  0100               	movlb	0	; () banked
  9943  011AB6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9944  011AB8  0E64               	movlw	100
  9945  011ABA  6F62               	movwf	___awmod@divisor& (0+255),b
  9946  011ABC  EC6B  F095         	call	___awmod	;wreg free
  9947  011AC0  0100               	movlb	0	; () banked
  9948  011AC2  5160               	movf	?___awmod& (0+255),w,b
  9949  011AC4  0100               	movlb	0	; () banked
  9950  011AC6  1161               	iorwf	(?___awmod+1)& (0+255),w,b
  9951  011AC8  A4D8               	btfss	status,2,c
  9952  011ACA  D002               	goto	u7860
  9953  011ACC  0E01               	movlw	1
  9954  011ACE  D001               	goto	u7870
  9955  011AD0                     u7860:
  9956  011AD0  0E00               	movlw	0
  9957  011AD2                     u7870:
  9958  011AD2  0800               	sublw	0
  9959  011AD4  0100               	movlb	0	; () banked
  9960  011AD6  6F67               	movwf	??_month_length& (0+255),b
  9961  011AD8  C06B  F060         	movff	month_length@year,___awmod@dividend
  9962  011ADC  0100               	movlb	0	; () banked
  9963  011ADE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9964  011AE0  0E01               	movlw	1
  9965  011AE2  0100               	movlb	0	; () banked
  9966  011AE4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9967  011AE6  0E90               	movlw	144
  9968  011AE8  6F62               	movwf	___awmod@divisor& (0+255),b
  9969  011AEA  EC6B  F095         	call	___awmod	;wreg free
  9970  011AEE  0100               	movlb	0	; () banked
  9971  011AF0  5160               	movf	?___awmod& (0+255),w,b
  9972  011AF2  0100               	movlb	0	; () banked
  9973  011AF4  1161               	iorwf	(?___awmod+1)& (0+255),w,b
  9974  011AF6  A4D8               	btfss	status,2,c
  9975  011AF8  D004               	goto	u7880
  9976  011AFA  0100               	movlb	0	; () banked
  9977  011AFC  6B68               	clrf	(??_month_length+1)& (0+255),b
  9978  011AFE  2B68               	incf	(??_month_length+1)& (0+255),f,b
  9979  011B00  D002               	goto	u7898
  9980  011B02                     u7880:
  9981  011B02  0100               	movlb	0	; () banked
  9982  011B04  6B68               	clrf	(??_month_length+1)& (0+255),b
  9983  011B06                     u7898:
  9984  011B06  C06B  F069         	movff	month_length@year,??_month_length+2
  9985  011B0A  0E03               	movlw	3
  9986  011B0C  0100               	movlb	0	; () banked
  9987  011B0E  1769               	andwf	(??_month_length+2)& (0+255),f,b
  9988  011B10  A4D8               	btfss	status,2,c
  9989  011B12  D002               	goto	u7900
  9990  011B14  0E01               	movlw	1
  9991  011B16  D001               	goto	u7910
  9992  011B18                     u7900:
  9993  011B18  0E00               	movlw	0
  9994  011B1A                     u7910:
  9995  011B1A  0100               	movlb	0	; () banked
  9996  011B1C  2568               	addwf	(??_month_length+1)& (0+255),w,b
  9997  011B1E  0100               	movlb	0	; () banked
  9998  011B20  2567               	addwf	??_month_length& (0+255),w,b
  9999  011B22  0F1C               	addlw	28
 10000                           
 10001                           ; BSR set to: 0
 10002                           
 10003                           ; BSR set to: 0
 10004  011B24  0012               	return	
 10005  011B26                     l8260:
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 10009  011B26  0100               	movlb	0	; () banked
 10010  011B28  5166               	movf	month_length@month& (0+255),w,b
 10011  011B2A  0B01               	andlw	1
 10012  011B2C  0100               	movlb	0	; () banked
 10013  011B2E  6F67               	movwf	??_month_length& (0+255),b
 10014  011B30  6B68               	clrf	(??_month_length+1)& (0+255),b
 10015  011B32  0100               	movlb	0	; () banked
 10016  011B34  1F67               	comf	??_month_length& (0+255),f,b
 10017  011B36  1F68               	comf	(??_month_length+1)& (0+255),f,b
 10018  011B38  4B67               	infsnz	??_month_length& (0+255),f,b
 10019  011B3A  2B68               	incf	(??_month_length+1)& (0+255),f,b
 10020  011B3C  0100               	movlb	0	; () banked
 10021  011B3E  5166               	movf	month_length@month& (0+255),w,b
 10022  011B40  0100               	movlb	0	; () banked
 10023  011B42  6F69               	movwf	(??_month_length+2)& (0+255),b
 10024  011B44  6B6A               	clrf	(??_month_length+3)& (0+255),b
 10025  011B46  0100               	movlb	0	; () banked
 10026  011B48  5167               	movf	??_month_length& (0+255),w,b
 10027  011B4A  0100               	movlb	0	; () banked
 10028  011B4C  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 10029  011B4E  0100               	movlb	0	; () banked
 10030  011B50  5168               	movf	(??_month_length+1)& (0+255),w,b
 10031  011B52  0100               	movlb	0	; () banked
 10032  011B54  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 10033  011B56  0E0D               	movlw	13
 10034  011B58  0100               	movlb	0	; () banked
 10035  011B5A  1769               	andwf	(??_month_length+2)& (0+255),f,b
 10036  011B5C  0E00               	movlw	0
 10037  011B5E  176A               	andwf	(??_month_length+3)& (0+255),f,b
 10038  011B60  0E04               	movlw	4
 10039  011B62  0100               	movlb	0	; () banked
 10040  011B64  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 10041  011B66  0100               	movlb	0	; () banked
 10042  011B68  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 10043  011B6A  A4D8               	btfss	status,2,c
 10044  011B6C  D002               	goto	u7920
 10045  011B6E  0E01               	movlw	1
 10046  011B70  D001               	goto	u7930
 10047  011B72                     u7920:
 10048  011B72  0E00               	movlw	0
 10049  011B74                     u7930:
 10050  011B74  0800               	sublw	0
 10051  011B76  0F1F               	addlw	31
 10052                           
 10053                           ; BSR set to: 0
 10054  011B78  0012               	return	
 10055  011B7A                     __end_of_month_length:
 10056                           	opt stack 0
 10057                           tblptru	equ	0xFF8
 10058                           tblptrh	equ	0xFF7
 10059                           tblptrl	equ	0xFF6
 10060                           tablat	equ	0xFF5
 10061                           prodh	equ	0xFF4
 10062                           prodl	equ	0xFF3
 10063                           intcon	equ	0xFF2
 10064                           intcon2	equ	0xFF1
 10065                           indf0	equ	0xFEF
 10066                           postinc0	equ	0xFEE
 10067                           fsr0h	equ	0xFEA
 10068                           fsr0l	equ	0xFE9
 10069                           wreg	equ	0xFE8
 10070                           indf1	equ	0xFE7
 10071                           postinc1	equ	0xFE6
 10072                           postdec1	equ	0xFE5
 10073                           fsr1h	equ	0xFE2
 10074                           fsr1l	equ	0xFE1
 10075                           indf2	equ	0xFDF
 10076                           postinc2	equ	0xFDE
 10077                           postdec2	equ	0xFDD
 10078                           plusw2	equ	0xFDB
 10079                           fsr2h	equ	0xFDA
 10080                           fsr2l	equ	0xFD9
 10081                           status	equ	0xFD8
 10082                           
 10083 ;; *************** function ___awmod *****************
 10084 ;; Defined at:
 10085 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10086 ;; Parameters:    Size  Location     Type
 10087 ;;  dividend        2    0[BANK0 ] int 
 10088 ;;  divisor         2    2[BANK0 ] int 
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;  sign            1    5[BANK0 ] unsigned char 
 10091 ;;  counter         1    4[BANK0 ] unsigned char 
 10092 ;; Return value:  Size  Location     Type
 10093 ;;                  2    0[BANK0 ] int 
 10094 ;; Registers used:
 10095 ;;		wreg, status,2, status,0
 10096 ;; Tracked objects:
 10097 ;;		On entry : 0/0
 10098 ;;		On exit  : 0/0
 10099 ;;		Unchanged: 0/0
 10100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10102 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10104 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10105 ;;Total ram usage:        6 bytes
 10106 ;; Hardware stack levels used:    1
 10107 ;; Hardware stack levels required when called:   11
 10108 ;; This function calls:
 10109 ;;		Nothing
 10110 ;; This function is called by:
 10111 ;;		_month_length
 10112 ;; This function uses a non-reentrant model
 10113 ;;
 10114                           
 10115                           	psect	text48
 10116  012AD6                     __ptext48:
 10117                           	opt stack 0
 10118  012AD6                     ___awmod:
 10119                           	opt stack 14
 10120                           
 10121                           ; BSR set to: 0
 10122                           ;incstack = 0
 10123  012AD6  0E00               	movlw	0
 10124  012AD8  0100               	movlb	0	; () banked
 10125  012ADA  6F65               	movwf	___awmod@sign& (0+255),b
 10126                           
 10127                           ; BSR set to: 0
 10128  012ADC  0100               	movlb	0	; () banked
 10129  012ADE  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10130  012AE0  D008               	goto	l8168
 10131                           
 10132                           ; BSR set to: 0
 10133  012AE2  0100               	movlb	0	; () banked
 10134  012AE4  6D60               	negf	___awmod@dividend& (0+255),b
 10135  012AE6  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10136  012AE8  B0D8               	btfsc	status,0,c
 10137  012AEA  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10138                           
 10139                           ; BSR set to: 0
 10140  012AEC  0E01               	movlw	1
 10141  012AEE  0100               	movlb	0	; () banked
 10142  012AF0  6F65               	movwf	___awmod@sign& (0+255),b
 10143  012AF2                     l8168:
 10144                           
 10145                           ; BSR set to: 0
 10146  012AF2  0100               	movlb	0	; () banked
 10147  012AF4  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10148  012AF6  D005               	goto	l8172
 10149                           
 10150                           ; BSR set to: 0
 10151  012AF8  0100               	movlb	0	; () banked
 10152  012AFA  6D62               	negf	___awmod@divisor& (0+255),b
 10153  012AFC  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 10154  012AFE  B0D8               	btfsc	status,0,c
 10155  012B00  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 10156  012B02                     l8172:
 10157                           
 10158                           ; BSR set to: 0
 10159  012B02  0100               	movlb	0	; () banked
 10160  012B04  5162               	movf	___awmod@divisor& (0+255),w,b
 10161  012B06  0100               	movlb	0	; () banked
 10162  012B08  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10163  012B0A  B4D8               	btfsc	status,2,c
 10164  012B0C  D026               	goto	l8188
 10165                           
 10166                           ; BSR set to: 0
 10167  012B0E  0E01               	movlw	1
 10168  012B10  0100               	movlb	0	; () banked
 10169  012B12  6F64               	movwf	___awmod@counter& (0+255),b
 10170  012B14  D006               	goto	l8178
 10171  012B16                     l8176:
 10172                           
 10173                           ; BSR set to: 0
 10174  012B16  0100               	movlb	0	; () banked
 10175  012B18  90D8               	bcf	status,0,c
 10176  012B1A  3762               	rlcf	___awmod@divisor& (0+255),f,b
 10177  012B1C  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10178  012B1E  0100               	movlb	0	; () banked
 10179  012B20  2B64               	incf	___awmod@counter& (0+255),f,b
 10180  012B22                     l8178:
 10181                           
 10182                           ; BSR set to: 0
 10183  012B22  0100               	movlb	0	; () banked
 10184  012B24  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10185  012B26  D7F7               	goto	l8176
 10186  012B28                     l8180:
 10187                           
 10188                           ; BSR set to: 0
 10189  012B28  0100               	movlb	0	; () banked
 10190  012B2A  5162               	movf	___awmod@divisor& (0+255),w,b
 10191  012B2C  0100               	movlb	0	; () banked
 10192  012B2E  5D60               	subwf	___awmod@dividend& (0+255),w,b
 10193  012B30  0100               	movlb	0	; () banked
 10194  012B32  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 10195  012B34  0100               	movlb	0	; () banked
 10196  012B36  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10197  012B38  A0D8               	btfss	status,0,c
 10198  012B3A  D008               	goto	l8184
 10199                           
 10200                           ; BSR set to: 0
 10201  012B3C  0100               	movlb	0	; () banked
 10202  012B3E  5162               	movf	___awmod@divisor& (0+255),w,b
 10203  012B40  0100               	movlb	0	; () banked
 10204  012B42  5F60               	subwf	___awmod@dividend& (0+255),f,b
 10205  012B44  0100               	movlb	0	; () banked
 10206  012B46  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 10207  012B48  0100               	movlb	0	; () banked
 10208  012B4A  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10209  012B4C                     l8184:
 10210                           
 10211                           ; BSR set to: 0
 10212  012B4C  0100               	movlb	0	; () banked
 10213  012B4E  90D8               	bcf	status,0,c
 10214  012B50  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10215  012B52  3362               	rrcf	___awmod@divisor& (0+255),f,b
 10216                           
 10217                           ; BSR set to: 0
 10218  012B54  0100               	movlb	0	; () banked
 10219  012B56  2F64               	decfsz	___awmod@counter& (0+255),f,b
 10220  012B58  D7E7               	goto	l8180
 10221  012B5A                     l8188:
 10222                           
 10223                           ; BSR set to: 0
 10224  012B5A  0100               	movlb	0	; () banked
 10225  012B5C  5165               	movf	___awmod@sign& (0+255),w,b
 10226  012B5E  0100               	movlb	0	; () banked
 10227  012B60  B4D8               	btfsc	status,2,c
 10228  012B62  D005               	goto	l8192
 10229                           
 10230                           ; BSR set to: 0
 10231  012B64  0100               	movlb	0	; () banked
 10232  012B66  6D60               	negf	___awmod@dividend& (0+255),b
 10233  012B68  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10234  012B6A  B0D8               	btfsc	status,0,c
 10235  012B6C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10236  012B6E                     l8192:
 10237                           
 10238                           ; BSR set to: 0
 10239  012B6E  C060  F060         	movff	___awmod@dividend,?___awmod
 10240  012B72  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 10241  012B76  0012               	return	
 10242  012B78                     __end_of___awmod:
 10243                           	opt stack 0
 10244                           tblptru	equ	0xFF8
 10245                           tblptrh	equ	0xFF7
 10246                           tblptrl	equ	0xFF6
 10247                           tablat	equ	0xFF5
 10248                           prodh	equ	0xFF4
 10249                           prodl	equ	0xFF3
 10250                           intcon	equ	0xFF2
 10251                           intcon2	equ	0xFF1
 10252                           indf0	equ	0xFEF
 10253                           postinc0	equ	0xFEE
 10254                           fsr0h	equ	0xFEA
 10255                           fsr0l	equ	0xFE9
 10256                           wreg	equ	0xFE8
 10257                           indf1	equ	0xFE7
 10258                           postinc1	equ	0xFE6
 10259                           postdec1	equ	0xFE5
 10260                           fsr1h	equ	0xFE2
 10261                           fsr1l	equ	0xFE1
 10262                           indf2	equ	0xFDF
 10263                           postinc2	equ	0xFDE
 10264                           postdec2	equ	0xFDD
 10265                           plusw2	equ	0xFDB
 10266                           fsr2h	equ	0xFDA
 10267                           fsr2l	equ	0xFD9
 10268                           status	equ	0xFD8
 10269                           
 10270 ;; *************** function ___lmul *****************
 10271 ;; Defined at:
 10272 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  multiplier      4   13[BANK0 ] unsigned long 
 10275 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;  product         4   21[BANK0 ] unsigned long 
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  4   13[BANK0 ] unsigned long 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2, status,0
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10287 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10288 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10290 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10291 ;;Total ram usage:       12 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:   11
 10294 ;; This function calls:
 10295 ;;		Nothing
 10296 ;; This function is called by:
 10297 ;;		_get_quot_rem
 10298 ;;		_caltime_to_epoch
 10299 ;;		_RTCC_adjust_time_inc
 10300 ;;		_RTCC_adjust_time_dec
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           	psect	text49
 10305  012FD0                     __ptext49:
 10306                           	opt stack 0
 10307  012FD0                     ___lmul:
 10308                           	opt stack 14
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;incstack = 0
 10312  012FD0  0E00               	movlw	0
 10313  012FD2  0100               	movlb	0	; () banked
 10314  012FD4  6F75               	movwf	___lmul@product& (0+255),b
 10315  012FD6  0E00               	movlw	0
 10316  012FD8  6F76               	movwf	(___lmul@product+1)& (0+255),b
 10317  012FDA  0E00               	movlw	0
 10318  012FDC  6F77               	movwf	(___lmul@product+2)& (0+255),b
 10319  012FDE  0E00               	movlw	0
 10320  012FE0  6F78               	movwf	(___lmul@product+3)& (0+255),b
 10321  012FE2                     l8108:
 10322                           
 10323                           ; BSR set to: 0
 10324  012FE2  0100               	movlb	0	; () banked
 10325  012FE4  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 10326  012FE6  D010               	goto	l8112
 10327                           
 10328                           ; BSR set to: 0
 10329  012FE8  0100               	movlb	0	; () banked
 10330  012FEA  5171               	movf	___lmul@multiplicand& (0+255),w,b
 10331  012FEC  0100               	movlb	0	; () banked
 10332  012FEE  2775               	addwf	___lmul@product& (0+255),f,b
 10333  012FF0  0100               	movlb	0	; () banked
 10334  012FF2  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 10335  012FF4  0100               	movlb	0	; () banked
 10336  012FF6  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 10337  012FF8  0100               	movlb	0	; () banked
 10338  012FFA  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 10339  012FFC  0100               	movlb	0	; () banked
 10340  012FFE  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 10341  013000  0100               	movlb	0	; () banked
 10342  013002  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 10343  013004  0100               	movlb	0	; () banked
 10344  013006  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 10345  013008                     l8112:
 10346                           
 10347                           ; BSR set to: 0
 10348  013008  0100               	movlb	0	; () banked
 10349  01300A  90D8               	bcf	status,0,c
 10350  01300C  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 10351  01300E  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 10352  013010  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 10353  013012  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 10354                           
 10355                           ; BSR set to: 0
 10356  013014  0100               	movlb	0	; () banked
 10357  013016  90D8               	bcf	status,0,c
 10358  013018  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 10359  01301A  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 10360  01301C  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 10361  01301E  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 10362  013020  0100               	movlb	0	; () banked
 10363  013022  516D               	movf	___lmul@multiplier& (0+255),w,b
 10364  013024  0100               	movlb	0	; () banked
 10365  013026  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 10366  013028  0100               	movlb	0	; () banked
 10367  01302A  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 10368  01302C  0100               	movlb	0	; () banked
 10369  01302E  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 10370  013030  A4D8               	btfss	status,2,c
 10371  013032  D7D7               	goto	l8108
 10372                           
 10373                           ; BSR set to: 0
 10374  013034  C075  F06D         	movff	___lmul@product,?___lmul
 10375  013038  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 10376  01303C  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 10377  013040  C078  F070         	movff	___lmul@product+3,?___lmul+3
 10378                           
 10379                           ; BSR set to: 0
 10380  013044  0012               	return		;funcret
 10381  013046                     __end_of___lmul:
 10382                           	opt stack 0
 10383                           tblptru	equ	0xFF8
 10384                           tblptrh	equ	0xFF7
 10385                           tblptrl	equ	0xFF6
 10386                           tablat	equ	0xFF5
 10387                           prodh	equ	0xFF4
 10388                           prodl	equ	0xFF3
 10389                           intcon	equ	0xFF2
 10390                           intcon2	equ	0xFF1
 10391                           indf0	equ	0xFEF
 10392                           postinc0	equ	0xFEE
 10393                           fsr0h	equ	0xFEA
 10394                           fsr0l	equ	0xFE9
 10395                           wreg	equ	0xFE8
 10396                           indf1	equ	0xFE7
 10397                           postinc1	equ	0xFE6
 10398                           postdec1	equ	0xFE5
 10399                           fsr1h	equ	0xFE2
 10400                           fsr1l	equ	0xFE1
 10401                           indf2	equ	0xFDF
 10402                           postinc2	equ	0xFDE
 10403                           postdec2	equ	0xFDD
 10404                           plusw2	equ	0xFDB
 10405                           fsr2h	equ	0xFDA
 10406                           fsr2l	equ	0xFD9
 10407                           status	equ	0xFD8
 10408                           
 10409 ;; *************** function _RTCC_to_caltime *****************
 10410 ;; Defined at:
 10411 ;;		line 89 in file "../My_library/My_RTCC.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  tm              2    2[BANK0 ] PTR struct .
 10414 ;;		 -> now(14), 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;  dumy            1    4[BANK0 ] unsigned char 
 10417 ;; Return value:  Size  Location     Type
 10418 ;;		None               void
 10419 ;; Registers used:
 10420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10426 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10429 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10430 ;;Total ram usage:        3 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:   12
 10433 ;; This function calls:
 10434 ;;		_x_to_d
 10435 ;; This function is called by:
 10436 ;;		_RTCC_from_RTCC
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           	psect	text50
 10441  01252E                     __ptext50:
 10442                           	opt stack 0
 10443  01252E                     _RTCC_to_caltime:
 10444                           	opt stack 15
 10445  01252E                     l855:
 10446  01252E  010F               	movlb	15	; () banked
 10447  012530  B93F               	btfsc	63,4,b	;volatile
 10448  012532  D7FD               	goto	l855
 10449                           
 10450                           ; BSR set to: 15
 10451                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 10452  012534  010F               	movlb	15	; () banked
 10453  012536  813F               	bsf	63,0,b	;volatile
 10454                           
 10455                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 10456  012538  010F               	movlb	15	; () banked
 10457  01253A  833F               	bsf	63,1,b	;volatile
 10458                           
 10459                           ; BSR set to: 15
 10460                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 10461  01253C  0100               	movlb	0	; () banked
 10462  01253E  EE20 F00A          	lfsr	2,10
 10463  012542  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10464  012544  26D9               	addwf	fsr2l,f,c
 10465  012546  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10466  012548  22DA               	addwfc	fsr2h,f,c
 10467  01254A  010F               	movlb	15	; () banked
 10468  01254C  513A               	movf	58,w,b	;volatile
 10469  01254E  EC06  F09C         	call	_x_to_d
 10470  012552  6EDF               	movwf	indf2,c
 10471                           
 10472                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 10473  012554  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 10474                           
 10475                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 10476  012558  0100               	movlb	0	; () banked
 10477  01255A  EE20 F008          	lfsr	2,8
 10478  01255E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10479  012560  26D9               	addwf	fsr2l,f,c
 10480  012562  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10481  012564  22DA               	addwfc	fsr2h,f,c
 10482  012566  010F               	movlb	15	; () banked
 10483  012568  513A               	movf	58,w,b	;volatile
 10484  01256A  EC06  F09C         	call	_x_to_d
 10485  01256E  6EDF               	movwf	indf2,c
 10486                           
 10487                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 10488  012570  0100               	movlb	0	; () banked
 10489  012572  EE20 F009          	lfsr	2,9
 10490  012576  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10491  012578  26D9               	addwf	fsr2l,f,c
 10492  01257A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10493  01257C  22DA               	addwfc	fsr2h,f,c
 10494  01257E  010F               	movlb	15	; () banked
 10495  012580  513B               	movf	59,w,b	;volatile
 10496  012582  EC06  F09C         	call	_x_to_d
 10497  012586  6EDF               	movwf	indf2,c
 10498                           
 10499                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 10500  012588  0100               	movlb	0	; () banked
 10501  01258A  EE20 F006          	lfsr	2,6
 10502  01258E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10503  012590  26D9               	addwf	fsr2l,f,c
 10504  012592  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10505  012594  22DA               	addwfc	fsr2h,f,c
 10506  012596  010F               	movlb	15	; () banked
 10507  012598  513A               	movf	58,w,b	;volatile
 10508  01259A  EC06  F09C         	call	_x_to_d
 10509  01259E  6EDF               	movwf	indf2,c
 10510                           
 10511                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 10512  0125A0  0100               	movlb	0	; () banked
 10513  0125A2  EE20 F007          	lfsr	2,7
 10514  0125A6  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10515  0125A8  26D9               	addwf	fsr2l,f,c
 10516  0125AA  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10517  0125AC  22DA               	addwfc	fsr2h,f,c
 10518  0125AE  010F               	movlb	15	; () banked
 10519  0125B0  513B               	movf	59,w,b	;volatile
 10520  0125B2  EC06  F09C         	call	_x_to_d
 10521  0125B6  6EDF               	movwf	indf2,c
 10522                           
 10523                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 10524  0125B8  0100               	movlb	0	; () banked
 10525  0125BA  EE20 F004          	lfsr	2,4
 10526  0125BE  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10527  0125C0  26D9               	addwf	fsr2l,f,c
 10528  0125C2  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10529  0125C4  22DA               	addwfc	fsr2h,f,c
 10530  0125C6  010F               	movlb	15	; () banked
 10531  0125C8  513A               	movf	58,w,b	;volatile
 10532  0125CA  EC06  F09C         	call	_x_to_d
 10533  0125CE  6EDF               	movwf	indf2,c
 10534                           
 10535                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 10536  0125D0  0100               	movlb	0	; () banked
 10537  0125D2  EE20 F005          	lfsr	2,5
 10538  0125D6  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10539  0125D8  26D9               	addwf	fsr2l,f,c
 10540  0125DA  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10541  0125DC  22DA               	addwfc	fsr2h,f,c
 10542  0125DE  010F               	movlb	15	; () banked
 10543  0125E0  513B               	movf	59,w,b	;volatile
 10544  0125E2  EC06  F09C         	call	_x_to_d
 10545  0125E6  6EDF               	movwf	indf2,c
 10546  0125E8  0012               	return		;funcret
 10547  0125EA                     __end_of_RTCC_to_caltime:
 10548                           	opt stack 0
 10549                           tblptru	equ	0xFF8
 10550                           tblptrh	equ	0xFF7
 10551                           tblptrl	equ	0xFF6
 10552                           tablat	equ	0xFF5
 10553                           prodh	equ	0xFF4
 10554                           prodl	equ	0xFF3
 10555                           intcon	equ	0xFF2
 10556                           intcon2	equ	0xFF1
 10557                           indf0	equ	0xFEF
 10558                           postinc0	equ	0xFEE
 10559                           fsr0h	equ	0xFEA
 10560                           fsr0l	equ	0xFE9
 10561                           wreg	equ	0xFE8
 10562                           indf1	equ	0xFE7
 10563                           postinc1	equ	0xFE6
 10564                           postdec1	equ	0xFE5
 10565                           fsr1h	equ	0xFE2
 10566                           fsr1l	equ	0xFE1
 10567                           indf2	equ	0xFDF
 10568                           postinc2	equ	0xFDE
 10569                           postdec2	equ	0xFDD
 10570                           plusw2	equ	0xFDB
 10571                           fsr2h	equ	0xFDA
 10572                           fsr2l	equ	0xFD9
 10573                           status	equ	0xFD8
 10574                           
 10575 ;; *************** function _x_to_d *****************
 10576 ;; Defined at:
 10577 ;;		line 51 in file "../My_library/My_RTCC.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  hex             1    wreg     unsigned char 
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  hex             1    1[BANK0 ] unsigned char 
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  1    wreg      unsigned char 
 10584 ;; Registers used:
 10585 ;;		wreg, status,2, status,0, prodl, prodh
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10592 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10593 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10594 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10595 ;;Total ram usage:        2 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; Hardware stack levels required when called:   11
 10598 ;; This function calls:
 10599 ;;		Nothing
 10600 ;; This function is called by:
 10601 ;;		_RTCC_to_caltime
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           	psect	text51
 10606  01380C                     __ptext51:
 10607                           	opt stack 0
 10608  01380C                     _x_to_d:
 10609                           	opt stack 15
 10610                           
 10611                           ;incstack = 0
 10612                           ;x_to_d@hex stored from wreg
 10613  01380C  0100               	movlb	0	; () banked
 10614  01380E  6F61               	movwf	x_to_d@hex& (0+255),b
 10615                           
 10616                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 10617  013810  C061  F060         	movff	x_to_d@hex,??_x_to_d
 10618  013814  0E0F               	movlw	15
 10619  013816  0100               	movlb	0	; () banked
 10620  013818  1760               	andwf	??_x_to_d& (0+255),f,b
 10621  01381A  0100               	movlb	0	; () banked
 10622  01381C  3961               	swapf	x_to_d@hex& (0+255),w,b
 10623  01381E  0B0F               	andlw	15
 10624  013820  0B0F               	andlw	15
 10625  013822  0D0A               	mullw	10
 10626  013824  50F3               	movf	prodl,w,c
 10627  013826  0100               	movlb	0	; () banked
 10628  013828  2560               	addwf	??_x_to_d& (0+255),w,b
 10629  01382A  0012               	return	
 10630  01382C                     __end_of_x_to_d:
 10631                           	opt stack 0
 10632                           tblptru	equ	0xFF8
 10633                           tblptrh	equ	0xFF7
 10634                           tblptrl	equ	0xFF6
 10635                           tablat	equ	0xFF5
 10636                           prodh	equ	0xFF4
 10637                           prodl	equ	0xFF3
 10638                           intcon	equ	0xFF2
 10639                           intcon2	equ	0xFF1
 10640                           indf0	equ	0xFEF
 10641                           postinc0	equ	0xFEE
 10642                           fsr0h	equ	0xFEA
 10643                           fsr0l	equ	0xFE9
 10644                           wreg	equ	0xFE8
 10645                           indf1	equ	0xFE7
 10646                           postinc1	equ	0xFE6
 10647                           postdec1	equ	0xFE5
 10648                           fsr1h	equ	0xFE2
 10649                           fsr1l	equ	0xFE1
 10650                           indf2	equ	0xFDF
 10651                           postinc2	equ	0xFDE
 10652                           postdec2	equ	0xFDD
 10653                           plusw2	equ	0xFDB
 10654                           fsr2h	equ	0xFDA
 10655                           fsr2l	equ	0xFD9
 10656                           status	equ	0xFD8
 10657                           
 10658 ;; *************** function _I2C_LCD_SetCursor *****************
 10659 ;; Defined at:
 10660 ;;		line 159 in file "../My_library/My_ST7032.c"
 10661 ;; Parameters:    Size  Location     Type
 10662 ;;  col             1    wreg     unsigned char 
 10663 ;;  row             1    6[BANK0 ] unsigned char 
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;  col             1    9[BANK0 ] unsigned char 
 10666 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 10667 ;; Return value:  Size  Location     Type
 10668 ;;		None               void
 10669 ;; Registers used:
 10670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10671 ;; Tracked objects:
 10672 ;;		On entry : 0/0
 10673 ;;		On exit  : 0/0
 10674 ;;		Unchanged: 0/0
 10675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10676 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10677 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10679 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10680 ;;Total ram usage:        4 bytes
 10681 ;; Hardware stack levels used:    1
 10682 ;; Hardware stack levels required when called:   14
 10683 ;; This function calls:
 10684 ;;		_I2C_LCD_Command
 10685 ;; This function is called by:
 10686 ;;		_main
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           	psect	text52
 10691  0136D2                     __ptext52:
 10692                           	opt stack 0
 10693  0136D2                     _I2C_LCD_SetCursor:
 10694                           	opt stack 16
 10695                           
 10696                           ; BSR set to: 0
 10697                           ;incstack = 0
 10698                           ;I2C_LCD_SetCursor@col stored from wreg
 10699  0136D2  0100               	movlb	0	; () banked
 10700  0136D4  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 10701                           
 10702                           ;My_ST7032.c: 160: uint8_t row_offsets[] = {0x00, 0x40};
 10703  0136D6  C0D7  F067         	movff	I2C_LCD_SetCursor@F8685,I2C_LCD_SetCursor@row_offsets
 10704  0136DA  C0D8  F068         	movff	I2C_LCD_SetCursor@F8685+1,I2C_LCD_SetCursor@row_offsets+1
 10705                           
 10706                           ;My_ST7032.c: 162: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 10707  0136DE  0100               	movlb	0	; () banked
 10708  0136E0  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 10709  0136E2  0D01               	mullw	1
 10710  0136E4  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 10711  0136E6  24F3               	addwf	prodl,w,c
 10712  0136E8  6ED9               	movwf	fsr2l,c
 10713  0136EA  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 10714  0136EC  20F4               	addwfc	prodh,w,c
 10715  0136EE  6EDA               	movwf	fsr2h,c
 10716  0136F0  50DF               	movf	indf2,w,c
 10717  0136F2  0100               	movlb	0	; () banked
 10718  0136F4  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 10719  0136F6  0980               	iorlw	128
 10720  0136F8  ECA4  F09A         	call	_I2C_LCD_Command
 10721  0136FC  0012               	return		;funcret
 10722  0136FE                     __end_of_I2C_LCD_SetCursor:
 10723                           	opt stack 0
 10724                           tblptru	equ	0xFF8
 10725                           tblptrh	equ	0xFF7
 10726                           tblptrl	equ	0xFF6
 10727                           tablat	equ	0xFF5
 10728                           prodh	equ	0xFF4
 10729                           prodl	equ	0xFF3
 10730                           intcon	equ	0xFF2
 10731                           intcon2	equ	0xFF1
 10732                           indf0	equ	0xFEF
 10733                           postinc0	equ	0xFEE
 10734                           fsr0h	equ	0xFEA
 10735                           fsr0l	equ	0xFE9
 10736                           wreg	equ	0xFE8
 10737                           indf1	equ	0xFE7
 10738                           postinc1	equ	0xFE6
 10739                           postdec1	equ	0xFE5
 10740                           fsr1h	equ	0xFE2
 10741                           fsr1l	equ	0xFE1
 10742                           indf2	equ	0xFDF
 10743                           postinc2	equ	0xFDE
 10744                           postdec2	equ	0xFDD
 10745                           plusw2	equ	0xFDB
 10746                           fsr2h	equ	0xFDA
 10747                           fsr2l	equ	0xFD9
 10748                           status	equ	0xFD8
 10749                           
 10750 ;; *************** function _I2C_LCD_Command *****************
 10751 ;; Defined at:
 10752 ;;		line 141 in file "../My_library/My_ST7032.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;  c               1    wreg     unsigned char 
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;  c               1    4[BANK0 ] unsigned char 
 10757 ;;  ans             1    5[BANK0 ] unsigned char 
 10758 ;; Return value:  Size  Location     Type
 10759 ;;		None               void
 10760 ;; Registers used:
 10761 ;;		wreg, status,2, status,0, cstack
 10762 ;; Tracked objects:
 10763 ;;		On entry : 0/0
 10764 ;;		On exit  : 0/0
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10768 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10770 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10771 ;;Total ram usage:        2 bytes
 10772 ;; Hardware stack levels used:    1
 10773 ;; Hardware stack levels required when called:   13
 10774 ;; This function calls:
 10775 ;;		_I2C_Send
 10776 ;;		_I2C_Start
 10777 ;;		_I2C_Stop
 10778 ;; This function is called by:
 10779 ;;		_I2C_LCD_Clear
 10780 ;;		_I2C_LCD_SetCursor
 10781 ;;		_I2C_LCD_init
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           	psect	text53
 10786  013548                     __ptext53:
 10787                           	opt stack 0
 10788  013548                     _I2C_LCD_Command:
 10789                           	opt stack 15
 10790                           
 10791                           ;incstack = 0
 10792                           ;I2C_LCD_Command@c stored from wreg
 10793  013548  0100               	movlb	0	; () banked
 10794  01354A  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 10795                           
 10796                           ;My_ST7032.c: 142: uint8_t ans;
 10797                           ;My_ST7032.c: 144: ans = I2C_Start(0x3E, 0);
 10798  01354C  0E00               	movlw	0
 10799  01354E  0100               	movlb	0	; () banked
 10800  013550  6F62               	movwf	I2C_Start@rw& (0+255),b
 10801  013552  0E3E               	movlw	62
 10802  013554  EC0E  F09B         	call	_I2C_Start
 10803  013558  0100               	movlb	0	; () banked
 10804  01355A  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;My_ST7032.c: 145: if (ans == 0) {
 10808  01355C  0100               	movlb	0	; () banked
 10809  01355E  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 10810  013560  0100               	movlb	0	; () banked
 10811  013562  A4D8               	btfss	status,2,c
 10812  013564  D007               	goto	l1099
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;My_ST7032.c: 147: I2C_Send(0b10000000);
 10816  013566  0E80               	movlw	128
 10817  013568  EC68  F09C         	call	_I2C_Send
 10818                           
 10819                           ;My_ST7032.c: 148: I2C_Send(c);
 10820  01356C  0100               	movlb	0	; () banked
 10821  01356E  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 10822  013570  EC68  F09C         	call	_I2C_Send
 10823  013574                     l1099:
 10824                           
 10825                           ;My_ST7032.c: 149: }
 10826                           ;My_ST7032.c: 150: I2C_Stop();
 10827  013574  EC84  F09C         	call	_I2C_Stop	;wreg free
 10828                           
 10829                           ;My_ST7032.c: 151: _delay((unsigned long)((26)*(48000000/4000000.0)));
 10830  013578  0E68               	movlw	104
 10831  01357A                     u9917:
 10832  01357A  2EE8               	decfsz	wreg,f,c
 10833  01357C  D7FE               	goto	u9917
 10834  01357E  0012               	return		;funcret
 10835  013580                     __end_of_I2C_LCD_Command:
 10836                           	opt stack 0
 10837                           tblptru	equ	0xFF8
 10838                           tblptrh	equ	0xFF7
 10839                           tblptrl	equ	0xFF6
 10840                           tablat	equ	0xFF5
 10841                           prodh	equ	0xFF4
 10842                           prodl	equ	0xFF3
 10843                           intcon	equ	0xFF2
 10844                           intcon2	equ	0xFF1
 10845                           indf0	equ	0xFEF
 10846                           postinc0	equ	0xFEE
 10847                           fsr0h	equ	0xFEA
 10848                           fsr0l	equ	0xFE9
 10849                           wreg	equ	0xFE8
 10850                           indf1	equ	0xFE7
 10851                           postinc1	equ	0xFE6
 10852                           postdec1	equ	0xFE5
 10853                           fsr1h	equ	0xFE2
 10854                           fsr1l	equ	0xFE1
 10855                           indf2	equ	0xFDF
 10856                           postinc2	equ	0xFDE
 10857                           postdec2	equ	0xFDD
 10858                           plusw2	equ	0xFDB
 10859                           fsr2h	equ	0xFDA
 10860                           fsr2l	equ	0xFD9
 10861                           status	equ	0xFD8
 10862                           
 10863 ;; *************** function _I2C_LCD_Puts *****************
 10864 ;; Defined at:
 10865 ;;		line 178 in file "../My_library/My_ST7032.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 10868 ;;		 -> main@s(40), STR_42(9), STR_41(9), 
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;  ans             2    7[BANK0 ] int 
 10871 ;; Return value:  Size  Location     Type
 10872 ;;		None               void
 10873 ;; Registers used:
 10874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/0
 10877 ;;		On exit  : 0/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10880 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10882 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10883 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10884 ;;Total ram usage:        5 bytes
 10885 ;; Hardware stack levels used:    1
 10886 ;; Hardware stack levels required when called:   13
 10887 ;; This function calls:
 10888 ;;		_I2C_Send
 10889 ;;		_I2C_Start
 10890 ;;		_I2C_Stop
 10891 ;; This function is called by:
 10892 ;;		_main
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text54
 10897  012DC2                     __ptext54:
 10898                           	opt stack 0
 10899  012DC2                     _I2C_LCD_Puts:
 10900                           	opt stack 17
 10901                           
 10902                           ;My_ST7032.c: 179: int ans;
 10903                           ;My_ST7032.c: 181: ans = I2C_Start(0x3E, 0);
 10904                           
 10905                           ;incstack = 0
 10906  012DC2  0E00               	movlw	0
 10907  012DC4  0100               	movlb	0	; () banked
 10908  012DC6  6F62               	movwf	I2C_Start@rw& (0+255),b
 10909  012DC8  0E3E               	movlw	62
 10910  012DCA  EC0E  F09B         	call	_I2C_Start
 10911  012DCE  0100               	movlb	0	; () banked
 10912  012DD0  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 10913  012DD2  0100               	movlb	0	; () banked
 10914  012DD4  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 10915  012DD6  0100               	movlb	0	; () banked
 10916  012DD8  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 10917  012DDA  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;My_ST7032.c: 182: if (ans == 0) {
 10921  012DDC  0100               	movlb	0	; () banked
 10922  012DDE  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 10923  012DE0  0100               	movlb	0	; () banked
 10924  012DE2  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 10925  012DE4  A4D8               	btfss	status,2,c
 10926  012DE6  D031               	goto	l9284
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;My_ST7032.c: 183: I2C_Send(0b01000000);
 10930  012DE8  0E40               	movlw	64
 10931  012DEA  EC68  F09C         	call	_I2C_Send
 10932                           
 10933                           ;My_ST7032.c: 184: while (*s) {
 10934  012DEE  D019               	goto	l9282
 10935  012DF0                     l9276:
 10936                           
 10937                           ;My_ST7032.c: 185: I2C_Send(*s++);
 10938  012DF0  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 10939  012DF4  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 10940  012DF8  0E00               	movlw	low (__mediumconst shr (0+16))
 10941  012DFA  6EF8               	movwf	tblptru,c
 10942  012DFC  0E0E               	movlw	(high __ramtop+-1)
 10943  012DFE  64F7               	cpfsgt	tblptrh,c
 10944  012E00  D003               	bra	u9127
 10945  012E02  0008               	tblrd		*
 10946  012E04  50F5               	movf	tablat,w,c
 10947  012E06  D005               	bra	u9120
 10948  012E08                     u9127:
 10949  012E08  CFF6 FFE9          	movff	tblptrl,fsr0l
 10950  012E0C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10951  012E10  50EF               	movf	indf0,w,c
 10952  012E12                     u9120:
 10953  012E12  EC68  F09C         	call	_I2C_Send
 10954  012E16  0100               	movlb	0	; () banked
 10955  012E18  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 10956  012E1A  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 10957                           
 10958                           ; BSR set to: 0
 10959                           ;My_ST7032.c: 186: _delay((unsigned long)((26)*(48000000/4000000.0)));
 10960  012E1C  0E68               	movlw	104
 10961  012E1E                     u9927:
 10962  012E1E  2EE8               	decfsz	wreg,f,c
 10963  012E20  D7FE               	goto	u9927
 10964  012E22                     l9282:
 10965  012E22  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 10966  012E26  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 10967  012E2A  0E00               	movlw	low (__mediumconst shr (0+16))
 10968  012E2C  6EF8               	movwf	tblptru,c
 10969  012E2E  0E0E               	movlw	(high __ramtop+-1)
 10970  012E30  64F7               	cpfsgt	tblptrh,c
 10971  012E32  D003               	bra	u9137
 10972  012E34  0008               	tblrd		*
 10973  012E36  50F5               	movf	tablat,w,c
 10974  012E38  D005               	bra	u9130
 10975  012E3A                     u9137:
 10976  012E3A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10977  012E3E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10978  012E42  50EF               	movf	indf0,w,c
 10979  012E44                     u9130:
 10980  012E44  0900               	iorlw	0
 10981  012E46  A4D8               	btfss	status,2,c
 10982  012E48  D7D3               	goto	l9276
 10983  012E4A                     l9284:
 10984                           
 10985                           ;My_ST7032.c: 187: }
 10986                           ;My_ST7032.c: 188: }
 10987                           ;My_ST7032.c: 189: I2C_Stop();
 10988  012E4A  EC84  F09C         	call	_I2C_Stop	;wreg free
 10989  012E4E  0012               	return		;funcret
 10990  012E50                     __end_of_I2C_LCD_Puts:
 10991                           	opt stack 0
 10992                           tblptru	equ	0xFF8
 10993                           tblptrh	equ	0xFF7
 10994                           tblptrl	equ	0xFF6
 10995                           tablat	equ	0xFF5
 10996                           prodh	equ	0xFF4
 10997                           prodl	equ	0xFF3
 10998                           intcon	equ	0xFF2
 10999                           intcon2	equ	0xFF1
 11000                           indf0	equ	0xFEF
 11001                           postinc0	equ	0xFEE
 11002                           fsr0h	equ	0xFEA
 11003                           fsr0l	equ	0xFE9
 11004                           wreg	equ	0xFE8
 11005                           indf1	equ	0xFE7
 11006                           postinc1	equ	0xFE6
 11007                           postdec1	equ	0xFE5
 11008                           fsr1h	equ	0xFE2
 11009                           fsr1l	equ	0xFE1
 11010                           indf2	equ	0xFDF
 11011                           postinc2	equ	0xFDE
 11012                           postdec2	equ	0xFDD
 11013                           plusw2	equ	0xFDB
 11014                           fsr2h	equ	0xFDA
 11015                           fsr2l	equ	0xFD9
 11016                           status	equ	0xFD8
 11017                           
 11018 ;; *************** function _I2C_Stop *****************
 11019 ;; Defined at:
 11020 ;;		line 96 in file "../My_library/My_I2C.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;		None
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;		None
 11025 ;; Return value:  Size  Location     Type
 11026 ;;		None               void
 11027 ;; Registers used:
 11028 ;;		wreg, status,2, status,0, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11038 ;;Total ram usage:        0 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:   12
 11041 ;; This function calls:
 11042 ;;		_I2C_IdleCheck
 11043 ;; This function is called by:
 11044 ;;		_I2C_LCD_Command
 11045 ;;		_I2C_LCD_Puts
 11046 ;;		_I2C_LCD_Putc
 11047 ;;		_I2C_LCD_CreateChar
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text55
 11052  013908                     __ptext55:
 11053                           	opt stack 0
 11054  013908                     _I2C_Stop:
 11055                           	opt stack 15
 11056                           
 11057                           ;My_I2C.c: 98: I2C_IdleCheck(0x5);
 11058                           
 11059                           ;incstack = 0
 11060  013908  0E05               	movlw	5
 11061  01390A  EC16  F09C         	call	_I2C_IdleCheck
 11062                           
 11063                           ;My_I2C.c: 99: SSP1CON2bits.PEN = 1;
 11064  01390E  84C5               	bsf	4037,2,c	;volatile
 11065  013910  0012               	return		;funcret
 11066  013912                     __end_of_I2C_Stop:
 11067                           	opt stack 0
 11068                           tblptru	equ	0xFF8
 11069                           tblptrh	equ	0xFF7
 11070                           tblptrl	equ	0xFF6
 11071                           tablat	equ	0xFF5
 11072                           prodh	equ	0xFF4
 11073                           prodl	equ	0xFF3
 11074                           intcon	equ	0xFF2
 11075                           intcon2	equ	0xFF1
 11076                           indf0	equ	0xFEF
 11077                           postinc0	equ	0xFEE
 11078                           fsr0h	equ	0xFEA
 11079                           fsr0l	equ	0xFE9
 11080                           wreg	equ	0xFE8
 11081                           indf1	equ	0xFE7
 11082                           postinc1	equ	0xFE6
 11083                           postdec1	equ	0xFE5
 11084                           fsr1h	equ	0xFE2
 11085                           fsr1l	equ	0xFE1
 11086                           indf2	equ	0xFDF
 11087                           postinc2	equ	0xFDE
 11088                           postdec2	equ	0xFDD
 11089                           plusw2	equ	0xFDB
 11090                           fsr2h	equ	0xFDA
 11091                           fsr2l	equ	0xFD9
 11092                           status	equ	0xFD8
 11093                           
 11094 ;; *************** function _I2C_Start *****************
 11095 ;; Defined at:
 11096 ;;		line 72 in file "../My_library/My_I2C.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;  adrs            1    wreg     unsigned char 
 11099 ;;  rw              1    2[BANK0 ] unsigned char 
 11100 ;; Auto vars:     Size  Location     Type
 11101 ;;  adrs            1    3[BANK0 ] unsigned char 
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  1    wreg      unsigned char 
 11104 ;; Registers used:
 11105 ;;		wreg, status,2, status,0, cstack
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11111 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11112 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11115 ;;Total ram usage:        2 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; Hardware stack levels required when called:   12
 11118 ;; This function calls:
 11119 ;;		_I2C_IdleCheck
 11120 ;; This function is called by:
 11121 ;;		_I2C_LCD_Command
 11122 ;;		_I2C_LCD_Puts
 11123 ;;		_I2C_LCD_Putc
 11124 ;;		_I2C_LCD_CreateChar
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           	psect	text56
 11129  01361C                     __ptext56:
 11130                           	opt stack 0
 11131  01361C                     _I2C_Start:
 11132                           	opt stack 15
 11133                           
 11134                           ;incstack = 0
 11135                           ;I2C_Start@adrs stored from wreg
 11136  01361C  0100               	movlb	0	; () banked
 11137  01361E  6F63               	movwf	I2C_Start@adrs& (0+255),b
 11138                           
 11139                           ;My_I2C.c: 74: I2C_IdleCheck(0x5);
 11140  013620  0E05               	movlw	5
 11141  013622  EC16  F09C         	call	_I2C_IdleCheck
 11142                           
 11143                           ;My_I2C.c: 75: SSP1CON2bits.SEN = 1;
 11144  013626  80C5               	bsf	4037,0,c	;volatile
 11145                           
 11146                           ;My_I2C.c: 77: I2C_IdleCheck(0x5);
 11147  013628  0E05               	movlw	5
 11148  01362A  EC16  F09C         	call	_I2C_IdleCheck
 11149                           
 11150                           ;My_I2C.c: 78: SSP1IF = 0;
 11151  01362E  969E               	bcf	3998,3,c	;volatile
 11152                           
 11153                           ;My_I2C.c: 79: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 11154  013630  0100               	movlb	0	; () banked
 11155  013632  5163               	movf	I2C_Start@adrs& (0+255),w,b
 11156  013634  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 11157  013636  0100               	movlb	0	; () banked
 11158  013638  2562               	addwf	I2C_Start@rw& (0+255),w,b
 11159  01363A  6EC9               	movwf	4041,c	;volatile
 11160  01363C                     l626:
 11161  01363C  A69E               	btfss	3998,3,c	;volatile
 11162  01363E  D7FE               	goto	l626
 11163                           
 11164                           ;My_I2C.c: 81: return SSP1CON2bits.ACKSTAT;
 11165  013640  ACC5               	btfss	4037,6,c	;volatile
 11166  013642  D002               	goto	u7830
 11167  013644  0E01               	movlw	1
 11168  013646  0012               	return	
 11169  013648                     u7830:
 11170  013648  0E00               	movlw	0
 11171  01364A  0012               	return	
 11172  01364C                     __end_of_I2C_Start:
 11173                           	opt stack 0
 11174                           tblptru	equ	0xFF8
 11175                           tblptrh	equ	0xFF7
 11176                           tblptrl	equ	0xFF6
 11177                           tablat	equ	0xFF5
 11178                           prodh	equ	0xFF4
 11179                           prodl	equ	0xFF3
 11180                           intcon	equ	0xFF2
 11181                           intcon2	equ	0xFF1
 11182                           indf0	equ	0xFEF
 11183                           postinc0	equ	0xFEE
 11184                           fsr0h	equ	0xFEA
 11185                           fsr0l	equ	0xFE9
 11186                           wreg	equ	0xFE8
 11187                           indf1	equ	0xFE7
 11188                           postinc1	equ	0xFE6
 11189                           postdec1	equ	0xFE5
 11190                           fsr1h	equ	0xFE2
 11191                           fsr1l	equ	0xFE1
 11192                           indf2	equ	0xFDF
 11193                           postinc2	equ	0xFDE
 11194                           postdec2	equ	0xFDD
 11195                           plusw2	equ	0xFDB
 11196                           fsr2h	equ	0xFDA
 11197                           fsr2l	equ	0xFD9
 11198                           status	equ	0xFD8
 11199                           
 11200 ;; *************** function _I2C_Send *****************
 11201 ;; Defined at:
 11202 ;;		line 102 in file "../My_library/My_I2C.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;  data            1    wreg     unsigned char 
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;  data            1    2[BANK0 ] unsigned char 
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  1    wreg      unsigned char 
 11209 ;; Registers used:
 11210 ;;		wreg, status,2, status,0, cstack
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11219 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11220 ;;Total ram usage:        1 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; Hardware stack levels required when called:   12
 11223 ;; This function calls:
 11224 ;;		_I2C_IdleCheck
 11225 ;; This function is called by:
 11226 ;;		_I2C_LCD_Command
 11227 ;;		_I2C_LCD_Puts
 11228 ;;		_I2C_LCD_Putc
 11229 ;;		_I2C_LCD_CreateChar
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           
 11233                           	psect	text57
 11234  0138D0                     __ptext57:
 11235                           	opt stack 0
 11236  0138D0                     _I2C_Send:
 11237                           	opt stack 15
 11238                           
 11239                           ;incstack = 0
 11240                           ;I2C_Send@data stored from wreg
 11241  0138D0  0100               	movlb	0	; () banked
 11242  0138D2  6F62               	movwf	I2C_Send@data& (0+255),b
 11243                           
 11244                           ;My_I2C.c: 103: I2C_IdleCheck(0x5);
 11245  0138D4  0E05               	movlw	5
 11246  0138D6  EC16  F09C         	call	_I2C_IdleCheck
 11247                           
 11248                           ;My_I2C.c: 104: SSP1IF = 0;
 11249  0138DA  969E               	bcf	3998,3,c	;volatile
 11250                           
 11251                           ;My_I2C.c: 105: SSP1BUF = data;
 11252  0138DC  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 11253  0138E0                     l641:
 11254  0138E0  A69E               	btfss	3998,3,c	;volatile
 11255  0138E2  D7FE               	goto	l641
 11256                           
 11257                           ;My_I2C.c: 107: return SSP1CON2bits.ACKSTAT;
 11258                           ;	Return value of _I2C_Send is never used
 11259  0138E4  50C5               	movf	4037,w,c	;volatile
 11260  0138E6  0012               	return	
 11261  0138E8                     __end_of_I2C_Send:
 11262                           	opt stack 0
 11263                           tblptru	equ	0xFF8
 11264                           tblptrh	equ	0xFF7
 11265                           tblptrl	equ	0xFF6
 11266                           tablat	equ	0xFF5
 11267                           prodh	equ	0xFF4
 11268                           prodl	equ	0xFF3
 11269                           intcon	equ	0xFF2
 11270                           intcon2	equ	0xFF1
 11271                           indf0	equ	0xFEF
 11272                           postinc0	equ	0xFEE
 11273                           fsr0h	equ	0xFEA
 11274                           fsr0l	equ	0xFE9
 11275                           wreg	equ	0xFE8
 11276                           indf1	equ	0xFE7
 11277                           postinc1	equ	0xFE6
 11278                           postdec1	equ	0xFE5
 11279                           fsr1h	equ	0xFE2
 11280                           fsr1l	equ	0xFE1
 11281                           indf2	equ	0xFDF
 11282                           postinc2	equ	0xFDE
 11283                           postdec2	equ	0xFDD
 11284                           plusw2	equ	0xFDB
 11285                           fsr2h	equ	0xFDA
 11286                           fsr2l	equ	0xFD9
 11287                           status	equ	0xFD8
 11288                           
 11289 ;; *************** function _I2C_IdleCheck *****************
 11290 ;; Defined at:
 11291 ;;		line 58 in file "../My_library/My_I2C.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;  mask            1    wreg     unsigned char 
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;  mask            1    1[BANK0 ] unsigned char 
 11296 ;; Return value:  Size  Location     Type
 11297 ;;		None               void
 11298 ;; Registers used:
 11299 ;;		wreg, status,2, status,0
 11300 ;; Tracked objects:
 11301 ;;		On entry : 0/0
 11302 ;;		On exit  : 0/0
 11303 ;;		Unchanged: 0/0
 11304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11307 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11308 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11309 ;;Total ram usage:        2 bytes
 11310 ;; Hardware stack levels used:    1
 11311 ;; Hardware stack levels required when called:   11
 11312 ;; This function calls:
 11313 ;;		Nothing
 11314 ;; This function is called by:
 11315 ;;		_I2C_Start
 11316 ;;		_I2C_Stop
 11317 ;;		_I2C_Send
 11318 ;;		_I2C_rStart
 11319 ;;		_I2C_Receive
 11320 ;; This function uses a non-reentrant model
 11321 ;;
 11322                           
 11323                           	psect	text58
 11324  01382C                     __ptext58:
 11325                           	opt stack 0
 11326  01382C                     _I2C_IdleCheck:
 11327                           	opt stack 15
 11328                           
 11329                           ;incstack = 0
 11330                           ;I2C_IdleCheck@mask stored from wreg
 11331  01382C  0100               	movlb	0	; () banked
 11332  01382E  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 11333  013830                     l8104:
 11334  013830  50C7               	movf	4039,w,c	;volatile
 11335  013832  0100               	movlb	0	; () banked
 11336  013834  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 11337  013836  0100               	movlb	0	; () banked
 11338  013838  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 11339  01383A  50C5               	movf	4037,w,c	;volatile
 11340  01383C  0B1F               	andlw	31
 11341  01383E  0100               	movlb	0	; () banked
 11342  013840  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 11343  013842  0900               	iorlw	0
 11344  013844  B4D8               	btfsc	status,2,c
 11345  013846  0012               	return	
 11346  013848  D7F3               	goto	l8104
 11347  01384A                     __end_of_I2C_IdleCheck:
 11348                           	opt stack 0
 11349                           tblptru	equ	0xFF8
 11350                           tblptrh	equ	0xFF7
 11351                           tblptrl	equ	0xFF6
 11352                           tablat	equ	0xFF5
 11353                           prodh	equ	0xFF4
 11354                           prodl	equ	0xFF3
 11355                           intcon	equ	0xFF2
 11356                           intcon2	equ	0xFF1
 11357                           indf0	equ	0xFEF
 11358                           postinc0	equ	0xFEE
 11359                           fsr0h	equ	0xFEA
 11360                           fsr0l	equ	0xFE9
 11361                           wreg	equ	0xFE8
 11362                           indf1	equ	0xFE7
 11363                           postinc1	equ	0xFE6
 11364                           postdec1	equ	0xFE5
 11365                           fsr1h	equ	0xFE2
 11366                           fsr1l	equ	0xFE1
 11367                           indf2	equ	0xFDF
 11368                           postinc2	equ	0xFDE
 11369                           postdec2	equ	0xFDD
 11370                           plusw2	equ	0xFDB
 11371                           fsr2h	equ	0xFDA
 11372                           fsr2l	equ	0xFD9
 11373                           status	equ	0xFD8
 11374                           
 11375 ;; *************** function _ISR *****************
 11376 ;; Defined at:
 11377 ;;		line 46 in file "main.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;		None
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;		None
 11382 ;; Return value:  Size  Location     Type
 11383 ;;		None               void
 11384 ;; Registers used:
 11385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11393 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11394 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11395 ;;Total ram usage:       15 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; Hardware stack levels required when called:   10
 11398 ;; This function calls:
 11399 ;;		_UART_ISR
 11400 ;;		_USB_ISR
 11401 ;; This function is called by:
 11402 ;;		Interrupt level 2
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           	psect	intcode
 11407  001008                     __pintcode:
 11408                           	opt stack 0
 11409  001008                     _ISR:
 11410                           	opt stack 14
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;incstack = 0
 11414  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11415  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 11416  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 11417  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 11418  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 11419  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 11420  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 11421  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 11422  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 11423  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 11424  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 11425  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 11426  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 11427  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 11428  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 11429                           
 11430                           ;main.c: 47: USB_ISR();
 11431  001042  EC89  F09C         	call	_USB_ISR	;wreg free
 11432                           
 11433                           ;main.c: 48: UART_ISR();
 11434  001046  ECCB  F099         	call	_UART_ISR	;wreg free
 11435                           
 11436                           ;main.c: 49: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 11437  00104A  B4F2               	btfsc	intcon,2,c	;volatile
 11438  00104C  AAF2               	btfss	intcon,5,c	;volatile
 11439  00104E  D001               	goto	i2l1461
 11440                           
 11441                           ;main.c: 50: INTCONbits.T0IF = 0;
 11442  001050  94F2               	bcf	intcon,2,c	;volatile
 11443  001052                     i2l1461:
 11444                           
 11445                           ;main.c: 51: }
 11446                           ;main.c: 52: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 11447  001052  B09E               	btfsc	3998,0,c	;volatile
 11448  001054  A09D               	btfss	3997,0,c	;volatile
 11449  001056  D00E               	goto	i2l8012
 11450                           
 11451                           ;main.c: 53: PIR1bits.TMR1IF = 0;
 11452  001058  909E               	bcf	3998,0,c	;volatile
 11453                           
 11454                           ;main.c: 54: TMR1H = 0xC0;
 11455  00105A  0EC0               	movlw	192
 11456  00105C  6ECF               	movwf	4047,c	;volatile
 11457                           
 11458                           ;main.c: 55: LATAbits.LATA0 = !LATAbits.LATA0;
 11459  00105E  B089               	btfsc	3977,0,c	;volatile
 11460  001060  D003               	goto	i2u750_40
 11461  001062  6A4C               	clrf	??_ISR& (0+255),c
 11462  001064  2A4C               	incf	??_ISR& (0+255),f,c
 11463  001066  D001               	goto	i2u751_48
 11464  001068                     i2u750_40:
 11465  001068  6A4C               	clrf	??_ISR& (0+255),c
 11466  00106A                     i2u751_48:
 11467  00106A  5089               	movf	3977,w,c	;volatile
 11468  00106C  184C               	xorwf	??_ISR,w,c
 11469  00106E  0BFE               	andlw	-2
 11470  001070  184C               	xorwf	??_ISR,w,c
 11471  001072  6E89               	movwf	3977,c	;volatile
 11472  001074                     i2l8012:
 11473                           
 11474                           ;main.c: 56: }
 11475                           ;main.c: 57: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 11476  001074  B2A1               	btfsc	4001,1,c	;volatile
 11477  001076  A2A0               	btfss	4000,1,c	;volatile
 11478  001078  D001               	goto	i2l1464
 11479                           
 11480                           ;main.c: 58: PIR2bits.TMR3IF = 0;
 11481  00107A  92A1               	bcf	4001,1,c	;volatile
 11482  00107C                     i2l1464:
 11483  00107C  C05A  FFF5         	movff	??_ISR+14,tablat
 11484  001080  C059  FFF8         	movff	??_ISR+13,tblptru
 11485  001084  C058  FFF7         	movff	??_ISR+12,tblptrh
 11486  001088  C057  FFF6         	movff	??_ISR+11,tblptrl
 11487  00108C  C056  FFF4         	movff	??_ISR+10,prodh
 11488  001090  C055  FFF3         	movff	??_ISR+9,prodl
 11489  001094  C054  FFDA         	movff	??_ISR+8,fsr2h
 11490  001098  C053  FFD9         	movff	??_ISR+7,fsr2l
 11491  00109C  C052  FFE2         	movff	??_ISR+6,fsr1h
 11492  0010A0  C051  FFE1         	movff	??_ISR+5,fsr1l
 11493  0010A4  C050  FFEA         	movff	??_ISR+4,fsr0h
 11494  0010A8  C04F  FFE9         	movff	??_ISR+3,fsr0l
 11495  0010AC  C04E  FFFB         	movff	??_ISR+2,pclatu
 11496  0010B0  C04D  FFFA         	movff	??_ISR+1,pclath
 11497  0010B4  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11498  0010B6  0011               	retfie		f
 11499  0010B8                     __end_of_ISR:
 11500                           	opt stack 0
 11501                           pclatu	equ	0xFFB
 11502                           pclath	equ	0xFFA
 11503                           tblptru	equ	0xFF8
 11504                           tblptrh	equ	0xFF7
 11505                           tblptrl	equ	0xFF6
 11506                           tablat	equ	0xFF5
 11507                           prodh	equ	0xFF4
 11508                           prodl	equ	0xFF3
 11509                           intcon	equ	0xFF2
 11510                           intcon2	equ	0xFF1
 11511                           indf0	equ	0xFEF
 11512                           postinc0	equ	0xFEE
 11513                           fsr0h	equ	0xFEA
 11514                           fsr0l	equ	0xFE9
 11515                           wreg	equ	0xFE8
 11516                           indf1	equ	0xFE7
 11517                           postinc1	equ	0xFE6
 11518                           postdec1	equ	0xFE5
 11519                           fsr1h	equ	0xFE2
 11520                           fsr1l	equ	0xFE1
 11521                           indf2	equ	0xFDF
 11522                           postinc2	equ	0xFDE
 11523                           postdec2	equ	0xFDD
 11524                           plusw2	equ	0xFDB
 11525                           fsr2h	equ	0xFDA
 11526                           fsr2l	equ	0xFD9
 11527                           status	equ	0xFD8
 11528                           
 11529 ;; *************** function _USB_ISR *****************
 11530 ;; Defined at:
 11531 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;		None
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;		None
 11536 ;; Return value:  Size  Location     Type
 11537 ;;		None               void
 11538 ;; Registers used:
 11539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/0
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11549 ;;Total ram usage:        0 bytes
 11550 ;; Hardware stack levels used:    1
 11551 ;; Hardware stack levels required when called:    9
 11552 ;; This function calls:
 11553 ;;		_USBDeviceTasks
 11554 ;; This function is called by:
 11555 ;;		_ISR
 11556 ;; This function uses a non-reentrant model
 11557 ;;
 11558                           
 11559                           	psect	text60
 11560  013912                     __ptext60:
 11561                           	opt stack 0
 11562  013912                     _USB_ISR:
 11563                           	opt stack 14
 11564                           
 11565                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 11566                           
 11567                           ;incstack = 0
 11568  013912  EC1A  F089         	call	_USBDeviceTasks	;wreg free
 11569  013916  0012               	return		;funcret
 11570  013918                     __end_of_USB_ISR:
 11571                           	opt stack 0
 11572                           pclatu	equ	0xFFB
 11573                           pclath	equ	0xFFA
 11574                           tblptru	equ	0xFF8
 11575                           tblptrh	equ	0xFF7
 11576                           tblptrl	equ	0xFF6
 11577                           tablat	equ	0xFF5
 11578                           prodh	equ	0xFF4
 11579                           prodl	equ	0xFF3
 11580                           intcon	equ	0xFF2
 11581                           intcon2	equ	0xFF1
 11582                           indf0	equ	0xFEF
 11583                           postinc0	equ	0xFEE
 11584                           fsr0h	equ	0xFEA
 11585                           fsr0l	equ	0xFE9
 11586                           wreg	equ	0xFE8
 11587                           indf1	equ	0xFE7
 11588                           postinc1	equ	0xFE6
 11589                           postdec1	equ	0xFE5
 11590                           fsr1h	equ	0xFE2
 11591                           fsr1l	equ	0xFE1
 11592                           indf2	equ	0xFDF
 11593                           postinc2	equ	0xFDE
 11594                           postdec2	equ	0xFDD
 11595                           plusw2	equ	0xFDB
 11596                           fsr2h	equ	0xFDA
 11597                           fsr2l	equ	0xFD9
 11598                           status	equ	0xFD8
 11599                           
 11600 ;; *************** function _USBDeviceTasks *****************
 11601 ;; Defined at:
 11602 ;;		line 489 in file "../My_library/usb/usb_device.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;		None
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;  i               1   29[COMRAM] unsigned char 
 11607 ;; Return value:  Size  Location     Type
 11608 ;;		None               void
 11609 ;; Registers used:
 11610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11620 ;;Total ram usage:        1 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; Hardware stack levels required when called:    8
 11623 ;; This function calls:
 11624 ;;		_USBCtrlEPAllowStatusStage
 11625 ;;		_USBCtrlEPService
 11626 ;;		_USBStallHandler
 11627 ;;		_USBSuspend
 11628 ;;		_USBWakeFromSuspend
 11629 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11630 ;;		i2_USBDeviceInit
 11631 ;; This function is called by:
 11632 ;;		_USB_ISR
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           	psect	text61
 11637  011234                     __ptext61:
 11638                           	opt stack 0
 11639  011234                     _USBDeviceTasks:
 11640                           	opt stack 14
 11641                           
 11642                           ;usb_device.c: 491: uint8_t i;
 11643                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 11644                           
 11645                           ;incstack = 0
 11646  011234  0424               	decf	_USBDeviceState,w,c	;volatile
 11647  011236  B4D8               	btfsc	status,2,c
 11648                           
 11649                           ;usb_device.c: 603: {
 11650                           ;usb_device.c: 613: if(!UCONbits.SE0)
 11651  011238  BA65               	btfsc	3941,5,c	;volatile
 11652  01123A  D008               	goto	i2l6822
 11653                           
 11654                           ;usb_device.c: 614: {
 11655                           ;usb_device.c: 615: {UIR = 0;};
 11656  01123C  0E00               	movlw	0
 11657  01123E  6E62               	movwf	3938,c	;volatile
 11658                           
 11659                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 11660  011240  010F               	movlb	15	; () banked
 11661  011242  8136               	bsf	54,0,b	;volatile
 11662                           
 11663                           ; BSR set to: 15
 11664                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 11665  011244  010F               	movlb	15	; () banked
 11666  011246  8936               	bsf	54,4,b	;volatile
 11667                           
 11668                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 11669  011248  0E02               	movlw	2
 11670  01124A  6E24               	movwf	_USBDeviceState,c	;volatile
 11671  01124C                     i2l6822:
 11672                           
 11673                           ;usb_device.c: 622: }
 11674                           ;usb_device.c: 623: }
 11675                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 11676  01124C  A462               	btfss	3938,2,c	;volatile
 11677  01124E  D006               	goto	i2l6830
 11678  011250  010F               	movlb	15	; () banked
 11679  011252  A536               	btfss	54,2,b	;volatile
 11680  011254  D003               	goto	i2l6830
 11681                           
 11682                           ; BSR set to: 15
 11683                           ;usb_device.c: 640: {
 11684                           ;usb_device.c: 641: (UIR &= 0xFB);
 11685  011256  9462               	bcf	3938,2,c	;volatile
 11686                           
 11687                           ; BSR set to: 15
 11688                           ;usb_device.c: 645: USBWakeFromSuspend();
 11689  011258  ECF5  F09A         	call	_USBWakeFromSuspend	;wreg free
 11690  01125C                     i2l6830:
 11691                           
 11692                           ;usb_device.c: 647: }
 11693                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 11694  01125C  A265               	btfss	3941,1,c	;volatile
 11695  01125E  D002               	goto	i2l158
 11696                           
 11697                           ;usb_device.c: 653: {
 11698                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 11699  011260  98A1               	bcf	4001,4,c	;volatile
 11700                           
 11701                           ;usb_device.c: 655: return;
 11702  011262  0012               	return	
 11703  011264                     i2l158:
 11704                           
 11705                           ;usb_device.c: 656: }
 11706                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11707  011264  A062               	btfss	3938,0,c	;volatile
 11708  011266  D009               	goto	i2l6844
 11709  011268  010F               	movlb	15	; () banked
 11710  01126A  A136               	btfss	54,0,b	;volatile
 11711  01126C  D006               	goto	i2l6844
 11712                           
 11713                           ; BSR set to: 15
 11714                           ;usb_device.c: 669: {
 11715                           ;usb_device.c: 670: USBDeviceInit();
 11716  01126E  ECBF  F089         	call	i2_USBDeviceInit	;wreg free
 11717                           
 11718                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 11719  011272  88A0               	bsf	4000,4,c	;volatile
 11720                           
 11721                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 11722  011274  0E04               	movlw	4
 11723  011276  6E24               	movwf	_USBDeviceState,c	;volatile
 11724                           
 11725                           ;usb_device.c: 686: (UIR &= 0xFE);
 11726  011278  9062               	bcf	3938,0,c	;volatile
 11727  01127A                     i2l6844:
 11728                           
 11729                           ;usb_device.c: 687: }
 11730                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11731  01127A  A862               	btfss	3938,4,c	;volatile
 11732  01127C  D006               	goto	i2l6852
 11733  01127E  010F               	movlb	15	; () banked
 11734  011280  A936               	btfss	54,4,b	;volatile
 11735  011282  D003               	goto	i2l6852
 11736                           
 11737                           ; BSR set to: 15
 11738                           ;usb_device.c: 693: {
 11739                           ;usb_device.c: 698: USBSuspend();
 11740  011284  EC7F  F09B         	call	_USBSuspend	;wreg free
 11741                           
 11742                           ;usb_device.c: 701: (UIR &= 0xEF);
 11743  011288  9862               	bcf	3938,4,c	;volatile
 11744  01128A                     i2l6852:
 11745                           
 11746                           ;usb_device.c: 702: }
 11747                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 11748  01128A  AC62               	btfss	3938,6,c	;volatile
 11749  01128C  D019               	goto	i2l6868
 11750                           
 11751                           ;usb_device.c: 705: {
 11752                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 11753  01128E  010F               	movlb	15	; () banked
 11754  011290  AD36               	btfss	54,6,b	;volatile
 11755  011292  D00E               	goto	i2l6858
 11756                           
 11757                           ; BSR set to: 15
 11758                           ;usb_device.c: 707: {
 11759                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11760  011294  0E00               	movlw	0
 11761  011296  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11762  011298  0E73               	movlw	115
 11763  01129A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11764  01129C  0E00               	movlw	0
 11765  01129E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11766  0112A0  0E00               	movlw	0
 11767  0112A2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11768  0112A4  0E00               	movlw	0
 11769  0112A6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11770  0112A8  0E01               	movlw	1
 11771  0112AA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11772  0112AC  EC26  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11773  0112B0                     i2l6858:
 11774                           
 11775                           ;usb_device.c: 709: }
 11776                           ;usb_device.c: 710: (UIR &= 0xBF);
 11777  0112B0  9C62               	bcf	3938,6,c	;volatile
 11778                           
 11779                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 11780  0112B2  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 11781  0112B4  A4D8               	btfss	status,2,c
 11782                           
 11783                           ;usb_device.c: 736: {
 11784                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11785  0112B6  0627               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 11786                           
 11787                           ;usb_device.c: 738: }
 11788                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11789  0112B8  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 11790  0112BA  B4D8               	btfsc	status,2,c
 11791                           
 11792                           ;usb_device.c: 745: {
 11793                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11794  0112BC  EC79  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11795  0112C0                     i2l6868:
 11796                           
 11797                           ;usb_device.c: 747: }
 11798                           ;usb_device.c: 749: }
 11799                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 11800  0112C0  AA62               	btfss	3938,5,c	;volatile
 11801  0112C2  D004               	goto	i2l6874
 11802  0112C4  010F               	movlb	15	; () banked
 11803  0112C6  BB36               	btfsc	54,5,b	;volatile
 11804                           
 11805                           ; BSR set to: 15
 11806                           ;usb_device.c: 752: {
 11807                           ;usb_device.c: 753: USBStallHandler();
 11808  0112C8  ECF0  F099         	call	_USBStallHandler	;wreg free
 11809  0112CC                     i2l6874:
 11810                           
 11811                           ;usb_device.c: 754: }
 11812                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11813  0112CC  A262               	btfss	3938,1,c	;volatile
 11814  0112CE  D012               	goto	i2l6882
 11815  0112D0  010F               	movlb	15	; () banked
 11816  0112D2  A336               	btfss	54,1,b	;volatile
 11817  0112D4  D00F               	goto	i2l6882
 11818                           
 11819                           ; BSR set to: 15
 11820                           ;usb_device.c: 757: {
 11821                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 11822  0112D6  0E7F               	movlw	127
 11823  0112D8  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11824  0112DA  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11825  0112DC  0E00               	movlw	0
 11826  0112DE  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11827  0112E0  0E00               	movlw	0
 11828  0112E2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11829  0112E4  0E00               	movlw	0
 11830  0112E6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11831  0112E8  0E01               	movlw	1
 11832  0112EA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11833  0112EC  EC26  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11834                           
 11835                           ;usb_device.c: 759: {UEIR = 0;};
 11836  0112F0  0E00               	movlw	0
 11837  0112F2  6E63               	movwf	3939,c	;volatile
 11838  0112F4                     i2l6882:
 11839                           
 11840                           ;usb_device.c: 767: }
 11841                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11842  0112F4  0E04               	movlw	4
 11843  0112F6  6024               	cpfslt	_USBDeviceState,c	;volatile
 11844  0112F8  D002               	goto	i2l168
 11845                           
 11846                           ;usb_device.c: 775: {
 11847                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11848  0112FA  98A1               	bcf	4001,4,c	;volatile
 11849                           
 11850                           ;usb_device.c: 777: return;
 11851  0112FC  0012               	return	
 11852  0112FE                     i2l168:
 11853                           
 11854                           ;usb_device.c: 778: }
 11855                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 11856  0112FE  010F               	movlb	15	; () banked
 11857  011300  A736               	btfss	54,3,b	;volatile
 11858  011302  D03B               	goto	i2l169
 11859                           
 11860                           ; BSR set to: 15
 11861                           ;usb_device.c: 784: {
 11862                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11863  011304  0E00               	movlw	0
 11864  011306  6E4B               	movwf	USBDeviceTasks@i,c
 11865  011308                     i2l6888:
 11866                           
 11867                           ; BSR set to: 15
 11868  011308  0E03               	movlw	3
 11869  01130A  644B               	cpfsgt	USBDeviceTasks@i,c
 11870  01130C  D001               	goto	i2l170
 11871  01130E  D035               	goto	i2l169
 11872  011310                     i2l170:
 11873                           
 11874                           ;usb_device.c: 786: {
 11875                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 11876  011310  A662               	btfss	3938,3,c	;volatile
 11877  011312  D033               	goto	i2l169
 11878                           
 11879                           ;usb_device.c: 788: {
 11880                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 11881  011314  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 11882                           
 11883                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11884  011318  302D               	rrcf	_USTATcopy,w,c	;volatile
 11885  01131A  32E8               	rrcf	wreg,f,c
 11886  01131C  32E8               	rrcf	wreg,f,c
 11887  01131E  0B0F               	andlw	15
 11888  011320  6E2A               	movwf	_endpoint_number,c	;volatile
 11889                           
 11890                           ;usb_device.c: 793: (UIR &= 0xF7);
 11891  011322  9662               	bcf	3938,3,c	;volatile
 11892                           
 11893                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11894  011324  B42D               	btfsc	_USTATcopy,2,c	;volatile
 11895  011326  D00A               	goto	i2l6902
 11896                           
 11897                           ;usb_device.c: 799: {
 11898                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 11899  011328  502A               	movf	_endpoint_number,w,c	;volatile
 11900  01132A  0D01               	mullw	1
 11901  01132C  0EA4               	movlw	low _ep_data_out
 11902  01132E  24F3               	addwf	prodl,w,c
 11903  011330  6ED9               	movwf	fsr2l,c
 11904  011332  0E00               	movlw	high _ep_data_out
 11905  011334  20F4               	addwfc	prodh,w,c
 11906  011336  6EDA               	movwf	fsr2h,c
 11907  011338  0100               	movlb	0	; () banked
 11908  01133A  D008               	goto	L4
 11909  01133C                     i2l6902:
 11910                           
 11911                           ;usb_device.c: 802: else
 11912                           ;usb_device.c: 803: {
 11913                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 11914  01133C  502A               	movf	_endpoint_number,w,c	;volatile
 11915  01133E  0D01               	mullw	1
 11916  011340  0E16               	movlw	low _ep_data_in
 11917  011342  24F3               	addwf	prodl,w,c
 11918  011344  6ED9               	movwf	fsr2l,c
 11919  011346  0E00               	movlw	high _ep_data_in
 11920  011348  20F4               	addwfc	prodh,w,c
 11921  01134A  6EDA               	movwf	fsr2h,c
 11922  01134C                     L4:
 11923  01134C  70DF               	btg	indf2,0,c
 11924                           
 11925                           ;usb_device.c: 805: }
 11926                           ;usb_device.c: 810: if(endpoint_number == 0)
 11927  01134E  502A               	movf	_endpoint_number,w,c	;volatile
 11928  011350  A4D8               	btfss	status,2,c
 11929  011352  D003               	goto	i2l6908
 11930                           
 11931                           ;usb_device.c: 811: {
 11932                           ;usb_device.c: 812: USBCtrlEPService();
 11933  011354  ECAC  F090         	call	_USBCtrlEPService	;wreg free
 11934                           
 11935                           ;usb_device.c: 813: }
 11936  011358  D00E               	goto	i2l6910
 11937  01135A                     i2l6908:
 11938                           
 11939                           ;usb_device.c: 814: else
 11940                           ;usb_device.c: 815: {
 11941                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 11942  01135A  0E00               	movlw	0
 11943  01135C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11944  01135E  0E72               	movlw	114
 11945  011360  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11946  011362  0E2D               	movlw	low _USTATcopy
 11947  011364  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11948  011366  0E00               	movlw	high _USTATcopy
 11949  011368  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11950  01136A  0E00               	movlw	0
 11951  01136C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11952  01136E  0E00               	movlw	0
 11953  011370  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11954  011372  EC26  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11955  011376                     i2l6910:
 11956  011376  2A4B               	incf	USBDeviceTasks@i,f,c
 11957  011378  D7C7               	goto	i2l6888
 11958  01137A                     i2l169:
 11959                           
 11960                           ;usb_device.c: 822: }
 11961                           ;usb_device.c: 823: }
 11962                           ;usb_device.c: 824: }
 11963                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 11964  01137A  98A1               	bcf	4001,4,c	;volatile
 11965  01137C  0012               	return		;funcret
 11966  01137E                     __end_of_USBDeviceTasks:
 11967                           	opt stack 0
 11968                           pclatu	equ	0xFFB
 11969                           pclath	equ	0xFFA
 11970                           tblptru	equ	0xFF8
 11971                           tblptrh	equ	0xFF7
 11972                           tblptrl	equ	0xFF6
 11973                           tablat	equ	0xFF5
 11974                           prodh	equ	0xFF4
 11975                           prodl	equ	0xFF3
 11976                           intcon	equ	0xFF2
 11977                           intcon2	equ	0xFF1
 11978                           indf0	equ	0xFEF
 11979                           postinc0	equ	0xFEE
 11980                           fsr0h	equ	0xFEA
 11981                           fsr0l	equ	0xFE9
 11982                           wreg	equ	0xFE8
 11983                           indf1	equ	0xFE7
 11984                           postinc1	equ	0xFE6
 11985                           postdec1	equ	0xFE5
 11986                           fsr1h	equ	0xFE2
 11987                           fsr1l	equ	0xFE1
 11988                           indf2	equ	0xFDF
 11989                           postinc2	equ	0xFDE
 11990                           postdec2	equ	0xFDD
 11991                           plusw2	equ	0xFDB
 11992                           fsr2h	equ	0xFDA
 11993                           fsr2l	equ	0xFD9
 11994                           status	equ	0xFD8
 11995                           
 11996 ;; *************** function i2_USBDeviceInit *****************
 11997 ;; Defined at:
 11998 ;;		line 298 in file "../My_library/usb/usb_device.c"
 11999 ;; Parameters:    Size  Location     Type
 12000 ;;		None
 12001 ;; Auto vars:     Size  Location     Type
 12002 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 12003 ;; Return value:  Size  Location     Type
 12004 ;;		None               void
 12005 ;; Registers used:
 12006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12007 ;; Tracked objects:
 12008 ;;		On entry : 0/0
 12009 ;;		On exit  : 0/0
 12010 ;;		Unchanged: 0/0
 12011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12015 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12016 ;;Total ram usage:        1 bytes
 12017 ;; Hardware stack levels used:    1
 12018 ;; Hardware stack levels required when called:    1
 12019 ;; This function calls:
 12020 ;;		i2_memset
 12021 ;; This function is called by:
 12022 ;;		_USBDeviceTasks
 12023 ;; This function uses a non-reentrant model
 12024 ;;
 12025                           
 12026                           	psect	text62
 12027  01137E                     __ptext62:
 12028                           	opt stack 0
 12029  01137E                     i2_USBDeviceInit:
 12030                           	opt stack 20
 12031                           
 12032                           ;usb_device.c: 300: uint8_t i;
 12033                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 12034                           
 12035                           ;incstack = 0
 12036  01137E  98A0               	bcf	4000,4,c	;volatile
 12037                           
 12038                           ;usb_device.c: 305: {UEIR = 0;};
 12039  011380  0E00               	movlw	0
 12040  011382  6E63               	movwf	3939,c	;volatile
 12041                           
 12042                           ;usb_device.c: 308: {UIR = 0;};
 12043  011384  0E00               	movlw	0
 12044  011386  6E62               	movwf	3938,c	;volatile
 12045                           
 12046                           ;usb_device.c: 311: UEP0 = 0;
 12047  011388  0E00               	movlw	0
 12048  01138A  010F               	movlb	15	; () banked
 12049  01138C  6F26               	movwf	38,b	;volatile
 12050                           
 12051                           ; BSR set to: 15
 12052                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 12053  01138E  0E27               	movlw	39
 12054  011390  6E2E               	movwf	i2memset@p1,c
 12055  011392  0E0F               	movlw	15
 12056  011394  6E2F               	movwf	i2memset@p1+1,c
 12057  011396  0E00               	movlw	0
 12058  011398  6E31               	movwf	i2memset@c+1,c
 12059  01139A  0E00               	movlw	0
 12060  01139C  6E30               	movwf	i2memset@c,c
 12061  01139E  0E00               	movlw	0
 12062  0113A0  6E33               	movwf	i2memset@n+1,c
 12063  0113A2  0E02               	movlw	2
 12064  0113A4  6E32               	movwf	i2memset@n,c
 12065  0113A6  EC95  F09B         	call	i2_memset	;wreg free
 12066                           
 12067                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12068  0113AA  0E16               	movlw	22
 12069  0113AC  010F               	movlb	15	; () banked
 12070  0113AE  6F39               	movwf	57,b	;volatile
 12071                           
 12072                           ; BSR set to: 15
 12073  0113B0  0E9F               	movlw	159
 12074  0113B2  010F               	movlb	15	; () banked
 12075  0113B4  6F37               	movwf	55,b	;volatile
 12076                           
 12077                           ; BSR set to: 15
 12078  0113B6  0E7B               	movlw	123
 12079  0113B8  010F               	movlb	15	; () banked
 12080  0113BA  6F36               	movwf	54,b	;volatile
 12081                           
 12082                           ; BSR set to: 15
 12083                           ;usb_device.c: 318: ;
 12084                           ;usb_device.c: 321: ;
 12085                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 12086  0113BC  0E00               	movlw	0
 12087  0113BE  6E36               	movwf	i2USBDeviceInit@i,c
 12088  0113C0                     i2l6746:
 12089                           
 12090                           ; BSR set to: 15
 12091  0113C0  0E0B               	movlw	11
 12092  0113C2  6436               	cpfsgt	i2USBDeviceInit@i,c
 12093  0113C4  D001               	goto	i2l6750
 12094  0113C6  D00E               	goto	i2l146
 12095  0113C8                     i2l6750:
 12096                           
 12097                           ;usb_device.c: 325: {
 12098                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 12099  0113C8  5036               	movf	i2USBDeviceInit@i,w,c
 12100  0113CA  0D04               	mullw	4
 12101  0113CC  0E00               	movlw	0
 12102  0113CE  24F3               	addwf	prodl,w,c
 12103  0113D0  6ED9               	movwf	fsr2l,c
 12104  0113D2  0E0D               	movlw	13
 12105  0113D4  20F4               	addwfc	prodh,w,c
 12106  0113D6  6EDA               	movwf	fsr2h,c
 12107  0113D8  6ADE               	clrf	postinc2,c
 12108  0113DA  6ADE               	clrf	postinc2,c
 12109  0113DC  6ADE               	clrf	postinc2,c
 12110  0113DE  6ADD               	clrf	postdec2,c
 12111  0113E0  2A36               	incf	i2USBDeviceInit@i,f,c
 12112  0113E2  D7EE               	goto	i2l6746
 12113  0113E4                     i2l146:
 12114                           
 12115                           ;usb_device.c: 327: }
 12116                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 12117  0113E4  8C65               	bsf	3941,6,c	;volatile
 12118                           
 12119                           ;usb_device.c: 333: UADDR = 0x00;
 12120  0113E6  0E00               	movlw	0
 12121  0113E8  010F               	movlb	15	; () banked
 12122  0113EA  6F38               	movwf	56,b	;volatile
 12123                           
 12124                           ; BSR set to: 15
 12125                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 12126  0113EC  9865               	bcf	3941,4,c	;volatile
 12127                           
 12128                           ; BSR set to: 15
 12129                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 12130  0113EE  9C65               	bcf	3941,6,c	;volatile
 12131                           
 12132                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 12133  0113F0  D009               	goto	i2l6770
 12134  0113F2                     i2l6762:
 12135                           
 12136                           ;usb_device.c: 343: {
 12137                           ;usb_device.c: 344: (UIR &= 0xF7);
 12138  0113F2  9662               	bcf	3938,3,c	;volatile
 12139                           
 12140                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 12141  0113F4  0E00               	movlw	0
 12142  0113F6  6E0D               	movwf	_inPipes+3,c	;volatile
 12143                           
 12144                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 12145  0113F8  0E00               	movlw	0
 12146  0113FA  6E04               	movwf	_outPipes+3,c	;volatile
 12147                           
 12148                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 12149  0113FC  0E00               	movlw	0
 12150  0113FE  6E06               	movwf	_outPipes+5,c	;volatile
 12151  011400  0E00               	movlw	0
 12152  011402  6E05               	movwf	_outPipes+4,c	;volatile
 12153  011404                     i2l6770:
 12154  011404  B662               	btfsc	3938,3,c	;volatile
 12155  011406  D7F5               	goto	i2l6762
 12156                           
 12157                           ;usb_device.c: 349: }
 12158                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 12159  011408  0E01               	movlw	1
 12160  01140A  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12161                           
 12162                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 12163  01140C  0E01               	movlw	1
 12164  01140E  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12165                           
 12166                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 12167  011410  0E00               	movlw	0
 12168  011412  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12169                           
 12170                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 12171  011414  0E00               	movlw	0
 12172  011416  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12173                           
 12174                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 12175  011418  0E00               	movlw	0
 12176  01141A  0100               	movlb	0	; () banked
 12177  01141C  6FBC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12178                           
 12179                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 12180  01141E  0E00               	movlw	0
 12181  011420  6E36               	movwf	i2USBDeviceInit@i,c
 12182  011422                     i2l6774:
 12183                           
 12184                           ; BSR set to: 0
 12185  011422  0E02               	movlw	2
 12186  011424  6436               	cpfsgt	i2USBDeviceInit@i,c
 12187  011426  D001               	goto	i2l6778
 12188  011428  D02E               	goto	i2l6784
 12189  01142A                     i2l6778:
 12190                           
 12191                           ;usb_device.c: 363: {
 12192                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 12193  01142A  5036               	movf	i2USBDeviceInit@i,w,c
 12194  01142C  0D02               	mullw	2
 12195  01142E  0E10               	movlw	low _pBDTEntryIn
 12196  011430  24F3               	addwf	prodl,w,c
 12197  011432  6ED9               	movwf	fsr2l,c
 12198  011434  0E00               	movlw	high _pBDTEntryIn
 12199  011436  20F4               	addwfc	prodh,w,c
 12200  011438  6EDA               	movwf	fsr2h,c
 12201  01143A  0E00               	movlw	0
 12202  01143C  6EDE               	movwf	postinc2,c
 12203  01143E  0E00               	movlw	0
 12204  011440  6EDD               	movwf	postdec2,c
 12205                           
 12206                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 12207  011442  5036               	movf	i2USBDeviceInit@i,w,c
 12208  011444  0D02               	mullw	2
 12209  011446  0E9E               	movlw	low _pBDTEntryOut
 12210  011448  24F3               	addwf	prodl,w,c
 12211  01144A  6ED9               	movwf	fsr2l,c
 12212  01144C  0E00               	movlw	high _pBDTEntryOut
 12213  01144E  20F4               	addwfc	prodh,w,c
 12214  011450  6EDA               	movwf	fsr2h,c
 12215  011452  0E00               	movlw	0
 12216  011454  6EDE               	movwf	postinc2,c
 12217  011456  0E00               	movlw	0
 12218  011458  6EDD               	movwf	postdec2,c
 12219                           
 12220                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 12221  01145A  5036               	movf	i2USBDeviceInit@i,w,c
 12222  01145C  0D01               	mullw	1
 12223  01145E  0E16               	movlw	low _ep_data_in
 12224  011460  24F3               	addwf	prodl,w,c
 12225  011462  6ED9               	movwf	fsr2l,c
 12226  011464  0E00               	movlw	high _ep_data_in
 12227  011466  20F4               	addwfc	prodh,w,c
 12228  011468  6EDA               	movwf	fsr2h,c
 12229  01146A  0E00               	movlw	0
 12230  01146C  6EDF               	movwf	indf2,c
 12231                           
 12232                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 12233  01146E  5036               	movf	i2USBDeviceInit@i,w,c
 12234  011470  0D01               	mullw	1
 12235  011472  0EA4               	movlw	low _ep_data_out
 12236  011474  24F3               	addwf	prodl,w,c
 12237  011476  6ED9               	movwf	fsr2l,c
 12238  011478  0E00               	movlw	high _ep_data_out
 12239  01147A  20F4               	addwfc	prodh,w,c
 12240  01147C  6EDA               	movwf	fsr2h,c
 12241  01147E  0E00               	movlw	0
 12242  011480  6EDF               	movwf	indf2,c
 12243  011482  2A36               	incf	i2USBDeviceInit@i,f,c
 12244  011484  D7CE               	goto	i2l6774
 12245  011486                     i2l6784:
 12246                           
 12247                           ;usb_device.c: 368: }
 12248                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12249  011486  0E08               	movlw	8
 12250  011488  6E10               	movwf	_pBDTEntryIn,c
 12251  01148A  0E0D               	movlw	13
 12252  01148C  6E11               	movwf	_pBDTEntryIn+1,c
 12253                           
 12254                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 12255  01148E  0E16               	movlw	22
 12256  011490  010F               	movlb	15	; () banked
 12257  011492  6F26               	movwf	38,b	;volatile
 12258                           
 12259                           ; BSR set to: 15
 12260                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12261  011494  0E0D               	movlw	13
 12262  011496  010D               	movlb	13	; () banked
 12263  011498  6F03               	movwf	3,b	;volatile
 12264  01149A  0E30               	movlw	48
 12265  01149C  6F02               	movwf	2,b	;volatile
 12266                           
 12267                           ; BSR set to: 13
 12268                           ;usb_device.c: 376: BDT[0].CNT = 8;
 12269  01149E  0E08               	movlw	8
 12270  0114A0  010D               	movlb	13	; () banked
 12271  0114A2  6F01               	movwf	1,b	;volatile
 12272                           
 12273                           ; BSR set to: 13
 12274                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 12275  0114A4  0E04               	movlw	4
 12276  0114A6  010D               	movlb	13	; () banked
 12277  0114A8  6F00               	movwf	0,b	;volatile
 12278                           
 12279                           ; BSR set to: 13
 12280                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 12281  0114AA  010D               	movlb	13	; () banked
 12282  0114AC  8F00               	bsf	0,7,b	;volatile
 12283                           
 12284                           ; BSR set to: 13
 12285                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 12286  0114AE  0E00               	movlw	0
 12287  0114B0  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 12288                           
 12289                           ; BSR set to: 13
 12290                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 12291  0114B2  0E00               	movlw	0
 12292  0114B4  6E24               	movwf	_USBDeviceState,c	;volatile
 12293                           
 12294                           ; BSR set to: 13
 12295  0114B6  0012               	return		;funcret
 12296  0114B8                     __end_ofi2_USBDeviceInit:
 12297                           	opt stack 0
 12298                           pclatu	equ	0xFFB
 12299                           pclath	equ	0xFFA
 12300                           tblptru	equ	0xFF8
 12301                           tblptrh	equ	0xFF7
 12302                           tblptrl	equ	0xFF6
 12303                           tablat	equ	0xFF5
 12304                           prodh	equ	0xFF4
 12305                           prodl	equ	0xFF3
 12306                           intcon	equ	0xFF2
 12307                           intcon2	equ	0xFF1
 12308                           indf0	equ	0xFEF
 12309                           postinc0	equ	0xFEE
 12310                           fsr0h	equ	0xFEA
 12311                           fsr0l	equ	0xFE9
 12312                           wreg	equ	0xFE8
 12313                           indf1	equ	0xFE7
 12314                           postinc1	equ	0xFE6
 12315                           postdec1	equ	0xFE5
 12316                           fsr1h	equ	0xFE2
 12317                           fsr1l	equ	0xFE1
 12318                           indf2	equ	0xFDF
 12319                           postinc2	equ	0xFDE
 12320                           postdec2	equ	0xFDD
 12321                           plusw2	equ	0xFDB
 12322                           fsr2h	equ	0xFDA
 12323                           fsr2l	equ	0xFD9
 12324                           status	equ	0xFD8
 12325                           
 12326 ;; *************** function _USBWakeFromSuspend *****************
 12327 ;; Defined at:
 12328 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 12329 ;; Parameters:    Size  Location     Type
 12330 ;;		None
 12331 ;; Auto vars:     Size  Location     Type
 12332 ;;		None
 12333 ;; Return value:  Size  Location     Type
 12334 ;;		None               void
 12335 ;; Registers used:
 12336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12337 ;; Tracked objects:
 12338 ;;		On entry : 0/0
 12339 ;;		On exit  : 0/0
 12340 ;;		Unchanged: 0/0
 12341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12346 ;;Total ram usage:        0 bytes
 12347 ;; Hardware stack levels used:    1
 12348 ;; Hardware stack levels required when called:    4
 12349 ;; This function calls:
 12350 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12351 ;; This function is called by:
 12352 ;;		_USBDeviceTasks
 12353 ;; This function uses a non-reentrant model
 12354 ;;
 12355                           
 12356                           	psect	text63
 12357  0135EA                     __ptext63:
 12358                           	opt stack 0
 12359  0135EA                     _USBWakeFromSuspend:
 12360                           	opt stack 17
 12361                           
 12362                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 12363                           
 12364                           ; BSR set to: 13
 12365                           ;incstack = 0
 12366  0135EA  0E00               	movlw	0
 12367  0135EC  0100               	movlb	0	; () banked
 12368  0135EE  6FBC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12372  0135F0  0E00               	movlw	0
 12373  0135F2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12374  0135F4  0E74               	movlw	116
 12375  0135F6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12376  0135F8  0E00               	movlw	0
 12377  0135FA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12378  0135FC  0E00               	movlw	0
 12379  0135FE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12380  013600  0E00               	movlw	0
 12381  013602  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12382  013604  0E00               	movlw	0
 12383  013606  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12384  013608  EC26  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12385                           
 12386                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 12387  01360C  9265               	bcf	3941,1,c	;volatile
 12388                           
 12389                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 12390  01360E  010F               	movlb	15	; () banked
 12391  013610  9536               	bcf	54,2,b	;volatile
 12392                           
 12393                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 12394  013612  D001               	goto	i2l6340
 12395  013614                     i2l6338:
 12396                           
 12397                           ;usb_device.c: 2342: {
 12398                           ;usb_device.c: 2343: (UIR &= 0xFB);
 12399  013614  9462               	bcf	3938,2,c	;volatile
 12400  013616                     i2l6340:
 12401  013616  A462               	btfss	3938,2,c	;volatile
 12402  013618  0012               	return	
 12403  01361A  D7FC               	goto	i2l6338
 12404  01361C                     __end_of_USBWakeFromSuspend:
 12405                           	opt stack 0
 12406                           pclatu	equ	0xFFB
 12407                           pclath	equ	0xFFA
 12408                           tblptru	equ	0xFF8
 12409                           tblptrh	equ	0xFF7
 12410                           tblptrl	equ	0xFF6
 12411                           tablat	equ	0xFF5
 12412                           prodh	equ	0xFF4
 12413                           prodl	equ	0xFF3
 12414                           intcon	equ	0xFF2
 12415                           intcon2	equ	0xFF1
 12416                           indf0	equ	0xFEF
 12417                           postinc0	equ	0xFEE
 12418                           fsr0h	equ	0xFEA
 12419                           fsr0l	equ	0xFE9
 12420                           wreg	equ	0xFE8
 12421                           indf1	equ	0xFE7
 12422                           postinc1	equ	0xFE6
 12423                           postdec1	equ	0xFE5
 12424                           fsr1h	equ	0xFE2
 12425                           fsr1l	equ	0xFE1
 12426                           indf2	equ	0xFDF
 12427                           postinc2	equ	0xFDE
 12428                           postdec2	equ	0xFDD
 12429                           plusw2	equ	0xFDB
 12430                           fsr2h	equ	0xFDA
 12431                           fsr2l	equ	0xFD9
 12432                           status	equ	0xFD8
 12433                           
 12434 ;; *************** function _USBSuspend *****************
 12435 ;; Defined at:
 12436 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 12437 ;; Parameters:    Size  Location     Type
 12438 ;;		None
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;		None
 12441 ;; Return value:  Size  Location     Type
 12442 ;;		None               void
 12443 ;; Registers used:
 12444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12445 ;; Tracked objects:
 12446 ;;		On entry : 0/0
 12447 ;;		On exit  : 0/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12454 ;;Total ram usage:        0 bytes
 12455 ;; Hardware stack levels used:    1
 12456 ;; Hardware stack levels required when called:    4
 12457 ;; This function calls:
 12458 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12459 ;; This function is called by:
 12460 ;;		_USBDeviceTasks
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           
 12464                           	psect	text64
 12465  0136FE                     __ptext64:
 12466                           	opt stack 0
 12467  0136FE                     _USBSuspend:
 12468                           	opt stack 17
 12469                           
 12470                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 12471                           
 12472                           ;incstack = 0
 12473  0136FE  010F               	movlb	15	; () banked
 12474  013700  8536               	bsf	54,2,b	;volatile
 12475                           
 12476                           ; BSR set to: 15
 12477                           ;usb_device.c: 2271: (UIR &= 0xEF);
 12478  013702  9862               	bcf	3938,4,c	;volatile
 12479                           
 12480                           ; BSR set to: 15
 12481                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 12482  013704  8265               	bsf	3941,1,c	;volatile
 12483                           
 12484                           ; BSR set to: 15
 12485                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 12486  013706  0E01               	movlw	1
 12487  013708  0100               	movlb	0	; () banked
 12488  01370A  6FBC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12489                           
 12490                           ; BSR set to: 0
 12491                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12492  01370C  0E00               	movlw	0
 12493  01370E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12494  013710  0E75               	movlw	117
 12495  013712  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12496  013714  0E00               	movlw	0
 12497  013716  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12498  013718  0E00               	movlw	0
 12499  01371A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12500  01371C  0E00               	movlw	0
 12501  01371E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12502  013720  0E00               	movlw	0
 12503  013722  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12504  013724  EC26  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12505  013728  0012               	return		;funcret
 12506  01372A                     __end_of_USBSuspend:
 12507                           	opt stack 0
 12508                           pclatu	equ	0xFFB
 12509                           pclath	equ	0xFFA
 12510                           tblptru	equ	0xFF8
 12511                           tblptrh	equ	0xFF7
 12512                           tblptrl	equ	0xFF6
 12513                           tablat	equ	0xFF5
 12514                           prodh	equ	0xFF4
 12515                           prodl	equ	0xFF3
 12516                           intcon	equ	0xFF2
 12517                           intcon2	equ	0xFF1
 12518                           indf0	equ	0xFEF
 12519                           postinc0	equ	0xFEE
 12520                           fsr0h	equ	0xFEA
 12521                           fsr0l	equ	0xFE9
 12522                           wreg	equ	0xFE8
 12523                           indf1	equ	0xFE7
 12524                           postinc1	equ	0xFE6
 12525                           postdec1	equ	0xFE5
 12526                           fsr1h	equ	0xFE2
 12527                           fsr1l	equ	0xFE1
 12528                           indf2	equ	0xFDF
 12529                           postinc2	equ	0xFDE
 12530                           postdec2	equ	0xFDD
 12531                           plusw2	equ	0xFDB
 12532                           fsr2h	equ	0xFDA
 12533                           fsr2l	equ	0xFD9
 12534                           status	equ	0xFD8
 12535                           
 12536 ;; *************** function _USBStallHandler *****************
 12537 ;; Defined at:
 12538 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 12539 ;; Parameters:    Size  Location     Type
 12540 ;;		None
 12541 ;; Auto vars:     Size  Location     Type
 12542 ;;		None
 12543 ;; Return value:  Size  Location     Type
 12544 ;;		None               void
 12545 ;; Registers used:
 12546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12547 ;; Tracked objects:
 12548 ;;		On entry : 0/0
 12549 ;;		On exit  : 0/0
 12550 ;;		Unchanged: 0/0
 12551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12556 ;;Total ram usage:        1 bytes
 12557 ;; Hardware stack levels used:    1
 12558 ;; This function calls:
 12559 ;;		Nothing
 12560 ;; This function is called by:
 12561 ;;		_USBDeviceTasks
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text65
 12566  0133E0                     __ptext65:
 12567                           	opt stack 0
 12568  0133E0                     _USBStallHandler:
 12569                           	opt stack 21
 12570                           
 12571                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 12572                           
 12573                           ;incstack = 0
 12574  0133E0  010F               	movlb	15	; () banked
 12575  0133E2  A126               	btfss	38,0,b	;volatile
 12576  0133E4  D01E               	goto	i2l308
 12577                           
 12578                           ; BSR set to: 15
 12579                           ;usb_device.c: 2215: {
 12580                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12581  0133E6  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12582  0133EA  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12583  0133EE  0E80               	movlw	128
 12584  0133F0  18DE               	xorwf	postinc2,w,c
 12585  0133F2  A4D8               	btfss	status,2,c
 12586  0133F4  D014               	goto	i2l6362
 12587                           
 12588                           ; BSR set to: 15
 12589  0133F6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 12590  0133FA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12591  0133FE  0E84               	movlw	132
 12592  013400  18DE               	xorwf	postinc2,w,c
 12593  013402  A4D8               	btfss	status,2,c
 12594  013404  D00C               	goto	i2l6362
 12595                           
 12596                           ; BSR set to: 15
 12597                           ;usb_device.c: 2218: {
 12598                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12599  013406  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12600  01340A  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12601  01340E  0E0C               	movlw	12
 12602  013410  6EDF               	movwf	indf2,c
 12603                           
 12604                           ; BSR set to: 15
 12605                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12606  013412  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12607  013416  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12608  01341A  0E00               	movlw	0
 12609  01341C  8EDB               	bsf	plusw2,7,c
 12610  01341E                     i2l6362:
 12611                           
 12612                           ; BSR set to: 15
 12613                           ;usb_device.c: 2222: }
 12614                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 12615  01341E  010F               	movlb	15	; () banked
 12616  013420  9126               	bcf	38,0,b	;volatile
 12617  013422                     i2l308:
 12618                           
 12619                           ; BSR set to: 15
 12620                           ;usb_device.c: 2224: }
 12621                           ;usb_device.c: 2226: (UIR &= 0xDF);
 12622  013422  9A62               	bcf	3938,5,c	;volatile
 12623                           
 12624                           ; BSR set to: 15
 12625  013424  0012               	return		;funcret
 12626  013426                     __end_of_USBStallHandler:
 12627                           	opt stack 0
 12628                           pclatu	equ	0xFFB
 12629                           pclath	equ	0xFFA
 12630                           tblptru	equ	0xFF8
 12631                           tblptrh	equ	0xFF7
 12632                           tblptrl	equ	0xFF6
 12633                           tablat	equ	0xFF5
 12634                           prodh	equ	0xFF4
 12635                           prodl	equ	0xFF3
 12636                           intcon	equ	0xFF2
 12637                           intcon2	equ	0xFF1
 12638                           indf0	equ	0xFEF
 12639                           postinc0	equ	0xFEE
 12640                           fsr0h	equ	0xFEA
 12641                           fsr0l	equ	0xFE9
 12642                           wreg	equ	0xFE8
 12643                           indf1	equ	0xFE7
 12644                           postinc1	equ	0xFE6
 12645                           postdec1	equ	0xFE5
 12646                           fsr1h	equ	0xFE2
 12647                           fsr1l	equ	0xFE1
 12648                           indf2	equ	0xFDF
 12649                           postinc2	equ	0xFDE
 12650                           postdec2	equ	0xFDD
 12651                           plusw2	equ	0xFDB
 12652                           fsr2h	equ	0xFDA
 12653                           fsr2l	equ	0xFD9
 12654                           status	equ	0xFD8
 12655                           
 12656 ;; *************** function _USBCtrlEPService *****************
 12657 ;; Defined at:
 12658 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;		None
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 12663 ;; Return value:  Size  Location     Type
 12664 ;;		None               void
 12665 ;; Registers used:
 12666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12675 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12676 ;;Total ram usage:        3 bytes
 12677 ;; Hardware stack levels used:    1
 12678 ;; Hardware stack levels required when called:    7
 12679 ;; This function calls:
 12680 ;;		_USBCtrlTrfInHandler
 12681 ;;		_USBCtrlTrfOutHandler
 12682 ;;		_USBCtrlTrfSetupHandler
 12683 ;; This function is called by:
 12684 ;;		_USBDeviceTasks
 12685 ;; This function uses a non-reentrant model
 12686 ;;
 12687                           
 12688                           	psect	text66
 12689  012158                     __ptext66:
 12690                           	opt stack 0
 12691  012158                     _USBCtrlEPService:
 12692                           	opt stack 14
 12693                           
 12694                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 12695                           
 12696                           ; BSR set to: 15
 12697                           ;incstack = 0
 12698  012158  0E2D               	movlw	45
 12699  01215A  6E27               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 12700                           
 12701                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 12702  01215C  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 12703  012160  0EFD               	movlw	253
 12704  012162  1648               	andwf	??_USBCtrlEPService,f,c
 12705  012164  A4D8               	btfss	status,2,c
 12706  012166  D057               	goto	i2l6396
 12707                           
 12708                           ;usb_device.c: 2380: {
 12709                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 12710  012168  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 12711  01216C  90D8               	bcf	status,0,c
 12712  01216E  3248               	rrcf	??_USBCtrlEPService,f,c
 12713  012170  0E3F               	movlw	63
 12714  012172  1648               	andwf	??_USBCtrlEPService,f,c
 12715  012174  5048               	movf	??_USBCtrlEPService,w,c
 12716  012176  0D04               	mullw	4
 12717  012178  0E00               	movlw	0
 12718  01217A  24F3               	addwf	prodl,w,c
 12719  01217C  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 12720  01217E  0E0D               	movlw	13
 12721  012180  20F4               	addwfc	prodh,w,c
 12722  012182  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 12723                           
 12724                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12725  012184  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12726  012188  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12727                           
 12728                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 12729  01218C  0E04               	movlw	4
 12730  01218E  1A1B               	xorwf	_pBDTEntryEP0OutNext,f,c
 12731                           
 12732                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12733  012190  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12734  012194  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12735  012198  30DF               	rrcf	indf2,w,c
 12736  01219A  32E8               	rrcf	wreg,f,c
 12737  01219C  0B0F               	andlw	15
 12738  01219E  0A0D               	xorlw	13
 12739  0121A0  A4D8               	btfss	status,2,c
 12740  0121A2  D036               	goto	i2l6394
 12741                           
 12742                           ;usb_device.c: 2397: {
 12743                           ;usb_device.c: 2398: unsigned char setup_cnt;
 12744                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 12745  0121A4  0E00               	movlw	0
 12746  0121A6  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 12747  0121A8                     i2l6378:
 12748  0121A8  0E07               	movlw	7
 12749  0121AA  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 12750  0121AC  D001               	goto	i2l6382
 12751  0121AE  D023               	goto	i2l6390
 12752  0121B0                     i2l6382:
 12753                           
 12754                           ;usb_device.c: 2405: {
 12755                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 12756  0121B0  EE20 F002          	lfsr	2,2
 12757  0121B4  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 12758  0121B6  26D9               	addwf	fsr2l,f,c
 12759  0121B8  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12760  0121BA  22DA               	addwfc	fsr2h,f,c
 12761  0121BC  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 12762  0121C0  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 12763  0121C4  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 12764  0121C8  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 12765  0121CC  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 12766  0121CE  0D01               	mullw	1
 12767  0121D0  0E30               	movlw	48
 12768  0121D2  24F3               	addwf	prodl,w,c
 12769  0121D4  6EE1               	movwf	fsr1l,c
 12770  0121D6  0E0D               	movlw	13
 12771  0121D8  20F4               	addwfc	prodh,w,c
 12772  0121DA  6EE2               	movwf	fsr1h,c
 12773  0121DC  CFDF FFE7          	movff	indf2,indf1
 12774                           
 12775                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 12776  0121E0  EE20 F002          	lfsr	2,2
 12777  0121E4  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 12778  0121E6  26D9               	addwf	fsr2l,f,c
 12779  0121E8  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12780  0121EA  22DA               	addwfc	fsr2h,f,c
 12781  0121EC  2ADE               	incf	postinc2,f,c
 12782  0121EE  0E00               	movlw	0
 12783  0121F0  22DD               	addwfc	postdec2,f,c
 12784  0121F2  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 12785  0121F4  D7D9               	goto	i2l6378
 12786  0121F6                     i2l6390:
 12787                           
 12788                           ;usb_device.c: 2408: }
 12789                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12790  0121F6  EE20 F002          	lfsr	2,2
 12791  0121FA  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 12792  0121FC  26D9               	addwf	fsr2l,f,c
 12793  0121FE  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12794  012200  22DA               	addwfc	fsr2h,f,c
 12795  012202  0E30               	movlw	48
 12796  012204  6EDE               	movwf	postinc2,c
 12797  012206  0E0D               	movlw	13
 12798  012208  6EDD               	movwf	postdec2,c
 12799                           
 12800                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 12801  01220A  EC6B  F097         	call	_USBCtrlTrfSetupHandler	;wreg free
 12802                           
 12803                           ;usb_device.c: 2413: }
 12804  01220E  0012               	return	
 12805  012210                     i2l6394:
 12806                           
 12807                           ;usb_device.c: 2414: else
 12808                           ;usb_device.c: 2415: {
 12809                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 12810  012210  EC25  F099         	call	_USBCtrlTrfOutHandler	;wreg free
 12811                           
 12812                           ;usb_device.c: 2418: }
 12813                           ;usb_device.c: 2419: }
 12814  012214  0012               	return	
 12815  012216                     i2l6396:
 12816                           
 12817                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 12818  012216  502D               	movf	_USTATcopy,w,c	;volatile
 12819  012218  0BFD               	andlw	253
 12820  01221A  0A04               	xorlw	4
 12821  01221C  A4D8               	btfss	status,2,c
 12822  01221E  0012               	return	
 12823                           
 12824                           ;usb_device.c: 2421: {
 12825                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 12826  012220  ECB0  F093         	call	_USBCtrlTrfInHandler	;wreg free
 12827  012224  0012               	return	
 12828  012226                     __end_of_USBCtrlEPService:
 12829                           	opt stack 0
 12830                           pclatu	equ	0xFFB
 12831                           pclath	equ	0xFFA
 12832                           tblptru	equ	0xFF8
 12833                           tblptrh	equ	0xFF7
 12834                           tblptrl	equ	0xFF6
 12835                           tablat	equ	0xFF5
 12836                           prodh	equ	0xFF4
 12837                           prodl	equ	0xFF3
 12838                           intcon	equ	0xFF2
 12839                           intcon2	equ	0xFF1
 12840                           indf0	equ	0xFEF
 12841                           postinc0	equ	0xFEE
 12842                           fsr0h	equ	0xFEA
 12843                           fsr0l	equ	0xFE9
 12844                           wreg	equ	0xFE8
 12845                           indf1	equ	0xFE7
 12846                           postinc1	equ	0xFE6
 12847                           postdec1	equ	0xFE5
 12848                           fsr1h	equ	0xFE2
 12849                           fsr1l	equ	0xFE1
 12850                           indf2	equ	0xFDF
 12851                           postinc2	equ	0xFDE
 12852                           postdec2	equ	0xFDD
 12853                           plusw2	equ	0xFDB
 12854                           fsr2h	equ	0xFDA
 12855                           fsr2l	equ	0xFD9
 12856                           status	equ	0xFD8
 12857                           
 12858 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12859 ;; Defined at:
 12860 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 12861 ;; Parameters:    Size  Location     Type
 12862 ;;		None
 12863 ;; Auto vars:     Size  Location     Type
 12864 ;;		None
 12865 ;; Return value:  Size  Location     Type
 12866 ;;		None               void
 12867 ;; Registers used:
 12868 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12869 ;; Tracked objects:
 12870 ;;		On entry : 0/0
 12871 ;;		On exit  : 0/0
 12872 ;;		Unchanged: 0/0
 12873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12878 ;;Total ram usage:        0 bytes
 12879 ;; Hardware stack levels used:    1
 12880 ;; Hardware stack levels required when called:    6
 12881 ;; This function calls:
 12882 ;;		_USBCheckStdRequest
 12883 ;;		_USBCtrlEPServiceComplete
 12884 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12885 ;; This function is called by:
 12886 ;;		_USBCtrlEPService
 12887 ;; This function uses a non-reentrant model
 12888 ;;
 12889                           
 12890                           	psect	text67
 12891  012ED6                     __ptext67:
 12892                           	opt stack 0
 12893  012ED6                     _USBCtrlTrfSetupHandler:
 12894                           	opt stack 14
 12895                           
 12896                           ;usb_device.c: 2474: shortPacketStatus = 0;
 12897                           
 12898                           ;incstack = 0
 12899  012ED6  0E00               	movlw	0
 12900  012ED8  6E2B               	movwf	_shortPacketStatus,c	;volatile
 12901                           
 12902                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 12903  012EDA  0E00               	movlw	0
 12904  012EDC  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 12905                           
 12906                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 12907  012EDE  0E00               	movlw	0
 12908  012EE0  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12909                           
 12910                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 12911  012EE2  0E00               	movlw	0
 12912  012EE4  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12913                           
 12914                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 12915  012EE6  0E00               	movlw	0
 12916  012EE8  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 12917                           
 12918                           ;usb_device.c: 2479: controlTransferState = 0;
 12919  012EEA  0E00               	movlw	0
 12920  012EEC  6E29               	movwf	_controlTransferState,c	;volatile
 12921                           
 12922                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12923  012EEE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 12924  012EF2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12925  012EF6  0E7F               	movlw	127
 12926  012EF8  16DF               	andwf	indf2,f,c
 12927                           
 12928                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12929  012EFA  0E04               	movlw	4
 12930  012EFC  1A10               	xorwf	_pBDTEntryIn,f,c
 12931                           
 12932                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12933  012EFE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 12934  012F02  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12935  012F06  0E7F               	movlw	127
 12936  012F08  16DF               	andwf	indf2,f,c
 12937                           
 12938                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12939  012F0A  0E04               	movlw	4
 12940  012F0C  1A10               	xorwf	_pBDTEntryIn,f,c
 12941                           
 12942                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12943  012F0E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12944  012F12  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12945  012F16  0E7F               	movlw	127
 12946  012F18  16DF               	andwf	indf2,f,c
 12947                           
 12948                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 12949  012F1A  0E00               	movlw	0
 12950  012F1C  6E0D               	movwf	_inPipes+3,c	;volatile
 12951                           
 12952                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 12953  012F1E  0E00               	movlw	0
 12954  012F20  6E0F               	movwf	_inPipes+5,c	;volatile
 12955  012F22  0E00               	movlw	0
 12956  012F24  6E0E               	movwf	_inPipes+4,c	;volatile
 12957                           
 12958                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 12959  012F26  0E00               	movlw	0
 12960  012F28  6E04               	movwf	_outPipes+3,c	;volatile
 12961                           
 12962                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 12963  012F2A  0E00               	movlw	0
 12964  012F2C  6E06               	movwf	_outPipes+5,c	;volatile
 12965  012F2E  0E00               	movlw	0
 12966  012F30  6E05               	movwf	_outPipes+4,c	;volatile
 12967                           
 12968                           ;usb_device.c: 2503: USBCheckStdRequest();
 12969  012F32  EC2B  F08E         	call	_USBCheckStdRequest	;wreg free
 12970                           
 12971                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12972  012F36  0E00               	movlw	0
 12973  012F38  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12974  012F3A  0E03               	movlw	3
 12975  012F3C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12976  012F3E  0E00               	movlw	0
 12977  012F40  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12978  012F42  0E00               	movlw	0
 12979  012F44  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12980  012F46  0E00               	movlw	0
 12981  012F48  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12982  012F4A  0E00               	movlw	0
 12983  012F4C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12984  012F4E  EC26  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12985                           
 12986                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 12987  012F52  EC7B  F08B         	call	_USBCtrlEPServiceComplete	;wreg free
 12988  012F56  0012               	return		;funcret
 12989  012F58                     __end_of_USBCtrlTrfSetupHandler:
 12990                           	opt stack 0
 12991                           pclatu	equ	0xFFB
 12992                           pclath	equ	0xFFA
 12993                           tblptru	equ	0xFF8
 12994                           tblptrh	equ	0xFF7
 12995                           tblptrl	equ	0xFF6
 12996                           tablat	equ	0xFF5
 12997                           prodh	equ	0xFF4
 12998                           prodl	equ	0xFF3
 12999                           intcon	equ	0xFF2
 13000                           intcon2	equ	0xFF1
 13001                           indf0	equ	0xFEF
 13002                           postinc0	equ	0xFEE
 13003                           fsr0h	equ	0xFEA
 13004                           fsr0l	equ	0xFE9
 13005                           wreg	equ	0xFE8
 13006                           indf1	equ	0xFE7
 13007                           postinc1	equ	0xFE6
 13008                           postdec1	equ	0xFE5
 13009                           fsr1h	equ	0xFE2
 13010                           fsr1l	equ	0xFE1
 13011                           indf2	equ	0xFDF
 13012                           postinc2	equ	0xFDE
 13013                           postdec2	equ	0xFDD
 13014                           plusw2	equ	0xFDB
 13015                           fsr2h	equ	0xFDA
 13016                           fsr2l	equ	0xFD9
 13017                           status	equ	0xFD8
 13018                           
 13019 ;; *************** function _USBCtrlEPServiceComplete *****************
 13020 ;; Defined at:
 13021 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 13022 ;; Parameters:    Size  Location     Type
 13023 ;;		None
 13024 ;; Auto vars:     Size  Location     Type
 13025 ;;		None
 13026 ;; Return value:  Size  Location     Type
 13027 ;;		None               void
 13028 ;; Registers used:
 13029 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13030 ;; Tracked objects:
 13031 ;;		On entry : 0/0
 13032 ;;		On exit  : 0/0
 13033 ;;		Unchanged: 0/0
 13034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13039 ;;Total ram usage:        0 bytes
 13040 ;; Hardware stack levels used:    1
 13041 ;; Hardware stack levels required when called:    2
 13042 ;; This function calls:
 13043 ;;		_USBCtrlEPAllowDataStage
 13044 ;;		_USBCtrlEPAllowStatusStage
 13045 ;; This function is called by:
 13046 ;;		_USBCtrlTrfSetupHandler
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text68
 13051  0116F6                     __ptext68:
 13052                           	opt stack 0
 13053  0116F6                     _USBCtrlEPServiceComplete:
 13054                           	opt stack 17
 13055                           
 13056                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 13057                           
 13058                           ;incstack = 0
 13059  0116F6  9865               	bcf	3941,4,c	;volatile
 13060                           
 13061                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 13062  0116F8  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 13063  0116FA  D038               	goto	i2l232
 13064                           
 13065                           ;usb_device.c: 1629: {
 13066                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 13067  0116FC  AE04               	btfss	_outPipes+3,7,c	;volatile
 13068  0116FE  D00B               	goto	i2l5790
 13069                           
 13070                           ;usb_device.c: 1631: {
 13071                           ;usb_device.c: 1632: controlTransferState = 2;
 13072  011700  0E02               	movlw	2
 13073  011702  6E29               	movwf	_controlTransferState,c	;volatile
 13074                           
 13075                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 13076  011704  5022               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 13077  011706  B4D8               	btfsc	status,2,c
 13078                           
 13079                           ;usb_device.c: 1644: {
 13080                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 13081  011708  ECBC  F095         	call	_USBCtrlEPAllowDataStage	;wreg free
 13082                           
 13083                           ;usb_device.c: 1646: }
 13084                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 13085  01170C  0E00               	movlw	0
 13086  01170E  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13087                           
 13088                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 13089  011710  0E00               	movlw	0
 13090  011712  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13091                           
 13092                           ;usb_device.c: 1652: }
 13093  011714  0012               	return	
 13094  011716                     i2l5790:
 13095                           
 13096                           ;usb_device.c: 1653: else
 13097                           ;usb_device.c: 1654: {
 13098                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 13099  011716  EE20 F001          	lfsr	2,1
 13100  01171A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13101  01171C  26D9               	addwf	fsr2l,f,c
 13102  01171E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13103  011720  22DA               	addwfc	fsr2h,f,c
 13104  011722  0E08               	movlw	8
 13105  011724  6EDF               	movwf	indf2,c
 13106                           
 13107                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13108  011726  EE20 F002          	lfsr	2,2
 13109  01172A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13110  01172C  26D9               	addwf	fsr2l,f,c
 13111  01172E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13112  011730  22DA               	addwfc	fsr2h,f,c
 13113  011732  0E30               	movlw	48
 13114  011734  6EDE               	movwf	postinc2,c
 13115  011736  0E0D               	movlw	13
 13116  011738  6EDD               	movwf	postdec2,c
 13117                           
 13118                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13119  01173A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13120  01173E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13121  011742  0E0C               	movlw	12
 13122  011744  6EDF               	movwf	indf2,c
 13123                           
 13124                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13125  011746  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13126  01174A  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13127  01174E  0E00               	movlw	0
 13128  011750  8EDB               	bsf	plusw2,7,c
 13129                           
 13130                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 13131  011752  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13132  011756  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13133  01175A  0E04               	movlw	4
 13134  01175C  6EDF               	movwf	indf2,c
 13135                           
 13136                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13137  01175E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13138  011762  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13139  011766  0E00               	movlw	0
 13140  011768  8EDB               	bsf	plusw2,7,c
 13141                           
 13142                           ;usb_device.c: 1665: }
 13143                           ;usb_device.c: 1666: }
 13144  01176A  0012               	return	
 13145  01176C                     i2l232:
 13146                           
 13147                           ;usb_device.c: 1667: else
 13148                           ;usb_device.c: 1668: {
 13149                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 13150  01176C  010D               	movlb	13	; () banked
 13151  01176E  AF30               	btfss	48,7,b	;volatile
 13152  011770  D010               	goto	i2l5810
 13153                           
 13154                           ; BSR set to: 13
 13155                           ;usb_device.c: 1670: {
 13156                           ;usb_device.c: 1671: controlTransferState = 1;
 13157  011772  0E01               	movlw	1
 13158  011774  6E29               	movwf	_controlTransferState,c	;volatile
 13159                           
 13160                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 13161  011776  5021               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 13162  011778  B4D8               	btfsc	status,2,c
 13163                           
 13164                           ; BSR set to: 13
 13165                           ;usb_device.c: 1686: {
 13166                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 13167  01177A  ECBC  F095         	call	_USBCtrlEPAllowDataStage	;wreg free
 13168                           
 13169                           ;usb_device.c: 1688: }
 13170                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 13171  01177E  0E00               	movlw	0
 13172  011780  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13173                           
 13174                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 13175  011782  0E00               	movlw	0
 13176  011784  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13177                           
 13178                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 13179  011786  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 13180  011788  A4D8               	btfss	status,2,c
 13181  01178A  0012               	return	
 13182                           
 13183                           ;usb_device.c: 1713: {
 13184                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 13185  01178C  EC79  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13186                           
 13187                           ;usb_device.c: 1715: }
 13188                           ;usb_device.c: 1716: }
 13189  011790  0012               	return	
 13190  011792                     i2l5810:
 13191                           
 13192                           ;usb_device.c: 1717: else
 13193                           ;usb_device.c: 1718: {
 13194                           ;usb_device.c: 1729: controlTransferState = 2;
 13195  011792  0E02               	movlw	2
 13196  011794  6E29               	movwf	_controlTransferState,c	;volatile
 13197                           
 13198                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 13199  011796  EE20 F001          	lfsr	2,1
 13200  01179A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13201  01179C  26D9               	addwf	fsr2l,f,c
 13202  01179E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13203  0117A0  22DA               	addwfc	fsr2h,f,c
 13204  0117A2  0E08               	movlw	8
 13205  0117A4  6EDF               	movwf	indf2,c
 13206                           
 13207                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13208  0117A6  EE20 F002          	lfsr	2,2
 13209  0117AA  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13210  0117AC  26D9               	addwf	fsr2l,f,c
 13211  0117AE  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13212  0117B0  22DA               	addwfc	fsr2h,f,c
 13213  0117B2  0E30               	movlw	48
 13214  0117B4  6EDE               	movwf	postinc2,c
 13215  0117B6  0E0D               	movlw	13
 13216  0117B8  6EDD               	movwf	postdec2,c
 13217                           
 13218                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13219  0117BA  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13220  0117BE  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13221  0117C2  0E04               	movlw	4
 13222  0117C4  6EDF               	movwf	indf2,c
 13223                           
 13224                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13225  0117C6  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13226  0117CA  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13227  0117CE  0E00               	movlw	0
 13228  0117D0  8EDB               	bsf	plusw2,7,c
 13229                           
 13230                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 13231  0117D2  0E00               	movlw	0
 13232  0117D4  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13233                           
 13234                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 13235  0117D6  0E00               	movlw	0
 13236  0117D8  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13237                           
 13238                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 13239  0117DA  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 13240  0117DC  A4D8               	btfss	status,2,c
 13241  0117DE  0012               	return	
 13242                           
 13243                           ;usb_device.c: 1741: {
 13244                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 13245  0117E0  EC79  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13246  0117E4  0012               	return	
 13247  0117E6                     __end_of_USBCtrlEPServiceComplete:
 13248                           	opt stack 0
 13249                           pclatu	equ	0xFFB
 13250                           pclath	equ	0xFFA
 13251                           tblptru	equ	0xFF8
 13252                           tblptrh	equ	0xFF7
 13253                           tblptrl	equ	0xFF6
 13254                           tablat	equ	0xFF5
 13255                           prodh	equ	0xFF4
 13256                           prodl	equ	0xFF3
 13257                           intcon	equ	0xFF2
 13258                           intcon2	equ	0xFF1
 13259                           indf0	equ	0xFEF
 13260                           postinc0	equ	0xFEE
 13261                           fsr0h	equ	0xFEA
 13262                           fsr0l	equ	0xFE9
 13263                           wreg	equ	0xFE8
 13264                           indf1	equ	0xFE7
 13265                           postinc1	equ	0xFE6
 13266                           postdec1	equ	0xFE5
 13267                           fsr1h	equ	0xFE2
 13268                           fsr1l	equ	0xFE1
 13269                           indf2	equ	0xFDF
 13270                           postinc2	equ	0xFDE
 13271                           postdec2	equ	0xFDD
 13272                           plusw2	equ	0xFDB
 13273                           fsr2h	equ	0xFDA
 13274                           fsr2l	equ	0xFD9
 13275                           status	equ	0xFD8
 13276                           
 13277 ;; *************** function _USBCtrlEPAllowDataStage *****************
 13278 ;; Defined at:
 13279 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;		None
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;		None
 13284 ;; Return value:  Size  Location     Type
 13285 ;;		None               void
 13286 ;; Registers used:
 13287 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13297 ;;Total ram usage:        0 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:    1
 13300 ;; This function calls:
 13301 ;;		_USBCtrlTrfTxService
 13302 ;; This function is called by:
 13303 ;;		_USBCtrlEPServiceComplete
 13304 ;; This function uses a non-reentrant model
 13305 ;;
 13306                           
 13307                           	psect	text69
 13308  012B78                     __ptext69:
 13309                           	opt stack 0
 13310  012B78                     _USBCtrlEPAllowDataStage:
 13311                           	opt stack 17
 13312                           
 13313                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 13314                           
 13315                           ;incstack = 0
 13316  012B78  0E00               	movlw	0
 13317  012B7A  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13318                           
 13319                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 13320  012B7C  0E00               	movlw	0
 13321  012B7E  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13322                           
 13323                           ;usb_device.c: 1493: if(controlTransferState == 2)
 13324  012B80  0E02               	movlw	2
 13325  012B82  1829               	xorwf	_controlTransferState,w,c	;volatile
 13326  012B84  A4D8               	btfss	status,2,c
 13327  012B86  D01F               	goto	i2l5468
 13328                           
 13329                           ;usb_device.c: 1494: {
 13330                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 13331  012B88  EE20 F001          	lfsr	2,1
 13332  012B8C  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13333  012B8E  26D9               	addwf	fsr2l,f,c
 13334  012B90  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13335  012B92  22DA               	addwfc	fsr2h,f,c
 13336  012B94  0E08               	movlw	8
 13337  012B96  6EDF               	movwf	indf2,c
 13338                           
 13339                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13340  012B98  EE20 F002          	lfsr	2,2
 13341  012B9C  501B               	movf	_pBDTEntryEP0OutNext,w,c
 13342  012B9E  26D9               	addwf	fsr2l,f,c
 13343  012BA0  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 13344  012BA2  22DA               	addwfc	fsr2h,f,c
 13345  012BA4  0E38               	movlw	56
 13346  012BA6  6EDE               	movwf	postinc2,c
 13347  012BA8  0E0D               	movlw	13
 13348  012BAA  6EDD               	movwf	postdec2,c
 13349                           
 13350                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13351  012BAC  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13352  012BB0  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13353  012BB4  0E48               	movlw	72
 13354  012BB6  6EDF               	movwf	indf2,c
 13355                           
 13356                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13357  012BB8  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13358  012BBC  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13359  012BC0  0E00               	movlw	0
 13360  012BC2  8EDB               	bsf	plusw2,7,c
 13361                           
 13362                           ;usb_device.c: 1500: }
 13363  012BC4  0012               	return	
 13364  012BC6                     i2l5468:
 13365                           
 13366                           ;usb_device.c: 1501: else
 13367                           ;usb_device.c: 1502: {
 13368                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 13369  012BC6  500E               	movf	_inPipes+4,w,c	;volatile
 13370  012BC8  010D               	movlb	13	; () banked
 13371  012BCA  5D36               	subwf	54,w,b	;volatile
 13372  012BCC  500F               	movf	_inPipes+5,w,c	;volatile
 13373  012BCE  010D               	movlb	13	; () banked
 13374  012BD0  5937               	subwfb	55,w,b	;volatile
 13375  012BD2  B0D8               	btfsc	status,0,c
 13376  012BD4  D004               	goto	i2l5472
 13377                           
 13378                           ; BSR set to: 13
 13379                           ;usb_device.c: 1506: {
 13380                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 13381  012BD6  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 13382  012BDA  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 13383  012BDE                     i2l5472:
 13384                           
 13385                           ; BSR set to: 13
 13386                           ;usb_device.c: 1508: }
 13387                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 13388  012BDE  EC43  F090         	call	_USBCtrlTrfTxService	;wreg free
 13389                           
 13390                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 13391  012BE2  EE20 F002          	lfsr	2,2
 13392  012BE6  5010               	movf	_pBDTEntryIn,w,c
 13393  012BE8  26D9               	addwf	fsr2l,f,c
 13394  012BEA  5011               	movf	_pBDTEntryIn+1,w,c
 13395  012BEC  22DA               	addwfc	fsr2h,f,c
 13396  012BEE  0E38               	movlw	56
 13397  012BF0  6EDE               	movwf	postinc2,c
 13398  012BF2  0E0D               	movlw	13
 13399  012BF4  6EDD               	movwf	postdec2,c
 13400                           
 13401                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13402  012BF6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13403  012BFA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13404  012BFE  0E48               	movlw	72
 13405  012C00  6EDF               	movwf	indf2,c
 13406                           
 13407                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13408  012C02  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13409  012C06  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13410  012C0A  0E00               	movlw	0
 13411  012C0C  8EDB               	bsf	plusw2,7,c
 13412  012C0E  0012               	return	
 13413  012C10                     __end_of_USBCtrlEPAllowDataStage:
 13414                           	opt stack 0
 13415                           pclatu	equ	0xFFB
 13416                           pclath	equ	0xFFA
 13417                           tblptru	equ	0xFF8
 13418                           tblptrh	equ	0xFF7
 13419                           tblptrl	equ	0xFF6
 13420                           tablat	equ	0xFF5
 13421                           prodh	equ	0xFF4
 13422                           prodl	equ	0xFF3
 13423                           intcon	equ	0xFF2
 13424                           intcon2	equ	0xFF1
 13425                           indf0	equ	0xFEF
 13426                           postinc0	equ	0xFEE
 13427                           fsr0h	equ	0xFEA
 13428                           fsr0l	equ	0xFE9
 13429                           wreg	equ	0xFE8
 13430                           indf1	equ	0xFE7
 13431                           postinc1	equ	0xFE6
 13432                           postdec1	equ	0xFE5
 13433                           fsr1h	equ	0xFE2
 13434                           fsr1l	equ	0xFE1
 13435                           indf2	equ	0xFDF
 13436                           postinc2	equ	0xFDE
 13437                           postdec2	equ	0xFDD
 13438                           plusw2	equ	0xFDB
 13439                           fsr2h	equ	0xFDA
 13440                           fsr2l	equ	0xFD9
 13441                           status	equ	0xFD8
 13442                           
 13443 ;; *************** function _USBCheckStdRequest *****************
 13444 ;; Defined at:
 13445 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 13446 ;; Parameters:    Size  Location     Type
 13447 ;;		None
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;		None
 13450 ;; Return value:  Size  Location     Type
 13451 ;;		None               void
 13452 ;; Registers used:
 13453 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13454 ;; Tracked objects:
 13455 ;;		On entry : 0/0
 13456 ;;		On exit  : 0/0
 13457 ;;		Unchanged: 0/0
 13458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13463 ;;Total ram usage:        0 bytes
 13464 ;; Hardware stack levels used:    1
 13465 ;; Hardware stack levels required when called:    5
 13466 ;; This function calls:
 13467 ;;		_USBStdFeatureReqHandler
 13468 ;;		_USBStdGetDscHandler
 13469 ;;		_USBStdGetStatusHandler
 13470 ;;		_USBStdSetCfgHandler
 13471 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13472 ;; This function is called by:
 13473 ;;		_USBCtrlTrfSetupHandler
 13474 ;; This function uses a non-reentrant model
 13475 ;;
 13476                           
 13477                           	psect	text70
 13478  011C56                     __ptext70:
 13479                           	opt stack 0
 13480  011C56                     _USBCheckStdRequest:
 13481                           	opt stack 14
 13482                           
 13483                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 13484                           
 13485                           ;incstack = 0
 13486  011C56  010D               	movlb	13	; () banked
 13487  011C58  3930               	swapf	48,w,b	;volatile
 13488  011C5A  32E8               	rrcf	wreg,f,c
 13489  011C5C  0B03               	andlw	3
 13490  011C5E  0900               	iorlw	0
 13491  011C60  A4D8               	btfss	status,2,c
 13492  011C62  0012               	return	
 13493  011C64  D043               	goto	i2l5908
 13494  011C66                     i2l359:
 13495                           
 13496                           ; BSR set to: 13
 13497                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 13498  011C66  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13499                           
 13500                           ; BSR set to: 13
 13501                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 13502  011C68  0E08               	movlw	8
 13503  011C6A  6E24               	movwf	_USBDeviceState,c	;volatile
 13504                           
 13505                           ;usb_device.c: 2699: break;
 13506  011C6C  0012               	return	
 13507  011C6E                     i2l5878:
 13508                           
 13509                           ; BSR set to: 13
 13510                           ;usb_device.c: 2701: USBStdGetDscHandler();
 13511  011C6E  EC5C  F08A         	call	_USBStdGetDscHandler	;wreg free
 13512                           
 13513                           ;usb_device.c: 2702: break;
 13514  011C72  0012               	return	
 13515  011C74                     i2l5880:
 13516                           
 13517                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 13518  011C74  ECBD  F08D         	call	_USBStdSetCfgHandler	;wreg free
 13519                           
 13520                           ;usb_device.c: 2705: break;
 13521  011C78  0012               	return	
 13522  011C7A                     i2l5882:
 13523                           
 13524                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 13525  011C7A  0E2C               	movlw	low _USBActiveConfiguration
 13526  011C7C  6E0A               	movwf	_inPipes,c	;volatile
 13527  011C7E  0E00               	movlw	high _USBActiveConfiguration
 13528  011C80  6E0B               	movwf	_inPipes+1,c	;volatile
 13529                           
 13530                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13531  011C82  800D               	bsf	_inPipes+3,0,c	;volatile
 13532                           
 13533                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 13534  011C84  0E01               	movlw	1
 13535  011C86  6E0E               	movwf	_inPipes+4,c	;volatile
 13536                           
 13537                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 13538  011C88  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13539                           
 13540                           ;usb_device.c: 2711: break;
 13541  011C8A  0012               	return	
 13542  011C8C                     i2l5890:
 13543                           
 13544                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 13545  011C8C  EC16  F095         	call	_USBStdGetStatusHandler	;wreg free
 13546                           
 13547                           ;usb_device.c: 2714: break;
 13548  011C90  0012               	return	
 13549  011C92                     i2l5892:
 13550                           
 13551                           ;usb_device.c: 2716: case 3:
 13552                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 13553  011C92  EC74  F083         	call	_USBStdFeatureReqHandler	;wreg free
 13554                           
 13555                           ;usb_device.c: 2718: break;
 13556  011C96  0012               	return	
 13557  011C98                     i2l5894:
 13558                           
 13559                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13560  011C98  010D               	movlb	13	; () banked
 13561  011C9A  5134               	movf	52,w,b	;volatile
 13562  011C9C  0D01               	mullw	1
 13563  011C9E  0ED5               	movlw	low _USBAlternateInterface
 13564  011CA0  24F3               	addwf	prodl,w,c
 13565  011CA2  6E0A               	movwf	_inPipes,c	;volatile
 13566  011CA4  0E00               	movlw	high _USBAlternateInterface
 13567  011CA6  20F4               	addwfc	prodh,w,c
 13568  011CA8  6E0B               	movwf	_inPipes+1,c	;volatile
 13569                           
 13570                           ; BSR set to: 13
 13571                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13572  011CAA  800D               	bsf	_inPipes+3,0,c	;volatile
 13573                           
 13574                           ; BSR set to: 13
 13575                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 13576  011CAC  0E01               	movlw	1
 13577  011CAE  6E0E               	movwf	_inPipes+4,c	;volatile
 13578                           
 13579                           ; BSR set to: 13
 13580                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 13581  011CB0  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13582                           
 13583                           ;usb_device.c: 2724: break;
 13584  011CB2  0012               	return	
 13585  011CB4                     i2l368:
 13586                           
 13587                           ; BSR set to: 13
 13588                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 13589  011CB4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13590                           
 13591                           ; BSR set to: 13
 13592                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 13593  011CB6  010D               	movlb	13	; () banked
 13594  011CB8  5134               	movf	52,w,b	;volatile
 13595  011CBA  0D01               	mullw	1
 13596  011CBC  0ED5               	movlw	low _USBAlternateInterface
 13597  011CBE  24F3               	addwf	prodl,w,c
 13598  011CC0  6ED9               	movwf	fsr2l,c
 13599  011CC2  0E00               	movlw	high _USBAlternateInterface
 13600  011CC4  20F4               	addwfc	prodh,w,c
 13601  011CC6  6EDA               	movwf	fsr2h,c
 13602  011CC8  CD32 FFDF          	movff	3378,indf2	;volatile
 13603                           
 13604                           ;usb_device.c: 2728: break;
 13605  011CCC  0012               	return	
 13606  011CCE                     i2l5904:
 13607                           
 13608                           ; BSR set to: 13
 13609                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 13610  011CCE  0E00               	movlw	0
 13611  011CD0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13612  011CD2  0E02               	movlw	2
 13613  011CD4  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13614  011CD6  0E00               	movlw	0
 13615  011CD8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13616  011CDA  0E00               	movlw	0
 13617  011CDC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13618  011CDE  0E00               	movlw	0
 13619  011CE0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13620  011CE2  0E00               	movlw	0
 13621  011CE4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13622  011CE6  EC26  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13623                           
 13624                           ;usb_device.c: 2735: }
 13625                           
 13626                           ;usb_device.c: 2734: break;
 13627                           
 13628                           ;usb_device.c: 2733: default:
 13629                           
 13630                           ;usb_device.c: 2732: case 12:
 13631                           
 13632                           ;usb_device.c: 2731: break;
 13633  011CEA  0012               	return	
 13634  011CEC                     i2l5908:
 13635  011CEC  010D               	movlb	13	; () banked
 13636  011CEE  5131               	movf	49,w,b	;volatile
 13637                           
 13638                           ; Switch size 1, requested type "space"
 13639                           ; Number of cases is 11, Range of values is 0 to 12
 13640                           ; switch strategies available:
 13641                           ; Name         Instructions Cycles
 13642                           ; simple_byte           34    18 (average)
 13643                           ;	Chosen strategy is simple_byte
 13644  011CF0  0A00               	xorlw	0	; case 0
 13645  011CF2  B4D8               	btfsc	status,2,c
 13646  011CF4  D7CB               	goto	i2l5890
 13647  011CF6  0A01               	xorlw	1	; case 1
 13648  011CF8  B4D8               	btfsc	status,2,c
 13649  011CFA  D7CB               	goto	i2l5892
 13650  011CFC  0A02               	xorlw	2	; case 3
 13651  011CFE  B4D8               	btfsc	status,2,c
 13652  011D00  D7C8               	goto	i2l5892
 13653  011D02  0A06               	xorlw	6	; case 5
 13654  011D04  B4D8               	btfsc	status,2,c
 13655  011D06  D7AF               	goto	i2l359
 13656  011D08  0A03               	xorlw	3	; case 6
 13657  011D0A  B4D8               	btfsc	status,2,c
 13658  011D0C  D7B0               	goto	i2l5878
 13659  011D0E  0A01               	xorlw	1	; case 7
 13660  011D10  B4D8               	btfsc	status,2,c
 13661  011D12  D7DD               	goto	i2l5904
 13662  011D14  0A0F               	xorlw	15	; case 8
 13663  011D16  B4D8               	btfsc	status,2,c
 13664  011D18  D7B0               	goto	i2l5882
 13665  011D1A  0A01               	xorlw	1	; case 9
 13666  011D1C  B4D8               	btfsc	status,2,c
 13667  011D1E  D7AA               	goto	i2l5880
 13668  011D20  0A03               	xorlw	3	; case 10
 13669  011D22  B4D8               	btfsc	status,2,c
 13670  011D24  D7B9               	goto	i2l5894
 13671  011D26  0A01               	xorlw	1	; case 11
 13672  011D28  B4D8               	btfsc	status,2,c
 13673  011D2A  D7C4               	goto	i2l368
 13674  011D2C  0A07               	xorlw	7	; case 12
 13675  011D2E  0012               	return	
 13676  011D30                     __end_of_USBCheckStdRequest:
 13677                           	opt stack 0
 13678                           pclatu	equ	0xFFB
 13679                           pclath	equ	0xFFA
 13680                           tblptru	equ	0xFF8
 13681                           tblptrh	equ	0xFF7
 13682                           tblptrl	equ	0xFF6
 13683                           tablat	equ	0xFF5
 13684                           prodh	equ	0xFF4
 13685                           prodl	equ	0xFF3
 13686                           intcon	equ	0xFF2
 13687                           intcon2	equ	0xFF1
 13688                           indf0	equ	0xFEF
 13689                           postinc0	equ	0xFEE
 13690                           fsr0h	equ	0xFEA
 13691                           fsr0l	equ	0xFE9
 13692                           wreg	equ	0xFE8
 13693                           indf1	equ	0xFE7
 13694                           postinc1	equ	0xFE6
 13695                           postdec1	equ	0xFE5
 13696                           fsr1h	equ	0xFE2
 13697                           fsr1l	equ	0xFE1
 13698                           indf2	equ	0xFDF
 13699                           postinc2	equ	0xFDE
 13700                           postdec2	equ	0xFDD
 13701                           plusw2	equ	0xFDB
 13702                           fsr2h	equ	0xFDA
 13703                           fsr2l	equ	0xFD9
 13704                           status	equ	0xFD8
 13705                           
 13706 ;; *************** function _USBStdSetCfgHandler *****************
 13707 ;; Defined at:
 13708 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 13709 ;; Parameters:    Size  Location     Type
 13710 ;;		None
 13711 ;; Auto vars:     Size  Location     Type
 13712 ;;  i               1   20[COMRAM] unsigned char 
 13713 ;; Return value:  Size  Location     Type
 13714 ;;		None               void
 13715 ;; Registers used:
 13716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13717 ;; Tracked objects:
 13718 ;;		On entry : 0/0
 13719 ;;		On exit  : 0/0
 13720 ;;		Unchanged: 0/0
 13721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13726 ;;Total ram usage:        1 bytes
 13727 ;; Hardware stack levels used:    1
 13728 ;; Hardware stack levels required when called:    4
 13729 ;; This function calls:
 13730 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13731 ;;		i2_memset
 13732 ;; This function is called by:
 13733 ;;		_USBCheckStdRequest
 13734 ;; This function uses a non-reentrant model
 13735 ;;
 13736                           
 13737                           	psect	text71
 13738  011B7A                     __ptext71:
 13739                           	opt stack 0
 13740  011B7A                     _USBStdSetCfgHandler:
 13741                           	opt stack 14
 13742                           
 13743                           ;usb_device.c: 1970: uint8_t i;
 13744                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 13745                           
 13746                           ;incstack = 0
 13747  011B7A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13748                           
 13749                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 13750  011B7C  0E27               	movlw	39
 13751  011B7E  6E2E               	movwf	i2memset@p1,c
 13752  011B80  0E0F               	movlw	15
 13753  011B82  6E2F               	movwf	i2memset@p1+1,c
 13754  011B84  0E00               	movlw	0
 13755  011B86  6E31               	movwf	i2memset@c+1,c
 13756  011B88  0E00               	movlw	0
 13757  011B8A  6E30               	movwf	i2memset@c,c
 13758  011B8C  0E00               	movlw	0
 13759  011B8E  6E33               	movwf	i2memset@n+1,c
 13760  011B90  0E02               	movlw	2
 13761  011B92  6E32               	movwf	i2memset@n,c
 13762  011B94  EC95  F09B         	call	i2_memset	;wreg free
 13763                           
 13764                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13765  011B98  0E00               	movlw	0
 13766  011B9A  6E2E               	movwf	i2memset@p1,c
 13767  011B9C  0E0D               	movlw	13
 13768  011B9E  6E2F               	movwf	i2memset@p1+1,c
 13769  011BA0  0E00               	movlw	0
 13770  011BA2  6E31               	movwf	i2memset@c+1,c
 13771  011BA4  0E00               	movlw	0
 13772  011BA6  6E30               	movwf	i2memset@c,c
 13773  011BA8  0E00               	movlw	0
 13774  011BAA  6E33               	movwf	i2memset@n+1,c
 13775  011BAC  0E30               	movlw	48
 13776  011BAE  6E32               	movwf	i2memset@n,c
 13777  011BB0  EC95  F09B         	call	i2_memset	;wreg free
 13778                           
 13779                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 13780  011BB4  8C65               	bsf	3941,6,c	;volatile
 13781                           
 13782                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 13783  011BB6  0E00               	movlw	0
 13784  011BB8  6E42               	movwf	USBStdSetCfgHandler@i,c
 13785  011BBA                     i2l5488:
 13786  011BBA  0E02               	movlw	2
 13787  011BBC  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 13788  011BBE  D001               	goto	i2l5492
 13789  011BC0  D016               	goto	i2l5498
 13790  011BC2                     i2l5492:
 13791                           
 13792                           ;usb_device.c: 1988: {
 13793                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 13794  011BC2  5042               	movf	USBStdSetCfgHandler@i,w,c
 13795  011BC4  0D01               	mullw	1
 13796  011BC6  0E16               	movlw	low _ep_data_in
 13797  011BC8  24F3               	addwf	prodl,w,c
 13798  011BCA  6ED9               	movwf	fsr2l,c
 13799  011BCC  0E00               	movlw	high _ep_data_in
 13800  011BCE  20F4               	addwfc	prodh,w,c
 13801  011BD0  6EDA               	movwf	fsr2h,c
 13802  011BD2  0E00               	movlw	0
 13803  011BD4  6EDF               	movwf	indf2,c
 13804                           
 13805                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 13806  011BD6  5042               	movf	USBStdSetCfgHandler@i,w,c
 13807  011BD8  0D01               	mullw	1
 13808  011BDA  0EA4               	movlw	low _ep_data_out
 13809  011BDC  24F3               	addwf	prodl,w,c
 13810  011BDE  6ED9               	movwf	fsr2l,c
 13811  011BE0  0E00               	movlw	high _ep_data_out
 13812  011BE2  20F4               	addwfc	prodh,w,c
 13813  011BE4  6EDA               	movwf	fsr2h,c
 13814  011BE6  0E00               	movlw	0
 13815  011BE8  6EDF               	movwf	indf2,c
 13816  011BEA  2A42               	incf	USBStdSetCfgHandler@i,f,c
 13817  011BEC  D7E6               	goto	i2l5488
 13818  011BEE                     i2l5498:
 13819                           
 13820                           ;usb_device.c: 1991: }
 13821                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 13822  011BEE  0ED5               	movlw	low _USBAlternateInterface
 13823  011BF0  6E2E               	movwf	i2memset@p1,c
 13824  011BF2  0E00               	movlw	high _USBAlternateInterface
 13825  011BF4  6E2F               	movwf	i2memset@p1+1,c
 13826  011BF6  0E00               	movlw	0
 13827  011BF8  6E31               	movwf	i2memset@c+1,c
 13828  011BFA  0E00               	movlw	0
 13829  011BFC  6E30               	movwf	i2memset@c,c
 13830  011BFE  0E00               	movlw	0
 13831  011C00  6E33               	movwf	i2memset@n+1,c
 13832  011C02  0E02               	movlw	2
 13833  011C04  6E32               	movwf	i2memset@n,c
 13834  011C06  EC95  F09B         	call	i2_memset	;wreg free
 13835                           
 13836                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 13837  011C0A  9C65               	bcf	3941,6,c	;volatile
 13838                           
 13839                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13840  011C0C  0E08               	movlw	8
 13841  011C0E  6E10               	movwf	_pBDTEntryIn,c
 13842  011C10  0E0D               	movlw	13
 13843  011C12  6E11               	movwf	_pBDTEntryIn+1,c
 13844                           
 13845                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13846  011C14  0E00               	movlw	0
 13847  011C16  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 13848  011C18  0E0D               	movlw	13
 13849  011C1A  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 13850                           
 13851                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13852  011C1C  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13853  011C20  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13854                           
 13855                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13856  011C24  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 13857                           
 13858                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 13859  011C28  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 13860  011C2A  A4D8               	btfss	status,2,c
 13861  011C2C  D003               	goto	i2l5514
 13862                           
 13863                           ;usb_device.c: 2010: {
 13864                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 13865  011C2E  0E10               	movlw	16
 13866  011C30  6E24               	movwf	_USBDeviceState,c	;volatile
 13867                           
 13868                           ;usb_device.c: 2013: }
 13869  011C32  0012               	return	
 13870  011C34                     i2l5514:
 13871                           
 13872                           ;usb_device.c: 2014: else
 13873                           ;usb_device.c: 2015: {
 13874                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 13875  011C34  0E00               	movlw	0
 13876  011C36  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13877  011C38  0E01               	movlw	1
 13878  011C3A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13879  011C3C  0E2C               	movlw	low _USBActiveConfiguration
 13880  011C3E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13881  011C40  0E00               	movlw	high _USBActiveConfiguration
 13882  011C42  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13883  011C44  0E00               	movlw	0
 13884  011C46  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13885  011C48  0E01               	movlw	1
 13886  011C4A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13887  011C4C  EC26  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13888                           
 13889                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 13890  011C50  0E20               	movlw	32
 13891  011C52  6E24               	movwf	_USBDeviceState,c	;volatile
 13892  011C54  0012               	return	
 13893  011C56                     __end_of_USBStdSetCfgHandler:
 13894                           	opt stack 0
 13895                           pclatu	equ	0xFFB
 13896                           pclath	equ	0xFFA
 13897                           tblptru	equ	0xFF8
 13898                           tblptrh	equ	0xFF7
 13899                           tblptrl	equ	0xFF6
 13900                           tablat	equ	0xFF5
 13901                           prodh	equ	0xFF4
 13902                           prodl	equ	0xFF3
 13903                           intcon	equ	0xFF2
 13904                           intcon2	equ	0xFF1
 13905                           indf0	equ	0xFEF
 13906                           postinc0	equ	0xFEE
 13907                           fsr0h	equ	0xFEA
 13908                           fsr0l	equ	0xFE9
 13909                           wreg	equ	0xFE8
 13910                           indf1	equ	0xFE7
 13911                           postinc1	equ	0xFE6
 13912                           postdec1	equ	0xFE5
 13913                           fsr1h	equ	0xFE2
 13914                           fsr1l	equ	0xFE1
 13915                           indf2	equ	0xFDF
 13916                           postinc2	equ	0xFDE
 13917                           postdec2	equ	0xFDD
 13918                           plusw2	equ	0xFDB
 13919                           fsr2h	equ	0xFDA
 13920                           fsr2l	equ	0xFD9
 13921                           status	equ	0xFD8
 13922                           
 13923 ;; *************** function i2_memset *****************
 13924 ;; Defined at:
 13925 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 13926 ;; Parameters:    Size  Location     Type
 13927 ;;  p1              2    0[COMRAM] PTR void 
 13928 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13929 ;;  c               2    2[COMRAM] int 
 13930 ;;  n               2    4[COMRAM] unsigned int 
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;  memset          2    6[COMRAM] PTR unsigned char 
 13933 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13934 ;; Return value:  Size  Location     Type
 13935 ;;                  2    0[COMRAM] PTR void 
 13936 ;; Registers used:
 13937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13943 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13946 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13947 ;;Total ram usage:        8 bytes
 13948 ;; Hardware stack levels used:    1
 13949 ;; This function calls:
 13950 ;;		Nothing
 13951 ;; This function is called by:
 13952 ;;		_USBStdSetCfgHandler
 13953 ;;		i2_USBDeviceInit
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           	psect	text72
 13958  01372A                     __ptext72:
 13959                           	opt stack 0
 13960  01372A                     i2_memset:
 13961                           	opt stack 20
 13962                           
 13963                           ;incstack = 0
 13964  01372A  C02E  F034         	movff	i2memset@p1,i2memset@p
 13965  01372E  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 13966  013732  D008               	goto	i2l5422
 13967  013734                     i2l5418:
 13968  013734  C034  FFD9         	movff	i2memset@p,fsr2l
 13969  013738  C035  FFDA         	movff	i2memset@p+1,fsr2h
 13970  01373C  C030  FFDF         	movff	i2memset@c,indf2
 13971  013740  4A34               	infsnz	i2memset@p,f,c
 13972  013742  2A35               	incf	i2memset@p+1,f,c
 13973  013744                     i2l5422:
 13974  013744  0632               	decf	i2memset@n,f,c
 13975  013746  A0D8               	btfss	status,0,c
 13976  013748  0633               	decf	i2memset@n+1,f,c
 13977  01374A  2832               	incf	i2memset@n,w,c
 13978  01374C  E1F3               	bnz	i2l5418
 13979  01374E  2833               	incf	i2memset@n+1,w,c
 13980  013750  B4D8               	btfsc	status,2,c
 13981  013752  0012               	return	
 13982  013754  D7EF               	goto	i2l5418
 13983  013756                     __end_ofi2_memset:
 13984                           	opt stack 0
 13985                           pclatu	equ	0xFFB
 13986                           pclath	equ	0xFFA
 13987                           tblptru	equ	0xFF8
 13988                           tblptrh	equ	0xFF7
 13989                           tblptrl	equ	0xFF6
 13990                           tablat	equ	0xFF5
 13991                           prodh	equ	0xFF4
 13992                           prodl	equ	0xFF3
 13993                           intcon	equ	0xFF2
 13994                           intcon2	equ	0xFF1
 13995                           indf0	equ	0xFEF
 13996                           postinc0	equ	0xFEE
 13997                           fsr0h	equ	0xFEA
 13998                           fsr0l	equ	0xFE9
 13999                           wreg	equ	0xFE8
 14000                           indf1	equ	0xFE7
 14001                           postinc1	equ	0xFE6
 14002                           postdec1	equ	0xFE5
 14003                           fsr1h	equ	0xFE2
 14004                           fsr1l	equ	0xFE1
 14005                           indf2	equ	0xFDF
 14006                           postinc2	equ	0xFDE
 14007                           postdec2	equ	0xFDD
 14008                           plusw2	equ	0xFDB
 14009                           fsr2h	equ	0xFDA
 14010                           fsr2l	equ	0xFD9
 14011                           status	equ	0xFD8
 14012                           
 14013 ;; *************** function _USBStdGetStatusHandler *****************
 14014 ;; Defined at:
 14015 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;		None
 14018 ;; Auto vars:     Size  Location     Type
 14019 ;;  p               2    1[COMRAM] PTR struct __BDT
 14020 ;;		 -> NULL(0), BDT(48), 
 14021 ;; Return value:  Size  Location     Type
 14022 ;;		None               void
 14023 ;; Registers used:
 14024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14025 ;; Tracked objects:
 14026 ;;		On entry : 0/0
 14027 ;;		On exit  : 0/0
 14028 ;;		Unchanged: 0/0
 14029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14033 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14034 ;;Total ram usage:        3 bytes
 14035 ;; Hardware stack levels used:    1
 14036 ;; This function calls:
 14037 ;;		Nothing
 14038 ;; This function is called by:
 14039 ;;		_USBCheckStdRequest
 14040 ;; This function uses a non-reentrant model
 14041 ;;
 14042                           
 14043                           	psect	text73
 14044  012A2C                     __ptext73:
 14045                           	opt stack 0
 14046  012A2C                     _USBStdGetStatusHandler:
 14047                           	opt stack 18
 14048                           
 14049                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 14050                           
 14051                           ;incstack = 0
 14052  012A2C  0E00               	movlw	0
 14053  012A2E  010D               	movlb	13	; () banked
 14054  012A30  6F38               	movwf	56,b	;volatile
 14055                           
 14056                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 14057  012A32  0E00               	movlw	0
 14058  012A34  010D               	movlb	13	; () banked
 14059  012A36  6F39               	movwf	57,b	;volatile
 14060                           
 14061                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 14062  012A38  D038               	goto	i2l5570
 14063  012A3A                     i2l295:
 14064                           
 14065                           ; BSR set to: 13
 14066                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 14067  012A3A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14068                           
 14069                           ; BSR set to: 13
 14070                           ;usb_device.c: 2145: }
 14071                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 14072                           
 14073                           ; BSR set to: 13
 14074                           
 14075                           ; BSR set to: 13
 14076                           ;usb_device.c: 2143: {
 14077                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 14078                           
 14079                           ;usb_device.c: 2142: if(0 == 1)
 14080  012A3C  0420               	decf	_RemoteWakeup,w,c	;volatile
 14081  012A3E  A4D8               	btfss	status,2,c
 14082  012A40  D040               	goto	i2l298
 14083                           
 14084                           ; BSR set to: 13
 14085                           ;usb_device.c: 2148: {
 14086                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 14087  012A42  010D               	movlb	13	; () banked
 14088  012A44  8338               	bsf	56,1,b	;volatile
 14089                           
 14090                           ; BSR set to: 13
 14091                           ;usb_device.c: 2150: }
 14092                           ;usb_device.c: 2151: break;
 14093  012A46  D03D               	goto	i2l298
 14094  012A48                     i2l299:
 14095                           
 14096                           ; BSR set to: 13
 14097                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 14098  012A48  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14099                           
 14100                           ;usb_device.c: 2154: break;
 14101  012A4A  D03B               	goto	i2l298
 14102  012A4C                     i2l300:
 14103                           
 14104                           ; BSR set to: 13
 14105                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 14106  012A4C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14107                           
 14108                           ;usb_device.c: 2160: {
 14109                           ;usb_device.c: 2161: BDT_ENTRY *p;
 14110                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 14111  012A4E  010D               	movlb	13	; () banked
 14112  012A50  BF34               	btfsc	52,7,b	;volatile
 14113  012A52  D00B               	goto	i2l5560
 14114                           
 14115                           ; BSR set to: 13
 14116                           ;usb_device.c: 2164: {
 14117                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14118  012A54  010D               	movlb	13	; () banked
 14119  012A56  5134               	movf	52,w,b	;volatile
 14120  012A58  0B0F               	andlw	15
 14121  012A5A  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14122  012A5C  502E               	movf	??_USBStdGetStatusHandler,w,c
 14123  012A5E  0D02               	mullw	2
 14124  012A60  0E9E               	movlw	low _pBDTEntryOut
 14125  012A62  24F3               	addwf	prodl,w,c
 14126  012A64  6ED9               	movwf	fsr2l,c
 14127  012A66  0E00               	movlw	high _pBDTEntryOut
 14128  012A68  D00A               	goto	L5
 14129  012A6A                     i2l5560:
 14130                           
 14131                           ; BSR set to: 13
 14132                           ;usb_device.c: 2167: else
 14133                           ;usb_device.c: 2168: {
 14134                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 14135  012A6A  010D               	movlb	13	; () banked
 14136  012A6C  5134               	movf	52,w,b	;volatile
 14137  012A6E  0B0F               	andlw	15
 14138  012A70  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14139  012A72  502E               	movf	??_USBStdGetStatusHandler,w,c
 14140  012A74  0D02               	mullw	2
 14141  012A76  0E10               	movlw	low _pBDTEntryIn
 14142  012A78  24F3               	addwf	prodl,w,c
 14143  012A7A  6ED9               	movwf	fsr2l,c
 14144  012A7C  0E00               	movlw	high _pBDTEntryIn
 14145  012A7E                     L5:
 14146  012A7E  20F4               	addwfc	prodh,w,c
 14147  012A80  6EDA               	movwf	fsr2h,c
 14148  012A82  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 14149  012A86  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 14150                           
 14151                           ; BSR set to: 13
 14152                           ;usb_device.c: 2170: }
 14153                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 14154                           
 14155                           ; BSR set to: 13
 14156  012A8A  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14157  012A8E  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14158  012A92  AEDF               	btfss	indf2,7,c
 14159  012A94  D016               	goto	i2l298
 14160                           
 14161                           ; BSR set to: 13
 14162  012A96  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14163  012A9A  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14164  012A9E  A4DF               	btfss	indf2,2,c
 14165  012AA0  D010               	goto	i2l298
 14166                           
 14167                           ; BSR set to: 13
 14168                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 14169  012AA2  0E01               	movlw	1
 14170  012AA4  010D               	movlb	13	; () banked
 14171  012AA6  6F38               	movwf	56,b	;volatile
 14172                           
 14173                           ; BSR set to: 13
 14174                           ;usb_device.c: 2175: }
 14175                           ;usb_device.c: 2176: }
 14176                           
 14177                           ; BSR set to: 13
 14178                           ;usb_device.c: 2174: break;
 14179  012AA8  D00C               	goto	i2l298
 14180  012AAA                     i2l5570:
 14181                           
 14182                           ; BSR set to: 13
 14183  012AAA  010D               	movlb	13	; () banked
 14184  012AAC  5130               	movf	48,w,b	;volatile
 14185  012AAE  0B1F               	andlw	31
 14186                           
 14187                           ; Switch size 1, requested type "space"
 14188                           ; Number of cases is 3, Range of values is 0 to 2
 14189                           ; switch strategies available:
 14190                           ; Name         Instructions Cycles
 14191                           ; simple_byte           10     6 (average)
 14192                           ;	Chosen strategy is simple_byte
 14193  012AB0  0A00               	xorlw	0	; case 0
 14194  012AB2  B4D8               	btfsc	status,2,c
 14195  012AB4  D7C2               	goto	i2l295
 14196  012AB6  0A01               	xorlw	1	; case 1
 14197  012AB8  B4D8               	btfsc	status,2,c
 14198  012ABA  D7C6               	goto	i2l299
 14199  012ABC  0A03               	xorlw	3	; case 2
 14200  012ABE  B4D8               	btfsc	status,2,c
 14201  012AC0  D7C5               	goto	i2l300
 14202  012AC2                     i2l298:
 14203                           
 14204                           ; BSR set to: 13
 14205                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 14206  012AC2  AE0D               	btfss	_inPipes+3,7,c	;volatile
 14207  012AC4  0012               	return	
 14208                           
 14209                           ; BSR set to: 13
 14210                           ;usb_device.c: 2179: {
 14211                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 14212  012AC6  0E38               	movlw	56
 14213  012AC8  6E0A               	movwf	_inPipes,c	;volatile
 14214  012ACA  0E0D               	movlw	13
 14215  012ACC  6E0B               	movwf	_inPipes+1,c	;volatile
 14216                           
 14217                           ; BSR set to: 13
 14218                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14219  012ACE  800D               	bsf	_inPipes+3,0,c	;volatile
 14220                           
 14221                           ; BSR set to: 13
 14222                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 14223  012AD0  0E02               	movlw	2
 14224  012AD2  6E0E               	movwf	_inPipes+4,c	;volatile
 14225  012AD4  0012               	return	
 14226  012AD6                     __end_of_USBStdGetStatusHandler:
 14227                           	opt stack 0
 14228                           pclatu	equ	0xFFB
 14229                           pclath	equ	0xFFA
 14230                           tblptru	equ	0xFF8
 14231                           tblptrh	equ	0xFF7
 14232                           tblptrl	equ	0xFF6
 14233                           tablat	equ	0xFF5
 14234                           prodh	equ	0xFF4
 14235                           prodl	equ	0xFF3
 14236                           intcon	equ	0xFF2
 14237                           intcon2	equ	0xFF1
 14238                           indf0	equ	0xFEF
 14239                           postinc0	equ	0xFEE
 14240                           fsr0h	equ	0xFEA
 14241                           fsr0l	equ	0xFE9
 14242                           wreg	equ	0xFE8
 14243                           indf1	equ	0xFE7
 14244                           postinc1	equ	0xFE6
 14245                           postdec1	equ	0xFE5
 14246                           fsr1h	equ	0xFE2
 14247                           fsr1l	equ	0xFE1
 14248                           indf2	equ	0xFDF
 14249                           postinc2	equ	0xFDE
 14250                           postdec2	equ	0xFDD
 14251                           plusw2	equ	0xFDB
 14252                           fsr2h	equ	0xFDA
 14253                           fsr2l	equ	0xFD9
 14254                           status	equ	0xFD8
 14255                           
 14256 ;; *************** function _USBStdGetDscHandler *****************
 14257 ;; Defined at:
 14258 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 14259 ;; Parameters:    Size  Location     Type
 14260 ;;		None
 14261 ;; Auto vars:     Size  Location     Type
 14262 ;;		None
 14263 ;; Return value:  Size  Location     Type
 14264 ;;		None               void
 14265 ;; Registers used:
 14266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14267 ;; Tracked objects:
 14268 ;;		On entry : 0/0
 14269 ;;		On exit  : 0/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14276 ;;Total ram usage:        2 bytes
 14277 ;; Hardware stack levels used:    1
 14278 ;; This function calls:
 14279 ;;		Nothing
 14280 ;; This function is called by:
 14281 ;;		_USBCheckStdRequest
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           	psect	text74
 14286  0114B8                     __ptext74:
 14287                           	opt stack 0
 14288  0114B8                     _USBStdGetDscHandler:
 14289                           	opt stack 18
 14290                           
 14291                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 14292                           
 14293                           ; BSR set to: 13
 14294                           ;incstack = 0
 14295  0114B8  0E80               	movlw	128
 14296  0114BA  010D               	movlb	13	; () banked
 14297  0114BC  1930               	xorwf	48,w,b	;volatile
 14298  0114BE  A4D8               	btfss	status,2,c
 14299  0114C0  0012               	return	
 14300                           
 14301                           ; BSR set to: 13
 14302                           ;usb_device.c: 2046: {
 14303                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 14304  0114C2  0EC0               	movlw	192
 14305  0114C4  6E0D               	movwf	_inPipes+3,c	;volatile
 14306                           
 14307                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 14308  0114C6  D085               	goto	i2l5548
 14309  0114C8                     i2l5522:
 14310                           
 14311                           ; BSR set to: 13
 14312                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 14313  0114C8  0E46               	movlw	low _device_dsc
 14314  0114CA  6E0A               	movwf	_inPipes,c	;volatile
 14315  0114CC  0EFF               	movlw	high _device_dsc
 14316  0114CE  6E0B               	movwf	_inPipes+1,c	;volatile
 14317                           
 14318                           ; BSR set to: 13
 14319                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 14320  0114D0  0E00               	movlw	0
 14321  0114D2  6E0F               	movwf	_inPipes+5,c	;volatile
 14322  0114D4  0E12               	movlw	18
 14323  0114D6  6E0E               	movwf	_inPipes+4,c	;volatile
 14324                           
 14325                           ;usb_device.c: 2058: break;
 14326  0114D8  0012               	return	
 14327  0114DA                     i2l5526:
 14328                           
 14329                           ; BSR set to: 13
 14330                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 14331  0114DA  010D               	movlb	13	; () banked
 14332  0114DC  5132               	movf	50,w,b	;volatile
 14333  0114DE  A4D8               	btfss	status,2,c
 14334  0114E0  D043               	goto	i2l5534
 14335                           
 14336                           ; BSR set to: 13
 14337                           ;usb_device.c: 2064: {
 14338                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 14339  0114E2  010D               	movlb	13	; () banked
 14340  0114E4  5132               	movf	50,w,b	;volatile
 14341  0114E6  0D02               	mullw	2
 14342  0114E8  0E7D               	movlw	low _USB_CD_Ptr
 14343  0114EA  24F3               	addwf	prodl,w,c
 14344  0114EC  6EF6               	movwf	tblptrl,c
 14345  0114EE  0EFE               	movlw	high _USB_CD_Ptr
 14346  0114F0  20F4               	addwfc	prodh,w,c
 14347  0114F2  6EF7               	movwf	tblptrh,c
 14348  0114F4                     	if	1	;There are 3 active tblptr bytes
 14349  0114F4  6AF8               	clrf	tblptru,c
 14350  0114F6  0E00               	movlw	low (__mediumconst shr (0+16))
 14351  0114F8  22F8               	addwfc	tblptru,f,c
 14352  0114FA                     	endif
 14353  0114FA  0009               	tblrd		*+
 14354  0114FC  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 14355  011500  000A               	tblrd		*-
 14356  011502  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 14357                           
 14358                           ; BSR set to: 13
 14359                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 14360  011506  0E02               	movlw	2
 14361  011508  240A               	addwf	_inPipes,w,c	;volatile
 14362  01150A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14363  01150C  0E00               	movlw	0
 14364  01150E  200B               	addwfc	_inPipes+1,w,c	;volatile
 14365  011510  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14366  011512  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14367  011516  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14368  01151A  0E00               	movlw	low (__mediumconst shr (0+16))
 14369  01151C  6EF8               	movwf	tblptru,c
 14370  01151E  0E0E               	movlw	(high __ramtop+-1)
 14371  011520  64F7               	cpfsgt	tblptrh,c
 14372  011522  D003               	bra	i2u422_47
 14373  011524  0008               	tblrd		*
 14374  011526  50F5               	movf	tablat,w,c
 14375  011528  D005               	bra	i2u422_40
 14376  01152A                     i2u422_47:
 14377  01152A  CFF6 FFE9          	movff	tblptrl,fsr0l
 14378  01152E  CFF7 FFEA          	movff	tblptrh,fsr0h
 14379  011532  50EF               	movf	indf0,w,c
 14380  011534                     i2u422_40:
 14381  011534  6E0E               	movwf	_inPipes+4,c	;volatile
 14382                           
 14383                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 14384  011536  0E03               	movlw	3
 14385  011538  240A               	addwf	_inPipes,w,c	;volatile
 14386  01153A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14387  01153C  0E00               	movlw	0
 14388  01153E  200B               	addwfc	_inPipes+1,w,c	;volatile
 14389  011540  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14390  011542  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14391  011546  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14392  01154A  0E00               	movlw	low (__mediumconst shr (0+16))
 14393  01154C  6EF8               	movwf	tblptru,c
 14394  01154E  0E0E               	movlw	(high __ramtop+-1)
 14395  011550  64F7               	cpfsgt	tblptrh,c
 14396  011552  D003               	bra	i2u423_47
 14397  011554  0008               	tblrd		*
 14398  011556  50F5               	movf	tablat,w,c
 14399  011558  D005               	bra	i2u423_40
 14400  01155A                     i2u423_47:
 14401  01155A  CFF6 FFE9          	movff	tblptrl,fsr0l
 14402  01155E  CFF7 FFEA          	movff	tblptrh,fsr0h
 14403  011562  50EF               	movf	indf0,w,c
 14404  011564                     i2u423_40:
 14405  011564  6E0F               	movwf	_inPipes+5,c	;volatile
 14406                           
 14407                           ;usb_device.c: 2076: }
 14408  011566  0012               	return	
 14409  011568                     i2l5534:
 14410                           
 14411                           ;usb_device.c: 2077: else
 14412                           ;usb_device.c: 2078: {
 14413                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 14414  011568  0E00               	movlw	0
 14415  01156A  6E0D               	movwf	_inPipes+3,c	;volatile
 14416                           
 14417                           ;usb_device.c: 2080: }
 14418                           ;usb_device.c: 2081: break;
 14419  01156C  0012               	return	
 14420  01156E                     i2l5536:
 14421                           
 14422                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 14423  01156E  0E03               	movlw	3
 14424  011570  010D               	movlb	13	; () banked
 14425  011572  6132               	cpfslt	50,b	;volatile
 14426  011574  D028               	goto	i2l5542
 14427                           
 14428                           ; BSR set to: 13
 14429                           ;usb_device.c: 2087: {
 14430                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 14431  011576  010D               	movlb	13	; () banked
 14432  011578  5132               	movf	50,w,b	;volatile
 14433  01157A  0D02               	mullw	2
 14434  01157C  0E77               	movlw	low _USB_SD_Ptr
 14435  01157E  24F3               	addwf	prodl,w,c
 14436  011580  6EF6               	movwf	tblptrl,c
 14437  011582  0EFE               	movlw	high _USB_SD_Ptr
 14438  011584  20F4               	addwfc	prodh,w,c
 14439  011586  6EF7               	movwf	tblptrh,c
 14440  011588                     	if	1	;There are 3 active tblptr bytes
 14441  011588  6AF8               	clrf	tblptru,c
 14442  01158A  0E00               	movlw	low (__mediumconst shr (0+16))
 14443  01158C  22F8               	addwfc	tblptru,f,c
 14444  01158E                     	endif
 14445  01158E  0009               	tblrd		*+
 14446  011590  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 14447  011594  000A               	tblrd		*-
 14448  011596  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 14449                           
 14450                           ; BSR set to: 13
 14451                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 14452  01159A  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 14453  01159E  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 14454  0115A2  0E00               	movlw	low (__mediumconst shr (0+16))
 14455  0115A4  6EF8               	movwf	tblptru,c
 14456  0115A6  0E0E               	movlw	(high __ramtop+-1)
 14457  0115A8  64F7               	cpfsgt	tblptrh,c
 14458  0115AA  D003               	bra	i2u425_47
 14459  0115AC  0008               	tblrd		*
 14460  0115AE  50F5               	movf	tablat,w,c
 14461  0115B0  D005               	bra	i2u425_40
 14462  0115B2                     i2u425_47:
 14463  0115B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14464  0115B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14465  0115BA  50EF               	movf	indf0,w,c
 14466  0115BC                     i2u425_40:
 14467  0115BC  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14468  0115BE  502E               	movf	??_USBStdGetDscHandler,w,c
 14469  0115C0  6E0E               	movwf	_inPipes+4,c	;volatile
 14470  0115C2  6A0F               	clrf	_inPipes+5,c	;volatile
 14471                           
 14472                           ;usb_device.c: 2092: }
 14473  0115C4  0012               	return	
 14474  0115C6                     i2l5542:
 14475                           
 14476                           ;usb_device.c: 2102: else
 14477                           ;usb_device.c: 2103: {
 14478                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 14479  0115C6  0E00               	movlw	0
 14480  0115C8  6E0D               	movwf	_inPipes+3,c	;volatile
 14481                           
 14482                           ;usb_device.c: 2105: }
 14483                           ;usb_device.c: 2106: break;
 14484  0115CA  0012               	return	
 14485  0115CC                     i2l5544:
 14486                           
 14487                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 14488  0115CC  0E00               	movlw	0
 14489  0115CE  6E0D               	movwf	_inPipes+3,c	;volatile
 14490                           
 14491                           ;usb_device.c: 2110: }
 14492                           
 14493                           ;usb_device.c: 2109: break;
 14494  0115D0  0012               	return	
 14495  0115D2                     i2l5548:
 14496  0115D2  010D               	movlb	13	; () banked
 14497  0115D4  5133               	movf	51,w,b	;volatile
 14498                           
 14499                           ; Switch size 1, requested type "space"
 14500                           ; Number of cases is 3, Range of values is 1 to 3
 14501                           ; switch strategies available:
 14502                           ; Name         Instructions Cycles
 14503                           ; simple_byte           10     6 (average)
 14504                           ;	Chosen strategy is simple_byte
 14505  0115D6  0A01               	xorlw	1	; case 1
 14506  0115D8  B4D8               	btfsc	status,2,c
 14507  0115DA  D776               	goto	i2l5522
 14508  0115DC  0A03               	xorlw	3	; case 2
 14509  0115DE  B4D8               	btfsc	status,2,c
 14510  0115E0  D77C               	goto	i2l5526
 14511  0115E2  0A01               	xorlw	1	; case 3
 14512  0115E4  B4D8               	btfsc	status,2,c
 14513  0115E6  D7C3               	goto	i2l5536
 14514  0115E8  D7F1               	goto	i2l5544
 14515  0115EA                     __end_of_USBStdGetDscHandler:
 14516                           	opt stack 0
 14517                           pclatu	equ	0xFFB
 14518                           pclath	equ	0xFFA
 14519                           tblptru	equ	0xFF8
 14520                           tblptrh	equ	0xFF7
 14521                           tblptrl	equ	0xFF6
 14522                           tablat	equ	0xFF5
 14523                           prodh	equ	0xFF4
 14524                           prodl	equ	0xFF3
 14525                           intcon	equ	0xFF2
 14526                           intcon2	equ	0xFF1
 14527                           indf0	equ	0xFEF
 14528                           postinc0	equ	0xFEE
 14529                           fsr0h	equ	0xFEA
 14530                           fsr0l	equ	0xFE9
 14531                           wreg	equ	0xFE8
 14532                           indf1	equ	0xFE7
 14533                           postinc1	equ	0xFE6
 14534                           postdec1	equ	0xFE5
 14535                           fsr1h	equ	0xFE2
 14536                           fsr1l	equ	0xFE1
 14537                           indf2	equ	0xFDF
 14538                           postinc2	equ	0xFDE
 14539                           postdec2	equ	0xFDD
 14540                           plusw2	equ	0xFDB
 14541                           fsr2h	equ	0xFDA
 14542                           fsr2l	equ	0xFD9
 14543                           status	equ	0xFD8
 14544                           
 14545 ;; *************** function _USBStdFeatureReqHandler *****************
 14546 ;; Defined at:
 14547 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;		None
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;  p               2   24[COMRAM] PTR struct __BDT
 14552 ;;		 -> NULL(0), BDT(48), 
 14553 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 14554 ;;		 -> UEP0(1), 
 14555 ;;  current_ep_d    1   23[COMRAM] struct .
 14556 ;; Return value:  Size  Location     Type
 14557 ;;		None               void
 14558 ;; Registers used:
 14559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14566 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14568 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14569 ;;Total ram usage:        6 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:    4
 14572 ;; This function calls:
 14573 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14574 ;; This function is called by:
 14575 ;;		_USBCheckStdRequest
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579                           	psect	text75
 14580  0106E8                     __ptext75:
 14581                           	opt stack 0
 14582  0106E8                     _USBStdFeatureReqHandler:
 14583                           	opt stack 14
 14584                           
 14585                           ;usb_device.c: 2759: BDT_ENTRY *p;
 14586                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 14587                           ;usb_device.c: 2764: unsigned char* pUEP;
 14588                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 14589                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 14590                           
 14591                           ;incstack = 0
 14592  0106E8  010D               	movlb	13	; () banked
 14593  0106EA  0532               	decf	50,w,b	;volatile
 14594  0106EC  A4D8               	btfss	status,2,c
 14595  0106EE  D010               	goto	i2l374
 14596                           
 14597                           ; BSR set to: 13
 14598  0106F0  010D               	movlb	13	; () banked
 14599  0106F2  5130               	movf	48,w,b	;volatile
 14600  0106F4  0B1F               	andlw	31
 14601  0106F6  0900               	iorlw	0
 14602  0106F8  A4D8               	btfss	status,2,c
 14603  0106FA  D00A               	goto	i2l374
 14604                           
 14605                           ; BSR set to: 13
 14606                           ;usb_device.c: 2804: {
 14607                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 14608  0106FC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14609                           
 14610                           ; BSR set to: 13
 14611                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 14612  0106FE  0E03               	movlw	3
 14613  010700  010D               	movlb	13	; () banked
 14614  010702  1931               	xorwf	49,w,b	;volatile
 14615  010704  A4D8               	btfss	status,2,c
 14616  010706  D002               	goto	i2l5588
 14617                           
 14618                           ; BSR set to: 13
 14619                           ;usb_device.c: 2807: RemoteWakeup = 1;
 14620  010708  0E01               	movlw	1
 14621  01070A  D001               	goto	L6
 14622  01070C                     i2l5588:
 14623                           
 14624                           ; BSR set to: 13
 14625                           ;usb_device.c: 2808: else
 14626                           ;usb_device.c: 2809: RemoteWakeup = 0;
 14627  01070C  0E00               	movlw	0
 14628  01070E                     L6:
 14629  01070E  6E20               	movwf	_RemoteWakeup,c	;volatile
 14630  010710                     i2l374:
 14631                           
 14632                           ; BSR set to: 13
 14633                           ;usb_device.c: 2810: }
 14634                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 14635                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 14636                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 14637                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 14638  010710  010D               	movlb	13	; () banked
 14639  010712  5132               	movf	50,w,b	;volatile
 14640  010714  A4D8               	btfss	status,2,c
 14641  010716  0012               	return	
 14642                           
 14643                           ; BSR set to: 13
 14644  010718  010D               	movlb	13	; () banked
 14645  01071A  5130               	movf	48,w,b	;volatile
 14646  01071C  0B1F               	andlw	31
 14647  01071E  0A02               	xorlw	2
 14648  010720  A4D8               	btfss	status,2,c
 14649  010722  0012               	return	
 14650                           
 14651                           ; BSR set to: 13
 14652  010724  010D               	movlb	13	; () banked
 14653  010726  5134               	movf	52,w,b	;volatile
 14654  010728  0B0F               	andlw	15
 14655  01072A  0900               	iorlw	0
 14656  01072C  B4D8               	btfsc	status,2,c
 14657  01072E  0012               	return	
 14658                           
 14659                           ; BSR set to: 13
 14660  010730  010D               	movlb	13	; () banked
 14661  010732  5134               	movf	52,w,b	;volatile
 14662  010734  0B0F               	andlw	15
 14663  010736  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14664  010738  0E03               	movlw	3
 14665  01073A  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 14666  01073C  0012               	return	
 14667                           
 14668                           ; BSR set to: 13
 14669  01073E  0E20               	movlw	32
 14670  010740  1824               	xorwf	_USBDeviceState,w,c	;volatile
 14671  010742  A4D8               	btfss	status,2,c
 14672  010744  0012               	return	
 14673                           
 14674                           ; BSR set to: 13
 14675                           ;usb_device.c: 2817: {
 14676                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 14677  010746  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14678                           
 14679                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 14680  010748  010D               	movlb	13	; () banked
 14681  01074A  BF34               	btfsc	52,7,b	;volatile
 14682  01074C  D01B               	goto	i2l5602
 14683                           
 14684                           ; BSR set to: 13
 14685                           ;usb_device.c: 2824: {
 14686                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14687  01074E  010D               	movlb	13	; () banked
 14688  010750  5134               	movf	52,w,b	;volatile
 14689  010752  0B0F               	andlw	15
 14690  010754  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14691  010756  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14692  010758  0D02               	mullw	2
 14693  01075A  0E9E               	movlw	low _pBDTEntryOut
 14694  01075C  24F3               	addwf	prodl,w,c
 14695  01075E  6ED9               	movwf	fsr2l,c
 14696  010760  0E00               	movlw	high _pBDTEntryOut
 14697  010762  20F4               	addwfc	prodh,w,c
 14698  010764  6EDA               	movwf	fsr2h,c
 14699  010766  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 14700  01076A  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14701                           
 14702                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14703  01076E  010D               	movlb	13	; () banked
 14704  010770  5134               	movf	52,w,b	;volatile
 14705  010772  0B0F               	andlw	15
 14706  010774  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14707  010776  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14708  010778  0D01               	mullw	1
 14709  01077A  0EA4               	movlw	low _ep_data_out
 14710  01077C  24F3               	addwf	prodl,w,c
 14711  01077E  6ED9               	movwf	fsr2l,c
 14712  010780  0E00               	movlw	high _ep_data_out
 14713  010782  D01A               	goto	L7
 14714  010784                     i2l5602:
 14715                           
 14716                           ; BSR set to: 13
 14717                           ;usb_device.c: 2828: else
 14718                           ;usb_device.c: 2829: {
 14719                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 14720  010784  010D               	movlb	13	; () banked
 14721  010786  5134               	movf	52,w,b	;volatile
 14722  010788  0B0F               	andlw	15
 14723  01078A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14724  01078C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14725  01078E  0D02               	mullw	2
 14726  010790  0E10               	movlw	low _pBDTEntryIn
 14727  010792  24F3               	addwf	prodl,w,c
 14728  010794  6ED9               	movwf	fsr2l,c
 14729  010796  0E00               	movlw	high _pBDTEntryIn
 14730  010798  20F4               	addwfc	prodh,w,c
 14731  01079A  6EDA               	movwf	fsr2h,c
 14732  01079C  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 14733  0107A0  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14734                           
 14735                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14736  0107A4  010D               	movlb	13	; () banked
 14737  0107A6  5134               	movf	52,w,b	;volatile
 14738  0107A8  0B0F               	andlw	15
 14739  0107AA  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14740  0107AC  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14741  0107AE  0D01               	mullw	1
 14742  0107B0  0E16               	movlw	low _ep_data_in
 14743  0107B2  24F3               	addwf	prodl,w,c
 14744  0107B4  6ED9               	movwf	fsr2l,c
 14745  0107B6  0E00               	movlw	high _ep_data_in
 14746  0107B8                     L7:
 14747  0107B8  20F4               	addwfc	prodh,w,c
 14748  0107BA  6EDA               	movwf	fsr2h,c
 14749  0107BC  50DF               	movf	indf2,w,c
 14750  0107BE  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14751                           
 14752                           ; BSR set to: 13
 14753                           ;usb_device.c: 2832: }
 14754                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 14755                           
 14756                           ; BSR set to: 13
 14757  0107C0  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14758  0107C2  D002               	goto	i2l5608
 14759                           
 14760                           ; BSR set to: 13
 14761                           ;usb_device.c: 2839: {
 14762                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 14763  0107C4  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 14764                           
 14765                           ;usb_device.c: 2841: }
 14766  0107C6  D001               	goto	i2l5610
 14767  0107C8                     i2l5608:
 14768                           
 14769                           ; BSR set to: 13
 14770                           ;usb_device.c: 2842: else
 14771                           ;usb_device.c: 2843: {
 14772                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 14773  0107C8  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 14774  0107CA                     i2l5610:
 14775                           
 14776                           ; BSR set to: 13
 14777                           ;usb_device.c: 2845: }
 14778                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 14779  0107CA  010D               	movlb	13	; () banked
 14780  0107CC  BF34               	btfsc	52,7,b	;volatile
 14781  0107CE  D00B               	goto	i2l5614
 14782                           
 14783                           ; BSR set to: 13
 14784                           ;usb_device.c: 2851: {
 14785                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 14786  0107D0  010D               	movlb	13	; () banked
 14787  0107D2  5134               	movf	52,w,b	;volatile
 14788  0107D4  0B0F               	andlw	15
 14789  0107D6  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14790  0107D8  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14791  0107DA  0D02               	mullw	2
 14792  0107DC  0E9E               	movlw	low _pBDTEntryOut
 14793  0107DE  24F3               	addwf	prodl,w,c
 14794  0107E0  6ED9               	movwf	fsr2l,c
 14795  0107E2  0E00               	movlw	high _pBDTEntryOut
 14796  0107E4  D00A               	goto	L8
 14797  0107E6                     i2l5614:
 14798                           
 14799                           ; BSR set to: 13
 14800                           ;usb_device.c: 2854: else
 14801                           ;usb_device.c: 2855: {
 14802                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 14803  0107E6  010D               	movlb	13	; () banked
 14804  0107E8  5134               	movf	52,w,b	;volatile
 14805  0107EA  0B0F               	andlw	15
 14806  0107EC  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14807  0107EE  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14808  0107F0  0D02               	mullw	2
 14809  0107F2  0E10               	movlw	low _pBDTEntryIn
 14810  0107F4  24F3               	addwf	prodl,w,c
 14811  0107F6  6ED9               	movwf	fsr2l,c
 14812  0107F8  0E00               	movlw	high _pBDTEntryIn
 14813  0107FA                     L8:
 14814  0107FA  20F4               	addwfc	prodh,w,c
 14815  0107FC  6EDA               	movwf	fsr2h,c
 14816  0107FE  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14817  010802  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14818                           
 14819                           ; BSR set to: 13
 14820                           ;usb_device.c: 2857: }
 14821                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 14822                           
 14823                           ; BSR set to: 13
 14824  010806  0E03               	movlw	3
 14825  010808  010D               	movlb	13	; () banked
 14826  01080A  1931               	xorwf	49,w,b	;volatile
 14827  01080C  A4D8               	btfss	status,2,c
 14828  01080E  D031               	goto	i2l5630
 14829                           
 14830                           ; BSR set to: 13
 14831                           ;usb_device.c: 2861: {
 14832                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 14833  010810  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14834  010814  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14835  010818  AEDF               	btfss	indf2,7,c
 14836  01081A  D01E               	goto	i2l5626
 14837                           
 14838                           ; BSR set to: 13
 14839                           ;usb_device.c: 2863: {
 14840                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 14841  01081C  010D               	movlb	13	; () banked
 14842  01081E  BF34               	btfsc	52,7,b	;volatile
 14843  010820  D00E               	goto	i2l5624
 14844                           
 14845                           ; BSR set to: 13
 14846                           ;usb_device.c: 2867: {
 14847                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 14848  010822  010D               	movlb	13	; () banked
 14849  010824  5134               	movf	52,w,b	;volatile
 14850  010826  0B0F               	andlw	15
 14851  010828  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14852  01082A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14853  01082C  0D01               	mullw	1
 14854  01082E  0EA4               	movlw	low _ep_data_out
 14855  010830  24F3               	addwf	prodl,w,c
 14856  010832  6ED9               	movwf	fsr2l,c
 14857  010834  0E00               	movlw	high _ep_data_out
 14858  010836  20F4               	addwfc	prodh,w,c
 14859  010838  6EDA               	movwf	fsr2h,c
 14860  01083A  0100               	movlb	0	; () banked
 14861  01083C  D00C               	goto	L9
 14862  01083E                     i2l5624:
 14863                           
 14864                           ;usb_device.c: 2870: else
 14865                           ;usb_device.c: 2871: {
 14866                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 14867  01083E  010D               	movlb	13	; () banked
 14868  010840  5134               	movf	52,w,b	;volatile
 14869  010842  0B0F               	andlw	15
 14870  010844  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14871  010846  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14872  010848  0D01               	mullw	1
 14873  01084A  0E16               	movlw	low _ep_data_in
 14874  01084C  24F3               	addwf	prodl,w,c
 14875  01084E  6ED9               	movwf	fsr2l,c
 14876  010850  0E00               	movlw	high _ep_data_in
 14877  010852  20F4               	addwfc	prodh,w,c
 14878  010854  6EDA               	movwf	fsr2h,c
 14879  010856                     L9:
 14880  010856  82DF               	bsf	indf2,1,c
 14881  010858                     i2l5626:
 14882                           
 14883                           ;usb_device.c: 2873: }
 14884                           ;usb_device.c: 2874: }
 14885                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 14886  010858  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14887  01085C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14888  010860  0E00               	movlw	0
 14889  010862  84DB               	bsf	plusw2,2,c
 14890                           
 14891                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 14892  010864  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14893  010868  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14894  01086C  0E00               	movlw	0
 14895  01086E  8EDB               	bsf	plusw2,7,c
 14896                           
 14897                           ;usb_device.c: 2879: }
 14898  010870  0012               	return	
 14899  010872                     i2l5630:
 14900                           
 14901                           ;usb_device.c: 2880: else
 14902                           ;usb_device.c: 2881: {
 14903                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 14904  010872  0E04               	movlw	4
 14905  010874  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 14906                           
 14907                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 14908  010876  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14909  01087A  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14910  01087E  AEDF               	btfss	indf2,7,c
 14911  010880  D01B               	goto	i2l5640
 14912                           
 14913                           ;usb_device.c: 2888: {
 14914                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 14915  010882  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14916  010886  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14917  01088A  0E7F               	movlw	127
 14918  01088C  16DF               	andwf	indf2,f,c
 14919                           
 14920                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 14921  01088E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14922  010892  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14923  010896  0E00               	movlw	0
 14924  010898  8CDB               	bsf	plusw2,6,c
 14925                           
 14926                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14927  01089A  0E00               	movlw	0
 14928  01089C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14929  01089E  0E05               	movlw	5
 14930  0108A0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14931  0108A2  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14932  0108A6  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14933  0108AA  0E00               	movlw	0
 14934  0108AC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14935  0108AE  0E02               	movlw	2
 14936  0108B0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14937  0108B2  EC26  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14938                           
 14939                           ;usb_device.c: 2894: }
 14940  0108B6  D006               	goto	i2l5642
 14941  0108B8                     i2l5640:
 14942                           
 14943                           ;usb_device.c: 2895: else
 14944                           ;usb_device.c: 2896: {
 14945                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 14946  0108B8  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14947  0108BC  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14948  0108C0  0E00               	movlw	0
 14949  0108C2  8CDB               	bsf	plusw2,6,c
 14950  0108C4                     i2l5642:
 14951                           
 14952                           ;usb_device.c: 2899: }
 14953                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 14954  0108C4  0E04               	movlw	4
 14955  0108C6  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 14956                           
 14957                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14958  0108C8  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14959  0108CA  D006               	goto	i2l393
 14960  0108CC  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14961  0108D0  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14962  0108D4  AEDF               	btfss	indf2,7,c
 14963  0108D6  D033               	goto	i2l5656
 14964  0108D8                     i2l393:
 14965                           
 14966                           ;usb_device.c: 2910: {
 14967                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 14968  0108D8  010D               	movlb	13	; () banked
 14969  0108DA  BF34               	btfsc	52,7,b	;volatile
 14970  0108DC  D00E               	goto	i2l5650
 14971                           
 14972                           ; BSR set to: 13
 14973                           ;usb_device.c: 2912: {
 14974                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 14975  0108DE  010D               	movlb	13	; () banked
 14976  0108E0  5134               	movf	52,w,b	;volatile
 14977  0108E2  0B0F               	andlw	15
 14978  0108E4  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14979  0108E6  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14980  0108E8  0D01               	mullw	1
 14981  0108EA  0EA4               	movlw	low _ep_data_out
 14982  0108EC  24F3               	addwf	prodl,w,c
 14983  0108EE  6ED9               	movwf	fsr2l,c
 14984  0108F0  0E00               	movlw	high _ep_data_out
 14985  0108F2  20F4               	addwfc	prodh,w,c
 14986  0108F4  6EDA               	movwf	fsr2h,c
 14987  0108F6  0100               	movlb	0	; () banked
 14988  0108F8  D00C               	goto	L10
 14989  0108FA                     i2l5650:
 14990                           
 14991                           ;usb_device.c: 2915: else
 14992                           ;usb_device.c: 2916: {
 14993                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 14994  0108FA  010D               	movlb	13	; () banked
 14995  0108FC  5134               	movf	52,w,b	;volatile
 14996  0108FE  0B0F               	andlw	15
 14997  010900  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14998  010902  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14999  010904  0D01               	mullw	1
 15000  010906  0E16               	movlw	low _ep_data_in
 15001  010908  24F3               	addwf	prodl,w,c
 15002  01090A  6ED9               	movwf	fsr2l,c
 15003  01090C  0E00               	movlw	high _ep_data_in
 15004  01090E  20F4               	addwfc	prodh,w,c
 15005  010910  6EDA               	movwf	fsr2h,c
 15006  010912                     L10:
 15007  010912  92DF               	bcf	indf2,1,c
 15008                           
 15009                           ;usb_device.c: 2918: }
 15010                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15011                           
 15012                           ; BSR set to: 13
 15013  010914  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15014  010918  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15015  01091C  0E3B               	movlw	59
 15016  01091E  16DF               	andwf	indf2,f,c
 15017                           
 15018                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15019  010920  0E00               	movlw	0
 15020  010922  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15021  010924  0E05               	movlw	5
 15022  010926  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15023  010928  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15024  01092C  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15025  010930  0E00               	movlw	0
 15026  010932  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15027  010934  0E02               	movlw	2
 15028  010936  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15029  010938  EC26  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15030                           
 15031                           ;usb_device.c: 2924: }
 15032  01093C  D006               	goto	i2l5658
 15033  01093E                     i2l5656:
 15034                           
 15035                           ;usb_device.c: 2925: else
 15036                           ;usb_device.c: 2926: {
 15037                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15038  01093E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15039  010942  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15040  010946  0E3B               	movlw	59
 15041  010948  16DF               	andwf	indf2,f,c
 15042  01094A                     i2l5658:
 15043                           
 15044                           ;usb_device.c: 2929: }
 15045                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 15046  01094A  010D               	movlb	13	; () banked
 15047  01094C  5134               	movf	52,w,b	;volatile
 15048  01094E  0B0F               	andlw	15
 15049  010950  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15050  010952  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15051  010954  0D01               	mullw	1
 15052  010956  0E26               	movlw	38
 15053  010958  24F3               	addwf	prodl,w,c
 15054  01095A  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 15055  01095C  0E0F               	movlw	15
 15056  01095E  20F4               	addwfc	prodh,w,c
 15057  010960  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 15058                           
 15059                           ; BSR set to: 13
 15060                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 15061  010962  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 15062  010966  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 15063  01096A  0EFE               	movlw	254
 15064  01096C  16DF               	andwf	indf2,f,c
 15065                           
 15066                           ; BSR set to: 13
 15067  01096E  0012               	return	
 15068  010970                     __end_of_USBStdFeatureReqHandler:
 15069                           	opt stack 0
 15070                           pclatu	equ	0xFFB
 15071                           pclath	equ	0xFFA
 15072                           tblptru	equ	0xFF8
 15073                           tblptrh	equ	0xFF7
 15074                           tblptrl	equ	0xFF6
 15075                           tablat	equ	0xFF5
 15076                           prodh	equ	0xFF4
 15077                           prodl	equ	0xFF3
 15078                           intcon	equ	0xFF2
 15079                           intcon2	equ	0xFF1
 15080                           indf0	equ	0xFEF
 15081                           postinc0	equ	0xFEE
 15082                           fsr0h	equ	0xFEA
 15083                           fsr0l	equ	0xFE9
 15084                           wreg	equ	0xFE8
 15085                           indf1	equ	0xFE7
 15086                           postinc1	equ	0xFE6
 15087                           postdec1	equ	0xFE5
 15088                           fsr1h	equ	0xFE2
 15089                           fsr1l	equ	0xFE1
 15090                           indf2	equ	0xFDF
 15091                           postinc2	equ	0xFDE
 15092                           postdec2	equ	0xFDD
 15093                           plusw2	equ	0xFDB
 15094                           fsr2h	equ	0xFDA
 15095                           fsr2l	equ	0xFD9
 15096                           status	equ	0xFD8
 15097                           
 15098 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 15099 ;; Defined at:
 15100 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;  event           2   12[COMRAM] enum E8545
 15103 ;;  pdata           2   14[COMRAM] PTR void 
 15104 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 15105 ;;  size            2   16[COMRAM] unsigned int 
 15106 ;; Auto vars:     Size  Location     Type
 15107 ;;		None
 15108 ;; Return value:  Size  Location     Type
 15109 ;;                  1    wreg      unsigned char 
 15110 ;; Registers used:
 15111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15112 ;; Tracked objects:
 15113 ;;		On entry : 0/0
 15114 ;;		On exit  : 0/0
 15115 ;;		Unchanged: 0/0
 15116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15120 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15121 ;;Total ram usage:        8 bytes
 15122 ;; Hardware stack levels used:    1
 15123 ;; Hardware stack levels required when called:    3
 15124 ;; This function calls:
 15125 ;;		_CDCInitEP
 15126 ;;		_USBCheckCDCRequest
 15127 ;; This function is called by:
 15128 ;;		_USBDeviceTasks
 15129 ;;		_USBStdSetCfgHandler
 15130 ;;		_USBSuspend
 15131 ;;		_USBWakeFromSuspend
 15132 ;;		_USBCtrlTrfSetupHandler
 15133 ;;		_USBCheckStdRequest
 15134 ;;		_USBStdFeatureReqHandler
 15135 ;; This function uses a non-reentrant model
 15136 ;;
 15137                           
 15138                           	psect	text76
 15139  01364C                     __ptext76:
 15140                           	opt stack 0
 15141  01364C                     _USER_USB_CALLBACK_EVENT_HANDLER:
 15142                           	opt stack 18
 15143                           
 15144                           ;My_usb_cdc.c: 45: switch ((int) event) {
 15145                           
 15146                           ;incstack = 0
 15147  01364C  D006               	goto	i2l5366
 15148  01364E                     i2l5360:
 15149                           
 15150                           ;My_usb_cdc.c: 47: CDCInitEP();
 15151  01364E  EC23  F098         	call	_CDCInitEP	;wreg free
 15152                           
 15153                           ;My_usb_cdc.c: 48: break;
 15154  013652  0012               	return	
 15155  013654                     i2l5362:
 15156                           
 15157                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 15158  013654  EC68  F094         	call	_USBCheckCDCRequest	;wreg free
 15159                           
 15160                           ;My_usb_cdc.c: 52: }
 15161                           
 15162                           ;My_usb_cdc.c: 51: break;
 15163  013658  0012               	return	
 15164  01365A                     i2l5366:
 15165  01365A  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 15166  01365E  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 15167                           
 15168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15169                           ; Switch size 1, requested type "space"
 15170                           ; Number of cases is 1, Range of values is 0 to 0
 15171                           ; switch strategies available:
 15172                           ; Name         Instructions Cycles
 15173                           ; simple_byte            4     3 (average)
 15174                           ;	Chosen strategy is simple_byte
 15175  013662  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 15176  013664  0A00               	xorlw	0	; case 0
 15177  013666  A4D8               	btfss	status,2,c
 15178  013668  0012               	return	
 15179                           
 15180                           ; Switch size 1, requested type "space"
 15181                           ; Number of cases is 2, Range of values is 1 to 3
 15182                           ; switch strategies available:
 15183                           ; Name         Instructions Cycles
 15184                           ; simple_byte            7     4 (average)
 15185                           ;	Chosen strategy is simple_byte
 15186  01366A  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15187  01366C  0A01               	xorlw	1	; case 1
 15188  01366E  B4D8               	btfsc	status,2,c
 15189  013670  D7EE               	goto	i2l5360
 15190  013672  0A02               	xorlw	2	; case 3
 15191  013674  A4D8               	btfss	status,2,c
 15192  013676  0012               	return	
 15193  013678  D7ED               	goto	i2l5362
 15194  01367A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 15195                           	opt stack 0
 15196                           pclatu	equ	0xFFB
 15197                           pclath	equ	0xFFA
 15198                           tblptru	equ	0xFF8
 15199                           tblptrh	equ	0xFF7
 15200                           tblptrl	equ	0xFF6
 15201                           tablat	equ	0xFF5
 15202                           prodh	equ	0xFF4
 15203                           prodl	equ	0xFF3
 15204                           intcon	equ	0xFF2
 15205                           intcon2	equ	0xFF1
 15206                           indf0	equ	0xFEF
 15207                           postinc0	equ	0xFEE
 15208                           fsr0h	equ	0xFEA
 15209                           fsr0l	equ	0xFE9
 15210                           wreg	equ	0xFE8
 15211                           indf1	equ	0xFE7
 15212                           postinc1	equ	0xFE6
 15213                           postdec1	equ	0xFE5
 15214                           fsr1h	equ	0xFE2
 15215                           fsr1l	equ	0xFE1
 15216                           indf2	equ	0xFDF
 15217                           postinc2	equ	0xFDE
 15218                           postdec2	equ	0xFDD
 15219                           plusw2	equ	0xFDB
 15220                           fsr2h	equ	0xFDA
 15221                           fsr2l	equ	0xFD9
 15222                           status	equ	0xFD8
 15223                           
 15224 ;; *************** function _USBCheckCDCRequest *****************
 15225 ;; Defined at:
 15226 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 15227 ;; Parameters:    Size  Location     Type
 15228 ;;		None
 15229 ;; Auto vars:     Size  Location     Type
 15230 ;;		None
 15231 ;; Return value:  Size  Location     Type
 15232 ;;		None               void
 15233 ;; Registers used:
 15234 ;;		wreg, status,2, status,0
 15235 ;; Tracked objects:
 15236 ;;		On entry : 0/0
 15237 ;;		On exit  : 0/0
 15238 ;;		Unchanged: 0/0
 15239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15244 ;;Total ram usage:        0 bytes
 15245 ;; Hardware stack levels used:    1
 15246 ;; This function calls:
 15247 ;;		Nothing
 15248 ;; This function is called by:
 15249 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15250 ;; This function uses a non-reentrant model
 15251 ;;
 15252                           
 15253                           	psect	text77
 15254  0128D0                     __ptext77:
 15255                           	opt stack 0
 15256  0128D0                     _USBCheckCDCRequest:
 15257                           	opt stack 20
 15258                           
 15259                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 15260                           
 15261                           ;incstack = 0
 15262  0128D0  010D               	movlb	13	; () banked
 15263  0128D2  5130               	movf	48,w,b	;volatile
 15264  0128D4  0B1F               	andlw	31
 15265  0128D6  06E8               	decf	wreg,f,c
 15266  0128D8  A4D8               	btfss	status,2,c
 15267  0128DA  0012               	return	
 15268                           
 15269                           ; BSR set to: 13
 15270                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 15271                           
 15272                           ; BSR set to: 13
 15273                           
 15274                           ; BSR set to: 13
 15275  0128DC  010D               	movlb	13	; () banked
 15276  0128DE  3930               	swapf	48,w,b	;volatile
 15277  0128E0  32E8               	rrcf	wreg,f,c
 15278  0128E2  0B03               	andlw	3
 15279  0128E4  06E8               	decf	wreg,f,c
 15280  0128E6  A4D8               	btfss	status,2,c
 15281  0128E8  0012               	return	
 15282                           
 15283                           ; BSR set to: 13
 15284                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 15285                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 15286                           
 15287                           ; BSR set to: 13
 15288                           
 15289                           ; BSR set to: 13
 15290  0128EA  010D               	movlb	13	; () banked
 15291  0128EC  5134               	movf	52,w,b	;volatile
 15292  0128EE  B4D8               	btfsc	status,2,c
 15293  0128F0  D035               	goto	i2l5344
 15294                           
 15295                           ; BSR set to: 13
 15296  0128F2  010D               	movlb	13	; () banked
 15297  0128F4  0534               	decf	52,w,b	;volatile
 15298  0128F6  A4D8               	btfss	status,2,c
 15299  0128F8  0012               	return	
 15300  0128FA  D030               	goto	i2l5344
 15301  0128FC                     i2l5320:
 15302                           
 15303                           ; BSR set to: 13
 15304                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 15305  0128FC  0EC6               	movlw	low _dummy_encapsulated_cmd_response
 15306  0128FE  6E0A               	movwf	_inPipes,c	;volatile
 15307  012900  0E01               	movlw	high _dummy_encapsulated_cmd_response
 15308  012902  6E0B               	movwf	_inPipes+1,c	;volatile
 15309                           
 15310                           ; BSR set to: 13
 15311                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 15312  012904  0E00               	movlw	0
 15313  012906  6E0F               	movwf	_inPipes+5,c	;volatile
 15314  012908  0E08               	movlw	8
 15315  01290A  6E0E               	movwf	_inPipes+4,c	;volatile
 15316                           
 15317                           ; BSR set to: 13
 15318                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15319  01290C  800D               	bsf	_inPipes+3,0,c	;volatile
 15320                           
 15321                           ; BSR set to: 13
 15322                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 15323  01290E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15324                           
 15325                           ;usb_device_cdc.c: 232: break;
 15326  012910  0012               	return	
 15327  012912                     i2l5328:
 15328                           
 15329                           ; BSR set to: 13
 15330                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 15331  012912  0EC6               	movlw	low _dummy_encapsulated_cmd_response
 15332  012914  6E0A               	movwf	_inPipes,c	;volatile
 15333  012916  0E01               	movlw	high _dummy_encapsulated_cmd_response
 15334  012918  6E0B               	movwf	_inPipes+1,c	;volatile
 15335                           
 15336                           ; BSR set to: 13
 15337                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 15338  01291A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15339                           
 15340                           ;usb_device_cdc.c: 237: break;
 15341  01291C  0012               	return	
 15342  01291E                     i2l450:
 15343                           
 15344                           ; BSR set to: 13
 15345                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 15346  01291E  CD36 F005          	movff	3382,_outPipes+4	;volatile
 15347  012922  CD37 F006          	movff	3383,_outPipes+5	;volatile
 15348                           
 15349                           ; BSR set to: 13
 15350                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 15351  012926  0EEE               	movlw	low _line_coding
 15352  012928  6E01               	movwf	_outPipes,c	;volatile
 15353  01292A  0E01               	movlw	high _line_coding
 15354  01292C  6E02               	movwf	_outPipes+1,c	;volatile
 15355                           
 15356                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 15357  01292E  0E00               	movlw	0
 15358  012930  6E07               	movwf	_outPipes+6,c	;volatile
 15359  012932  0E00               	movlw	0
 15360  012934  6E08               	movwf	_outPipes+7,c	;volatile
 15361  012936  0E00               	movlw	0
 15362  012938  6E09               	movwf	_outPipes+8,c	;volatile
 15363                           
 15364                           ; BSR set to: 13
 15365                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 15366  01293A  8E04               	bsf	_outPipes+3,7,c	;volatile
 15367                           
 15368                           ;usb_device_cdc.c: 246: break;
 15369  01293C  0012               	return	
 15370  01293E                     i2l5336:
 15371                           
 15372                           ; BSR set to: 13
 15373                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15374  01293E  0EEE               	movlw	low _line_coding
 15375  012940  6E0A               	movwf	_inPipes,c	;volatile
 15376  012942  0E01               	movlw	high _line_coding
 15377  012944  6E0B               	movwf	_inPipes+1,c	;volatile
 15378                           
 15379                           ; BSR set to: 13
 15380  012946  0E00               	movlw	0
 15381  012948  6E0F               	movwf	_inPipes+5,c	;volatile
 15382  01294A  0E07               	movlw	7
 15383  01294C  6E0E               	movwf	_inPipes+4,c	;volatile
 15384                           
 15385                           ; BSR set to: 13
 15386  01294E  0EC1               	movlw	193
 15387  012950  6E0D               	movwf	_inPipes+3,c	;volatile
 15388                           
 15389                           ;usb_device_cdc.c: 253: break;
 15390  012952  0012               	return	
 15391  012954                     i2l452:
 15392                           
 15393                           ; BSR set to: 13
 15394                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 15395  012954  CD32 F0C0          	movff	3378,_control_signal_bitmap	;volatile
 15396                           
 15397                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 15398  012958  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15399                           
 15400                           ; BSR set to: 13
 15401                           ;usb_device_cdc.c: 315: }
 15402                           
 15403                           ; BSR set to: 13
 15404                           ;usb_device_cdc.c: 314: break;
 15405                           
 15406                           ;usb_device_cdc.c: 313: default:
 15407                           
 15408                           ;usb_device_cdc.c: 289: break;
 15409  01295A  0012               	return	
 15410  01295C                     i2l5344:
 15411                           
 15412                           ; BSR set to: 13
 15413  01295C  010D               	movlb	13	; () banked
 15414  01295E  5131               	movf	49,w,b	;volatile
 15415                           
 15416                           ; Switch size 1, requested type "space"
 15417                           ; Number of cases is 5, Range of values is 0 to 34
 15418                           ; switch strategies available:
 15419                           ; Name         Instructions Cycles
 15420                           ; simple_byte           16     9 (average)
 15421                           ;	Chosen strategy is simple_byte
 15422  012960  0A00               	xorlw	0	; case 0
 15423  012962  B4D8               	btfsc	status,2,c
 15424  012964  D7CB               	goto	i2l5320
 15425  012966  0A01               	xorlw	1	; case 1
 15426  012968  B4D8               	btfsc	status,2,c
 15427  01296A  D7D3               	goto	i2l5328
 15428  01296C  0A21               	xorlw	33	; case 32
 15429  01296E  B4D8               	btfsc	status,2,c
 15430  012970  D7D6               	goto	i2l450
 15431  012972  0A01               	xorlw	1	; case 33
 15432  012974  B4D8               	btfsc	status,2,c
 15433  012976  D7E3               	goto	i2l5336
 15434  012978  0A03               	xorlw	3	; case 34
 15435  01297A  A4D8               	btfss	status,2,c
 15436  01297C  0012               	return	
 15437  01297E  D7EA               	goto	i2l452
 15438  012980                     __end_of_USBCheckCDCRequest:
 15439                           	opt stack 0
 15440                           pclatu	equ	0xFFB
 15441                           pclath	equ	0xFFA
 15442                           tblptru	equ	0xFF8
 15443                           tblptrh	equ	0xFF7
 15444                           tblptrl	equ	0xFF6
 15445                           tablat	equ	0xFF5
 15446                           prodh	equ	0xFF4
 15447                           prodl	equ	0xFF3
 15448                           intcon	equ	0xFF2
 15449                           intcon2	equ	0xFF1
 15450                           indf0	equ	0xFEF
 15451                           postinc0	equ	0xFEE
 15452                           fsr0h	equ	0xFEA
 15453                           fsr0l	equ	0xFE9
 15454                           wreg	equ	0xFE8
 15455                           indf1	equ	0xFE7
 15456                           postinc1	equ	0xFE6
 15457                           postdec1	equ	0xFE5
 15458                           fsr1h	equ	0xFE2
 15459                           fsr1l	equ	0xFE1
 15460                           indf2	equ	0xFDF
 15461                           postinc2	equ	0xFDE
 15462                           postdec2	equ	0xFDD
 15463                           plusw2	equ	0xFDB
 15464                           fsr2h	equ	0xFDA
 15465                           fsr2l	equ	0xFD9
 15466                           status	equ	0xFD8
 15467                           
 15468 ;; *************** function _CDCInitEP *****************
 15469 ;; Defined at:
 15470 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 15471 ;; Parameters:    Size  Location     Type
 15472 ;;		None
 15473 ;; Auto vars:     Size  Location     Type
 15474 ;;		None
 15475 ;; Return value:  Size  Location     Type
 15476 ;;		None               void
 15477 ;; Registers used:
 15478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15479 ;; Tracked objects:
 15480 ;;		On entry : 0/0
 15481 ;;		On exit  : 0/0
 15482 ;;		Unchanged: 0/0
 15483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15488 ;;Total ram usage:        0 bytes
 15489 ;; Hardware stack levels used:    1
 15490 ;; Hardware stack levels required when called:    2
 15491 ;; This function calls:
 15492 ;;		_USBEnableEndpoint
 15493 ;;		i2_USBTransferOnePacket
 15494 ;; This function is called by:
 15495 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499                           	psect	text78
 15500  013046                     __ptext78:
 15501                           	opt stack 0
 15502  013046                     _CDCInitEP:
 15503                           	opt stack 18
 15504                           
 15505                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 15506                           
 15507                           ; BSR set to: 13
 15508                           ;incstack = 0
 15509  013046  0E00               	movlw	0
 15510  013048  0101               	movlb	1	; () banked
 15511  01304A  6FEE               	movwf	_line_coding& (0+255),b
 15512  01304C  0E4B               	movlw	75
 15513  01304E  6FEF               	movwf	(_line_coding+1)& (0+255),b
 15514  013050  0E00               	movlw	0
 15515  013052  6FF0               	movwf	(_line_coding+2)& (0+255),b
 15516  013054  0E00               	movlw	0
 15517  013056  6FF1               	movwf	(_line_coding+3)& (0+255),b
 15518                           
 15519                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 15520  013058  0E00               	movlw	0
 15521  01305A  0101               	movlb	1	; () banked
 15522  01305C  6FF2               	movwf	(_line_coding+4)& (0+255),b
 15523                           
 15524                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 15525  01305E  0E00               	movlw	0
 15526  013060  0101               	movlb	1	; () banked
 15527  013062  6FF3               	movwf	(_line_coding+5)& (0+255),b
 15528                           
 15529                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 15530  013064  0E08               	movlw	8
 15531  013066  0101               	movlb	1	; () banked
 15532  013068  6FF4               	movwf	(_line_coding+6)& (0+255),b
 15533                           
 15534                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 15535  01306A  0E00               	movlw	0
 15536  01306C  0100               	movlb	0	; () banked
 15537  01306E  6FBE               	movwf	_cdc_rx_len& (0+255),b
 15538                           
 15539                           ; BSR set to: 0
 15540                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 15541  013070  0E1A               	movlw	26
 15542  013072  6E36               	movwf	USBEnableEndpoint@options,c
 15543  013074  0E01               	movlw	1
 15544  013076  EC31  F09A         	call	_USBEnableEndpoint
 15545                           
 15546                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 15547  01307A  0E1E               	movlw	30
 15548  01307C  6E36               	movwf	USBEnableEndpoint@options,c
 15549  01307E  0E02               	movlw	2
 15550  013080  EC31  F09A         	call	_USBEnableEndpoint
 15551                           
 15552                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15553  013084  0E00               	movlw	0
 15554  013086  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 15555  013088  0E14               	movlw	low _cdc_data_rx
 15556  01308A  6E2F               	movwf	i2USBTransferOnePacket@data,c
 15557  01308C  0E01               	movlw	high _cdc_data_rx
 15558  01308E  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 15559  013090  0E40               	movlw	64
 15560  013092  6E31               	movwf	i2USBTransferOnePacket@len,c
 15561  013094  0E02               	movlw	2
 15562  013096  EC53  F093         	call	i2_USBTransferOnePacket
 15563  01309A  C02E  F0B3         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 15564  01309E  C02F  F0B4         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15565                           
 15566                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 15567  0130A2  0E00               	movlw	0
 15568  0130A4  0100               	movlb	0	; () banked
 15569  0130A6  6FB1               	movwf	_CDCDataInHandle& (0+255),b
 15570  0130A8  0E00               	movlw	0
 15571  0130AA  0100               	movlb	0	; () banked
 15572  0130AC  6FB2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 15573                           
 15574                           ; BSR set to: 0
 15575                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 15576  0130AE  0E00               	movlw	0
 15577  0130B0  6E28               	movwf	_cdc_trf_state,c
 15578                           
 15579                           ; BSR set to: 0
 15580  0130B2  0012               	return		;funcret
 15581  0130B4                     __end_of_CDCInitEP:
 15582                           	opt stack 0
 15583                           pclatu	equ	0xFFB
 15584                           pclath	equ	0xFFA
 15585                           tblptru	equ	0xFF8
 15586                           tblptrh	equ	0xFF7
 15587                           tblptrl	equ	0xFF6
 15588                           tablat	equ	0xFF5
 15589                           prodh	equ	0xFF4
 15590                           prodl	equ	0xFF3
 15591                           intcon	equ	0xFF2
 15592                           intcon2	equ	0xFF1
 15593                           indf0	equ	0xFEF
 15594                           postinc0	equ	0xFEE
 15595                           fsr0h	equ	0xFEA
 15596                           fsr0l	equ	0xFE9
 15597                           wreg	equ	0xFE8
 15598                           indf1	equ	0xFE7
 15599                           postinc1	equ	0xFE6
 15600                           postdec1	equ	0xFE5
 15601                           fsr1h	equ	0xFE2
 15602                           fsr1l	equ	0xFE1
 15603                           indf2	equ	0xFDF
 15604                           postinc2	equ	0xFDE
 15605                           postdec2	equ	0xFDD
 15606                           plusw2	equ	0xFDB
 15607                           fsr2h	equ	0xFDA
 15608                           fsr2l	equ	0xFD9
 15609                           status	equ	0xFD8
 15610                           
 15611 ;; *************** function i2_USBTransferOnePacket *****************
 15612 ;; Defined at:
 15613 ;;		line 995 in file "../My_library/usb/usb_device.c"
 15614 ;; Parameters:    Size  Location     Type
 15615 ;;  ep              1    wreg     unsigned char 
 15616 ;;  dir             1    0[COMRAM] unsigned char 
 15617 ;;  data            2    1[COMRAM] PTR unsigned char 
 15618 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 15619 ;;  len             1    3[COMRAM] unsigned char 
 15620 ;; Auto vars:     Size  Location     Type
 15621 ;;  ep              1    4[COMRAM] unsigned char 
 15622 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 15623 ;;		 -> NULL(0), BDT(48), 
 15624 ;; Return value:  Size  Location     Type
 15625 ;;                  2    0[COMRAM] PTR void 
 15626 ;; Registers used:
 15627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15628 ;; Tracked objects:
 15629 ;;		On entry : 0/0
 15630 ;;		On exit  : 0/0
 15631 ;;		Unchanged: 0/0
 15632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15634 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15636 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15637 ;;Total ram usage:        7 bytes
 15638 ;; Hardware stack levels used:    1
 15639 ;; This function calls:
 15640 ;;		Nothing
 15641 ;; This function is called by:
 15642 ;;		_CDCInitEP
 15643 ;; This function uses a non-reentrant model
 15644 ;;
 15645                           
 15646                           	psect	text79
 15647  0126A6                     __ptext79:
 15648                           	opt stack 0
 15649  0126A6                     i2_USBTransferOnePacket:
 15650                           	opt stack 19
 15651                           
 15652                           ; BSR set to: 0
 15653                           ;incstack = 0
 15654                           ;i2USBTransferOnePacket@ep stored from wreg
 15655  0126A6  6E32               	movwf	i2USBTransferOnePacket@ep,c
 15656                           
 15657                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 15658                           ;usb_device.c: 1000: if(dir != 0)
 15659  0126A8  502E               	movf	i2USBTransferOnePacket@dir,w,c
 15660  0126AA  B4D8               	btfsc	status,2,c
 15661  0126AC  D007               	goto	i2l5280
 15662                           
 15663                           ;usb_device.c: 1001: {
 15664                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 15665  0126AE  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15666  0126B0  0D02               	mullw	2
 15667  0126B2  0E10               	movlw	low _pBDTEntryIn
 15668  0126B4  24F3               	addwf	prodl,w,c
 15669  0126B6  6ED9               	movwf	fsr2l,c
 15670  0126B8  0E00               	movlw	high _pBDTEntryIn
 15671  0126BA  D006               	goto	L11
 15672  0126BC                     i2l5280:
 15673                           
 15674                           ;usb_device.c: 1005: else
 15675                           ;usb_device.c: 1006: {
 15676                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 15677  0126BC  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15678  0126BE  0D02               	mullw	2
 15679  0126C0  0E9E               	movlw	low _pBDTEntryOut
 15680  0126C2  24F3               	addwf	prodl,w,c
 15681  0126C4  6ED9               	movwf	fsr2l,c
 15682  0126C6  0E00               	movlw	high _pBDTEntryOut
 15683  0126C8                     L11:
 15684  0126C8  20F4               	addwfc	prodh,w,c
 15685  0126CA  6EDA               	movwf	fsr2h,c
 15686  0126CC  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 15687  0126D0  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 15688                           
 15689                           ;usb_device.c: 1009: }
 15690                           ;usb_device.c: 1013: if(handle == 0)
 15691  0126D4  5033               	movf	i2USBTransferOnePacket@handle,w,c
 15692  0126D6  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 15693  0126D8  A4D8               	btfss	status,2,c
 15694  0126DA  D005               	goto	i2l5288
 15695                           
 15696                           ;usb_device.c: 1014: {
 15697                           ;usb_device.c: 1015: return 0;
 15698  0126DC  0E00               	movlw	0
 15699  0126DE  6E2E               	movwf	?i2_USBTransferOnePacket,c
 15700  0126E0  0E00               	movlw	0
 15701  0126E2  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 15702  0126E4  0012               	return	
 15703  0126E6                     i2l5288:
 15704                           
 15705                           ;usb_device.c: 1016: }
 15706                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 15707  0126E6  EE20 F002          	lfsr	2,2
 15708  0126EA  5033               	movf	i2USBTransferOnePacket@handle,w,c
 15709  0126EC  26D9               	addwf	fsr2l,f,c
 15710  0126EE  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 15711  0126F0  22DA               	addwfc	fsr2h,f,c
 15712  0126F2  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 15713  0126F6  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 15714                           
 15715                           ;usb_device.c: 1030: handle->CNT = len;
 15716  0126FA  EE20 F001          	lfsr	2,1
 15717  0126FE  5033               	movf	i2USBTransferOnePacket@handle,w,c
 15718  012700  26D9               	addwf	fsr2l,f,c
 15719  012702  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 15720  012704  22DA               	addwfc	fsr2h,f,c
 15721  012706  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 15722                           
 15723                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 15724  01270A  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 15725  01270E  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 15726  012712  0E40               	movlw	64
 15727  012714  16DF               	andwf	indf2,f,c
 15728                           
 15729                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 15730  012716  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 15731  01271A  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 15732  01271E  0E00               	movlw	0
 15733  012720  86DB               	bsf	plusw2,3,c
 15734                           
 15735                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 15736  012722  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 15737  012726  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 15738  01272A  0E00               	movlw	0
 15739  01272C  8EDB               	bsf	plusw2,7,c
 15740                           
 15741                           ;usb_device.c: 1036: if(dir != 0)
 15742  01272E  502E               	movf	i2USBTransferOnePacket@dir,w,c
 15743  012730  B4D8               	btfsc	status,2,c
 15744  012732  D007               	goto	i2l5300
 15745                           
 15746                           ;usb_device.c: 1037: {
 15747                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 15748  012734  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15749  012736  0D02               	mullw	2
 15750  012738  0E10               	movlw	low _pBDTEntryIn
 15751  01273A  24F3               	addwf	prodl,w,c
 15752  01273C  6ED9               	movwf	fsr2l,c
 15753  01273E  0E00               	movlw	high _pBDTEntryIn
 15754  012740  D006               	goto	L12
 15755  012742                     i2l5300:
 15756                           
 15757                           ;usb_device.c: 1041: else
 15758                           ;usb_device.c: 1042: {
 15759                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 15760  012742  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15761  012744  0D02               	mullw	2
 15762  012746  0E9E               	movlw	low _pBDTEntryOut
 15763  012748  24F3               	addwf	prodl,w,c
 15764  01274A  6ED9               	movwf	fsr2l,c
 15765  01274C  0E00               	movlw	high _pBDTEntryOut
 15766  01274E                     L12:
 15767  01274E  20F4               	addwfc	prodh,w,c
 15768  012750  6EDA               	movwf	fsr2h,c
 15769  012752  0E04               	movlw	4
 15770  012754  1ADF               	xorwf	indf2,f,c
 15771                           
 15772                           ;usb_device.c: 1045: }
 15773                           ;usb_device.c: 1046: return (void*)handle;
 15774  012756  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 15775  01275A  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 15776  01275E  0012               	return	
 15777  012760                     __end_ofi2_USBTransferOnePacket:
 15778                           	opt stack 0
 15779                           pclatu	equ	0xFFB
 15780                           pclath	equ	0xFFA
 15781                           tblptru	equ	0xFF8
 15782                           tblptrh	equ	0xFF7
 15783                           tblptrl	equ	0xFF6
 15784                           tablat	equ	0xFF5
 15785                           prodh	equ	0xFF4
 15786                           prodl	equ	0xFF3
 15787                           intcon	equ	0xFF2
 15788                           intcon2	equ	0xFF1
 15789                           indf0	equ	0xFEF
 15790                           postinc0	equ	0xFEE
 15791                           fsr0h	equ	0xFEA
 15792                           fsr0l	equ	0xFE9
 15793                           wreg	equ	0xFE8
 15794                           indf1	equ	0xFE7
 15795                           postinc1	equ	0xFE6
 15796                           postdec1	equ	0xFE5
 15797                           fsr1h	equ	0xFE2
 15798                           fsr1l	equ	0xFE1
 15799                           indf2	equ	0xFDF
 15800                           postinc2	equ	0xFDE
 15801                           postdec2	equ	0xFDD
 15802                           plusw2	equ	0xFDB
 15803                           fsr2h	equ	0xFDA
 15804                           fsr2l	equ	0xFD9
 15805                           status	equ	0xFD8
 15806                           
 15807 ;; *************** function _USBEnableEndpoint *****************
 15808 ;; Defined at:
 15809 ;;		line 878 in file "../My_library/usb/usb_device.c"
 15810 ;; Parameters:    Size  Location     Type
 15811 ;;  ep              1    wreg     unsigned char 
 15812 ;;  options         1    8[COMRAM] unsigned char 
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;  ep              1   11[COMRAM] unsigned char 
 15815 ;;  p               2    9[COMRAM] PTR unsigned char 
 15816 ;;		 -> UEP0(1), 
 15817 ;; Return value:  Size  Location     Type
 15818 ;;		None               void
 15819 ;; Registers used:
 15820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15821 ;; Tracked objects:
 15822 ;;		On entry : 0/0
 15823 ;;		On exit  : 0/0
 15824 ;;		Unchanged: 0/0
 15825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15826 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15827 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15829 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15830 ;;Total ram usage:        4 bytes
 15831 ;; Hardware stack levels used:    1
 15832 ;; Hardware stack levels required when called:    1
 15833 ;; This function calls:
 15834 ;;		_USBConfigureEndpoint
 15835 ;; This function is called by:
 15836 ;;		_CDCInitEP
 15837 ;; This function uses a non-reentrant model
 15838 ;;
 15839                           
 15840                           	psect	text80
 15841  013462                     __ptext80:
 15842                           	opt stack 0
 15843  013462                     _USBEnableEndpoint:
 15844                           	opt stack 18
 15845                           
 15846                           ;incstack = 0
 15847                           ;USBEnableEndpoint@ep stored from wreg
 15848  013462  6E39               	movwf	USBEnableEndpoint@ep,c
 15849                           
 15850                           ;usb_device.c: 880: unsigned char* p;
 15851                           ;usb_device.c: 884: if(options & 0x04)
 15852  013464  A436               	btfss	USBEnableEndpoint@options,2,c
 15853  013466  D005               	goto	i2l5268
 15854                           
 15855                           ;usb_device.c: 885: {
 15856                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 15857  013468  0E00               	movlw	0
 15858  01346A  6E2E               	movwf	USBConfigureEndpoint@direction,c
 15859  01346C  5039               	movf	USBEnableEndpoint@ep,w,c
 15860  01346E  EC08  F096         	call	_USBConfigureEndpoint
 15861  013472                     i2l5268:
 15862                           
 15863                           ;usb_device.c: 887: }
 15864                           ;usb_device.c: 888: if(options & 0x02)
 15865  013472  A236               	btfss	USBEnableEndpoint@options,1,c
 15866  013474  D005               	goto	i2l5272
 15867                           
 15868                           ;usb_device.c: 889: {
 15869                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 15870  013476  0E01               	movlw	1
 15871  013478  6E2E               	movwf	USBConfigureEndpoint@direction,c
 15872  01347A  5039               	movf	USBEnableEndpoint@ep,w,c
 15873  01347C  EC08  F096         	call	_USBConfigureEndpoint
 15874  013480                     i2l5272:
 15875                           
 15876                           ;usb_device.c: 891: }
 15877                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 15878  013480  5039               	movf	USBEnableEndpoint@ep,w,c
 15879  013482  0D01               	mullw	1
 15880  013484  0E26               	movlw	38
 15881  013486  24F3               	addwf	prodl,w,c
 15882  013488  6E37               	movwf	USBEnableEndpoint@p,c
 15883  01348A  0E0F               	movlw	15
 15884  01348C  20F4               	addwfc	prodh,w,c
 15885  01348E  6E38               	movwf	USBEnableEndpoint@p+1,c
 15886                           
 15887                           ;usb_device.c: 901: *p = options;
 15888  013490  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 15889  013494  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 15890  013498  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 15891  01349C  0012               	return		;funcret
 15892  01349E                     __end_of_USBEnableEndpoint:
 15893                           	opt stack 0
 15894                           pclatu	equ	0xFFB
 15895                           pclath	equ	0xFFA
 15896                           tblptru	equ	0xFF8
 15897                           tblptrh	equ	0xFF7
 15898                           tblptrl	equ	0xFF6
 15899                           tablat	equ	0xFF5
 15900                           prodh	equ	0xFF4
 15901                           prodl	equ	0xFF3
 15902                           intcon	equ	0xFF2
 15903                           intcon2	equ	0xFF1
 15904                           indf0	equ	0xFEF
 15905                           postinc0	equ	0xFEE
 15906                           fsr0h	equ	0xFEA
 15907                           fsr0l	equ	0xFE9
 15908                           wreg	equ	0xFE8
 15909                           indf1	equ	0xFE7
 15910                           postinc1	equ	0xFE6
 15911                           postdec1	equ	0xFE5
 15912                           fsr1h	equ	0xFE2
 15913                           fsr1l	equ	0xFE1
 15914                           indf2	equ	0xFDF
 15915                           postinc2	equ	0xFDE
 15916                           postdec2	equ	0xFDD
 15917                           plusw2	equ	0xFDB
 15918                           fsr2h	equ	0xFDA
 15919                           fsr2l	equ	0xFD9
 15920                           status	equ	0xFD8
 15921                           
 15922 ;; *************** function _USBConfigureEndpoint *****************
 15923 ;; Defined at:
 15924 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 15925 ;; Parameters:    Size  Location     Type
 15926 ;;  EPNum           1    wreg     unsigned char 
 15927 ;;  direction       1    0[COMRAM] unsigned char 
 15928 ;; Auto vars:     Size  Location     Type
 15929 ;;  EPNum           1    5[COMRAM] unsigned char 
 15930 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 15931 ;;		 -> BDT(48), 
 15932 ;; Return value:  Size  Location     Type
 15933 ;;		None               void
 15934 ;; Registers used:
 15935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15936 ;; Tracked objects:
 15937 ;;		On entry : 0/0
 15938 ;;		On exit  : 0/0
 15939 ;;		Unchanged: 0/0
 15940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15941 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15942 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15943 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15944 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15945 ;;Total ram usage:        8 bytes
 15946 ;; Hardware stack levels used:    1
 15947 ;; This function calls:
 15948 ;;		Nothing
 15949 ;; This function is called by:
 15950 ;;		_USBEnableEndpoint
 15951 ;; This function uses a non-reentrant model
 15952 ;;
 15953                           
 15954                           	psect	text81
 15955  012C10                     __ptext81:
 15956                           	opt stack 0
 15957  012C10                     _USBConfigureEndpoint:
 15958                           	opt stack 18
 15959                           
 15960                           ;incstack = 0
 15961                           ;USBConfigureEndpoint@EPNum stored from wreg
 15962  012C10  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 15963                           
 15964                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 15965                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 15966  012C12  0E00               	movlw	0
 15967  012C14  6E34               	movwf	USBConfigureEndpoint@handle,c
 15968  012C16  0E0D               	movlw	13
 15969  012C18  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 15970                           
 15971                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 15972  012C1A  502E               	movf	USBConfigureEndpoint@direction,w,c
 15973  012C1C  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 15974  012C1E  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 15975  012C20  90D8               	bcf	status,0,c
 15976  012C22  362F               	rlcf	??_USBConfigureEndpoint,f,c
 15977  012C24  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 15978  012C26  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 15979  012C28  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 15980  012C2A  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 15981  012C2C  90D8               	bcf	status,0,c
 15982  012C2E  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 15983  012C30  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 15984  012C32  90D8               	bcf	status,0,c
 15985  012C34  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 15986  012C36  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 15987  012C38  502F               	movf	??_USBConfigureEndpoint,w,c
 15988  012C3A  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 15989  012C3C  5030               	movf	??_USBConfigureEndpoint+1,w,c
 15990  012C3E  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 15991  012C40  90D8               	bcf	status,0,c
 15992  012C42  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 15993  012C44  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 15994  012C46  90D8               	bcf	status,0,c
 15995  012C48  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 15996  012C4A  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 15997  012C4C  5031               	movf	??_USBConfigureEndpoint+2,w,c
 15998  012C4E  2634               	addwf	USBConfigureEndpoint@handle,f,c
 15999  012C50  5032               	movf	??_USBConfigureEndpoint+3,w,c
 16000  012C52  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16001                           
 16002                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 16003  012C54  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16004  012C58  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16005  012C5C  9EDF               	bcf	indf2,7,c
 16006                           
 16007                           ;usb_device.c: 1557: if(direction == 0)
 16008  012C5E  502E               	movf	USBConfigureEndpoint@direction,w,c
 16009  012C60  A4D8               	btfss	status,2,c
 16010  012C62  D007               	goto	i2l5258
 16011                           
 16012                           ;usb_device.c: 1558: {
 16013                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 16014  012C64  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16015  012C66  0D02               	mullw	2
 16016  012C68  0E9E               	movlw	low _pBDTEntryOut
 16017  012C6A  24F3               	addwf	prodl,w,c
 16018  012C6C  6ED9               	movwf	fsr2l,c
 16019  012C6E  0E00               	movlw	high _pBDTEntryOut
 16020  012C70  D006               	goto	L13
 16021  012C72                     i2l5258:
 16022                           
 16023                           ;usb_device.c: 1561: else
 16024                           ;usb_device.c: 1562: {
 16025                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 16026  012C72  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16027  012C74  0D02               	mullw	2
 16028  012C76  0E10               	movlw	low _pBDTEntryIn
 16029  012C78  24F3               	addwf	prodl,w,c
 16030  012C7A  6ED9               	movwf	fsr2l,c
 16031  012C7C  0E00               	movlw	high _pBDTEntryIn
 16032  012C7E                     L13:
 16033  012C7E  20F4               	addwfc	prodh,w,c
 16034  012C80  6EDA               	movwf	fsr2h,c
 16035  012C82  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16036  012C86  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16037                           
 16038                           ;usb_device.c: 1564: }
 16039                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 16040  012C8A  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16041  012C8E  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16042  012C92  9CDF               	bcf	indf2,6,c
 16043                           
 16044                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 16045  012C94  EE20 F004          	lfsr	2,4
 16046  012C98  5034               	movf	USBConfigureEndpoint@handle,w,c
 16047  012C9A  26D9               	addwf	fsr2l,f,c
 16048  012C9C  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 16049  012C9E  22DA               	addwfc	fsr2h,f,c
 16050  012CA0  8CDF               	bsf	indf2,6,c
 16051  012CA2  0012               	return		;funcret
 16052  012CA4                     __end_of_USBConfigureEndpoint:
 16053                           	opt stack 0
 16054                           pclatu	equ	0xFFB
 16055                           pclath	equ	0xFFA
 16056                           tblptru	equ	0xFF8
 16057                           tblptrh	equ	0xFF7
 16058                           tblptrl	equ	0xFF6
 16059                           tablat	equ	0xFF5
 16060                           prodh	equ	0xFF4
 16061                           prodl	equ	0xFF3
 16062                           intcon	equ	0xFF2
 16063                           intcon2	equ	0xFF1
 16064                           indf0	equ	0xFEF
 16065                           postinc0	equ	0xFEE
 16066                           fsr0h	equ	0xFEA
 16067                           fsr0l	equ	0xFE9
 16068                           wreg	equ	0xFE8
 16069                           indf1	equ	0xFE7
 16070                           postinc1	equ	0xFE6
 16071                           postdec1	equ	0xFE5
 16072                           fsr1h	equ	0xFE2
 16073                           fsr1l	equ	0xFE1
 16074                           indf2	equ	0xFDF
 16075                           postinc2	equ	0xFDE
 16076                           postdec2	equ	0xFDD
 16077                           plusw2	equ	0xFDB
 16078                           fsr2h	equ	0xFDA
 16079                           fsr2l	equ	0xFD9
 16080                           status	equ	0xFD8
 16081                           
 16082 ;; *************** function _USBCtrlTrfOutHandler *****************
 16083 ;; Defined at:
 16084 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;		None
 16087 ;; Auto vars:     Size  Location     Type
 16088 ;;		None
 16089 ;; Return value:  Size  Location     Type
 16090 ;;		None               void
 16091 ;; Registers used:
 16092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16093 ;; Tracked objects:
 16094 ;;		On entry : 0/0
 16095 ;;		On exit  : 0/0
 16096 ;;		Unchanged: 0/0
 16097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16102 ;;Total ram usage:        0 bytes
 16103 ;; Hardware stack levels used:    1
 16104 ;; Hardware stack levels required when called:    2
 16105 ;; This function calls:
 16106 ;;		_USBCtrlTrfRxService
 16107 ;; This function is called by:
 16108 ;;		_USBCtrlEPService
 16109 ;; This function uses a non-reentrant model
 16110 ;;
 16111                           
 16112                           	psect	text82
 16113  01324A                     __ptext82:
 16114                           	opt stack 0
 16115  01324A                     _USBCtrlTrfOutHandler:
 16116                           	opt stack 18
 16117                           
 16118                           ;usb_device.c: 2543: if(controlTransferState == 2)
 16119                           
 16120                           ;incstack = 0
 16121  01324A  0E02               	movlw	2
 16122  01324C  1829               	xorwf	_controlTransferState,w,c	;volatile
 16123  01324E  A4D8               	btfss	status,2,c
 16124  013250  D003               	goto	i2l6030
 16125                           
 16126                           ;usb_device.c: 2544: {
 16127                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 16128  013252  ECF5  F08A         	call	_USBCtrlTrfRxService	;wreg free
 16129                           
 16130                           ;usb_device.c: 2546: }
 16131  013256  0012               	return	
 16132  013258                     i2l6030:
 16133                           
 16134                           ;usb_device.c: 2547: else
 16135                           ;usb_device.c: 2548: {
 16136                           ;usb_device.c: 2551: controlTransferState = 0;
 16137  013258  0E00               	movlw	0
 16138  01325A  6E29               	movwf	_controlTransferState,c	;volatile
 16139                           
 16140                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 16141  01325C  501E               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 16142  01325E  A4D8               	btfss	status,2,c
 16143  013260  D01F               	goto	i2l6038
 16144                           
 16145                           ;usb_device.c: 2559: {
 16146                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 16147  013262  EE20 F001          	lfsr	2,1
 16148  013266  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16149  013268  26D9               	addwf	fsr2l,f,c
 16150  01326A  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16151  01326C  22DA               	addwfc	fsr2h,f,c
 16152  01326E  0E08               	movlw	8
 16153  013270  6EDF               	movwf	indf2,c
 16154                           
 16155                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16156  013272  EE20 F002          	lfsr	2,2
 16157  013276  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16158  013278  26D9               	addwf	fsr2l,f,c
 16159  01327A  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16160  01327C  22DA               	addwfc	fsr2h,f,c
 16161  01327E  0E30               	movlw	48
 16162  013280  6EDE               	movwf	postinc2,c
 16163  013282  0E0D               	movlw	13
 16164  013284  6EDD               	movwf	postdec2,c
 16165                           
 16166                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16167  013286  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16168  01328A  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16169  01328E  0E0C               	movlw	12
 16170  013290  6EDF               	movwf	indf2,c
 16171                           
 16172                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16173  013292  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16174  013296  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16175  01329A  0E00               	movlw	0
 16176  01329C  8EDB               	bsf	plusw2,7,c
 16177                           
 16178                           ;usb_device.c: 2564: }
 16179  01329E  0012               	return	
 16180  0132A0                     i2l6038:
 16181                           
 16182                           ;usb_device.c: 2565: else
 16183                           ;usb_device.c: 2566: {
 16184                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 16185  0132A0  0E00               	movlw	0
 16186  0132A2  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16187  0132A4  0012               	return	
 16188  0132A6                     __end_of_USBCtrlTrfOutHandler:
 16189                           	opt stack 0
 16190                           pclatu	equ	0xFFB
 16191                           pclath	equ	0xFFA
 16192                           tblptru	equ	0xFF8
 16193                           tblptrh	equ	0xFF7
 16194                           tblptrl	equ	0xFF6
 16195                           tablat	equ	0xFF5
 16196                           prodh	equ	0xFF4
 16197                           prodl	equ	0xFF3
 16198                           intcon	equ	0xFF2
 16199                           intcon2	equ	0xFF1
 16200                           indf0	equ	0xFEF
 16201                           postinc0	equ	0xFEE
 16202                           fsr0h	equ	0xFEA
 16203                           fsr0l	equ	0xFE9
 16204                           wreg	equ	0xFE8
 16205                           indf1	equ	0xFE7
 16206                           postinc1	equ	0xFE6
 16207                           postdec1	equ	0xFE5
 16208                           fsr1h	equ	0xFE2
 16209                           fsr1l	equ	0xFE1
 16210                           indf2	equ	0xFDF
 16211                           postinc2	equ	0xFDE
 16212                           postdec2	equ	0xFDD
 16213                           plusw2	equ	0xFDB
 16214                           fsr2h	equ	0xFDA
 16215                           fsr2l	equ	0xFD9
 16216                           status	equ	0xFD8
 16217                           
 16218 ;; *************** function _USBCtrlTrfRxService *****************
 16219 ;; Defined at:
 16220 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 16221 ;; Parameters:    Size  Location     Type
 16222 ;;		None
 16223 ;; Auto vars:     Size  Location     Type
 16224 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16225 ;;  i               1    0[COMRAM] unsigned char 
 16226 ;; Return value:  Size  Location     Type
 16227 ;;		None               void
 16228 ;; Registers used:
 16229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16230 ;; Tracked objects:
 16231 ;;		On entry : 0/0
 16232 ;;		On exit  : 0/0
 16233 ;;		Unchanged: 0/0
 16234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16239 ;;Total ram usage:        2 bytes
 16240 ;; Hardware stack levels used:    1
 16241 ;; Hardware stack levels required when called:    1
 16242 ;; This function calls:
 16243 ;;		_USBCtrlEPAllowStatusStage
 16244 ;; This function is called by:
 16245 ;;		_USBCtrlTrfOutHandler
 16246 ;; This function uses a non-reentrant model
 16247 ;;
 16248                           
 16249                           	psect	text83
 16250  0115EA                     __ptext83:
 16251                           	opt stack 0
 16252  0115EA                     _USBCtrlTrfRxService:
 16253                           	opt stack 18
 16254                           
 16255                           ;usb_device.c: 1854: uint8_t byteToRead;
 16256                           ;usb_device.c: 1855: uint8_t i;
 16257                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16258                           
 16259                           ;incstack = 0
 16260  0115EA  EE20 F001          	lfsr	2,1
 16261  0115EE  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16262  0115F0  26D9               	addwf	fsr2l,f,c
 16263  0115F2  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16264  0115F4  22DA               	addwfc	fsr2h,f,c
 16265  0115F6  50DF               	movf	indf2,w,c
 16266  0115F8  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 16267                           
 16268                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 16269  0115FA  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16270  0115FC  5C05               	subwf	_outPipes+4,w,c	;volatile
 16271  0115FE  0E00               	movlw	0
 16272  011600  5806               	subwfb	_outPipes+5,w,c	;volatile
 16273  011602  A0D8               	btfss	status,0,c
 16274                           
 16275                           ;usb_device.c: 1866: {
 16276                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 16277  011604  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 16278                           
 16279                           ;usb_device.c: 1868: }
 16280                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 16281  011608  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16282  01160A  5E05               	subwf	_outPipes+4,f,c	;volatile
 16283  01160C  0E00               	movlw	0
 16284  01160E  5A06               	subwfb	_outPipes+5,f,c	;volatile
 16285                           
 16286                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 16287  011610  0E00               	movlw	0
 16288  011612  6E2E               	movwf	USBCtrlTrfRxService@i,c
 16289  011614  D011               	goto	i2l5844
 16290  011616                     i2l5838:
 16291                           
 16292                           ;usb_device.c: 1875: {
 16293                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16294  011616  502E               	movf	USBCtrlTrfRxService@i,w,c
 16295  011618  0D01               	mullw	1
 16296  01161A  0E38               	movlw	56
 16297  01161C  24F3               	addwf	prodl,w,c
 16298  01161E  6ED9               	movwf	fsr2l,c
 16299  011620  0E0D               	movlw	13
 16300  011622  20F4               	addwfc	prodh,w,c
 16301  011624  6EDA               	movwf	fsr2h,c
 16302  011626  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 16303  01162A  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 16304  01162E  CFDF FFE7          	movff	indf2,indf1
 16305  011632  4A01               	infsnz	_outPipes,f,c	;volatile
 16306  011634  2A02               	incf	_outPipes+1,f,c	;volatile
 16307  011636  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 16308  011638                     i2l5844:
 16309  011638  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16310  01163A  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 16311  01163C  A0D8               	btfss	status,0,c
 16312  01163E  D7EB               	goto	i2l5838
 16313                           
 16314                           ;usb_device.c: 1877: }
 16315                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 16316  011640  5005               	movf	_outPipes+4,w,c	;volatile
 16317  011642  1006               	iorwf	_outPipes+5,w,c	;volatile
 16318  011644  B4D8               	btfsc	status,2,c
 16319  011646  D032               	goto	i2l5860
 16320                           
 16321                           ;usb_device.c: 1882: {
 16322                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 16323  011648  EE20 F001          	lfsr	2,1
 16324  01164C  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16325  01164E  26D9               	addwf	fsr2l,f,c
 16326  011650  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16327  011652  22DA               	addwfc	fsr2h,f,c
 16328  011654  0E08               	movlw	8
 16329  011656  6EDF               	movwf	indf2,c
 16330                           
 16331                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16332  011658  EE20 F002          	lfsr	2,2
 16333  01165C  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16334  01165E  26D9               	addwf	fsr2l,f,c
 16335  011660  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16336  011662  22DA               	addwfc	fsr2h,f,c
 16337  011664  0E38               	movlw	56
 16338  011666  6EDE               	movwf	postinc2,c
 16339  011668  0E0D               	movlw	13
 16340  01166A  6EDD               	movwf	postdec2,c
 16341                           
 16342                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16343  01166C  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16344  011670  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16345  011674  BCDF               	btfsc	indf2,6,c
 16346  011676  D00D               	goto	i2l5856
 16347                           
 16348                           ;usb_device.c: 1886: {
 16349                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16350  011678  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16351  01167C  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16352  011680  0E48               	movlw	72
 16353  011682  6EDF               	movwf	indf2,c
 16354                           
 16355                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16356  011684  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16357  011688  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16358  01168C  0E00               	movlw	0
 16359  01168E  8EDB               	bsf	plusw2,7,c
 16360                           
 16361                           ;usb_device.c: 1889: }
 16362  011690  0012               	return	
 16363  011692                     i2l5856:
 16364                           
 16365                           ;usb_device.c: 1890: else
 16366                           ;usb_device.c: 1891: {
 16367                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 16368  011692  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16369  011696  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16370  01169A  0E08               	movlw	8
 16371  01169C  6EDF               	movwf	indf2,c
 16372                           
 16373                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16374  01169E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16375  0116A2  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16376  0116A6  0E00               	movlw	0
 16377  0116A8  8EDB               	bsf	plusw2,7,c
 16378                           
 16379                           ;usb_device.c: 1894: }
 16380                           ;usb_device.c: 1895: }
 16381  0116AA  0012               	return	
 16382  0116AC                     i2l5860:
 16383                           
 16384                           ;usb_device.c: 1896: else
 16385                           ;usb_device.c: 1897: {
 16386                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 16387  0116AC  EE20 F001          	lfsr	2,1
 16388  0116B0  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16389  0116B2  26D9               	addwf	fsr2l,f,c
 16390  0116B4  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16391  0116B6  22DA               	addwfc	fsr2h,f,c
 16392  0116B8  0E08               	movlw	8
 16393  0116BA  6EDF               	movwf	indf2,c
 16394                           
 16395                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16396  0116BC  EE20 F002          	lfsr	2,2
 16397  0116C0  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16398  0116C2  26D9               	addwf	fsr2l,f,c
 16399  0116C4  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16400  0116C6  22DA               	addwfc	fsr2h,f,c
 16401  0116C8  0E30               	movlw	48
 16402  0116CA  6EDE               	movwf	postinc2,c
 16403  0116CC  0E0D               	movlw	13
 16404  0116CE  6EDD               	movwf	postdec2,c
 16405                           
 16406                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16407  0116D0  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16408  0116D4  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16409  0116D8  0E04               	movlw	4
 16410  0116DA  6EDF               	movwf	indf2,c
 16411                           
 16412                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16413  0116DC  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16414  0116E0  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16415  0116E4  0E00               	movlw	0
 16416  0116E6  8EDB               	bsf	plusw2,7,c
 16417                           
 16418                           ;usb_device.c: 1926: }
 16419                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 16420                           
 16421                           ;usb_device.c: 1915: {
 16422                           ;usb_device.c: 1921: outPipes[0].pFunc();
 16423  0116E8  9E04               	bcf	_outPipes+3,7,c	;volatile
 16424                           
 16425                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 16426  0116EA  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16427  0116EC  A4D8               	btfss	status,2,c
 16428  0116EE  0012               	return	
 16429                           
 16430                           ;usb_device.c: 1942: {
 16431                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 16432  0116F0  EC79  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16433  0116F4  0012               	return	
 16434  0116F6                     __end_of_USBCtrlTrfRxService:
 16435                           	opt stack 0
 16436                           pclatu	equ	0xFFB
 16437                           pclath	equ	0xFFA
 16438                           tblptru	equ	0xFF8
 16439                           tblptrh	equ	0xFF7
 16440                           tblptrl	equ	0xFF6
 16441                           tablat	equ	0xFF5
 16442                           prodh	equ	0xFF4
 16443                           prodl	equ	0xFF3
 16444                           intcon	equ	0xFF2
 16445                           intcon2	equ	0xFF1
 16446                           indf0	equ	0xFEF
 16447                           postinc0	equ	0xFEE
 16448                           fsr0h	equ	0xFEA
 16449                           fsr0l	equ	0xFE9
 16450                           wreg	equ	0xFE8
 16451                           indf1	equ	0xFE7
 16452                           postinc1	equ	0xFE6
 16453                           postdec1	equ	0xFE5
 16454                           fsr1h	equ	0xFE2
 16455                           fsr1l	equ	0xFE1
 16456                           indf2	equ	0xFDF
 16457                           postinc2	equ	0xFDE
 16458                           postdec2	equ	0xFDD
 16459                           plusw2	equ	0xFDB
 16460                           fsr2h	equ	0xFDA
 16461                           fsr2l	equ	0xFD9
 16462                           status	equ	0xFD8
 16463                           
 16464 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16465 ;; Defined at:
 16466 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 16467 ;; Parameters:    Size  Location     Type
 16468 ;;		None
 16469 ;; Auto vars:     Size  Location     Type
 16470 ;;		None
 16471 ;; Return value:  Size  Location     Type
 16472 ;;		None               void
 16473 ;; Registers used:
 16474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16475 ;; Tracked objects:
 16476 ;;		On entry : 0/0
 16477 ;;		On exit  : 0/0
 16478 ;;		Unchanged: 0/0
 16479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16484 ;;Total ram usage:        0 bytes
 16485 ;; Hardware stack levels used:    1
 16486 ;; This function calls:
 16487 ;;		Nothing
 16488 ;; This function is called by:
 16489 ;;		_USBDeviceTasks
 16490 ;;		_USBCtrlEPServiceComplete
 16491 ;;		_USBCtrlTrfRxService
 16492 ;; This function uses a non-reentrant model
 16493 ;;
 16494                           
 16495                           	psect	text84
 16496  0122F2                     __ptext84:
 16497                           	opt stack 0
 16498  0122F2                     _USBCtrlEPAllowStatusStage:
 16499                           	opt stack 18
 16500                           
 16501                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 16502                           
 16503                           ;incstack = 0
 16504  0122F2  5025               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 16505  0122F4  A4D8               	btfss	status,2,c
 16506  0122F6  0012               	return	
 16507                           
 16508                           ;usb_device.c: 1424: {
 16509                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 16510  0122F8  0E01               	movlw	1
 16511  0122FA  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16512                           
 16513                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 16514  0122FC  5026               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 16515  0122FE  A4D8               	btfss	status,2,c
 16516  012300  0012               	return	
 16517                           
 16518                           ;usb_device.c: 1427: {
 16519                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 16520  012302  0E01               	movlw	1
 16521  012304  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16522                           
 16523                           ;usb_device.c: 1432: if(controlTransferState == 2)
 16524  012306  0E02               	movlw	2
 16525  012308  1829               	xorwf	_controlTransferState,w,c	;volatile
 16526  01230A  A4D8               	btfss	status,2,c
 16527  01230C  D015               	goto	i2l5438
 16528                           
 16529                           ;usb_device.c: 1433: {
 16530                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 16531  01230E  EE20 F001          	lfsr	2,1
 16532  012312  5010               	movf	_pBDTEntryIn,w,c
 16533  012314  26D9               	addwf	fsr2l,f,c
 16534  012316  5011               	movf	_pBDTEntryIn+1,w,c
 16535  012318  22DA               	addwfc	fsr2h,f,c
 16536  01231A  0E00               	movlw	0
 16537  01231C  6EDF               	movwf	indf2,c
 16538                           
 16539                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16540  01231E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16541  012322  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16542  012326  0E48               	movlw	72
 16543  012328  6EDF               	movwf	indf2,c
 16544                           
 16545                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16546  01232A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16547  01232E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16548  012332  0E00               	movlw	0
 16549  012334  8EDB               	bsf	plusw2,7,c
 16550                           
 16551                           ;usb_device.c: 1437: }
 16552  012336  0012               	return	
 16553  012338                     i2l5438:
 16554                           
 16555                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 16556  012338  0429               	decf	_controlTransferState,w,c	;volatile
 16557  01233A  A4D8               	btfss	status,2,c
 16558  01233C  0012               	return	
 16559                           
 16560                           ;usb_device.c: 1439: {
 16561                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 16562  01233E  0E00               	movlw	0
 16563  012340  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16564                           
 16565                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 16566  012342  EE20 F001          	lfsr	2,1
 16567  012346  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16568  012348  26D9               	addwf	fsr2l,f,c
 16569  01234A  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16570  01234C  22DA               	addwfc	fsr2h,f,c
 16571  01234E  0E08               	movlw	8
 16572  012350  6EDF               	movwf	indf2,c
 16573                           
 16574                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16575  012352  EE20 F002          	lfsr	2,2
 16576  012356  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16577  012358  26D9               	addwf	fsr2l,f,c
 16578  01235A  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16579  01235C  22DA               	addwfc	fsr2h,f,c
 16580  01235E  0E30               	movlw	48
 16581  012360  6EDE               	movwf	postinc2,c
 16582  012362  0E0D               	movlw	13
 16583  012364  6EDD               	movwf	postdec2,c
 16584                           
 16585                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 16586  012366  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16587  01236A  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16588  01236E  0E04               	movlw	4
 16589  012370  6EDF               	movwf	indf2,c
 16590                           
 16591                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16592  012372  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16593  012376  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16594  01237A  0E00               	movlw	0
 16595  01237C  8EDB               	bsf	plusw2,7,c
 16596                           
 16597                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 16598  01237E  0E01               	movlw	1
 16599  012380  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16600                           
 16601                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 16602  012382  EE20 F001          	lfsr	2,1
 16603  012386  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16604  012388  26D9               	addwf	fsr2l,f,c
 16605  01238A  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16606  01238C  22DA               	addwfc	fsr2h,f,c
 16607  01238E  0E08               	movlw	8
 16608  012390  6EDF               	movwf	indf2,c
 16609                           
 16610                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16611  012392  EE20 F002          	lfsr	2,2
 16612  012396  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16613  012398  26D9               	addwf	fsr2l,f,c
 16614  01239A  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16615  01239C  22DA               	addwfc	fsr2h,f,c
 16616  01239E  0E30               	movlw	48
 16617  0123A0  6EDE               	movwf	postinc2,c
 16618  0123A2  0E0D               	movlw	13
 16619  0123A4  6EDD               	movwf	postdec2,c
 16620                           
 16621                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 16622  0123A6  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16623  0123AA  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16624  0123AE  0E80               	movlw	128
 16625  0123B0  6EDF               	movwf	indf2,c
 16626  0123B2  0012               	return	
 16627  0123B4                     __end_of_USBCtrlEPAllowStatusStage:
 16628                           	opt stack 0
 16629                           pclatu	equ	0xFFB
 16630                           pclath	equ	0xFFA
 16631                           tblptru	equ	0xFF8
 16632                           tblptrh	equ	0xFF7
 16633                           tblptrl	equ	0xFF6
 16634                           tablat	equ	0xFF5
 16635                           prodh	equ	0xFF4
 16636                           prodl	equ	0xFF3
 16637                           intcon	equ	0xFF2
 16638                           intcon2	equ	0xFF1
 16639                           indf0	equ	0xFEF
 16640                           postinc0	equ	0xFEE
 16641                           fsr0h	equ	0xFEA
 16642                           fsr0l	equ	0xFE9
 16643                           wreg	equ	0xFE8
 16644                           indf1	equ	0xFE7
 16645                           postinc1	equ	0xFE6
 16646                           postdec1	equ	0xFE5
 16647                           fsr1h	equ	0xFE2
 16648                           fsr1l	equ	0xFE1
 16649                           indf2	equ	0xFDF
 16650                           postinc2	equ	0xFDE
 16651                           postdec2	equ	0xFDD
 16652                           plusw2	equ	0xFDB
 16653                           fsr2h	equ	0xFDA
 16654                           fsr2l	equ	0xFD9
 16655                           status	equ	0xFD8
 16656                           
 16657 ;; *************** function _USBCtrlTrfInHandler *****************
 16658 ;; Defined at:
 16659 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 16660 ;; Parameters:    Size  Location     Type
 16661 ;;		None
 16662 ;; Auto vars:     Size  Location     Type
 16663 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16664 ;; Return value:  Size  Location     Type
 16665 ;;		None               void
 16666 ;; Registers used:
 16667 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16668 ;; Tracked objects:
 16669 ;;		On entry : 0/0
 16670 ;;		On exit  : 0/0
 16671 ;;		Unchanged: 0/0
 16672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16676 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16677 ;;Total ram usage:        1 bytes
 16678 ;; Hardware stack levels used:    1
 16679 ;; Hardware stack levels required when called:    1
 16680 ;; This function calls:
 16681 ;;		_USBCtrlTrfTxService
 16682 ;; This function is called by:
 16683 ;;		_USBCtrlEPService
 16684 ;; This function uses a non-reentrant model
 16685 ;;
 16686                           
 16687                           	psect	text85
 16688  012760                     __ptext85:
 16689                           	opt stack 0
 16690  012760                     _USBCtrlTrfInHandler:
 16691                           	opt stack 19
 16692                           
 16693                           ;usb_device.c: 2597: uint8_t lastDTS;
 16694                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 16695                           
 16696                           ;incstack = 0
 16697  012760  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16698  012764  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16699  012768  0E00               	movlw	0
 16700  01276A  BCDF               	btfsc	indf2,6,c
 16701  01276C  0E01               	movlw	1
 16702  01276E  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 16703                           
 16704                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16705  012770  0E04               	movlw	4
 16706  012772  1A10               	xorwf	_pBDTEntryIn,f,c
 16707                           
 16708                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 16709  012774  0E08               	movlw	8
 16710  012776  1824               	xorwf	_USBDeviceState,w,c	;volatile
 16711  012778  A4D8               	btfss	status,2,c
 16712  01277A  D00D               	goto	i2l6054
 16713                           
 16714                           ;usb_device.c: 2608: {
 16715                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 16716  01277C  010D               	movlb	13	; () banked
 16717  01277E  5132               	movf	50,w,b	;volatile
 16718  012780  0B7F               	andlw	127
 16719  012782  010F               	movlb	15	; () banked
 16720  012784  6F38               	movwf	56,b	;volatile
 16721                           
 16722                           ; BSR set to: 15
 16723                           ;usb_device.c: 2610: if(UADDR != 0u)
 16724  012786  010F               	movlb	15	; () banked
 16725  012788  5138               	movf	56,w,b	;volatile
 16726  01278A  B4D8               	btfsc	status,2,c
 16727  01278C  D002               	goto	i2l6052
 16728                           
 16729                           ; BSR set to: 15
 16730                           ;usb_device.c: 2611: {
 16731                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 16732  01278E  0E10               	movlw	16
 16733  012790  D001               	goto	L14
 16734  012792                     i2l6052:
 16735                           
 16736                           ; BSR set to: 15
 16737                           ;usb_device.c: 2614: else
 16738                           ;usb_device.c: 2615: {
 16739                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 16740  012792  0E04               	movlw	4
 16741  012794                     L14:
 16742  012794  6E24               	movwf	_USBDeviceState,c	;volatile
 16743  012796                     i2l6054:
 16744                           
 16745                           ;usb_device.c: 2617: }
 16746                           ;usb_device.c: 2618: }
 16747                           ;usb_device.c: 2621: if(controlTransferState == 1)
 16748  012796  0429               	decf	_controlTransferState,w,c	;volatile
 16749  012798  A4D8               	btfss	status,2,c
 16750  01279A  D03A               	goto	i2l345
 16751                           
 16752                           ;usb_device.c: 2622: {
 16753                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 16754  01279C  EE20 F002          	lfsr	2,2
 16755  0127A0  5010               	movf	_pBDTEntryIn,w,c
 16756  0127A2  26D9               	addwf	fsr2l,f,c
 16757  0127A4  5011               	movf	_pBDTEntryIn+1,w,c
 16758  0127A6  22DA               	addwfc	fsr2h,f,c
 16759  0127A8  0E38               	movlw	56
 16760  0127AA  6EDE               	movwf	postinc2,c
 16761  0127AC  0E0D               	movlw	13
 16762  0127AE  6EDD               	movwf	postdec2,c
 16763                           
 16764                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 16765  0127B0  EC43  F090         	call	_USBCtrlTrfTxService	;wreg free
 16766                           
 16767                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 16768  0127B4  0E02               	movlw	2
 16769  0127B6  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 16770  0127B8  A4D8               	btfss	status,2,c
 16771  0127BA  D00D               	goto	i2l6066
 16772                           
 16773                           ;usb_device.c: 2631: {
 16774                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 16775  0127BC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16776  0127C0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16777  0127C4  0E04               	movlw	4
 16778  0127C6  6EDF               	movwf	indf2,c
 16779                           
 16780                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16781  0127C8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16782  0127CC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16783  0127D0  0E00               	movlw	0
 16784  0127D2  8EDB               	bsf	plusw2,7,c
 16785                           
 16786                           ;usb_device.c: 2636: }
 16787  0127D4  0012               	return	
 16788  0127D6                     i2l6066:
 16789                           
 16790                           ;usb_device.c: 2637: else
 16791                           ;usb_device.c: 2638: {
 16792                           ;usb_device.c: 2639: if(lastDTS == 0)
 16793  0127D6  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 16794  0127D8  A4D8               	btfss	status,2,c
 16795  0127DA  D00D               	goto	i2l6072
 16796                           
 16797                           ;usb_device.c: 2640: {
 16798                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16799  0127DC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16800  0127E0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16801  0127E4  0E48               	movlw	72
 16802  0127E6  6EDF               	movwf	indf2,c
 16803                           
 16804                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16805  0127E8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16806  0127EC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16807  0127F0  0E00               	movlw	0
 16808  0127F2  8EDB               	bsf	plusw2,7,c
 16809                           
 16810                           ;usb_device.c: 2643: }
 16811  0127F4  0012               	return	
 16812  0127F6                     i2l6072:
 16813                           
 16814                           ;usb_device.c: 2644: else
 16815                           ;usb_device.c: 2645: {
 16816                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 16817  0127F6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16818  0127FA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16819  0127FE  0E08               	movlw	8
 16820  012800  6EDF               	movwf	indf2,c
 16821                           
 16822                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16823  012802  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16824  012806  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16825  01280A  0E00               	movlw	0
 16826  01280C  8EDB               	bsf	plusw2,7,c
 16827                           
 16828                           ;usb_device.c: 2648: }
 16829                           ;usb_device.c: 2649: }
 16830                           ;usb_device.c: 2650: }
 16831  01280E  0012               	return	
 16832  012810                     i2l345:
 16833                           
 16834                           ;usb_device.c: 2651: else
 16835                           ;usb_device.c: 2652: {
 16836                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 16837  012810  BE04               	btfsc	_outPipes+3,7,c	;volatile
 16838                           
 16839                           ;usb_device.c: 2661: }
 16840                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 16841                           
 16842                           ;usb_device.c: 2659: {
 16843                           ;usb_device.c: 2660: outPipes[0].pFunc();
 16844  012812  9E04               	bcf	_outPipes+3,7,c	;volatile
 16845                           
 16846                           ;usb_device.c: 2663: }
 16847                           ;usb_device.c: 2665: controlTransferState = 0;
 16848  012814  0E00               	movlw	0
 16849  012816  6E29               	movwf	_controlTransferState,c	;volatile
 16850  012818  0012               	return	
 16851  01281A                     __end_of_USBCtrlTrfInHandler:
 16852                           	opt stack 0
 16853                           pclatu	equ	0xFFB
 16854                           pclath	equ	0xFFA
 16855                           tblptru	equ	0xFF8
 16856                           tblptrh	equ	0xFF7
 16857                           tblptrl	equ	0xFF6
 16858                           tablat	equ	0xFF5
 16859                           prodh	equ	0xFF4
 16860                           prodl	equ	0xFF3
 16861                           intcon	equ	0xFF2
 16862                           intcon2	equ	0xFF1
 16863                           indf0	equ	0xFEF
 16864                           postinc0	equ	0xFEE
 16865                           fsr0h	equ	0xFEA
 16866                           fsr0l	equ	0xFE9
 16867                           wreg	equ	0xFE8
 16868                           indf1	equ	0xFE7
 16869                           postinc1	equ	0xFE6
 16870                           postdec1	equ	0xFE5
 16871                           fsr1h	equ	0xFE2
 16872                           fsr1l	equ	0xFE1
 16873                           indf2	equ	0xFDF
 16874                           postinc2	equ	0xFDE
 16875                           postdec2	equ	0xFDD
 16876                           plusw2	equ	0xFDB
 16877                           fsr2h	equ	0xFDA
 16878                           fsr2l	equ	0xFD9
 16879                           status	equ	0xFD8
 16880                           
 16881 ;; *************** function _USBCtrlTrfTxService *****************
 16882 ;; Defined at:
 16883 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 16884 ;; Parameters:    Size  Location     Type
 16885 ;;		None
 16886 ;; Auto vars:     Size  Location     Type
 16887 ;;  byteToSend      1    0[COMRAM] unsigned char 
 16888 ;; Return value:  Size  Location     Type
 16889 ;;		None               void
 16890 ;; Registers used:
 16891 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16892 ;; Tracked objects:
 16893 ;;		On entry : 0/0
 16894 ;;		On exit  : 0/0
 16895 ;;		Unchanged: 0/0
 16896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16901 ;;Total ram usage:        1 bytes
 16902 ;; Hardware stack levels used:    1
 16903 ;; This function calls:
 16904 ;;		Nothing
 16905 ;; This function is called by:
 16906 ;;		_USBCtrlEPAllowDataStage
 16907 ;;		_USBCtrlTrfInHandler
 16908 ;; This function uses a non-reentrant model
 16909 ;;
 16910                           
 16911                           	psect	text86
 16912  012086                     __ptext86:
 16913                           	opt stack 0
 16914  012086                     _USBCtrlTrfTxService:
 16915                           	opt stack 17
 16916                           
 16917                           ;usb_device.c: 1773: uint8_t byteToSend;
 16918                           ;usb_device.c: 1777: byteToSend = 8;
 16919                           
 16920                           ;incstack = 0
 16921  012086  0E08               	movlw	8
 16922  012088  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 16923                           
 16924                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 16925  01208A  500F               	movf	_inPipes+5,w,c	;volatile
 16926  01208C  E110               	bnz	i2l5386
 16927  01208E  0E08               	movlw	8
 16928  012090  5C0E               	subwf	_inPipes+4,w,c	;volatile
 16929  012092  B0D8               	btfsc	status,0,c
 16930  012094  D00C               	goto	i2l5386
 16931                           
 16932                           ;usb_device.c: 1779: {
 16933                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 16934  012096  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 16935                           
 16936                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 16937  01209A  502B               	movf	_shortPacketStatus,w,c	;volatile
 16938  01209C  A4D8               	btfss	status,2,c
 16939  01209E  D002               	goto	i2l5382
 16940                           
 16941                           ;usb_device.c: 1788: {
 16942                           ;usb_device.c: 1789: shortPacketStatus = 1;
 16943  0120A0  0E01               	movlw	1
 16944  0120A2  D004               	goto	L15
 16945  0120A4                     i2l5382:
 16946                           
 16947                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 16948  0120A4  042B               	decf	_shortPacketStatus,w,c	;volatile
 16949  0120A6  A4D8               	btfss	status,2,c
 16950  0120A8  D002               	goto	i2l5386
 16951                           
 16952                           ;usb_device.c: 1792: {
 16953                           ;usb_device.c: 1793: shortPacketStatus = 2;
 16954  0120AA  0E02               	movlw	2
 16955  0120AC                     L15:
 16956  0120AC  6E2B               	movwf	_shortPacketStatus,c	;volatile
 16957  0120AE                     i2l5386:
 16958                           
 16959                           ;usb_device.c: 1794: }
 16960                           ;usb_device.c: 1795: }
 16961                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 16962  0120AE  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 16963  0120B0  5E0E               	subwf	_inPipes+4,f,c	;volatile
 16964  0120B2  0E00               	movlw	0
 16965  0120B4  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 16966                           
 16967                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 16968  0120B6  EE20 F001          	lfsr	2,1
 16969  0120BA  5010               	movf	_pBDTEntryIn,w,c
 16970  0120BC  26D9               	addwf	fsr2l,f,c
 16971  0120BE  5011               	movf	_pBDTEntryIn+1,w,c
 16972  0120C0  22DA               	addwfc	fsr2h,f,c
 16973  0120C2  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 16974                           
 16975                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 16976  0120C6  0E38               	movlw	56
 16977  0120C8  0100               	movlb	0	; () banked
 16978  0120CA  6FB5               	movwf	_pDst& (0+255),b
 16979  0120CC  0E0D               	movlw	13
 16980  0120CE  0100               	movlb	0	; () banked
 16981  0120D0  6FB6               	movwf	(_pDst+1)& (0+255),b
 16982                           
 16983                           ; BSR set to: 0
 16984                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 16985  0120D2  A00D               	btfss	_inPipes+3,0,c	;volatile
 16986  0120D4  D01D               	goto	i2l5404
 16987  0120D6  D03C               	goto	i2l5414
 16988  0120D8                     i2l5396:
 16989                           
 16990                           ; BSR set to: 0
 16991                           ;usb_device.c: 1812: {
 16992                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 16993  0120D8  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 16994  0120DC  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 16995  0120E0  0E00               	movlw	low (__mediumconst shr (0+16))
 16996  0120E2  6EF8               	movwf	tblptru,c
 16997  0120E4  C0B5  FFD9         	movff	_pDst,fsr2l
 16998  0120E8  C0B6  FFDA         	movff	_pDst+1,fsr2h
 16999  0120EC  0E0E               	movlw	(high __ramtop+-1)
 17000  0120EE  64F7               	cpfsgt	tblptrh,c
 17001  0120F0  D003               	bra	i2u406_47
 17002  0120F2  0008               	tblrd		*
 17003  0120F4  50F5               	movf	tablat,w,c
 17004  0120F6  D005               	bra	i2u406_40
 17005  0120F8                     i2u406_47:
 17006  0120F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 17007  0120FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 17008  012100  50EF               	movf	indf0,w,c
 17009  012102                     i2u406_40:
 17010  012102  6EDF               	movwf	indf2,c
 17011  012104  4A0A               	infsnz	_inPipes,f,c	;volatile
 17012  012106  2A0B               	incf	_inPipes+1,f,c	;volatile
 17013  012108  0100               	movlb	0	; () banked
 17014  01210A  4BB5               	infsnz	_pDst& (0+255),f,b
 17015  01210C  2BB6               	incf	(_pDst+1)& (0+255),f,b
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;usb_device.c: 1814: byteToSend--;
 17019  01210E  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17020  012110                     i2l5404:
 17021                           
 17022                           ; BSR set to: 0
 17023  012110  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17024  012112  B4D8               	btfsc	status,2,c
 17025  012114  0012               	return	
 17026  012116  D7E0               	goto	i2l5396
 17027  012118                     i2l5406:
 17028                           
 17029                           ; BSR set to: 0
 17030                           ;usb_device.c: 1820: {
 17031                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 17032  012118  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17033  01211C  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17034  012120  0E00               	movlw	low (__mediumconst shr (0+16))
 17035  012122  6EF8               	movwf	tblptru,c
 17036  012124  C0B5  FFD9         	movff	_pDst,fsr2l
 17037  012128  C0B6  FFDA         	movff	_pDst+1,fsr2h
 17038  01212C  0E0E               	movlw	(high __ramtop+-1)
 17039  01212E  64F7               	cpfsgt	tblptrh,c
 17040  012130  D003               	bra	i2u408_47
 17041  012132  0008               	tblrd		*
 17042  012134  50F5               	movf	tablat,w,c
 17043  012136  D005               	bra	i2u408_40
 17044  012138                     i2u408_47:
 17045  012138  CFF6 FFE9          	movff	tblptrl,fsr0l
 17046  01213C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17047  012140  50EF               	movf	indf0,w,c
 17048  012142                     i2u408_40:
 17049  012142  6EDF               	movwf	indf2,c
 17050  012144  4A0A               	infsnz	_inPipes,f,c	;volatile
 17051  012146  2A0B               	incf	_inPipes+1,f,c	;volatile
 17052  012148  0100               	movlb	0	; () banked
 17053  01214A  4BB5               	infsnz	_pDst& (0+255),f,b
 17054  01214C  2BB6               	incf	(_pDst+1)& (0+255),f,b
 17055                           
 17056                           ; BSR set to: 0
 17057                           ;usb_device.c: 1822: byteToSend--;
 17058  01214E  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17059  012150                     i2l5414:
 17060                           
 17061                           ; BSR set to: 0
 17062  012150  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17063  012152  B4D8               	btfsc	status,2,c
 17064  012154  0012               	return	
 17065  012156  D7E0               	goto	i2l5406
 17066  012158                     __end_of_USBCtrlTrfTxService:
 17067                           	opt stack 0
 17068                           pclatu	equ	0xFFB
 17069                           pclath	equ	0xFFA
 17070                           tblptru	equ	0xFF8
 17071                           tblptrh	equ	0xFF7
 17072                           tblptrl	equ	0xFF6
 17073                           tablat	equ	0xFF5
 17074                           prodh	equ	0xFF4
 17075                           prodl	equ	0xFF3
 17076                           intcon	equ	0xFF2
 17077                           intcon2	equ	0xFF1
 17078                           indf0	equ	0xFEF
 17079                           postinc0	equ	0xFEE
 17080                           fsr0h	equ	0xFEA
 17081                           fsr0l	equ	0xFE9
 17082                           wreg	equ	0xFE8
 17083                           indf1	equ	0xFE7
 17084                           postinc1	equ	0xFE6
 17085                           postdec1	equ	0xFE5
 17086                           fsr1h	equ	0xFE2
 17087                           fsr1l	equ	0xFE1
 17088                           indf2	equ	0xFDF
 17089                           postinc2	equ	0xFDE
 17090                           postdec2	equ	0xFDD
 17091                           plusw2	equ	0xFDB
 17092                           fsr2h	equ	0xFDA
 17093                           fsr2l	equ	0xFD9
 17094                           status	equ	0xFD8
 17095                           
 17096 ;; *************** function _UART_ISR *****************
 17097 ;; Defined at:
 17098 ;;		line 29 in file "../My_library/My_UART.c"
 17099 ;; Parameters:    Size  Location     Type
 17100 ;;		None
 17101 ;; Auto vars:     Size  Location     Type
 17102 ;;  ascii           1   15[COMRAM] unsigned char 
 17103 ;; Return value:  Size  Location     Type
 17104 ;;		None               void
 17105 ;; Registers used:
 17106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17107 ;; Tracked objects:
 17108 ;;		On entry : 0/0
 17109 ;;		On exit  : 0/0
 17110 ;;		Unchanged: 0/0
 17111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17116 ;;Total ram usage:        1 bytes
 17117 ;; Hardware stack levels used:    1
 17118 ;; Hardware stack levels required when called:    2
 17119 ;; This function calls:
 17120 ;;		i2_ringbuf_num
 17121 ;;		i2_ringbuf_pop
 17122 ;;		i2_ringbuf_put
 17123 ;; This function is called by:
 17124 ;;		_ISR
 17125 ;; This function uses a non-reentrant model
 17126 ;;
 17127                           
 17128                           	psect	text87
 17129  013396                     __ptext87:
 17130                           	opt stack 0
 17131  013396                     _UART_ISR:
 17132                           	opt stack 21
 17133                           
 17134                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 17135                           
 17136                           ; BSR set to: 0
 17137                           ;incstack = 0
 17138  013396  B89D               	btfsc	3997,4,c	;volatile
 17139  013398  A89E               	btfss	3998,4,c	;volatile
 17140  01339A  D013               	goto	i2l1286
 17141                           
 17142                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
 17143  01339C  0ED6               	movlw	low _uart_tx
 17144  01339E  6E2E               	movwf	i2ringbuf_num@rb,c
 17145  0133A0  0E01               	movlw	high _uart_tx
 17146  0133A2  6E2F               	movwf	i2ringbuf_num@rb+1,c
 17147  0133A4  ECF5  F092         	call	i2_ringbuf_num	;wreg free
 17148  0133A8  502E               	movf	?i2_ringbuf_num,w,c
 17149  0133AA  102F               	iorwf	?i2_ringbuf_num+1,w,c
 17150  0133AC  B4D8               	btfsc	status,2,c
 17151  0133AE  D008               	goto	i2l1287
 17152                           
 17153                           ;My_UART.c: 32: TXREG1 = ringbuf_pop(&uart_tx);
 17154  0133B0  0ED6               	movlw	low _uart_tx
 17155  0133B2  6E36               	movwf	i2ringbuf_pop@rb,c
 17156  0133B4  0E01               	movlw	high _uart_tx
 17157  0133B6  6E37               	movwf	i2ringbuf_pop@rb+1,c
 17158  0133B8  ECC0  F094         	call	i2_ringbuf_pop	;wreg free
 17159  0133BC  6EAE               	movwf	4014,c	;volatile
 17160                           
 17161                           ;My_UART.c: 33: } else {
 17162  0133BE  D001               	goto	i2l1286
 17163  0133C0                     i2l1287:
 17164                           
 17165                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
 17166  0133C0  989D               	bcf	3997,4,c	;volatile
 17167  0133C2                     i2l1286:
 17168                           
 17169                           ;My_UART.c: 35: }
 17170                           ;My_UART.c: 36: }
 17171                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 17172  0133C2  AA9D               	btfss	3997,5,c	;volatile
 17173  0133C4  0012               	return	
 17174  0133C6  AA9E               	btfss	3998,5,c	;volatile
 17175  0133C8  0012               	return	
 17176                           
 17177                           ;My_UART.c: 38: char ascii = RCREG1;
 17178  0133CA  CFAF F03D          	movff	4015,UART_ISR@ascii	;volatile
 17179                           
 17180                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
 17181  0133CE  0ECE               	movlw	low _uart_rx
 17182  0133D0  6E36               	movwf	i2ringbuf_put@rb,c
 17183  0133D2  0E01               	movlw	high _uart_rx
 17184  0133D4  6E37               	movwf	i2ringbuf_put@rb+1,c
 17185  0133D6  C03D  F038         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 17186  0133DA  EC0D  F094         	call	i2_ringbuf_put	;wreg free
 17187  0133DE  0012               	return	
 17188  0133E0                     __end_of_UART_ISR:
 17189                           	opt stack 0
 17190                           pclatu	equ	0xFFB
 17191                           pclath	equ	0xFFA
 17192                           tblptru	equ	0xFF8
 17193                           tblptrh	equ	0xFF7
 17194                           tblptrl	equ	0xFF6
 17195                           tablat	equ	0xFF5
 17196                           prodh	equ	0xFF4
 17197                           prodl	equ	0xFF3
 17198                           intcon	equ	0xFF2
 17199                           intcon2	equ	0xFF1
 17200                           indf0	equ	0xFEF
 17201                           postinc0	equ	0xFEE
 17202                           fsr0h	equ	0xFEA
 17203                           fsr0l	equ	0xFE9
 17204                           wreg	equ	0xFE8
 17205                           indf1	equ	0xFE7
 17206                           postinc1	equ	0xFE6
 17207                           postdec1	equ	0xFE5
 17208                           fsr1h	equ	0xFE2
 17209                           fsr1l	equ	0xFE1
 17210                           indf2	equ	0xFDF
 17211                           postinc2	equ	0xFDE
 17212                           postdec2	equ	0xFDD
 17213                           plusw2	equ	0xFDB
 17214                           fsr2h	equ	0xFDA
 17215                           fsr2l	equ	0xFD9
 17216                           status	equ	0xFD8
 17217                           
 17218 ;; *************** function i2_ringbuf_put *****************
 17219 ;; Defined at:
 17220 ;;		line 20 in file "../My_library/My_ringbuf.c"
 17221 ;; Parameters:    Size  Location     Type
 17222 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 17223 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 17224 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 17225 ;;  asciicode       1   10[COMRAM] unsigned char 
 17226 ;; Auto vars:     Size  Location     Type
 17227 ;;		None
 17228 ;; Return value:  Size  Location     Type
 17229 ;;		None               void
 17230 ;; Registers used:
 17231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17232 ;; Tracked objects:
 17233 ;;		On entry : 0/0
 17234 ;;		On exit  : 0/0
 17235 ;;		Unchanged: 0/0
 17236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17237 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17239 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17240 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17241 ;;Total ram usage:        7 bytes
 17242 ;; Hardware stack levels used:    1
 17243 ;; Hardware stack levels required when called:    1
 17244 ;; This function calls:
 17245 ;;		i2_ringbuf_num
 17246 ;; This function is called by:
 17247 ;;		_UART_ISR
 17248 ;; This function uses a non-reentrant model
 17249 ;;
 17250                           
 17251                           	psect	text88
 17252  01281A                     __ptext88:
 17253                           	opt stack 0
 17254  01281A                     i2_ringbuf_put:
 17255                           	opt stack 21
 17256                           
 17257                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 17258                           
 17259                           ;incstack = 0
 17260  01281A  C036  F02E         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 17261  01281E  C037  F02F         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 17262  012822  ECF5  F092         	call	i2_ringbuf_num	;wreg free
 17263  012826  EE20 F002          	lfsr	2,2
 17264  01282A  5036               	movf	i2ringbuf_put@rb,w,c
 17265  01282C  26D9               	addwf	fsr2l,f,c
 17266  01282E  5037               	movf	i2ringbuf_put@rb+1,w,c
 17267  012830  22DA               	addwfc	fsr2h,f,c
 17268  012832  50DE               	movf	postinc2,w,c
 17269  012834  5C2E               	subwf	?i2_ringbuf_num,w,c
 17270  012836  50DE               	movf	postinc2,w,c
 17271  012838  582F               	subwfb	?i2_ringbuf_num+1,w,c
 17272  01283A  B0D8               	btfsc	status,0,c
 17273  01283C  0012               	return	
 17274                           
 17275                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 17276  01283E  EE20 F004          	lfsr	2,4
 17277  012842  5036               	movf	i2ringbuf_put@rb,w,c
 17278  012844  26D9               	addwf	fsr2l,f,c
 17279  012846  5037               	movf	i2ringbuf_put@rb+1,w,c
 17280  012848  22DA               	addwfc	fsr2h,f,c
 17281  01284A  CFDE F039          	movff	postinc2,??i2_ringbuf_put
 17282  01284E  CFDD F03A          	movff	postdec2,??i2_ringbuf_put+1
 17283  012852  C036  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 17284  012856  C037  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 17285  01285A  CFDE F03B          	movff	postinc2,??i2_ringbuf_put+2
 17286  01285E  CFDD F03C          	movff	postdec2,??i2_ringbuf_put+3
 17287  012862  5039               	movf	??i2_ringbuf_put,w,c
 17288  012864  243B               	addwf	??i2_ringbuf_put+2,w,c
 17289  012866  6ED9               	movwf	fsr2l,c
 17290  012868  503A               	movf	??i2_ringbuf_put+1,w,c
 17291  01286A  203C               	addwfc	??i2_ringbuf_put+3,w,c
 17292  01286C  6EDA               	movwf	fsr2h,c
 17293  01286E  C038  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 17294                           
 17295                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 17296  012872  EE20 F002          	lfsr	2,2
 17297  012876  5036               	movf	i2ringbuf_put@rb,w,c
 17298  012878  26D9               	addwf	fsr2l,f,c
 17299  01287A  5037               	movf	i2ringbuf_put@rb+1,w,c
 17300  01287C  22DA               	addwfc	fsr2h,f,c
 17301  01287E  EE10 F004          	lfsr	1,4
 17302  012882  5036               	movf	i2ringbuf_put@rb,w,c
 17303  012884  26E1               	addwf	fsr1l,f,c
 17304  012886  5037               	movf	i2ringbuf_put@rb+1,w,c
 17305  012888  22E2               	addwfc	fsr1h,f,c
 17306  01288A  CFE6 F03B          	movff	postinc1,??i2_ringbuf_put+2
 17307  01288E  CFE5 F03C          	movff	postdec1,??i2_ringbuf_put+3
 17308  012892  0E01               	movlw	1
 17309  012894  263B               	addwf	??i2_ringbuf_put+2,f,c
 17310  012896  0E00               	movlw	0
 17311  012898  223C               	addwfc	??i2_ringbuf_put+3,f,c
 17312  01289A  50DE               	movf	postinc2,w,c
 17313  01289C  5C3B               	subwf	??i2_ringbuf_put+2,w,c
 17314  01289E  50DE               	movf	postinc2,w,c
 17315  0128A0  583C               	subwfb	??i2_ringbuf_put+3,w,c
 17316  0128A2  B0D8               	btfsc	status,0,c
 17317  0128A4  D00A               	goto	i2l7144
 17318  0128A6  EE20 F004          	lfsr	2,4
 17319  0128AA  5036               	movf	i2ringbuf_put@rb,w,c
 17320  0128AC  26D9               	addwf	fsr2l,f,c
 17321  0128AE  5037               	movf	i2ringbuf_put@rb+1,w,c
 17322  0128B0  22DA               	addwfc	fsr2h,f,c
 17323  0128B2  2ADE               	incf	postinc2,f,c
 17324  0128B4  0E00               	movlw	0
 17325  0128B6  22DD               	addwfc	postdec2,f,c
 17326  0128B8  0012               	return	
 17327  0128BA                     i2l7144:
 17328                           
 17329                           ;My_ringbuf.c: 24: else rb->head = 0;
 17330  0128BA  EE20 F004          	lfsr	2,4
 17331  0128BE  5036               	movf	i2ringbuf_put@rb,w,c
 17332  0128C0  26D9               	addwf	fsr2l,f,c
 17333  0128C2  5037               	movf	i2ringbuf_put@rb+1,w,c
 17334  0128C4  22DA               	addwfc	fsr2h,f,c
 17335  0128C6  0E00               	movlw	0
 17336  0128C8  6EDE               	movwf	postinc2,c
 17337  0128CA  0E00               	movlw	0
 17338  0128CC  6EDD               	movwf	postdec2,c
 17339  0128CE  0012               	return	
 17340  0128D0                     __end_ofi2_ringbuf_put:
 17341                           	opt stack 0
 17342                           pclatu	equ	0xFFB
 17343                           pclath	equ	0xFFA
 17344                           tblptru	equ	0xFF8
 17345                           tblptrh	equ	0xFF7
 17346                           tblptrl	equ	0xFF6
 17347                           tablat	equ	0xFF5
 17348                           prodh	equ	0xFF4
 17349                           prodl	equ	0xFF3
 17350                           intcon	equ	0xFF2
 17351                           intcon2	equ	0xFF1
 17352                           indf0	equ	0xFEF
 17353                           postinc0	equ	0xFEE
 17354                           fsr0h	equ	0xFEA
 17355                           fsr0l	equ	0xFE9
 17356                           wreg	equ	0xFE8
 17357                           indf1	equ	0xFE7
 17358                           postinc1	equ	0xFE6
 17359                           postdec1	equ	0xFE5
 17360                           fsr1h	equ	0xFE2
 17361                           fsr1l	equ	0xFE1
 17362                           indf2	equ	0xFDF
 17363                           postinc2	equ	0xFDE
 17364                           postdec2	equ	0xFDD
 17365                           plusw2	equ	0xFDB
 17366                           fsr2h	equ	0xFDA
 17367                           fsr2l	equ	0xFD9
 17368                           status	equ	0xFD8
 17369                           
 17370 ;; *************** function i2_ringbuf_pop *****************
 17371 ;; Defined at:
 17372 ;;		line 45 in file "../My_library/My_ringbuf.c"
 17373 ;; Parameters:    Size  Location     Type
 17374 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 17375 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 17376 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 17377 ;; Auto vars:     Size  Location     Type
 17378 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 17379 ;; Return value:  Size  Location     Type
 17380 ;;                  1    wreg      unsigned char 
 17381 ;; Registers used:
 17382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17383 ;; Tracked objects:
 17384 ;;		On entry : 0/0
 17385 ;;		On exit  : 0/0
 17386 ;;		Unchanged: 0/0
 17387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17391 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17392 ;;Total ram usage:        7 bytes
 17393 ;; Hardware stack levels used:    1
 17394 ;; Hardware stack levels required when called:    1
 17395 ;; This function calls:
 17396 ;;		i2_ringbuf_num
 17397 ;; This function is called by:
 17398 ;;		_UART_ISR
 17399 ;; This function uses a non-reentrant model
 17400 ;;
 17401                           
 17402                           	psect	text89
 17403  012980                     __ptext89:
 17404                           	opt stack 0
 17405  012980                     i2_ringbuf_pop:
 17406                           	opt stack 21
 17407                           
 17408                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 17409                           
 17410                           ;incstack = 0
 17411  012980  C036  F02E         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 17412  012984  C037  F02F         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 17413  012988  ECF5  F092         	call	i2_ringbuf_num	;wreg free
 17414  01298C  502E               	movf	?i2_ringbuf_num,w,c
 17415  01298E  102F               	iorwf	?i2_ringbuf_num+1,w,c
 17416  012990  B4D8               	btfsc	status,2,c
 17417  012992  D04A               	goto	i2l7162
 17418                           
 17419                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 17420  012994  EE20 F006          	lfsr	2,6
 17421  012998  5036               	movf	i2ringbuf_pop@rb,w,c
 17422  01299A  26D9               	addwf	fsr2l,f,c
 17423  01299C  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17424  01299E  22DA               	addwfc	fsr2h,f,c
 17425  0129A0  CFDE F038          	movff	postinc2,??i2_ringbuf_pop
 17426  0129A4  CFDD F039          	movff	postdec2,??i2_ringbuf_pop+1
 17427  0129A8  C036  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 17428  0129AC  C037  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 17429  0129B0  CFDE F03A          	movff	postinc2,??i2_ringbuf_pop+2
 17430  0129B4  CFDD F03B          	movff	postdec2,??i2_ringbuf_pop+3
 17431  0129B8  5038               	movf	??i2_ringbuf_pop,w,c
 17432  0129BA  243A               	addwf	??i2_ringbuf_pop+2,w,c
 17433  0129BC  6ED9               	movwf	fsr2l,c
 17434  0129BE  5039               	movf	??i2_ringbuf_pop+1,w,c
 17435  0129C0  203B               	addwfc	??i2_ringbuf_pop+3,w,c
 17436  0129C2  6EDA               	movwf	fsr2h,c
 17437  0129C4  50DF               	movf	indf2,w,c
 17438  0129C6  6E3C               	movwf	i2ringbuf_pop@ret,c
 17439                           
 17440                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 17441  0129C8  EE20 F002          	lfsr	2,2
 17442  0129CC  5036               	movf	i2ringbuf_pop@rb,w,c
 17443  0129CE  26D9               	addwf	fsr2l,f,c
 17444  0129D0  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17445  0129D2  22DA               	addwfc	fsr2h,f,c
 17446  0129D4  EE10 F006          	lfsr	1,6
 17447  0129D8  5036               	movf	i2ringbuf_pop@rb,w,c
 17448  0129DA  26E1               	addwf	fsr1l,f,c
 17449  0129DC  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17450  0129DE  22E2               	addwfc	fsr1h,f,c
 17451  0129E0  CFE6 F03A          	movff	postinc1,??i2_ringbuf_pop+2
 17452  0129E4  CFE5 F03B          	movff	postdec1,??i2_ringbuf_pop+3
 17453  0129E8  0E01               	movlw	1
 17454  0129EA  263A               	addwf	??i2_ringbuf_pop+2,f,c
 17455  0129EC  0E00               	movlw	0
 17456  0129EE  223B               	addwfc	??i2_ringbuf_pop+3,f,c
 17457  0129F0  50DE               	movf	postinc2,w,c
 17458  0129F2  5C3A               	subwf	??i2_ringbuf_pop+2,w,c
 17459  0129F4  50DE               	movf	postinc2,w,c
 17460  0129F6  583B               	subwfb	??i2_ringbuf_pop+3,w,c
 17461  0129F8  B0D8               	btfsc	status,0,c
 17462  0129FA  D00A               	goto	i2l7154
 17463                           
 17464                           ;My_ringbuf.c: 49: rb->tail++;
 17465  0129FC  EE20 F006          	lfsr	2,6
 17466  012A00  5036               	movf	i2ringbuf_pop@rb,w,c
 17467  012A02  26D9               	addwf	fsr2l,f,c
 17468  012A04  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17469  012A06  22DA               	addwfc	fsr2h,f,c
 17470  012A08  2ADE               	incf	postinc2,f,c
 17471  012A0A  0E00               	movlw	0
 17472  012A0C  22DD               	addwfc	postdec2,f,c
 17473                           
 17474                           ;My_ringbuf.c: 50: } else {
 17475  012A0E  D00A               	goto	i2l7156
 17476  012A10                     i2l7154:
 17477                           
 17478                           ;My_ringbuf.c: 51: rb->tail = 0;
 17479  012A10  EE20 F006          	lfsr	2,6
 17480  012A14  5036               	movf	i2ringbuf_pop@rb,w,c
 17481  012A16  26D9               	addwf	fsr2l,f,c
 17482  012A18  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17483  012A1A  22DA               	addwfc	fsr2h,f,c
 17484  012A1C  0E00               	movlw	0
 17485  012A1E  6EDE               	movwf	postinc2,c
 17486  012A20  0E00               	movlw	0
 17487  012A22  6EDD               	movwf	postdec2,c
 17488  012A24                     i2l7156:
 17489                           
 17490                           ;My_ringbuf.c: 52: }
 17491                           ;My_ringbuf.c: 53: return ret;
 17492  012A24  503C               	movf	i2ringbuf_pop@ret,w,c
 17493                           
 17494                           ;My_ringbuf.c: 54: } else {
 17495  012A26  0012               	return	
 17496  012A28                     i2l7162:
 17497                           
 17498                           ;My_ringbuf.c: 55: return 0;
 17499  012A28  0E00               	movlw	0
 17500  012A2A  0012               	return	
 17501  012A2C                     __end_ofi2_ringbuf_pop:
 17502                           	opt stack 0
 17503                           pclatu	equ	0xFFB
 17504                           pclath	equ	0xFFA
 17505                           tblptru	equ	0xFF8
 17506                           tblptrh	equ	0xFF7
 17507                           tblptrl	equ	0xFF6
 17508                           tablat	equ	0xFF5
 17509                           prodh	equ	0xFF4
 17510                           prodl	equ	0xFF3
 17511                           intcon	equ	0xFF2
 17512                           intcon2	equ	0xFF1
 17513                           indf0	equ	0xFEF
 17514                           postinc0	equ	0xFEE
 17515                           fsr0h	equ	0xFEA
 17516                           fsr0l	equ	0xFE9
 17517                           wreg	equ	0xFE8
 17518                           indf1	equ	0xFE7
 17519                           postinc1	equ	0xFE6
 17520                           postdec1	equ	0xFE5
 17521                           fsr1h	equ	0xFE2
 17522                           fsr1l	equ	0xFE1
 17523                           indf2	equ	0xFDF
 17524                           postinc2	equ	0xFDE
 17525                           postdec2	equ	0xFDD
 17526                           plusw2	equ	0xFDB
 17527                           fsr2h	equ	0xFDA
 17528                           fsr2l	equ	0xFD9
 17529                           status	equ	0xFD8
 17530                           
 17531 ;; *************** function i2_ringbuf_num *****************
 17532 ;; Defined at:
 17533 ;;		line 12 in file "../My_library/My_ringbuf.c"
 17534 ;; Parameters:    Size  Location     Type
 17535 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 17536 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 17537 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 17538 ;; Auto vars:     Size  Location     Type
 17539 ;;		None
 17540 ;; Return value:  Size  Location     Type
 17541 ;;                  2    0[COMRAM] unsigned int 
 17542 ;; Registers used:
 17543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17544 ;; Tracked objects:
 17545 ;;		On entry : 0/0
 17546 ;;		On exit  : 0/0
 17547 ;;		Unchanged: 0/0
 17548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17551 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17552 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17553 ;;Total ram usage:        8 bytes
 17554 ;; Hardware stack levels used:    1
 17555 ;; This function calls:
 17556 ;;		Nothing
 17557 ;; This function is called by:
 17558 ;;		_UART_ISR
 17559 ;;		i2_ringbuf_put
 17560 ;;		i2_ringbuf_pop
 17561 ;; This function uses a non-reentrant model
 17562 ;;
 17563                           
 17564                           	psect	text90
 17565  0125EA                     __ptext90:
 17566                           	opt stack 0
 17567  0125EA                     i2_ringbuf_num:
 17568                           	opt stack 21
 17569                           
 17570                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 17571                           
 17572                           ;incstack = 0
 17573  0125EA  EE20 F006          	lfsr	2,6
 17574  0125EE  502E               	movf	i2ringbuf_num@rb,w,c
 17575  0125F0  26D9               	addwf	fsr2l,f,c
 17576  0125F2  502F               	movf	i2ringbuf_num@rb+1,w,c
 17577  0125F4  22DA               	addwfc	fsr2h,f,c
 17578  0125F6  EE10 F004          	lfsr	1,4
 17579  0125FA  502E               	movf	i2ringbuf_num@rb,w,c
 17580  0125FC  26E1               	addwf	fsr1l,f,c
 17581  0125FE  502F               	movf	i2ringbuf_num@rb+1,w,c
 17582  012600  22E2               	addwfc	fsr1h,f,c
 17583  012602  50DE               	movf	postinc2,w,c
 17584  012604  5CE6               	subwf	postinc1,w,c
 17585  012606  50DE               	movf	postinc2,w,c
 17586  012608  58E6               	subwfb	postinc1,w,c
 17587  01260A  A0D8               	btfss	status,0,c
 17588  01260C  D01F               	goto	i2l6808
 17589                           
 17590                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 17591  01260E  EE20 F004          	lfsr	2,4
 17592  012612  502E               	movf	i2ringbuf_num@rb,w,c
 17593  012614  26D9               	addwf	fsr2l,f,c
 17594  012616  502F               	movf	i2ringbuf_num@rb+1,w,c
 17595  012618  22DA               	addwfc	fsr2h,f,c
 17596  01261A  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 17597  01261E  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 17598  012622  EE20 F006          	lfsr	2,6
 17599  012626  502E               	movf	i2ringbuf_num@rb,w,c
 17600  012628  26D9               	addwf	fsr2l,f,c
 17601  01262A  502F               	movf	i2ringbuf_num@rb+1,w,c
 17602  01262C  22DA               	addwfc	fsr2h,f,c
 17603  01262E  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 17604  012632  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 17605  012636  1E32               	comf	??i2_ringbuf_num+2,f,c
 17606  012638  1E33               	comf	??i2_ringbuf_num+3,f,c
 17607  01263A  4A32               	infsnz	??i2_ringbuf_num+2,f,c
 17608  01263C  2A33               	incf	??i2_ringbuf_num+3,f,c
 17609  01263E  5030               	movf	??i2_ringbuf_num,w,c
 17610  012640  2432               	addwf	??i2_ringbuf_num+2,w,c
 17611  012642  6E2E               	movwf	?i2_ringbuf_num,c
 17612  012644  5031               	movf	??i2_ringbuf_num+1,w,c
 17613  012646  2033               	addwfc	??i2_ringbuf_num+3,w,c
 17614  012648  6E2F               	movwf	?i2_ringbuf_num+1,c
 17615                           
 17616                           ;My_ringbuf.c: 15: } else {
 17617  01264A  0012               	return	
 17618  01264C                     i2l6808:
 17619                           
 17620                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 17621  01264C  EE20 F004          	lfsr	2,4
 17622  012650  502E               	movf	i2ringbuf_num@rb,w,c
 17623  012652  26D9               	addwf	fsr2l,f,c
 17624  012654  502F               	movf	i2ringbuf_num@rb+1,w,c
 17625  012656  22DA               	addwfc	fsr2h,f,c
 17626  012658  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 17627  01265C  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 17628  012660  EE20 F002          	lfsr	2,2
 17629  012664  502E               	movf	i2ringbuf_num@rb,w,c
 17630  012666  26D9               	addwf	fsr2l,f,c
 17631  012668  502F               	movf	i2ringbuf_num@rb+1,w,c
 17632  01266A  22DA               	addwfc	fsr2h,f,c
 17633  01266C  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 17634  012670  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 17635  012674  EE20 F006          	lfsr	2,6
 17636  012678  502E               	movf	i2ringbuf_num@rb,w,c
 17637  01267A  26D9               	addwf	fsr2l,f,c
 17638  01267C  502F               	movf	i2ringbuf_num@rb+1,w,c
 17639  01267E  22DA               	addwfc	fsr2h,f,c
 17640  012680  CFDE F034          	movff	postinc2,??i2_ringbuf_num+4
 17641  012684  CFDD F035          	movff	postdec2,??i2_ringbuf_num+5
 17642  012688  1E34               	comf	??i2_ringbuf_num+4,f,c
 17643  01268A  1E35               	comf	??i2_ringbuf_num+5,f,c
 17644  01268C  4A34               	infsnz	??i2_ringbuf_num+4,f,c
 17645  01268E  2A35               	incf	??i2_ringbuf_num+5,f,c
 17646  012690  5032               	movf	??i2_ringbuf_num+2,w,c
 17647  012692  2634               	addwf	??i2_ringbuf_num+4,f,c
 17648  012694  5033               	movf	??i2_ringbuf_num+3,w,c
 17649  012696  2235               	addwfc	??i2_ringbuf_num+5,f,c
 17650  012698  5030               	movf	??i2_ringbuf_num,w,c
 17651  01269A  2434               	addwf	??i2_ringbuf_num+4,w,c
 17652  01269C  6E2E               	movwf	?i2_ringbuf_num,c
 17653  01269E  5031               	movf	??i2_ringbuf_num+1,w,c
 17654  0126A0  2035               	addwfc	??i2_ringbuf_num+5,w,c
 17655  0126A2  6E2F               	movwf	?i2_ringbuf_num+1,c
 17656  0126A4  0012               	return	
 17657  0126A6                     __end_ofi2_ringbuf_num:
 17658                           	opt stack 0
 17659                           pclatu	equ	0xFFB
 17660                           pclath	equ	0xFFA
 17661                           tblptru	equ	0xFF8
 17662                           tblptrh	equ	0xFF7
 17663                           tblptrl	equ	0xFF6
 17664                           tablat	equ	0xFF5
 17665                           prodh	equ	0xFF4
 17666                           prodl	equ	0xFF3
 17667                           intcon	equ	0xFF2
 17668                           intcon2	equ	0xFF1
 17669                           indf0	equ	0xFEF
 17670                           postinc0	equ	0xFEE
 17671                           fsr0h	equ	0xFEA
 17672                           fsr0l	equ	0xFE9
 17673                           wreg	equ	0xFE8
 17674                           indf1	equ	0xFE7
 17675                           postinc1	equ	0xFE6
 17676                           postdec1	equ	0xFE5
 17677                           fsr1h	equ	0xFE2
 17678                           fsr1l	equ	0xFE1
 17679                           indf2	equ	0xFDF
 17680                           postinc2	equ	0xFDE
 17681                           postdec2	equ	0xFDD
 17682                           plusw2	equ	0xFDB
 17683                           fsr2h	equ	0xFDA
 17684                           fsr2l	equ	0xFD9
 17685                           status	equ	0xFD8
 17686                           pclatu	equ	0xFFB
 17687                           pclath	equ	0xFFA
 17688                           tblptru	equ	0xFF8
 17689                           tblptrh	equ	0xFF7
 17690                           tblptrl	equ	0xFF6
 17691                           tablat	equ	0xFF5
 17692                           prodh	equ	0xFF4
 17693                           prodl	equ	0xFF3
 17694                           intcon	equ	0xFF2
 17695                           intcon2	equ	0xFF1
 17696                           indf0	equ	0xFEF
 17697                           postinc0	equ	0xFEE
 17698                           fsr0h	equ	0xFEA
 17699                           fsr0l	equ	0xFE9
 17700                           wreg	equ	0xFE8
 17701                           indf1	equ	0xFE7
 17702                           postinc1	equ	0xFE6
 17703                           postdec1	equ	0xFE5
 17704                           fsr1h	equ	0xFE2
 17705                           fsr1l	equ	0xFE1
 17706                           indf2	equ	0xFDF
 17707                           postinc2	equ	0xFDE
 17708                           postdec2	equ	0xFDD
 17709                           plusw2	equ	0xFDB
 17710                           fsr2h	equ	0xFDA
 17711                           fsr2l	equ	0xFD9
 17712                           status	equ	0xFD8
 17713                           
 17714                           	psect	rparam
 17715  0000                     pclatu	equ	0xFFB
 17716                           pclath	equ	0xFFA
 17717                           tblptru	equ	0xFF8
 17718                           tblptrh	equ	0xFF7
 17719                           tblptrl	equ	0xFF6
 17720                           tablat	equ	0xFF5
 17721                           prodh	equ	0xFF4
 17722                           prodl	equ	0xFF3
 17723                           intcon	equ	0xFF2
 17724                           intcon2	equ	0xFF1
 17725                           indf0	equ	0xFEF
 17726                           postinc0	equ	0xFEE
 17727                           fsr0h	equ	0xFEA
 17728                           fsr0l	equ	0xFE9
 17729                           wreg	equ	0xFE8
 17730                           indf1	equ	0xFE7
 17731                           postinc1	equ	0xFE6
 17732                           postdec1	equ	0xFE5
 17733                           fsr1h	equ	0xFE2
 17734                           fsr1l	equ	0xFE1
 17735                           indf2	equ	0xFDF
 17736                           postinc2	equ	0xFDE
 17737                           postdec2	equ	0xFDD
 17738                           plusw2	equ	0xFDB
 17739                           fsr2h	equ	0xFDA
 17740                           fsr2l	equ	0xFD9
 17741                           status	equ	0xFD8
 17742                           
 17743                           	psect	temp
 17744  00005B                     btemp:
 17745                           	opt stack 0
 17746  00005B                     	ds	1
 17747  0000                     int$flags	set	btemp
 17748                           pclatu	equ	0xFFB
 17749                           pclath	equ	0xFFA
 17750                           tblptru	equ	0xFF8
 17751                           tblptrh	equ	0xFF7
 17752                           tblptrl	equ	0xFF6
 17753                           tablat	equ	0xFF5
 17754                           prodh	equ	0xFF4
 17755                           prodl	equ	0xFF3
 17756                           intcon	equ	0xFF2
 17757                           intcon2	equ	0xFF1
 17758                           indf0	equ	0xFEF
 17759                           postinc0	equ	0xFEE
 17760                           fsr0h	equ	0xFEA
 17761                           fsr0l	equ	0xFE9
 17762                           wreg	equ	0xFE8
 17763                           indf1	equ	0xFE7
 17764                           postinc1	equ	0xFE6
 17765                           postdec1	equ	0xFE5
 17766                           fsr1h	equ	0xFE2
 17767                           fsr1l	equ	0xFE1
 17768                           indf2	equ	0xFDF
 17769                           postinc2	equ	0xFDE
 17770                           postdec2	equ	0xFDD
 17771                           plusw2	equ	0xFDB
 17772                           fsr2h	equ	0xFDA
 17773                           fsr2l	equ	0xFD9
 17774                           status	equ	0xFD8


Data Sizes:
    Strings     162
    Constant    239
    Data        5
    BSS         2811
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     62     124
    BANK1           256      0     245
    BANK2           256     40     204
    BANK3           256      0     100
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation$4	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK1[25]), 

    terminal_operation$3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_operation$2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation$1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_operation$0	PTR struct ringbuf size(2) Largest target is 0

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_43(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(COMRAM[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), STR_42(CODE[9]), STR_41(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    display_time_0802@line1	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_time_0802@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_time_0802@line0	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK0[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK1[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_display_time_0802
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _display_time_0802->_display_dec
    _display_dec->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USB_task->_ringbuf_put
    _ringbuf_put->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0  124100
                                             61 BANK0      1     1      0
                                              0 BANK2     40    40      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_task
                          _UART_task
                           _USB_task
                  _display_time_0802
                          _main_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   23069
                       _I2C_LCD_init
                           _OSC_init
                          _RTCC_init
                          _UART_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17305
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9963
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (5) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
                       _I2C_init_old
 ---------------------------------------------------------------------------------
 (3) _I2C_init_old                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (1) _display_time_0802                                    6     0      6   34553
                                             55 BANK0      6     0      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    1061
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_dec                                          8     4      4   21305
                                             47 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    21     18   12708
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    8744
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     708
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   22630
                                             22 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _ringbuf_put                                          7     4      3    9435
                                             15 BANK0      7     4      3
                        _ringbuf_num
                        _ringbuf_pop (ARG)
 ---------------------------------------------------------------------------------
 (1) _ringbuf_pop                                          7     5      2    3135
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1610
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_num                                          8     6      2    1610
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7342
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_RTCC                                       2     0      2    7342
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (4) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (4) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (5) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1    1302
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2    1237
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0   33321
                                             30 COMRAM    15    15      0
                           _UART_ISR
                            _USB_ISR
 ---------------------------------------------------------------------------------
 (8) _USB_ISR                                              0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (9) _USBDeviceTasks                                       1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (10) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (10) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (11) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (13) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (11) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (12) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (13) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _UART_ISR                                             1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_put                                        7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
       _ringbuf_pop (ARG)
         _ringbuf_num
   _display_time_0802
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _display_dec
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
     _strcat
     _strcpy
   _main_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_init_old
     _OSC_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _ringbuf_num
   _ringbuf_pop
     _ringbuf_num
   _ringbuf_put
     _ringbuf_num
     _ringbuf_pop (ARG)
       _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      64      12       39.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     28      CC      10       79.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F5       7       95.7%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      7C       5       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C3       8        0.0%
DATA                 0      0     B93       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 20:54:17 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FE77  
                      __size_of_I2C_Start 0030                              ?_display_dec 008F  
                            ___awdiv@sign 0065                                        _ms 010E  
                           _USBDeviceInit 10DC                       ___wmul@multiplicand 0062  
                       ??_RTCC_from_epoch 0091                        __size_of_CDCInitEP 006E  
                            __CFG_CP0$OFF 000000      USER_USB_CALLBACK_EVENT_HANDLER@event 003A  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C                                       l207 3506  
                                     l208 3504                                       l146 1152  
             __end_of_USBStdGetDscHandler 15EA                                       l504 0FBC  
                                     l509 1010                                       l710 3324  
                                     l641 38E0                                       l705 34B6  
                                     l626 363C                                       _BDT 000D00  
                                     l861 1E08                                       l855 252E  
                                     l874 0C70                                       _ISR 1008  
                                     _UIE 000F36                                       _UIR 000F62  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                                _USBSuspend 36FE  
                                     _now 01B8                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0042                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 1234  
                              _TXSTA1bits 000FAD                            _USBDeviceState 0024  
                   ??_USBCtrlTrfRxService 002E                              _I2C_LCD_Puts 2DC2  
                __size_ofi2_USBDeviceInit 013A                            ??_getsUSBUSART 006A  
                USBEnableEndpoint@options 0036                         ??_I2C_LCD_Command 0064  
                                    ?_ISR 002E                    __end_of_get_string_usb 3396  
                            _I2C_LCD_init 2CA4                                      l1338 387C  
                                    l1370 2D76                                      l1099 3574  
              USBConfigureEndpoint@handle 0034                                      l1919 251C  
                                    l1972 2FC6                                      l1982 31E0  
                                    l8104 3830                                      l8112 3008  
                                    l8130 23E6                                      l8202 24A0  
                                    l8108 2FE2                                      l8140 2416  
                                    l8124 23D0                                      l8204 24B0  
                                    l8302 1DE8                                      l9102 3360  
                                    l9022 316E                                      l8214 250A  
                                    l8206 24B6                                      l9104 3364  
                                    l9040 2CB8                                      l8136 2404  
                                    l8152 2454                        __CFG_WPFP$PAGE_127 000000  
                                    l8402 0484                                      l8410 04E2  
                                    l9026 351A                                      l8138 2410  
                                    l8180 2B28                                      l8172 2B02  
                                    l8260 1B26                                      l9028 3526  
                                    l9052 2D04                                      l9044 2CD0  
                                    l9036 2CAE                                      l8156 2468  
                                    l8148 2446                                      l8414 0502  
                                    l8192 2B6E                                      l8184 2B4C  
                                    l8176 2B16                                      l8168 2AF2  
                                    l8408 04DE                                      l9160 0AFA  
                                    l9056 2D1C                                      l9048 2CFA  
                                    l8272 35C0                                      l8520 1160  
                                    l8504 1128                                      l8178 2B22  
                                    l8418 0566                                      l8290 1D82  
                                    l8282 1D4E                                      l8442 3776  
                                    l8188 2B5A                                      l8620 0F96  
                                    l8612 37E8                                      l8460 2F82  
                                    l8276 35D2                                      l8532 1192  
                                    l8508 1132                                      l8622 0FA0  
                                    l9086 36B2                                      l8470 2FB8  
                                    l8462 2F88                                      l9158 0AE2  
                                    l8382 0CEE                                      l8542 1202  
                                    l8632 0FC6                                      l9088 36B6  
                                    l8480 31A8                                      l8720 000E  
                                    l8376 0CE2                                      l8536 119C  
                                    l8528 1172                                      l9282 2E22  
                                    l8626 0FB0                                      l8458 2F76  
                                    l8482 31AE                                      l8378 0CE6  
                                    l9276 2DF0                                      l9284 2E4A  
                                    l8396 0474                                      l8652 103C  
                                    l8660 1060                                      l8644 1014  
                                    l8580 1916                                      l8820 0318  
                                    l8732 0048                                      l8398 047A  
                                    l8662 106C                                      l8670 1090  
                                    l8638 0FFA                                      l8486 31D2  
                                    l8478 319C                                      l8814 02D6  
                                    l8726 002C                                      l8902 34CE  
                                    l8680 10B4                                      l8672 109A  
                                    l8592 1986                                      l8808 02B4  
                                    l8728 003E                                      l8682 10D8  
                                    l8586 194E                                      l8578 190C  
                                    l8850 03B8                                      l8818 030E  
                                    l8770 01B6                                      l8754 0132  
                                    l8746 0100                                      l8738 0080  
                                    l8914 3326                                      l8588 1956  
                                    l8596 19B8                                      l8852 03BE  
                                    l8844 0398                                      l8828 033E  
                                    l8836 0366                                      l8772 01CE  
                                    l8764 0198                                      l8756 013E  
                                    l8860 042C                                      l9812 0DB4  
                                    l8678 10B0                                      l8838 0372  
                                    l8766 01A4                                      l8758 0144  
                                    l8862 044C                                      l8782 020C  
                                    l8870 31FA                                      l8784 0242  
                                    l8872 320A                                      l9824 0DF2  
                                    l8698 185E                                      l8858 0420  
                                    l8794 0272                                      l8778 01F4  
                                    l8874 3216                                      l8964 206E  
                                    l8796 0278                                      l8868 31F4  
                                    l9844 0EC6                                      l8974 22D2  
                                    l8982 22EE                                      l9838 0E62  
                                    STR_1 FFE0                                      l8976 22E8  
                                    l8992 30CA                                      STR_2 FFB0  
                                    STR_3 FFE8                                      l9866 0F5E  
                                    STR_4 FFFA                                      STR_5 FFFA  
                                    STR_6 FFE8                                      STR_7 FFFC  
                                    STR_8 FFB1                                      STR_9 FFF8  
                                    u8300 0F86                     ??_USBCtrlTrfTxService 002E  
                                    u9120 2E12                                      u8240 18FC  
                                    u9130 2E44                                      u8308 0F8A  
                                    u9127 2E08                                      _UCFG 000F39  
                                    u8248 1900                                      u9137 2E3A  
                                    u7900 1B18                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u7830 3648  
                                    u7910 1B1A                                      u8710 3240  
                                    u7920 1B72                                      u7930 1B74  
                                    _UEIE 000F37                                      u7860 1AD0  
                                    u8717 3236                                      u7870 1AD2  
                                    u7880 1B02                                      u9800 0E4C  
                                    u9830 0EAE                                      _UEIR 000F63  
                                    _UCON 000F65                                      u7898 1B06  
                                    u9850 0ED4                                      u9818 0E50  
                                    u9907 38AA                                      u9917 357A  
                                    u9927 2E1E                                      u9848 0EB2  
                                    u9868 0ED8                                      u9887 2CC0  
                                    u9897 2D0C                           _CDCDataInHandle 00B1  
  USBStdFeatureReqHandler@current_ep_data 0045                                      _pDst 00B5  
                                    _main 0D76                  ??i2_USBTransferOnePacket 0032  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 010A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 38E8                           _USBDeviceAttach 34D8  
                                    btemp 005B                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 3918                          __end_of_I2C_Stop 3912  
                                    pclat 000FFA                                      prodh 000FF4  
                                    prodl 000FF3                                      start 10B8  
                           __CFG_IESO$OFF 000000                __end_of_USBCheckStdRequest 1D30  
                  ??_USBCtrlTrfOutHandler 0030                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0042                             _I2C_LCD_Clear 389C  
                   __end_ofi2_ringbuf_pop 2A2C                     __end_ofi2_ringbuf_num 26A6  
                   __end_ofi2_ringbuf_put 28D0                                     ??_ISR 004C  
                  __size_of_I2C_IdleCheck 001E                  ??_USBStdGetStatusHandler 002E  
                          ?_USBDeviceInit 002E                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   ?_main 002E                   __size_of_put_string_usb 002C  
                          ??_get_quot_rem 007D                           __end_of___awdiv 2472  
                                   _ADRES 000FC3                                     STR_13 FFF6  
                                   STR_30 FFD6                                     STR_31 FFF0  
                                   STR_15 FFAA                                     STR_23 FF5C  
                                   STR_32 FFD0                                     STR_40 FFC2  
                                   STR_24 FFB3                                     STR_41 FF98  
                                   STR_25 FF8D                                     STR_34 FFE9  
                                   STR_42 FFA1                                     STR_27 FFED  
                                   STR_19 FFE5                                     STR_43 FFBB  
                                   STR_36 FFDB                                     STR_28 FF81  
                         __end_of___awmod 2B78                                     STR_37 FFF2  
                                   STR_38 FFC9                                     STR_39 FFF4  
       __size_of_USBCtrlEPServiceComplete 00F0                           __end_of___lldiv 252E  
                         ___awdiv@divisor 0062                    __end_of_USBDeviceTasks 137E  
                                   _LATB2 007C52                 ?_USBCtrlEPServiceComplete 002E  
                         __end_of___lwdiv 2FD0                           __end_of___lwmod 31EA  
                                   i2l300 2A4C                                     i2l232 176C  
                                   i2l146 13E4                                     i2l170 1310  
                                   i2l308 3422                                     i2l158 1264  
                                   i2l168 12FE                                     i2l345 2810  
                                   i2l169 137A                                     i2l450 291E  
                                   i2l452 2954                                     i2l374 0710  
                                   i2l295 2A3A                                     i2l359 1C66  
                                   i2l368 1CB4                                     i2l393 08D8  
                                   i2l298 2AC2                                     i2l299 2A48  
                                   _UADDR 000F38                           ___awdiv@counter 0064  
                 ST7032_task@st7032_state 001D                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
      __size_of_USBCtrlEPAllowStatusStage 00C2                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000                          __end_of_UART_ISR 33E0  
         __end_of_USBCtrlEPAllowDataStage 2C10                                     _sd000 FF58  
                                   _sd001 FEC2                                     _sd002 FEF6  
                    caltime_to_epoch@year 007F                                i2memset@p1 002E  
                      __size_of_UART_init 0022                           __end_of_dpowers FE77  
                      __size_of_UART_task 0020                          __end_of_OSC_init 3908  
                         __end_of_isdigit 3780                        __size_of_RTCC_init 006A  
                         ?_get_string_usb 006D                        __size_of_RTCC_task 003C  
                                   main@s 02A4                         __end_of_I2C_Start 364C  
                            display_dec@s 0093                                     tablat 000FF5  
                                   plusw2 000FDB                         __end_of_CDCInitEP 30B4  
                        __end_of_USB_init 3866                          __end_of_USB_task 2DC2  
                                   status 000FD8                           __end_of_sprintf 045A  
                   __size_of_I2C_init_old 0012                          __end_ofi2_memset 3756  
                       month_length@month 0066                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00DC                            ?_I2C_LCD_Clear 002E  
                         __initialization 2E50                              __end_of_main 0F62  
                   _control_signal_bitmap 00C0                       ringbuf_init@bufsize 0064  
                        RTCC_from_RTCC@tm 0086                 __size_of_USBCtrlEPService 00CE  
                                  ??_main 009D                             __activetblptr 000003  
                         ?_USBDeviceTasks 002E                               ?_USBSuspend 002E  
                            _cdc_mem_type 00BD                              _I2C_init_old 38E8  
                                  _BCL1IF 007D0B                             _I2C_IdleCheck 382C  
                 __end_of_USBDeviceAttach 3510                          _CDCDataOutHandle 00B3  
                       _getsUSBUSART$1957 006B                         _I2C_LCD_SetCursor 36D2  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                       display_time_0802@tm 0097  
                        ___awdiv@dividend 0060                                 ??_USB_ISR 004C  
                      I2C_LCD_Command@ans 0065                           getsUSBUSART@len 0069  
                   __size_of_CDCTxService 017A                                    i2l1461 1052  
                                  i2l1286 33C2                                    i2l1287 33C0  
                                  i2l1464 107C                            __CFG_WDTEN$OFF 000000  
                                  i2l5300 2742                                    i2l6030 3258  
                                  i2l5320 28FC                                    i2l5404 2110  
                                  i2l6052 2792                                    i2l5406 2118  
                                  i2l5414 2150                                    i2l6054 2796  
                                  i2l6038 32A0                                    i2l5422 3744  
                                  i2l6072 27F6                                    i2l5272 3480  
                                  i2l5280 26BC                                    i2l5336 293E  
                                  i2l5328 2912                                    i2l5344 295C  
                                  i2l5360 364E                                    i2l6066 27D6  
                                  i2l5258 2C72                                    i2l5362 3654  
                                  i2l5610 07CA                                    i2l5602 0784  
                                  i2l5522 14C8                                    i2l5418 3734  
                                  i2l5514 1C34                                    i2l5268 3472  
                                  i2l6340 3616                                    i2l8012 1074  
                                  i2l5382 20A4                                    i2l5438 2338  
                                  i2l5366 365A                                    i2l5630 0872  
                                  i2l5614 07E6                                    i2l5542 15C6  
                                  i2l5534 1568                                    i2l5526 14DA  
                                  i2l7144 28BA                                    i2l5288 26E6  
                                  i2l5640 08B8                                    i2l5624 083E  
                                  i2l5608 07C8                                    i2l5544 15CC  
                                  i2l5536 156E                                    i2l5560 2A6A  
                                  i2l5472 2BDE                                    i2l7154 2A10  
                                  i2l7162 2A28                                    i2l5386 20AE  
                                  i2l5650 08FA                                    i2l5642 08C4  
                                  i2l5626 0858                                    i2l5570 2AAA  
                                  i2l5810 1792                                    i2l6362 341E  
                                  i2l6338 3614                                    i2l7156 2A24  
                                  i2l5396 20D8                                    i2l5548 15D2  
                                  i2l5492 1BC2                                    i2l5468 2BC6  
                                  i2l6390 21F6                                    i2l6382 21B0  
                                  i2l5656 093E                                    i2l5488 1BBA  
                                  i2l5904 1CCE                                    i2l5658 094A  
                                  i2l5498 1BEE                                    i2l6378 21A8  
                                  i2l6394 2210                                    i2l5860 16AC  
                                  i2l5844 1638                                    i2l5588 070C  
                                  i2l5908 1CEC                                    i2l6396 2216  
                                  i2l5838 1616                                    i2l5790 1716  
                                  i2l6750 13C8                                    i2l6910 1376  
                                  i2l6902 133C                                    i2l6830 125C  
                                  i2l6822 124C                                    i2l6808 264C  
                                  i2l5856 1692                                    i2l5880 1C74  
                                  i2l5890 1C8C                                    i2l5882 1C7A  
                                  i2l6762 13F2                                    i2l6770 1404  
                                  i2l6746 13C0                                    i2l5892 1C92  
                                  i2l6908 135A                                    i2l6852 128A  
                                  i2l6844 127A                                    i2l5894 1C98  
                                  i2l5878 1C6E                                    i2l6774 1422  
                                  i2l6784 1486                                    i2l6778 142A  
                                  i2l6882 12F4                                    i2l6874 12CC  
                                  i2l6858 12B0                                    i2l6868 12C0  
                                  i2l6888 1308                        ?_I2C_LCD_SetCursor 0066  
                                  _RCREG1 000FAF                             CDCTxService@i 006A  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
                                  _SSPBUF 000FC9                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0032                         ??i2_USBDeviceInit 0036  
                         i2ringbuf_pop@rb 0036                           i2ringbuf_num@rb 002E  
         __size_ofi2_USBTransferOnePacket 00BA                           i2ringbuf_put@rb 0036  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 3882  
                      epoch_to_caltime@tm 0081                      get_string_usb@rx_len 0072  
                       _shortPacketStatus 002B                       ??_I2C_LCD_SetCursor 0067  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                         USBDeviceTasks@i 004B                     caltime_to_epoch@epoch 0081  
             USBStdFeatureReqHandler@pUEP 0043                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002F                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 006F                     caltime_to_epoch@month 0085  
                                  ___lmul 2FD0                              ?_putUSBUSART 0060  
                         _caltime_to_RTCC 1E08                                    ___wmul 3580  
                      ??_epoch_to_caltime 0083                         __end_of_UART_init 37CA  
                               ??___awdiv 0064                         __end_of_UART_task 380C  
                               ??___awmod 0064                                    _d_to_x 3780  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 19BE  
                            ?_timer0_init 002E                         __end_of_RTCC_init 311E  
                            ?_timer1_init 0060                                 ??___lwdiv 0064  
                       __end_of_RTCC_task 3462                                 ??___lwmod 006B  
                            ?_timer3_init 002E                                    _lcd_tx 00C5  
                       _USBEnableEndpoint 3462           __size_of_USBStdGetStatusHandler 00AA  
                                  _memset 35B6                                    clear_0 2E58  
                                  clear_1 2E6A                                    clear_2 2E76  
                         put_string_usb@s 006C                                    clear_3 2E82  
                                  clear_4 2E8E                                    clear_5 2E9A  
                                  clear_6 2EA6                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0066                           ___awmod@divisor 0062  
                         ___awmod@counter 0064                                    _x_to_d 380C  
                      ?_USBEnableEndpoint 0036                                    _usb_rx 01DE  
                                  _usb_tx 01E6                      __size_of_display_dec 006A  
                                  _strcat 31EA                                    _strcpy 3510  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                               ??_isdigit 0060                                 ?_I2C_Send 002E  
                            _st7032_state 00C1                              _CDCTxService 0F62  
                               ?_I2C_Stop 002E                              __mediumconst FE6C  
               __end_of_I2C_LCD_SetCursor 36FE                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                     ??_USBEnableEndpoint 0037                            ?_I2C_IdleCheck 002E  
                               ??_sprintf 007E                               _CtrlTrfData 000D38  
                    _controlTransferState 0029                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 2ECC  
                            __pbssBIGRAMl 04C8                      __end_of_get_quot_rem 1FB2  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 3882                  __size_of_USBStallHandler 0046  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002C  
                        terminal_task@op0 0154                          terminal_task@op1 016D  
                        terminal_task@op2 0186                          terminal_task@op3 019F  
                          __pcstackCOMRAM 002E                 __end_of_USBEnableEndpoint 349E  
                           __end_of_sd000 FF5C                             __end_of_sd001 FEF6  
                           __end_of_sd002 FF2A                              __pidataBANK0 3918  
                               ?_UART_ISR 002E          __size_of_USBCtrlEPAllowDataStage 0098  
           __size_of_USBConfigureEndpoint 0094                                 ?_OSC_init 002E  
             __end_of_USBCtrlTrfInHandler 281A                           __CFG_DSWDTPS$G2 000000  
                         _I2C_LCD_Command 3548                            _put_string_usb 36A6  
                  i2_USBTransferOnePacket 26A6                      terminal_task@command 00CD  
                               ?_USB_init 002E                                 ?_USB_task 002E  
                           _I2C_cfct_flag 00BB                         _CDCTxService$2005 0068  
                        I2C_LCD_Command@c 0064                                ??_I2C_Send 0062  
                              ??_I2C_Stop 0062                                _cdc_notice 0100  
                               ?i2_memset 002E                                _cdc_rx_len 00BE  
                              _cdc_tx_len 00BF                caltime_to_epoch@month_3637 0080  
                ??_USBCtrlTrfSetupHandler 0048                          ?_USBDeviceAttach 002E  
                  _USBStdGetStatusHandler 2A2C                              sprintf@width 008D  
                      __size_of_main_init 00DE                                __pbssBANK0 009E  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                 __end_of_caltime_to_RTCC 1EDE                           _RTCC_to_caltime 252E  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 0010  
        __end_of_USBCtrlEPServiceComplete 17E6               __size_of_USBCheckCDCRequest 00B0  
                   __end_of_weekday_3char FF46                     RTCC_task@prev_halfsec 00B9  
                    USBCtrlTrfRxService@i 002E                                   ?___lmul 006D  
                              ??_UART_ISR 003D                                   ?___wmul 0060  
                          ST7032_init@buf 0400                                   ?_d_to_x 002E  
                  __end_of_put_string_usb 36D2                                ??_OSC_init 0060  
                                 ?_memset 0060                      I2C_LCD_SetCursor@col 0069  
                          ___lmul@product 0075                                _device_dsc FF46  
                    I2C_LCD_SetCursor@row 0066                          _USBCtrlEPService 2158  
                                 ?_x_to_d 002E                              I2C_Send@data 0062  
                              _ep_data_in 0016                                   ?_strcat 0060  
                                 ?_strcpy 0060               __end_of_USBCtrlTrfRxService 16F6  
                      _USBCheckStdRequest 1C56                                ??_USB_init 0069  
                       _configDescriptor1 FE7F                                ??_USB_task 0076  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 0060                                ??i2_memset 0034  
             __end_of_USBCtrlTrfTxService 2158                       _USBStdSetCfgHandler 1B7A  
              __size_of_I2C_LCD_SetCursor 002C                    I2C_LCD_SetCursor@F8685 00D7  
                         __CFG_WDTPS$1024 000000                                   _SPBRGH1 000F7F  
                           _I2C_sent_flag 001F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                                   _RTCVALH 000F3B  
                                 _RTCVALL 000F3A                       ?_USBCheckStdRequest 002E  
            __size_of_USBStdGetDscHandler 0132                                   _UIEbits 000F36  
                                 _USB_ISR 3912                   __end_of_RTCC_from_epoch 389C  
                    timer1_init@prescaler 0062                                   _UIRbits 000F62  
                        i2ringbuf_pop@ret 003C                          __CFG_CFGPLLEN$ON 000000  
                           _cdc_trf_state 0028                             ?_month_length 0066  
                     epoch_to_caltime@day 0087                       epoch_to_caltime@num 008B  
                       RTCC_from_epoch@tm 008F                                 _I2C_Start 361C  
                                 _pCDCDst 00A7                                   _pCDCSrc 00AA  
                   __size_of_getsUSBUSART 00EA                    display_time_0802@line0 0099  
                  display_time_0802@line1 009B                                   __Hparam 0000  
                    ?_USBStdSetCfgHandler 002E                                 _CDCInitEP 3046  
                                 __Lparam 0000                   __end_of_I2C_LCD_Command 3580  
              __size_of_USBEnableEndpoint 003C                              USB_task@data 0078  
                    ??_USBCheckStdRequest 0048             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 23B4  
                         __size_of___lmul 0076                                   ___awmod 2AD6  
                                 ___lldiv 2472                          ??_USBDeviceTasks 004B  
                         __size_of___wmul 0036                                   ___lwdiv 2F58  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002E  
                                 ___lwmod 3188                           __size_of_d_to_x 0028  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 1A9C                      __size_of_putUSBUSART 0022  
             epoch_to_caltime@month_cache 00DB                                   __pcinit 2E50  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FEC2                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 0D76                                   __ptext1 19BE  
                                 __ptext2 367A                                   __ptext3 32FA  
                                 __ptext4 349E                                   __ptext5 32A6  
                                 __ptext6 384A                                   __ptext7 10DC  
                                 __ptext8 35B6                                   __ptext9 34D8  
                                 _inPipes 000A                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 0064  
             _USBDeferOUTDataStagePackets 0022                                 _T0CONbits 000FD5  
                         __size_of_strcat 0060                          _time_change_flag 00C2  
                        _caltime_to_epoch 045A                           __size_of_strcpy 0038  
                            __size_of_ISR 00B0                                 _T1CONbits 000FCD  
                                 _dpowers FE6D                              ??_USBSuspend 0042  
                 __size_of_RTCC_from_RTCC 001A                                   _isdigit 3756  
                               _T3CONbits 000F79                          ___awmod@dividend 0060  
                           I2C_LCD_init@i 0068                                 _T5CONbits 000F22  
                         i2_USBDeviceInit 137E                          i2USBDeviceInit@i 0036  
                                 _uart_rx 01CE                                   _uart_tx 01D6  
                      __end_of_USB_CD_Ptr FE7F                                   _sprintf 0000  
         __size_of_USBCtrlTrfSetupHandler 0082                   __end_of_RTCC_to_caltime 25EA  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 2ECC  
                            _getsUSBUSART 18D4                    __size_ofi2_ringbuf_pop 00AC  
                  __size_ofi2_ringbuf_num 00BC                    __size_ofi2_ringbuf_put 00B6  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FE7D  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 001B  
                          ??_month_length 0067                            display_dec@dec 0091  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                            display_dec@str 008F  
         _dummy_encapsulated_cmd_response 01C6                  ?_USBStdFeatureReqHandler 002E  
                        ?_caltime_to_RTCC 0069                                ?_I2C_Start 0062  
                   ??_USBStdSetCfgHandler 0042                           ___lldiv@divisor 0064  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002E  
                         ___lldiv@counter 006C                         ?_is_usb_available 002E  
                      __end_of_USBSuspend 372A                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 2B78                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 16F6  
              _USBStatusStageEnabledFlag1 0025                _USBStatusStageEnabledFlag2 0026  
                      USBEnableEndpoint@p 0037                                 _UART_init 37A8  
                               _UART_task 37EC                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 30B4                                 _RTCC_task 3426  
               epoch_to_caltime@day_cache 0112                    i2ringbuf_put@asciicode 0038  
                      ST7032_cursor@F8640 00D9                              _get_quot_rem 1EDE  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 001E                         __size_of_I2C_Send 0018  
                       __size_of_I2C_Stop 000A                 USBConfigureEndpoint@EPNum 0033  
              ?_USBCtrlEPAllowStatusStage 002E                          ?_RTCC_from_epoch 008F  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003E                                 _USTATcopy 002D  
                 timer1_init@clock_select 0060              __end_of_USBTransferOnePacket 1E08  
                        __CFG_IOL1WAY$OFF 000000                         putUSBUSART@length 0062  
                     __CFG_MSSP7B_EN$MSK7 000000                          ?_I2C_LCD_Command 002E  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 2ED6  
                          ringbuf_pop@ret 006E                             ??_display_dec 0093  
                           i2_ringbuf_pop 2980                             i2_ringbuf_num 25EA  
                 ?i2_USBTransferOnePacket 002E                             i2_ringbuf_put 281A  
                   __end_of_USBDeviceInit 1234                            __end_of___lmul 3046  
                          __end_of___wmul 35B6                            __end_of_d_to_x 37A8  
                       __size_of_UART_ISR 004A                   __end_ofi2_USBDeviceInit 14B8  
                              ?_UART_init 002E                                 i2memset@c 0030  
                               i2memset@n 0032                                 i2memset@p 0034  
                              ?_UART_task 002E                            __end_of_memset 35EA  
                              ?_RTCC_init 002E                         __size_of_OSC_init 000E  
                              ?_RTCC_task 002E                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 00BC                            __end_of_x_to_d 382C  
                          __end_of_strcat 324A                     epoch_to_caltime@month 008A  
                          __end_of_strcpy 3548                       start_initialization 2E50  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 002E  
                             __end_of_ISR 10B8             USBCtrlTrfRxService@byteToRead 002F  
                       __size_of_USB_init 001C                         __size_of_USB_task 008E  
                           ?_I2C_LCD_Puts 0064                             ?_I2C_LCD_init 002E  
                             _cdc_data_rx 0114                               _cdc_data_tx 0264  
                       __size_ofi2_memset 002C                             UART_ISR@ascii 003D  
            __end_of_USBConfigureEndpoint 2CA4                          ?_RTCC_to_caltime 0062  
         __end_of_USBStdFeatureReqHandler 0970         __end_of_USBCtrlEPAllowStatusStage 23B4  
                __end_of_USBCtrlEPService 2226                               ??_I2C_Start 0063  
               ??_USBCtrlEPAllowDataStage 002F                               ??_CDCInitEP 003A  
                          USBDeviceInit@i 0068                     __end_of_I2C_LCD_Clear 38B6  
                  _pBDTEntryEP0OutCurrent 0019                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 2760  
                                ??___lmul 0075                            ?i2_ringbuf_pop 0036  
                          ?i2_ringbuf_num 002E                            ?i2_ringbuf_put 0036  
                                ??___wmul 0064                       _USBStdGetDscHandler 14B8  
                                ??_d_to_x 0068                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK0 00D7                                  ??_memset 0066  
                                ??_x_to_d 0060                                  ??_strcat 0064  
                                ??_strcpy 0064                      __end_of_month_length 1B7A  
                          _RTCC_from_RTCC 38B6                    _USBActiveConfiguration 002C  
          __end_of_USBStdGetStatusHandler 2AD6                       __end_of_display_dec 3188  
                             __pbssCOMRAM 0001                            USB_task@rx_len 0076  
                     RTCC_to_caltime@dumy 0064                             __pcstackBANK0 0060  
                           __pcstackBANK2 02A4              __size_of_USBCtrlTrfInHandler 00BA  
                          ??_I2C_LCD_Puts 0066                            ??_I2C_LCD_init 0067  
                    __end_of_ringbuf_init 32FA                      ?_USBStdGetDscHandler 002E  
                            _isdigit$5796 0061                                  ?_USB_ISR 002E  
              __end_of_USBWakeFromSuspend 361C                               sprintf@flag 008B  
                             sprintf@prec 0082                           _USBStallHandler 33E0  
                            _pBDTEntryOut 009E                __end_of_USBCheckCDCRequest 2980  
                __end_of_caltime_to_epoch 06E8                           millis_timer@cnt 00B7  
                __size_of_USBDeviceAttach 0038                          ??_put_string_usb 0070  
                        ___lwdiv@dividend 0060                                 __pintcode 1008  
                           __pmediumconst FE6C                                  ?___awdiv 0060  
                                ?___awmod 0060                                  ?___lldiv 0060  
                                ?___lwdiv 0060                                  ?___lwmod 0067  
                   _is_usb_available$5114 0060                    __end_of_RTCC_from_RTCC 38D0  
                         I2C_LCD_Puts@ans 0067                          ?i2_USBDeviceInit 002E  
                             ??_UART_init 0060                USBCBSendResume@delay_count 00AF  
                             ??_UART_task 0068                               ??_RTCC_init 0091  
                             ??_RTCC_task 0088                      _USBTransferOnePacket 1D30  
                               _main_init 19BE                               I2C_Start@rw 0062  
                                ?_isdigit 002E                          _epoch_to_caltime 0B84  
                                _I2C_Send 38D0                                  _I2C_Stop 3908  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_busy 00BA  
                   __end_of_I2C_IdleCheck 384A                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 32A6                             ?_I2C_init_old 002E  
                   ??_USBStdGetDscHandler 002E                               _ep_data_out 00A4  
                        ___lwdiv@quotient 0065                           ST7032_task@wait 00AD  
                                ?_sprintf 006C              __size_of_USBCtrlTrfRxService 010C  
           USBConfigureEndpoint@direction 002E                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00D2  
                ringbuf_init@internal_buf 0062                            ___wmul@product 0064  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
              ??_USBCtrlEPServiceComplete 002F                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                           ??i2_ringbuf_pop 0038  
                         ??i2_ringbuf_num 0030                                  i2u406_40 2102  
                                i2u422_40 1534                           ??i2_ringbuf_put 0039  
                                i2u406_47 20F8                                  i2u422_47 152A  
                                i2u423_40 1564                                  i2u423_47 155A  
                                i2u408_40 2142                                  i2u408_47 2138  
                                i2u425_40 15BC                                  _PIR1bits 000F9E  
                                i2u425_47 15B2                                  _PIR2bits 000FA1  
                                _PIR5bits 000F98                epoch_to_caltime@year_cache 00C3  
                                i2u750_40 1068                                  i2u751_48 106A  
               USBCtrlEPService@setup_cnt 004A                             ??_ringbuf_pop 006A  
                           ??_ringbuf_num 0062                             ??_ringbuf_put 0072  
                                _RCONbits 000FD0                         _display_time_0802 0970  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
              _USBDeferINDataStagePackets 0021                                  _UART_ISR 3396  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00DA                             ??_timer3_init 0060  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_0802 0097                               _display_dec 311E  
                    _USBConfigureEndpoint 2C10                                  _OSC_init 38FA  
                         ?_RTCC_from_RTCC 0086          __size_of_USBStdFeatureReqHandler 0288  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0060                     ?_USBTransferOnePacket 0060  
                        __CFG_SOSCSEL$LOW 000000                                  _USB_init 384A  
                                _USB_task 2D34                                ?_main_init 002E  
               __size_of_is_usb_available 001C                             ?_CDCTxService 002E  
                     ??_display_time_0802 009D                              _RemoteWakeup 0020  
                      I2C_LCD_init@i_4452 0069                                  i2_memset 372A  
                          ??_I2C_init_old 0060                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 3426  
                           I2C_Start@adrs 0063                             ringbuf_put@rb 006F  
                       ___lmul@multiplier 006D                               _INTCON2bits 000FF1  
                               copy_data0 2EC0               ??_USBCtrlEPAllowStatusStage 002E  
             __end_of_USBStdSetCfgHandler 1C56                          __size_of_USB_ISR 0006  
                    epoch_to_caltime@year 0089                           main_init@uartrx 0300  
                         main_init@uarttx 04C8                   __size_of_get_string_usb 004C  
                      __end_of_device_dsc FF58                   ?_USBCtrlTrfSetupHandler 002E  
               __end_of_display_time_0802 0B84                   USBStdGetStatusHandler@p 002F  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                      __end_of_I2C_LCD_Puts 2E50  
                                _SetupPkt 000D30                             _weekday_3char FF2A  
                    __end_of_I2C_LCD_init 2D34                     __size_of_month_length 00DE  
                   ?_USBConfigureEndpoint 002E                  __size_of_caltime_to_RTCC 00D6  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 0061  
                        __size_of___lldiv 00BC                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                       __end_of_ringbuf_pop 22F2  
                     __end_of_ringbuf_num 18D4                       __end_of_ringbuf_put 2086  
                     __end_of_putUSBUSART 37EC                               _line_coding 01EE  
                          ??_CDCTxService 0067                       __end_of_timer0_init 34D8  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 334A  
                              sprintf@len 0089                       __end_of_timer3_init 36A6  
                              sprintf@val 0087                                strcat@from 0062  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 014A  
                         ___lwdiv@divisor 0062                           ___lwdiv@counter 0064  
                    timer0_init@prescaler 0061                                  __ptext10 37A8  
                                __ptext11 30B4                                  __ptext20 2CA4  
                                __ptext12 3882                                  __ptext21 38E8  
                                __ptext13 0B84                                  __ptext30 3188  
                                __ptext22 389C                                  __ptext14 1EDE  
                                __ptext31 2F58                                  __ptext23 0970  
                                __ptext15 2472                                  __ptext40 0F62  
                                __ptext32 2D34                                  __ptext24 3510  
                                __ptext16 1E08                                  __ptext41 1D30  
                                __ptext33 1FB2                                  __ptext25 311E  
                                __ptext17 3780                                  __ptext50 252E  
                                __ptext42 37EC                                  __ptext34 2226  
                                __ptext26 31EA                                  __ptext18 23B4  
                                __ptext51 380C                                  __ptext43 17E6  
                                __ptext35 36A6                                  __ptext27 0000  
                                __ptext19 38FA                                  __ptext60 3912  
                                __ptext52 36D2                                  __ptext44 3426  
                                __ptext36 37CA                                  __ptext28 3756  
                                __ptext61 1234                                  __ptext53 3548  
                                __ptext45 38B6                                  __ptext37 334A  
                                __ptext29 3580                                  __ptext70 1C56  
                                __ptext62 137E                                  __ptext54 2DC2  
                                __ptext46 045A                                  __ptext38 3866  
                                __ptext71 1B7A                                  __ptext63 35EA  
                                __ptext55 3908                                  __ptext47 1A9C  
                                __ptext39 18D4                                  __ptext80 3462  
                                __ptext72 372A                                  __ptext64 36FE  
                                __ptext56 361C                                  __ptext48 2AD6  
                                __ptext81 2C10                                  __ptext73 2A2C  
                                __ptext65 33E0                                  __ptext57 38D0  
                                __ptext49 2FD0                                  __ptext90 25EA  
                                __ptext82 324A                                  __ptext74 14B8  
                                __ptext66 2158                                  __ptext58 382C  
                                __ptext83 15EA                                  __ptext75 06E8  
                                __ptext67 2ED6                                  __ptext84 22F2  
                                __ptext76 364C                                  __ptext68 16F6  
                                __ptext85 2760                                  __ptext77 28D0  
                                __ptext69 2B78                                  __ptext86 2086  
                                __ptext78 3046                                  __ptext87 3396  
                                __ptext79 26A6                                  __ptext88 281A  
                                __ptext89 2980                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                          __size_of_sprintf 045A  
                              strcpy@from 0062            __end_of_USBCtrlTrfSetupHandler 2F58  
                           __size_of_main 01EC                         ?_USBCtrlEPService 002E  
                            _month_length 1A9C                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0048                  __size_of_RTCC_from_epoch 001A  
                     _USBCtrlTrfInHandler 2760                                  _outPipes 0001  
                    _USBCtrlTrfOutHandler 324A                                  int$flags 005B  
                            _ringbuf_init 32A6                 _USBCtrlEPAllowStatusStage 22F2  
                               x_to_d@hex 0061                              _SSP1STATbits 000FC7  
                  ??_USBTransferOnePacket 0064                  __size_of_I2C_LCD_Command 0038  
               _USBDeferStatusStagePacket 0023                  CDCTxService@byte_to_send 006B  
                          main_init@usbrx 0200                            main_init@usbtx 08B0  
                             ??_main_init 0091                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 0071  
                    ?_USBCtrlTrfInHandler 002E             USBCtrlTrfTxService@byteToSend 002E  
            I2C_LCD_SetCursor@row_offsets 0067                           display_dec@edit 0092  
                                isdigit@c 0062                                  memset@p1 0060  
                        ?_USBStallHandler 002E                  USBStdFeatureReqHandler@p 0046  
                        get_quot_rem@quot 0079                 terminal_task@command_init 00C4  
                       RTCC_to_caltime@tm 0062                                  intlevel2 0000  
                               sprintf@ap 0083                                 sprintf@cp 0085  
                               sprintf@sp 006C                    __size_of_USBDeviceInit 0158  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 367A  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0040          ?_USER_USB_CALLBACK_EVENT_HANDLER 003A  
         _USER_USB_CALLBACK_EVENT_HANDLER 364C                          ___lwmod@dividend 0067  
            i2USBTransferOnePacket@handle 0033                          ___lldiv@dividend 0060  
                              _RCSTA1bits 000FAC                         ?_caltime_to_epoch 0079  
              __size_of_display_time_0802 0214                  __end_of_epoch_to_caltime 0D76  
                __size_of_RTCC_to_caltime 00BC                                _OSCCONbits 000FD3  
              i2USBTransferOnePacket@data 002F                        ??_caltime_to_epoch 007B  
                    __end_of_I2C_init_old 38FA                    ??_USBConfigureEndpoint 002F  
                   ?_USBCtrlTrfOutHandler 002E                               _ringbuf_pop 2226  
                             _ringbuf_num 17E6                               _ringbuf_put 1FB2  
                             _putUSBUSART 37CA                       _USBCtrlTrfRxService 15EA  
                             _timer0_init 349E                        _USBWakeFromSuspend 35EA  
                             _timer1_init 32FA                               _timer3_init 367A  
                 _USBStdFeatureReqHandler 06E8                        _USBCheckCDCRequest 28D0  
                     _USBCtrlTrfTxService 2086                           get_quot_rem@div 007B  
                         get_quot_rem@num 007D                                _RTCCFGbits 000F3F  
                                sprintf@c 008C                                  sprintf@f 006E  
                                strcat@cp 0064                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 002E                          _is_usb_available 3866  
                        ___lldiv@quotient 0068                           ___lwmod@divisor 0069  
                       caltime_to_RTCC@tm 0069                         ??_caltime_to_RTCC 006B  
                   ??_USBCtrlTrfInHandler 002F                                  strcpy@cp 0064  
                                strcpy@to 0060                     _USBAlternateInterface 00D5  
                         ___lwmod@counter 006B                       ?_USBCheckCDCRequest 002E  
               i2USBTransferOnePacket@dir 002E                 i2USBTransferOnePacket@len 0031  
                     USBEnableEndpoint@ep 0039                           _endpoint_number 002A  
                  __size_of_I2C_LCD_Clear 001A                      ?_USBCtrlTrfRxService 002E  
         epoch_to_caltime@day_since_epoch 0085                             ?_getsUSBUSART 0067  
                ?_USBCtrlEPAllowDataStage 002E                            _get_string_usb 334A  
                    ?_USBCtrlTrfTxService 002E              _USBStatusStageTimeoutCounter 0027  
                   __size_of_I2C_LCD_Puts 008E                     __size_of_I2C_LCD_init 0090  
                    ??_USBWakeFromSuspend 0042                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 10DC                      ??_USBCheckCDCRequest 002E  
                              _USB_CD_Ptr FE7D                          ??_RTCC_from_RTCC 0088  
