

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 20:55:15 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  002762                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for I2C_LCD_SetCursor@F8672
    71  002762  00                 	db	0
    72  002763  40                 	db	64
    73                           
    74                           ;initializer for epoch_to_caltime@month_cache
    75  002764  01                 	db	1
    76                           
    77                           	psect	smallconst
    78  000F00                     __psmallconst:
    79                           	opt stack 0
    80  000F00  00                 	db	0
    81  000F01                     _weekday_3char:
    82                           	opt stack 0
    83  000F01  53                 	db	83
    84  000F02  55                 	db	85
    85  000F03  4E                 	db	78
    86  000F04  00                 	db	0
    87  000F05  4D                 	db	77
    88  000F06  4F                 	db	79
    89  000F07  4E                 	db	78
    90  000F08  00                 	db	0
    91  000F09  54                 	db	84
    92  000F0A  55                 	db	85
    93  000F0B  45                 	db	69
    94  000F0C  00                 	db	0
    95  000F0D  57                 	db	87
    96  000F0E  45                 	db	69
    97  000F0F  44                 	db	68
    98  000F10  00                 	db	0
    99  000F11  54                 	db	84
   100  000F12  48                 	db	72
   101  000F13  55                 	db	85
   102  000F14  00                 	db	0
   103  000F15  46                 	db	70
   104  000F16  52                 	db	82
   105  000F17  49                 	db	73
   106  000F18  00                 	db	0
   107  000F19  53                 	db	83
   108  000F1A  41                 	db	65
   109  000F1B  54                 	db	84
   110  000F1C  00                 	db	0
   111  000F1D                     __end_of_weekday_3char:
   112                           	opt stack 0
   113  0000                     _ANCON0	set	3912
   114  0000                     _ANCON1	set	3913
   115  0000                     _PADCFG1bits	set	3900
   116  0000                     _RTCCAL	set	3902
   117  0000                     _RTCCFGbits	set	3903
   118  0000                     _RTCVALH	set	3899
   119  0000                     _RTCVALL	set	3898
   120  0000                     _T5CONbits	set	3874
   121  0000                     _ADRES	set	4035
   122  0000                     _ADCON0bits	set	4034
   123  0000                     _ADCON1bits	set	4033
   124  0000                     _BAUDCON1bits	set	3966
   125  0000                     _CTMUCONH	set	4019
   126  0000                     _CTMUCONHbits	set	4019
   127  0000                     _CTMUCONL	set	4018
   128  0000                     _CTMUCONLbits	set	4018
   129  0000                     _CTMUICON	set	4017
   130  0000                     _EECON2	set	4007
   131  0000                     _INTCON2bits	set	4081
   132  0000                     _INTCONbits	set	4082
   133  0000                     _IPR1bits	set	3999
   134  0000                     _IPR2bits	set	4002
   135  0000                     _IPR5bits	set	3993
   136  0000                     _OSCCONbits	set	4051
   137  0000                     _OSCTUNEbits	set	3995
   138  0000                     _PIE1bits	set	3997
   139  0000                     _PIE2bits	set	4000
   140  0000                     _PIE5bits	set	3985
   141  0000                     _PIR1bits	set	3998
   142  0000                     _PIR2bits	set	4001
   143  0000                     _PIR5bits	set	3992
   144  0000                     _PORTAbits	set	3968
   145  0000                     _RCREG1	set	4015
   146  0000                     _RCSTA1bits	set	4012
   147  0000                     _SPBRG1	set	4016
   148  0000                     _SPBRGH1	set	3967
   149  0000                     _SSP1ADD	set	4040
   150  0000                     _SSP1BUF	set	4041
   151  0000                     _SSP1CON1	set	4038
   152  0000                     _SSP1CON2	set	4037
   153  0000                     _SSP1CON2bits	set	4037
   154  0000                     _SSP1STAT	set	4039
   155  0000                     _T0CONbits	set	4053
   156  0000                     _T1CONbits	set	4045
   157  0000                     _T3CONbits	set	3961
   158  0000                     _TMR1H	set	4047
   159  0000                     _TRISA	set	3986
   160  0000                     _TRISB	set	3987
   161  0000                     _TRISC	set	3988
   162  0000                     _TXREG1	set	4014
   163  0000                     _TXSTA1bits	set	4013
   164  0000                     _BCL1IF	set	32011
   165  0000                     _LATA5	set	31821
   166  0000                     _LATA6	set	31822
   167  0000                     _LATA7	set	31823
   168  0000                     _LATB2	set	31826
   169  0000                     _LATB6	set	31830
   170  0000                     _LATB7	set	31831
   171  0000                     _LATC2	set	31834
   172  0000                     _SSP1IF	set	31987
   173  000F1D                     STR_11:
   174  000F1D  41                 	db	65	;'A'
   175  000F1E  6C                 	db	108	;'l'
   176  000F1F  77                 	db	119	;'w'
   177  000F20  61                 	db	97	;'a'
   178  000F21  79                 	db	121	;'y'
   179  000F22  73                 	db	115	;'s'
   180  000F23  4F                 	db	79	;'O'
   181  000F24  4E                 	db	78	;'N'
   182  000F25  00                 	db	0
   183  000F26                     STR_12:
   184  000F26  41                 	db	65	;'A'
   185  000F27  75                 	db	117	;'u'
   186  000F28  74                 	db	116	;'t'
   187  000F29  6F                 	db	111	;'o'
   188  000F2A  53                 	db	83	;'S'
   189  000F2B  74                 	db	116	;'t'
   190  000F2C  6F                 	db	111	;'o'
   191  000F2D  70                 	db	112	;'p'
   192  000F2E  00                 	db	0
   193  000F2F                     STR_10:
   194  000F2F  52                 	db	82	;'R'
   195  000F30  65                 	db	101	;'e'
   196  000F31  73                 	db	115	;'s'
   197  000F32  65                 	db	101	;'e'
   198  000F33  74                 	db	116	;'t'
   199  000F34  65                 	db	101	;'e'
   200  000F35  64                 	db	100	;'d'
   201  000F36  00                 	db	0
   202  000F37                     STR_16:
   203  000F37  53                 	db	83	;'S'
   204  000F38  74                 	db	116	;'t'
   205  000F39  61                 	db	97	;'a'
   206  000F3A  74                 	db	116	;'t'
   207  000F3B  69                 	db	105	;'i'
   208  000F3C  6F                 	db	111	;'o'
   209  000F3D  6E                 	db	110	;'n'
   210  000F3E  00                 	db	0
   211  000F3F                     STR_9:
   212  000F3F  52                 	db	82	;'R'
   213  000F40  65                 	db	101	;'e'
   214  000F41  73                 	db	115	;'s'
   215  000F42  65                 	db	101	;'e'
   216  000F43  74                 	db	116	;'t'
   217  000F44  3F                 	db	63	;'?'
   218  000F45  00                 	db	0
   219  000F46                     STR_5:
   220  000F46  43                 	db	67	;'C'
   221  000F47  45                 	db	69	;'E'
   222  000F48  4E                 	db	78	;'N'
   223  000F49  54                 	db	84	;'T'
   224  000F4A  45                 	db	69	;'E'
   225  000F4B  52                 	db	82	;'R'
   226  000F4C  00                 	db	0
   227  000F4D                     STR_15:
   228  000F4D  43                 	db	67	;'C'
   229  000F4E  68                 	db	104	;'h'
   230  000F4F  61                 	db	97	;'a'
   231  000F50  72                 	db	114	;'r'
   232  000F51  67                 	db	103	;'g'
   233  000F52  65                 	db	101	;'e'
   234  000F53  00                 	db	0
   235  000F54                     STR_4:
   236  000F54  43                 	db	67	;'C'
   237  000F55  65                 	db	101	;'e'
   238  000F56  6E                 	db	110	;'n'
   239  000F57  74                 	db	116	;'t'
   240  000F58  65                 	db	101	;'e'
   241  000F59  72                 	db	114	;'r'
   242  000F5A  00                 	db	0
   243  000F5B                     STR_3:
   244  000F5B  52                 	db	82	;'R'
   245  000F5C  49                 	db	73	;'I'
   246  000F5D  47                 	db	71	;'G'
   247  000F5E  48                 	db	72	;'H'
   248  000F5F  54                 	db	84	;'T'
   249  000F60  00                 	db	0
   250  000F61                     STR_2:
   251  000F61  52                 	db	82	;'R'
   252  000F62  69                 	db	105	;'i'
   253  000F63  67                 	db	103	;'g'
   254  000F64  68                 	db	104	;'h'
   255  000F65  74                 	db	116	;'t'
   256  000F66  00                 	db	0
   257  000F67                     STR_7:
   258  000F67  4C                 	db	76	;'L'
   259  000F68  45                 	db	69	;'E'
   260  000F69  46                 	db	70	;'F'
   261  000F6A  54                 	db	84	;'T'
   262  000F6B  00                 	db	0
   263  000F6C                     STR_13:
   264  000F6C  50                 	db	80	;'P'
   265  000F6D  4F                 	db	79	;'O'
   266  000F6E  52                 	db	82	;'R'
   267  000F6F  54                 	db	84	;'T'
   268  000F70  00                 	db	0
   269  000F71                     STR_6:
   270  000F71  4C                 	db	76	;'L'
   271  000F72  65                 	db	101	;'e'
   272  000F73  66                 	db	102	;'f'
   273  000F74  74                 	db	116	;'t'
   274  000F75  00                 	db	0
   275  000F76                     STR_8:
   276  000F76  6D                 	db	109	;'m'
   277  000F77  41                 	db	65	;'A'
   278  000F78  68                 	db	104	;'h'
   279  000F79  00                 	db	0
   280  000F7A                     STR_14:
   281  000F7A  0A                 	db	10
   282  000F7B  0A                 	db	10
   283  000F7C  00                 	db	0
   284  000F7D  20                 	db	32
   285  000F7E  20                 	db	32
   286  000F7F  00                 	db	0
   287                           
   288                           ; #config settings
   289  000F80  00                 	db	0	; dummy byte at the end
   290  0000                     
   291                           	psect	cinit
   292  002294                     __pcinit:
   293                           	opt stack 0
   294  002294                     start_initialization:
   295                           	opt stack 0
   296  002294                     __initialization:
   297                           	opt stack 0
   298                           
   299                           ; Clear objects allocated to BANK1 (19 bytes)
   300  002294  EE01  F0C9         	lfsr	0,__pbssBANK1
   301  002298  0E13               	movlw	19
   302  00229A                     clear_0:
   303  00229A  6AEE               	clrf	postinc0,c
   304  00229C  06E8               	decf	wreg,f,c
   305  00229E  E1FD               	bnz	clear_0
   306                           
   307                           ; Clear objects allocated to BANK0 (53 bytes)
   308  0022A0  EE00  F060         	lfsr	0,__pbssBANK0
   309  0022A4  0E35               	movlw	53
   310  0022A6                     clear_1:
   311  0022A6  6AEE               	clrf	postinc0,c
   312  0022A8  06E8               	decf	wreg,f,c
   313  0022AA  E1FD               	bnz	clear_1
   314                           
   315                           ; Clear objects allocated to COMRAM (38 bytes)
   316  0022AC  EE00  F028         	lfsr	0,__pbssCOMRAM
   317  0022B0  0E26               	movlw	38
   318  0022B2                     clear_2:
   319  0022B2  6AEE               	clrf	postinc0,c
   320  0022B4  06E8               	decf	wreg,f,c
   321  0022B6  E1FD               	bnz	clear_2
   322                           
   323                           ; Initialize objects allocated to COMRAM (3 bytes)
   324                           ; load TBLPTR registers with __pidataCOMRAM
   325  0022B8  0E62               	movlw	low __pidataCOMRAM
   326  0022BA  6EF6               	movwf	tblptrl,c
   327  0022BC  0E27               	movlw	high __pidataCOMRAM
   328  0022BE  6EF7               	movwf	tblptrh,c
   329  0022C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   330  0022C2  6EF8               	movwf	tblptru,c
   331  0022C4  0009               	tblrd		*+	;fetch initializer
   332  0022C6  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   333  0022CA  0009               	tblrd		*+	;fetch initializer
   334  0022CC  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   335  0022D0  0009               	tblrd		*+	;fetch initializer
   336  0022D2  CFF5 F050          	movff	tablat,__pdataCOMRAM+2
   337  0022D6                     end_of_initialization:
   338                           	opt stack 0
   339  0022D6                     __end_of__initialization:
   340                           	opt stack 0
   341  0022D6  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   342  0022D8  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   343  0022DA  0100               	movlb	0
   344  0022DC  EF28  F00B         	goto	_main	;jump to C main() function
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           
   352                           	psect	bssCOMRAM
   353  000028                     __pbssCOMRAM:
   354                           	opt stack 0
   355  000028                     _I:
   356                           	opt stack 0
   357  000028                     	ds	6
   358  00002E                     _auto_cut_ON:
   359                           	opt stack 0
   360  00002E                     	ds	3
   361  000031                     lchika@cnt:
   362                           	opt stack 0
   363  000031                     	ds	3
   364  000034                     ISR@cnt_t0:
   365                           	opt stack 0
   366  000034                     	ds	2
   367  000036                     epoch_to_caltime@day_cache:
   368                           	opt stack 0
   369  000036                     	ds	2
   370  000038                     millis_timer@cnt:
   371                           	opt stack 0
   372  000038                     	ds	2
   373  00003A                     RTCC_loop@prev_halfsec:
   374                           	opt stack 0
   375  00003A                     	ds	1
   376  00003B                     _colon:
   377                           	opt stack 0
   378  00003B                     	ds	1
   379  00003C                     _edit_flag:
   380                           	opt stack 0
   381  00003C                     	ds	1
   382  00003D                     _halfsec:
   383                           	opt stack 0
   384  00003D                     	ds	1
   385  00003E                     _print_content:
   386                           	opt stack 0
   387  00003E                     	ds	1
   388  00003F                     _print_port:
   389                           	opt stack 0
   390  00003F                     	ds	1
   391  000040                     _time_change_flag:
   392                           	opt stack 0
   393  000040                     	ds	1
   394  000041                     epoch_to_caltime@year_cache:
   395                           	opt stack 0
   396  000041                     	ds	1
   397  000042                     _epoch_now:
   398                           	opt stack 0
   399  000042                     	ds	4
   400  000046                     _sw0:
   401                           	opt stack 0
   402  000046                     	ds	4
   403  00004A                     _sw1:
   404                           	opt stack 0
   405  00004A                     	ds	4
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           
   413                           	psect	dataCOMRAM
   414  00004E                     __pdataCOMRAM:
   415                           	opt stack 0
   416  00004E                     I2C_LCD_SetCursor@F8672:
   417                           	opt stack 0
   418  00004E                     	ds	2
   419  000050                     epoch_to_caltime@month_cache:
   420                           	opt stack 0
   421  000050                     	ds	1
   422                           tblptru	equ	0xFF8
   423                           tblptrh	equ	0xFF7
   424                           tblptrl	equ	0xFF6
   425                           tablat	equ	0xFF5
   426                           postinc0	equ	0xFEE
   427                           wreg	equ	0xFE8
   428                           
   429                           	psect	bssBANK0
   430  000060                     __pbssBANK0:
   431                           	opt stack 0
   432  000060                     _S:
   433                           	opt stack 0
   434  000060                     	ds	12
   435  00006C                     _ss:
   436                           	opt stack 0
   437  00006C                     	ds	12
   438  000078                     _ms:
   439                           	opt stack 0
   440  000078                     	ds	4
   441  00007C                     _d1:
   442                           	opt stack 0
   443  00007C                     	ds	3
   444  00007F                     lchika@cntf:
   445                           	opt stack 0
   446  00007F                     	ds	3
   447  000082                     _rx_buf:
   448                           	opt stack 0
   449  000082                     	ds	8
   450  00008A                     _caltime_now:
   451                           	opt stack 0
   452  00008A                     	ds	7
   453  000091                     _sw2:
   454                           	opt stack 0
   455  000091                     	ds	4
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           
   463                           	psect	bssBANK1
   464  0001C9                     __pbssBANK1:
   465                           	opt stack 0
   466  0001C9                     _cut_cnt:
   467                           	opt stack 0
   468  0001C9                     	ds	6
   469  0001CF                     _display_flag:
   470                           	opt stack 0
   471  0001CF                     	ds	1
   472  0001D0                     _tx_buf:
   473                           	opt stack 0
   474  0001D0                     	ds	8
   475  0001D8                     _sw:
   476                           	opt stack 0
   477  0001D8                     	ds	4
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           
   485                           	psect	cstackBANK1
   486  000100                     __pcstackBANK1:
   487                           	opt stack 0
   488  000100                     main@txbuf:
   489                           	opt stack 0
   490                           
   491                           ; 200 bytes @ 0x0
   492  000100                     	ds	200
   493  0001C8                     main@i:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0xC8
   497  0001C8                     	ds	1
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           
   505                           	psect	cstackBANK0
   506  000095                     __pcstackBANK0:
   507                           	opt stack 0
   508  000095                     ??_timer0_init:
   509  000095                     ??_timer3_init:
   510  000095                     ??_I2C_IdleCheck:
   511  000095                     ?___lwmod:
   512                           	opt stack 0
   513  000095                     ?___llmod:
   514                           	opt stack 0
   515  000095                     timer1_init@clock_select:
   516                           	opt stack 0
   517  000095                     ADC_init@p_ref:
   518                           	opt stack 0
   519  000095                     OUT@value:
   520                           	opt stack 0
   521  000095                     LED@value:
   522                           	opt stack 0
   523  000095                     sw_flag_read@bit_and:
   524                           	opt stack 0
   525  000095                     sw_flag_clear@bit_and:
   526                           	opt stack 0
   527  000095                     ringbuf_init@rb:
   528                           	opt stack 0
   529  000095                     Delay_ms@ms:
   530                           	opt stack 0
   531  000095                     ___lwmod@dividend:
   532                           	opt stack 0
   533  000095                     ___llmod@dividend:
   534                           	opt stack 0
   535                           
   536                           ; 4 bytes @ 0x0
   537  000095                     	ds	1
   538  000096                     ??_timer1_init:
   539  000096                     timer0_init@prescaler:
   540                           	opt stack 0
   541  000096                     timer3_init@prescaler:
   542                           	opt stack 0
   543  000096                     I2C_IdleCheck@mask:
   544                           	opt stack 0
   545  000096                     OUT@b:
   546                           	opt stack 0
   547  000096                     LED@b:
   548                           	opt stack 0
   549  000096                     sw_flag_read@port:
   550                           	opt stack 0
   551  000096                     sw_flag_clear@port:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x1
   555  000096                     	ds	1
   556  000097                     ??_Delay_ms:
   557  000097                     timer1_init@prescaler:
   558                           	opt stack 0
   559  000097                     I2C_Start@rw:
   560                           	opt stack 0
   561  000097                     I2C_Send@data:
   562                           	opt stack 0
   563  000097                     ringbuf_init@internal_buf:
   564                           	opt stack 0
   565  000097                     ___lwmod@divisor:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x2
   569  000097                     	ds	1
   570  000098                     I2C_Start@adrs:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x3
   574  000098                     	ds	1
   575  000099                     I2C_LCD_Command@c:
   576                           	opt stack 0
   577  000099                     I2C_LCD_Putc@c:
   578                           	opt stack 0
   579  000099                     ___lwmod@counter:
   580                           	opt stack 0
   581  000099                     ringbuf_init@bufsize:
   582                           	opt stack 0
   583  000099                     I2C_LCD_Puts@s:
   584                           	opt stack 0
   585  000099                     ___llmod@divisor:
   586                           	opt stack 0
   587                           
   588                           ; 4 bytes @ 0x4
   589  000099                     	ds	1
   590  00009A                     ?___lwdiv:
   591                           	opt stack 0
   592  00009A                     I2C_LCD_Command@ans:
   593                           	opt stack 0
   594  00009A                     I2C_LCD_Putc@ans:
   595                           	opt stack 0
   596  00009A                     ___lwdiv@dividend:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x5
   600  00009A                     	ds	1
   601  00009B                     ??_I2C_LCD_Clear:
   602  00009B                     ??_I2C_LCD_Puts:
   603  00009B                     I2C_LCD_SetCursor@row:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x6
   607  00009B                     	ds	1
   608  00009C                     I2C_LCD_SetCursor@row_offsets:
   609                           	opt stack 0
   610  00009C                     I2C_LCD_Puts@ans:
   611                           	opt stack 0
   612  00009C                     ___lwdiv@divisor:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x7
   616  00009C                     	ds	1
   617  00009D                     ___llmod@counter:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x8
   621  00009D                     	ds	1
   622  00009E                     ?___lldiv:
   623                           	opt stack 0
   624  00009E                     I2C_LCD_SetCursor@col:
   625                           	opt stack 0
   626  00009E                     ___lwdiv@counter:
   627                           	opt stack 0
   628  00009E                     ___lldiv@dividend:
   629                           	opt stack 0
   630                           
   631                           ; 4 bytes @ 0x9
   632  00009E                     	ds	1
   633  00009F                     ___lwdiv@quotient:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0xA
   637  00009F                     	ds	3
   638  0000A2                     ___lldiv@divisor:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0xD
   642  0000A2                     	ds	4
   643  0000A6                     ___lldiv@quotient:
   644                           	opt stack 0
   645                           
   646                           ; 4 bytes @ 0x11
   647  0000A6                     	ds	4
   648  0000AA                     ___lldiv@counter:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x15
   652  0000AA                     	ds	1
   653  0000AB                     tblptru	equ	0xFF8
   654                           tblptrh	equ	0xFF7
   655                           tblptrl	equ	0xFF6
   656                           tablat	equ	0xFF5
   657                           postinc0	equ	0xFEE
   658                           wreg	equ	0xFE8
   659                           
   660                           ; 0 bytes @ 0x16
   661                           
   662                           	psect	cstackCOMRAM
   663  000001                     __pcstackCOMRAM:
   664                           	opt stack 0
   665  000001                     ?_ADC:
   666                           	opt stack 0
   667  000001                     ?_ringbuf_num:
   668                           	opt stack 0
   669  000001                     ?___awdiv:
   670                           	opt stack 0
   671  000001                     ?i2___lwdiv:
   672                           	opt stack 0
   673  000001                     ?i2___lwmod:
   674                           	opt stack 0
   675  000001                     ?i2___lldiv:
   676                           	opt stack 0
   677  000001                     i2OUT@value:
   678                           	opt stack 0
   679  000001                     i2LED@value:
   680                           	opt stack 0
   681  000001                     ringbuf_num@rb:
   682                           	opt stack 0
   683  000001                     button_timer_interrupt@bt:
   684                           	opt stack 0
   685  000001                     ___awdiv@dividend:
   686                           	opt stack 0
   687  000001                     i2___lwdiv@dividend:
   688                           	opt stack 0
   689  000001                     i2___lwmod@dividend:
   690                           	opt stack 0
   691  000001                     i2___lldiv@dividend:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x0
   695  000001                     	ds	1
   696  000002                     i2OUT@b:
   697                           	opt stack 0
   698  000002                     i2LED@b:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x1
   702  000002                     	ds	1
   703  000003                     ??_ADC:
   704  000003                     ??_ringbuf_num:
   705  000003                     button_timer_interrupt@sw_value:
   706                           	opt stack 0
   707  000003                     ___awdiv@divisor:
   708                           	opt stack 0
   709  000003                     i2___lwdiv@divisor:
   710                           	opt stack 0
   711  000003                     i2___lwmod@divisor:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x2
   715  000003                     	ds	1
   716  000004                     ADC@ch:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x3
   720  000004                     	ds	1
   721  000005                     ?___wmul:
   722                           	opt stack 0
   723  000005                     ___awdiv@counter:
   724                           	opt stack 0
   725  000005                     i2___lwmod@counter:
   726                           	opt stack 0
   727  000005                     ___wmul@multiplier:
   728                           	opt stack 0
   729  000005                     i2___lwdiv@quotient:
   730                           	opt stack 0
   731  000005                     i2___lldiv@divisor:
   732                           	opt stack 0
   733                           
   734                           ; 4 bytes @ 0x4
   735  000005                     	ds	1
   736  000006                     ___awdiv@sign:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x5
   740  000006                     	ds	1
   741  000007                     i2___lwdiv@counter:
   742                           	opt stack 0
   743  000007                     ___wmul@multiplicand:
   744                           	opt stack 0
   745  000007                     ___awdiv@quotient:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x6
   749  000007                     	ds	2
   750  000009                     ??_lchika:
   751  000009                     ringbuf_put@rb:
   752                           	opt stack 0
   753  000009                     ringbuf_pop@rb:
   754                           	opt stack 0
   755  000009                     ___wmul@product:
   756                           	opt stack 0
   757  000009                     i2___lldiv@quotient:
   758                           	opt stack 0
   759                           
   760                           ; 4 bytes @ 0x8
   761  000009                     	ds	2
   762  00000B                     ??_ringbuf_pop:
   763  00000B                     ??_Auto_cut:
   764  00000B                     ringbuf_put@asciicode:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0xA
   768  00000B                     	ds	1
   769  00000C                     ??_ringbuf_put:
   770  00000C                     lchika@i:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0xB
   774  00000C                     	ds	1
   775  00000D                     Auto_cut@i:
   776                           	opt stack 0
   777  00000D                     i2___lldiv@counter:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0xC
   781  00000D                     	ds	2
   782  00000F                     ringbuf_pop@ret:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0xE
   786  00000F                     	ds	1
   787  000010                     UART_ISR@ascii:
   788                           	opt stack 0
   789  000010                     tx_send@asciicode:
   790                           	opt stack 0
   791  000010                     tx_sends@asciicode:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0xF
   795  000010                     	ds	1
   796  000011                     tx_sendn@value:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x10
   800  000011                     	ds	1
   801  000012                     
   802                           ; 0 bytes @ 0x11
   803  000012                     	ds	1
   804  000013                     tx_sendn@digits:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x12
   808  000013                     	ds	1
   809  000014                     tx_sendn@i:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x13
   813  000014                     	ds	1
   814  000015                     tx_sendn@temp:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x14
   818  000015                     	ds	2
   819  000017                     ??_ISR:
   820                           
   821                           ; 0 bytes @ 0x16
   822  000017                     	ds	16
   823  000027                     ISR@i:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x26
   827  000027                     	ds	1
   828                           tblptru	equ	0xFF8
   829                           tblptrh	equ	0xFF7
   830                           tblptrl	equ	0xFF6
   831                           tablat	equ	0xFF5
   832                           postinc0	equ	0xFEE
   833                           wreg	equ	0xFE8
   834                           
   835 ;;
   836 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   837 ;;
   838 ;; *************** function _main *****************
   839 ;; Defined at:
   840 ;;		line 267 in file "main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  txbuf         200    0[BANK1 ] unsigned char [200]
   845 ;;  i               1  200[BANK1 ] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  2  677[None  ] int 
   848 ;; Registers used:
   849 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   856 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   858 ;;      Totals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   859 ;;Total ram usage:      201 bytes
   860 ;; Hardware stack levels required when called:   10
   861 ;; This function calls:
   862 ;;		_ADC_init
   863 ;;		_I2C_LCD_Clear
   864 ;;		_I2C_LCD_Puts
   865 ;;		_I2C_LCD_SetCursor
   866 ;;		_I2C_LCD_init
   867 ;;		_I2C_init
   868 ;;		_LED
   869 ;;		_OUT
   870 ;;		_UART_init
   871 ;;		_display
   872 ;;		_ringbuf_init
   873 ;;		_sw_flag_clear
   874 ;;		_sw_flag_read
   875 ;;		_timer0_init
   876 ;;		_timer1_init
   877 ;;		_timer3_init
   878 ;; This function is called by:
   879 ;;		Startup code after reset
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text0
   884  001650                     __ptext0:
   885                           	opt stack 0
   886  001650                     _main:
   887                           	opt stack 21
   888                           
   889                           ;main.c: 268: OSCCONbits.IRCF = 7;
   890                           
   891                           ;incstack = 0
   892  001650  88D3               	bsf	4051,4,c	;volatile
   893  001652  8AD3               	bsf	4051,5,c	;volatile
   894  001654  8CD3               	bsf	4051,6,c	;volatile
   895                           
   896                           ;main.c: 269: OSCTUNEbits.PLLEN = 1;
   897  001656  8C9B               	bsf	3995,6,c	;volatile
   898                           
   899                           ;main.c: 270: OSCCONbits.SCS = 0;
   900  001658  0EFC               	movlw	-4
   901  00165A  16D3               	andwf	4051,f,c	;volatile
   902                           
   903                           ;main.c: 271: TRISA = 0b00011111;
   904  00165C  0E1F               	movlw	31
   905  00165E  6E92               	movwf	3986,c	;volatile
   906                           
   907                           ;main.c: 272: TRISB = 0b00111111;
   908  001660  0E3F               	movlw	63
   909  001662  6E93               	movwf	3987,c	;volatile
   910                           
   911                           ;main.c: 273: TRISC = 0b10110010;
   912  001664  0EB2               	movlw	178
   913  001666  6E94               	movwf	3988,c	;volatile
   914                           
   915                           ;main.c: 274: ANCON0 = 0b11111111;
   916  001668  010F               	movlb	15	; () banked
   917  00166A  6948               	setf	72,b	;volatile
   918                           
   919                           ;main.c: 275: ANCON1 = 0b00011000;
   920  00166C  0E18               	movlw	24
   921  00166E  010F               	movlb	15	; () banked
   922  001670  6F49               	movwf	73,b	;volatile
   923                           
   924                           ; BSR set to: 15
   925                           ;main.c: 277: timer0_init(6);
   926  001672  0E06               	movlw	6
   927  001674  EC7A  F012         	call	_timer0_init
   928                           
   929                           ;main.c: 278: timer1_init(0, 2);
   930  001678  0E02               	movlw	2
   931  00167A  0100               	movlb	0	; () banked
   932  00167C  6F95               	movwf	timer1_init@clock_select& (0+255),b
   933  00167E  0E00               	movlw	0
   934  001680  EC22  F011         	call	_timer1_init
   935                           
   936                           ;main.c: 279: timer3_init(2);
   937  001684  0E02               	movlw	2
   938  001686  ECE7  F012         	call	_timer3_init
   939                           
   940                           ;main.c: 280: I2C_init();
   941  00168A  ECA3  F013         	call	_I2C_init	;wreg free
   942                           
   943                           ;main.c: 281: I2C_LCD_init();
   944  00168E  EC79  F010         	call	_I2C_LCD_init	;wreg free
   945                           
   946                           ;main.c: 282: ADC_init(0);
   947  001692  0E00               	movlw	0
   948  001694  EC60  F013         	call	_ADC_init
   949                           
   950                           ;main.c: 284: UART_init();
   951  001698  EC50  F013         	call	_UART_init	;wreg free
   952                           
   953                           ;main.c: 285: uint8_t txbuf[200];
   954                           ;main.c: 286: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
   955  00169C  0ED0               	movlw	low _tx_buf
   956  00169E  0100               	movlb	0	; () banked
   957  0016A0  6F95               	movwf	ringbuf_init@rb& (0+255),b
   958  0016A2  0E01               	movlw	high _tx_buf
   959  0016A4  0100               	movlb	0	; () banked
   960  0016A6  6F96               	movwf	(ringbuf_init@rb+1)& (0+255),b
   961  0016A8  0E00               	movlw	low main@txbuf
   962  0016AA  0100               	movlb	0	; () banked
   963  0016AC  6F97               	movwf	ringbuf_init@internal_buf& (0+255),b
   964  0016AE  0E01               	movlw	high main@txbuf
   965  0016B0  0100               	movlb	0	; () banked
   966  0016B2  6F98               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
   967  0016B4  0E00               	movlw	0
   968  0016B6  0100               	movlb	0	; () banked
   969  0016B8  6F9A               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
   970  0016BA  0EC8               	movlw	200
   971  0016BC  6F99               	movwf	ringbuf_init@bufsize& (0+255),b
   972  0016BE  ECA5  F010         	call	_ringbuf_init	;wreg free
   973                           
   974                           ;main.c: 288: INTCONbits.GIE = 1;
   975  0016C2  8EF2               	bsf	intcon,7,c	;volatile
   976                           
   977                           ;main.c: 290: I2C_LCD_Clear();
   978  0016C4  EC7F  F013         	call	_I2C_LCD_Clear	;wreg free
   979                           
   980                           ;main.c: 291: I2C_LCD_SetCursor(0, 0);
   981  0016C8  0E00               	movlw	0
   982  0016CA  0100               	movlb	0	; () banked
   983  0016CC  6F9B               	movwf	I2C_LCD_SetCursor@row& (0+255),b
   984  0016CE  0E00               	movlw	0
   985  0016D0  ECFD  F012         	call	_I2C_LCD_SetCursor
   986                           
   987                           ;main.c: 292: I2C_LCD_Puts("Charge");
   988  0016D4  0E4D               	movlw	low STR_15
   989  0016D6  0100               	movlb	0	; () banked
   990  0016D8  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
   991  0016DA  0E0F               	movlw	high STR_15
   992  0016DC  0100               	movlb	0	; () banked
   993  0016DE  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
   994  0016E0  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
   995                           
   996                           ;main.c: 293: I2C_LCD_SetCursor(0, 1);
   997  0016E4  0E01               	movlw	1
   998  0016E6  0100               	movlb	0	; () banked
   999  0016E8  6F9B               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1000  0016EA  0E00               	movlw	0
  1001  0016EC  ECFD  F012         	call	_I2C_LCD_SetCursor
  1002                           
  1003                           ;main.c: 294: I2C_LCD_Puts("Station");
  1004  0016F0  0E37               	movlw	low STR_16
  1005  0016F2  0100               	movlb	0	; () banked
  1006  0016F4  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  1007  0016F6  0E0F               	movlw	high STR_16
  1008  0016F8  0100               	movlb	0	; () banked
  1009  0016FA  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1010  0016FC  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  1011                           
  1012                           ;main.c: 296: uint8_t i;
  1013                           ;main.c: 298: for (i = 0; i < 3; i++) {
  1014  001700  0E00               	movlw	0
  1015  001702  0101               	movlb	1	; () banked
  1016  001704  6FC8               	movwf	main@i& (0+255),b
  1017  001706                     l5054:
  1018                           
  1019                           ; BSR set to: 1
  1020  001706  0E02               	movlw	2
  1021  001708  0101               	movlb	1	; () banked
  1022  00170A  65C8               	cpfsgt	main@i& (0+255),b
  1023  00170C  D001               	goto	l5058
  1024  00170E  D029               	goto	l680
  1025  001710                     l5058:
  1026                           
  1027                           ; BSR set to: 1
  1028                           ;main.c: 299: OUT(i, 1);
  1029  001710  0E01               	movlw	1
  1030  001712  0100               	movlb	0	; () banked
  1031  001714  6F95               	movwf	OUT@value& (0+255),b
  1032  001716  0101               	movlb	1	; () banked
  1033  001718  51C8               	movf	main@i& (0+255),w,b
  1034  00171A  ECCF  F010         	call	_OUT
  1035                           
  1036                           ;main.c: 300: LED(i, 1);
  1037  00171E  0E01               	movlw	1
  1038  001720  0100               	movlb	0	; () banked
  1039  001722  6F95               	movwf	LED@value& (0+255),b
  1040  001724  0101               	movlb	1	; () banked
  1041  001726  51C8               	movf	main@i& (0+255),w,b
  1042  001728  EC95  F011         	call	_LED
  1043                           
  1044                           ;main.c: 301: cut_cnt[i] = 0;
  1045  00172C  0101               	movlb	1	; () banked
  1046  00172E  51C8               	movf	main@i& (0+255),w,b
  1047  001730  0D02               	mullw	2
  1048  001732  0EC9               	movlw	low _cut_cnt
  1049  001734  24F3               	addwf	prodl,w,c
  1050  001736  6ED9               	movwf	fsr2l,c
  1051  001738  0E01               	movlw	high _cut_cnt
  1052  00173A  20F4               	addwfc	prodh,w,c
  1053  00173C  6EDA               	movwf	fsr2h,c
  1054  00173E  0E00               	movlw	0
  1055  001740  6EDE               	movwf	postinc2,c
  1056  001742  0E00               	movlw	0
  1057  001744  6EDD               	movwf	postdec2,c
  1058                           
  1059                           ; BSR set to: 1
  1060                           ;main.c: 302: auto_cut_ON[i] = 1;
  1061  001746  0101               	movlb	1	; () banked
  1062  001748  51C8               	movf	main@i& (0+255),w,b
  1063  00174A  0D01               	mullw	1
  1064  00174C  0E2E               	movlw	low _auto_cut_ON
  1065  00174E  24F3               	addwf	prodl,w,c
  1066  001750  6ED9               	movwf	fsr2l,c
  1067  001752  0E00               	movlw	high _auto_cut_ON
  1068  001754  20F4               	addwfc	prodh,w,c
  1069  001756  6EDA               	movwf	fsr2h,c
  1070  001758  0E01               	movlw	1
  1071  00175A  6EDF               	movwf	indf2,c
  1072                           
  1073                           ; BSR set to: 1
  1074  00175C  0101               	movlb	1	; () banked
  1075  00175E  2BC8               	incf	main@i& (0+255),f,b
  1076  001760  D7D2               	goto	l5054
  1077  001762                     l680:
  1078  001762  0004               	clrwdt		;# 
  1079                           
  1080                           ;main.c: 307: for (i = 0; i < 3; i++) {
  1081  001764  0E00               	movlw	0
  1082  001766  0101               	movlb	1	; () banked
  1083  001768  6FC8               	movwf	main@i& (0+255),b
  1084  00176A                     l5070:
  1085                           
  1086                           ; BSR set to: 1
  1087  00176A  0E02               	movlw	2
  1088  00176C  0101               	movlb	1	; () banked
  1089  00176E  65C8               	cpfsgt	main@i& (0+255),b
  1090  001770  D001               	goto	l5074
  1091  001772  D098               	goto	l682
  1092  001774                     l5074:
  1093                           
  1094                           ; BSR set to: 1
  1095                           ;main.c: 308: if (sw_flag_read(i, 0x10)) {
  1096  001774  0E10               	movlw	16
  1097  001776  0100               	movlb	0	; () banked
  1098  001778  6F95               	movwf	sw_flag_read@bit_and& (0+255),b
  1099  00177A  0101               	movlb	1	; () banked
  1100  00177C  51C8               	movf	main@i& (0+255),w,b
  1101  00177E  EC5C  F012         	call	_sw_flag_read
  1102  001782  0900               	iorlw	0
  1103  001784  B4D8               	btfsc	status,2,c
  1104  001786  D01B               	goto	l5080
  1105                           
  1106                           ;main.c: 309: OUT(i, 1);
  1107  001788  0E01               	movlw	1
  1108  00178A  0100               	movlb	0	; () banked
  1109  00178C  6F95               	movwf	OUT@value& (0+255),b
  1110  00178E  0101               	movlb	1	; () banked
  1111  001790  51C8               	movf	main@i& (0+255),w,b
  1112  001792  ECCF  F010         	call	_OUT
  1113                           
  1114                           ;main.c: 310: LED(i, 1);
  1115  001796  0E01               	movlw	1
  1116  001798  0100               	movlb	0	; () banked
  1117  00179A  6F95               	movwf	LED@value& (0+255),b
  1118  00179C  0101               	movlb	1	; () banked
  1119  00179E  51C8               	movf	main@i& (0+255),w,b
  1120  0017A0  EC95  F011         	call	_LED
  1121                           
  1122                           ;main.c: 311: cut_cnt[i] = 0;
  1123  0017A4  0101               	movlb	1	; () banked
  1124  0017A6  51C8               	movf	main@i& (0+255),w,b
  1125  0017A8  0D02               	mullw	2
  1126  0017AA  0EC9               	movlw	low _cut_cnt
  1127  0017AC  24F3               	addwf	prodl,w,c
  1128  0017AE  6ED9               	movwf	fsr2l,c
  1129  0017B0  0E01               	movlw	high _cut_cnt
  1130  0017B2  20F4               	addwfc	prodh,w,c
  1131  0017B4  6EDA               	movwf	fsr2h,c
  1132  0017B6  0E00               	movlw	0
  1133  0017B8  6EDE               	movwf	postinc2,c
  1134  0017BA  0E00               	movlw	0
  1135  0017BC  6EDD               	movwf	postdec2,c
  1136  0017BE                     l5080:
  1137                           
  1138                           ;main.c: 312: }
  1139                           ;main.c: 313: if (sw_flag_read(i, 0x10)) {
  1140  0017BE  0E10               	movlw	16
  1141  0017C0  0100               	movlb	0	; () banked
  1142  0017C2  6F95               	movwf	sw_flag_read@bit_and& (0+255),b
  1143  0017C4  0101               	movlb	1	; () banked
  1144  0017C6  51C8               	movf	main@i& (0+255),w,b
  1145  0017C8  EC5C  F012         	call	_sw_flag_read
  1146  0017CC  0900               	iorlw	0
  1147  0017CE  B4D8               	btfsc	status,2,c
  1148  0017D0  D009               	goto	l684
  1149                           
  1150                           ;main.c: 314: sw_flag_clear(i, 0x00);
  1151  0017D2  0E00               	movlw	0
  1152  0017D4  0100               	movlb	0	; () banked
  1153  0017D6  6F95               	movwf	sw_flag_clear@bit_and& (0+255),b
  1154  0017D8  0101               	movlb	1	; () banked
  1155  0017DA  51C8               	movf	main@i& (0+255),w,b
  1156  0017DC  ECB9  F011         	call	_sw_flag_clear
  1157                           
  1158                           ;main.c: 315: print_port = i;
  1159  0017E0  C1C8  F03F         	movff	main@i,_print_port
  1160  0017E4                     l684:
  1161                           
  1162                           ;main.c: 316: }
  1163                           ;main.c: 317: if (sw_flag_read(i, 0x40)) {
  1164  0017E4  0E40               	movlw	64
  1165  0017E6  0100               	movlb	0	; () banked
  1166  0017E8  6F95               	movwf	sw_flag_read@bit_and& (0+255),b
  1167  0017EA  0101               	movlb	1	; () banked
  1168  0017EC  51C8               	movf	main@i& (0+255),w,b
  1169  0017EE  EC5C  F012         	call	_sw_flag_read
  1170  0017F2  0900               	iorlw	0
  1171  0017F4  B4D8               	btfsc	status,2,c
  1172  0017F6  D009               	goto	l5090
  1173                           
  1174                           ;main.c: 318: sw_flag_clear(i, 0x00);
  1175  0017F8  0E00               	movlw	0
  1176  0017FA  0100               	movlb	0	; () banked
  1177  0017FC  6F95               	movwf	sw_flag_clear@bit_and& (0+255),b
  1178  0017FE  0101               	movlb	1	; () banked
  1179  001800  51C8               	movf	main@i& (0+255),w,b
  1180  001802  ECB9  F011         	call	_sw_flag_clear
  1181                           
  1182                           ;main.c: 319: print_content = RESET;
  1183  001806  0E02               	movlw	2
  1184  001808  6E3E               	movwf	_print_content,c
  1185  00180A                     l5090:
  1186                           
  1187                           ;main.c: 320: }
  1188                           ;main.c: 321: if (sw_flag_read(i, 0x04)) {
  1189  00180A  0E04               	movlw	4
  1190  00180C  0100               	movlb	0	; () banked
  1191  00180E  6F95               	movwf	sw_flag_read@bit_and& (0+255),b
  1192  001810  0101               	movlb	1	; () banked
  1193  001812  51C8               	movf	main@i& (0+255),w,b
  1194  001814  EC5C  F012         	call	_sw_flag_read
  1195  001818  0900               	iorlw	0
  1196  00181A  B4D8               	btfsc	status,2,c
  1197  00181C  D009               	goto	l5096
  1198                           
  1199                           ;main.c: 322: sw_flag_clear(i, 0x00);
  1200  00181E  0E00               	movlw	0
  1201  001820  0100               	movlb	0	; () banked
  1202  001822  6F95               	movwf	sw_flag_clear@bit_and& (0+255),b
  1203  001824  0101               	movlb	1	; () banked
  1204  001826  51C8               	movf	main@i& (0+255),w,b
  1205  001828  ECB9  F011         	call	_sw_flag_clear
  1206                           
  1207                           ;main.c: 323: print_content = RESETED;
  1208  00182C  0E03               	movlw	3
  1209  00182E  6E3E               	movwf	_print_content,c
  1210  001830                     l5096:
  1211                           
  1212                           ;main.c: 324: }
  1213                           ;main.c: 325: if (sw_flag_read(i, 0x80)) {
  1214  001830  0E80               	movlw	128
  1215  001832  0100               	movlb	0	; () banked
  1216  001834  6F95               	movwf	sw_flag_read@bit_and& (0+255),b
  1217  001836  0101               	movlb	1	; () banked
  1218  001838  51C8               	movf	main@i& (0+255),w,b
  1219  00183A  EC5C  F012         	call	_sw_flag_read
  1220  00183E  0900               	iorlw	0
  1221  001840  B4D8               	btfsc	status,2,c
  1222  001842  D02D               	goto	l5110
  1223                           
  1224                           ;main.c: 326: sw_flag_clear(i, 0x00);
  1225  001844  0E00               	movlw	0
  1226  001846  0100               	movlb	0	; () banked
  1227  001848  6F95               	movwf	sw_flag_clear@bit_and& (0+255),b
  1228  00184A  0101               	movlb	1	; () banked
  1229  00184C  51C8               	movf	main@i& (0+255),w,b
  1230  00184E  ECB9  F011         	call	_sw_flag_clear
  1231                           
  1232                           ;main.c: 327: if (auto_cut_ON[i]) {
  1233  001852  0101               	movlb	1	; () banked
  1234  001854  51C8               	movf	main@i& (0+255),w,b
  1235  001856  0D01               	mullw	1
  1236  001858  0E2E               	movlw	low _auto_cut_ON
  1237  00185A  24F3               	addwf	prodl,w,c
  1238  00185C  6ED9               	movwf	fsr2l,c
  1239  00185E  0E00               	movlw	high _auto_cut_ON
  1240  001860  20F4               	addwfc	prodh,w,c
  1241  001862  6EDA               	movwf	fsr2h,c
  1242  001864  50DF               	movf	indf2,w,c
  1243  001866  B4D8               	btfsc	status,2,c
  1244  001868  D00D               	goto	l5106
  1245                           
  1246                           ; BSR set to: 1
  1247                           ;main.c: 328: auto_cut_ON[i] = 0;
  1248  00186A  0101               	movlb	1	; () banked
  1249  00186C  51C8               	movf	main@i& (0+255),w,b
  1250  00186E  0D01               	mullw	1
  1251  001870  0E2E               	movlw	low _auto_cut_ON
  1252  001872  24F3               	addwf	prodl,w,c
  1253  001874  6ED9               	movwf	fsr2l,c
  1254  001876  0E00               	movlw	high _auto_cut_ON
  1255  001878  20F4               	addwfc	prodh,w,c
  1256  00187A  6EDA               	movwf	fsr2h,c
  1257  00187C  0E00               	movlw	0
  1258  00187E  6EDF               	movwf	indf2,c
  1259                           
  1260                           ; BSR set to: 1
  1261                           ;main.c: 329: print_content = ALWAYS_ON;
  1262  001880  0E04               	movlw	4
  1263  001882  D00C               	goto	L1
  1264  001884                     l5106:
  1265                           
  1266                           ; BSR set to: 1
  1267                           ;main.c: 331: auto_cut_ON[i] = 1;
  1268  001884  0101               	movlb	1	; () banked
  1269  001886  51C8               	movf	main@i& (0+255),w,b
  1270  001888  0D01               	mullw	1
  1271  00188A  0E2E               	movlw	low _auto_cut_ON
  1272  00188C  24F3               	addwf	prodl,w,c
  1273  00188E  6ED9               	movwf	fsr2l,c
  1274  001890  0E00               	movlw	high _auto_cut_ON
  1275  001892  20F4               	addwfc	prodh,w,c
  1276  001894  6EDA               	movwf	fsr2h,c
  1277  001896  0E01               	movlw	1
  1278  001898  6EDF               	movwf	indf2,c
  1279                           
  1280                           ; BSR set to: 1
  1281                           ;main.c: 332: print_content = AUTO_STOP;
  1282  00189A  0E05               	movlw	5
  1283  00189C                     L1:
  1284  00189C  6E3E               	movwf	_print_content,c
  1285  00189E                     l5110:
  1286  00189E  0101               	movlb	1	; () banked
  1287  0018A0  2BC8               	incf	main@i& (0+255),f,b
  1288  0018A2  D763               	goto	l5070
  1289  0018A4                     l682:
  1290                           
  1291                           ; BSR set to: 1
  1292                           ;main.c: 333: }
  1293                           ;main.c: 334: }
  1294                           ;main.c: 335: }
  1295                           ;main.c: 336: if (sw.flag.press) {
  1296  0018A4  0101               	movlb	1	; () banked
  1297  0018A6  A1DA               	btfss	(_sw+2)& (0+255),0,b
  1298  0018A8  D009               	goto	l690
  1299                           
  1300                           ; BSR set to: 1
  1301                           ;main.c: 337: sw.flag.press = 0;
  1302  0018AA  0101               	movlb	1	; () banked
  1303  0018AC  91DA               	bcf	(_sw+2)& (0+255),0,b
  1304                           
  1305                           ; BSR set to: 1
  1306                           ;main.c: 338: if (print_content == CURRENT)print_content = INTEGRATING;
  1307  0018AE  503E               	movf	_print_content,w,c
  1308  0018B0  A4D8               	btfss	status,2,c
  1309  0018B2  D002               	goto	l5120
  1310                           
  1311                           ; BSR set to: 1
  1312  0018B4  0E01               	movlw	1
  1313  0018B6  D001               	goto	L2
  1314  0018B8                     l5120:
  1315                           
  1316                           ; BSR set to: 1
  1317                           ;main.c: 339: else print_content = CURRENT;
  1318  0018B8  0E00               	movlw	0
  1319  0018BA                     L2:
  1320  0018BA  6E3E               	movwf	_print_content,c
  1321  0018BC                     l690:
  1322                           
  1323                           ; BSR set to: 1
  1324                           ;main.c: 340: }
  1325                           ;main.c: 341: if (display_flag) {
  1326  0018BC  0101               	movlb	1	; () banked
  1327  0018BE  51CF               	movf	_display_flag& (0+255),w,b
  1328  0018C0  B4D8               	btfsc	status,2,c
  1329  0018C2  D74F               	goto	l680
  1330                           
  1331                           ; BSR set to: 1
  1332                           ;main.c: 342: display_flag = 0;
  1333  0018C4  0E00               	movlw	0
  1334  0018C6  0101               	movlb	1	; () banked
  1335  0018C8  6FCF               	movwf	_display_flag& (0+255),b
  1336                           
  1337                           ; BSR set to: 1
  1338                           ;main.c: 343: display();
  1339  0018CA  ECC1  F007         	call	_display	;wreg free
  1340  0018CE  D749               	goto	l680
  1341  0018D0                     __end_of_main:
  1342                           	opt stack 0
  1343                           tblptru	equ	0xFF8
  1344                           tblptrh	equ	0xFF7
  1345                           tblptrl	equ	0xFF6
  1346                           tablat	equ	0xFF5
  1347                           prodh	equ	0xFF4
  1348                           prodl	equ	0xFF3
  1349                           intcon	equ	0xFF2
  1350                           postinc0	equ	0xFEE
  1351                           wreg	equ	0xFE8
  1352                           indf2	equ	0xFDF
  1353                           postinc2	equ	0xFDE
  1354                           postdec2	equ	0xFDD
  1355                           fsr2h	equ	0xFDA
  1356                           fsr2l	equ	0xFD9
  1357                           status	equ	0xFD8
  1358                           
  1359 ;; *************** function _timer3_init *****************
  1360 ;; Defined at:
  1361 ;;		line 85 in file "../My_header\My_header.h"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  prescaler       1    wreg     unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  prescaler       1    1[BANK0 ] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;		None               void
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1378 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1379 ;;Total ram usage:        2 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    5
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text1
  1390  0025CE                     __ptext1:
  1391                           	opt stack 0
  1392  0025CE                     _timer3_init:
  1393                           	opt stack 25
  1394                           
  1395                           ;incstack = 0
  1396                           ;timer3_init@prescaler stored from wreg
  1397  0025CE  0100               	movlb	0	; () banked
  1398  0025D0  6F96               	movwf	timer3_init@prescaler& (0+255),b
  1399                           
  1400                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  1401  0025D2  0E3F               	movlw	-193
  1402  0025D4  1679               	andwf	3961,f,c	;volatile
  1403                           
  1404                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  1405  0025D6  9679               	bcf	3961,3,c	;volatile
  1406                           
  1407                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  1408  0025D8  C096  F095         	movff	timer3_init@prescaler,??_timer3_init
  1409  0025DC  0100               	movlb	0	; () banked
  1410  0025DE  3B95               	swapf	??_timer3_init& (0+255),f,b
  1411  0025E0  5079               	movf	3961,w,c	;volatile
  1412  0025E2  0100               	movlb	0	; () banked
  1413  0025E4  1995               	xorwf	??_timer3_init& (0+255),w,b
  1414  0025E6  0BCF               	andlw	-49
  1415  0025E8  1995               	xorwf	??_timer3_init& (0+255),w,b
  1416  0025EA  6E79               	movwf	3961,c	;volatile
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  1420  0025EC  9E79               	bcf	3961,7,c	;volatile
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  1424  0025EE  8079               	bsf	3961,0,c	;volatile
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  1428  0025F0  92A2               	bcf	4002,1,c	;volatile
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  1432  0025F2  92A1               	bcf	4001,1,c	;volatile
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  1436  0025F4  82A0               	bsf	4000,1,c	;volatile
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  1440  0025F6  8CF2               	bsf	intcon,6,c	;volatile
  1441                           
  1442                           ; BSR set to: 0
  1443  0025F8  0012               	return		;funcret
  1444  0025FA                     __end_of_timer3_init:
  1445                           	opt stack 0
  1446                           tblptru	equ	0xFF8
  1447                           tblptrh	equ	0xFF7
  1448                           tblptrl	equ	0xFF6
  1449                           tablat	equ	0xFF5
  1450                           prodh	equ	0xFF4
  1451                           prodl	equ	0xFF3
  1452                           intcon	equ	0xFF2
  1453                           postinc0	equ	0xFEE
  1454                           wreg	equ	0xFE8
  1455                           indf2	equ	0xFDF
  1456                           postinc2	equ	0xFDE
  1457                           postdec2	equ	0xFDD
  1458                           fsr2h	equ	0xFDA
  1459                           fsr2l	equ	0xFD9
  1460                           status	equ	0xFD8
  1461                           
  1462 ;; *************** function _timer1_init *****************
  1463 ;; Defined at:
  1464 ;;		line 54 in file "../My_header\My_header.h"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  prescaler       1    wreg     unsigned char 
  1467 ;;  clock_select    1    0[BANK0 ] unsigned char 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  prescaler       1    2[BANK0 ] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;		None               void
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1479 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1480 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1481 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1482 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1483 ;;Total ram usage:        3 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    5
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text2
  1494  002244                     __ptext2:
  1495                           	opt stack 0
  1496  002244                     _timer1_init:
  1497                           	opt stack 25
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;incstack = 0
  1501                           ;timer1_init@prescaler stored from wreg
  1502  002244  0100               	movlb	0	; () banked
  1503  002246  6F97               	movwf	timer1_init@prescaler& (0+255),b
  1504                           
  1505                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  1506  002248  C095  F096         	movff	timer1_init@clock_select,??_timer1_init
  1507  00224C  0100               	movlb	0	; () banked
  1508  00224E  3B96               	swapf	??_timer1_init& (0+255),f,b
  1509  002250  4796               	rlncf	??_timer1_init& (0+255),f,b
  1510  002252  4796               	rlncf	??_timer1_init& (0+255),f,b
  1511  002254  50CD               	movf	4045,w,c	;volatile
  1512  002256  0100               	movlb	0	; () banked
  1513  002258  1996               	xorwf	??_timer1_init& (0+255),w,b
  1514  00225A  0B3F               	andlw	-193
  1515  00225C  1996               	xorwf	??_timer1_init& (0+255),w,b
  1516  00225E  6ECD               	movwf	4045,c	;volatile
  1517                           
  1518                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  1519  002260  0E02               	movlw	2
  1520  002262  0100               	movlb	0	; () banked
  1521  002264  1995               	xorwf	timer1_init@clock_select& (0+255),w,b
  1522  002266  A4D8               	btfss	status,2,c
  1523  002268  D002               	goto	l130
  1524                           
  1525                           ; BSR set to: 0
  1526  00226A  86CD               	bsf	4045,3,c	;volatile
  1527  00226C  D001               	goto	l4506
  1528  00226E                     l130:
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  1532  00226E  96CD               	bcf	4045,3,c	;volatile
  1533  002270                     l4506:
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  1537  002270  C097  F096         	movff	timer1_init@prescaler,??_timer1_init
  1538  002274  0100               	movlb	0	; () banked
  1539  002276  3B96               	swapf	??_timer1_init& (0+255),f,b
  1540  002278  50CD               	movf	4045,w,c	;volatile
  1541  00227A  0100               	movlb	0	; () banked
  1542  00227C  1996               	xorwf	??_timer1_init& (0+255),w,b
  1543  00227E  0BCF               	andlw	-49
  1544  002280  1996               	xorwf	??_timer1_init& (0+255),w,b
  1545  002282  6ECD               	movwf	4045,c	;volatile
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  1549  002284  84CD               	bsf	4045,2,c	;volatile
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  1553  002286  92CD               	bcf	4045,1,c	;volatile
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  1557  002288  80CD               	bsf	4045,0,c	;volatile
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  1561  00228A  909F               	bcf	3999,0,c	;volatile
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  1565  00228C  909E               	bcf	3998,0,c	;volatile
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  1569  00228E  809D               	bsf	3997,0,c	;volatile
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  1573  002290  8CF2               	bsf	intcon,6,c	;volatile
  1574                           
  1575                           ; BSR set to: 0
  1576  002292  0012               	return		;funcret
  1577  002294                     __end_of_timer1_init:
  1578                           	opt stack 0
  1579                           tblptru	equ	0xFF8
  1580                           tblptrh	equ	0xFF7
  1581                           tblptrl	equ	0xFF6
  1582                           tablat	equ	0xFF5
  1583                           prodh	equ	0xFF4
  1584                           prodl	equ	0xFF3
  1585                           intcon	equ	0xFF2
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           indf2	equ	0xFDF
  1589                           postinc2	equ	0xFDE
  1590                           postdec2	equ	0xFDD
  1591                           fsr2h	equ	0xFDA
  1592                           fsr2l	equ	0xFD9
  1593                           status	equ	0xFD8
  1594                           
  1595 ;; *************** function _timer0_init *****************
  1596 ;; Defined at:
  1597 ;;		line 15 in file "../My_header\My_header.h"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  prescaler       1    wreg     unsigned char 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  prescaler       1    1[BANK0 ] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;		None               void
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1614 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1615 ;;Total ram usage:        2 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    5
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text3
  1626  0024F4                     __ptext3:
  1627                           	opt stack 0
  1628  0024F4                     _timer0_init:
  1629                           	opt stack 25
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;incstack = 0
  1633                           ;timer0_init@prescaler stored from wreg
  1634  0024F4  0100               	movlb	0	; () banked
  1635  0024F6  6F96               	movwf	timer0_init@prescaler& (0+255),b
  1636                           
  1637                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
  1638  0024F8  8ED5               	bsf	4053,7,c	;volatile
  1639                           
  1640                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
  1641  0024FA  8CD5               	bsf	4053,6,c	;volatile
  1642                           
  1643                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
  1644  0024FC  9AD5               	bcf	4053,5,c	;volatile
  1645                           
  1646                           ;My_header\My_header.h: 19: if (prescaler == 0) {
  1647  0024FE  0100               	movlb	0	; () banked
  1648  002500  5196               	movf	timer0_init@prescaler& (0+255),w,b
  1649  002502  0100               	movlb	0	; () banked
  1650  002504  A4D8               	btfss	status,2,c
  1651  002506  D002               	goto	l125
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
  1655  002508  86D5               	bsf	4053,3,c	;volatile
  1656                           
  1657                           ;My_header\My_header.h: 21: } else {
  1658  00250A  D00C               	goto	l4494
  1659  00250C                     l125:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
  1663  00250C  96D5               	bcf	4053,3,c	;volatile
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
  1667  00250E  C096  F095         	movff	timer0_init@prescaler,??_timer0_init
  1668  002512  0EFF               	movlw	255
  1669  002514  0100               	movlb	0	; () banked
  1670  002516  2795               	addwf	??_timer0_init& (0+255),f,b
  1671  002518  50D5               	movf	4053,w,c	;volatile
  1672  00251A  0100               	movlb	0	; () banked
  1673  00251C  1995               	xorwf	??_timer0_init& (0+255),w,b
  1674  00251E  0BF8               	andlw	-8
  1675  002520  1995               	xorwf	??_timer0_init& (0+255),w,b
  1676  002522  6ED5               	movwf	4053,c	;volatile
  1677  002524                     l4494:
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;My_header\My_header.h: 24: }
  1681                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
  1682  002524  8AF2               	bsf	intcon,5,c	;volatile
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
  1686  002526  94F2               	bcf	intcon,2,c	;volatile
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
  1690  002528  94F1               	bcf	intcon2,2,c	;volatile
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
  1694  00252A  8CF2               	bsf	intcon,6,c	;volatile
  1695                           
  1696                           ; BSR set to: 0
  1697  00252C  0012               	return		;funcret
  1698  00252E                     __end_of_timer0_init:
  1699                           	opt stack 0
  1700                           tblptru	equ	0xFF8
  1701                           tblptrh	equ	0xFF7
  1702                           tblptrl	equ	0xFF6
  1703                           tablat	equ	0xFF5
  1704                           prodh	equ	0xFF4
  1705                           prodl	equ	0xFF3
  1706                           intcon	equ	0xFF2
  1707                           intcon2	equ	0xFF1
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           indf2	equ	0xFDF
  1711                           postinc2	equ	0xFDE
  1712                           postdec2	equ	0xFDD
  1713                           fsr2h	equ	0xFDA
  1714                           fsr2l	equ	0xFD9
  1715                           status	equ	0xFD8
  1716                           
  1717 ;; *************** function _sw_flag_read *****************
  1718 ;; Defined at:
  1719 ;;		line 114 in file "main.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  port            1    wreg     unsigned char 
  1722 ;;  bit_and         1    0[BANK0 ] unsigned char 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  port            1    1[BANK0 ] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      unsigned char 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1734 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1738 ;;Total ram usage:        2 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    5
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text4
  1749  0024B8                     __ptext4:
  1750                           	opt stack 0
  1751  0024B8                     _sw_flag_read:
  1752                           	opt stack 25
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;incstack = 0
  1756                           ;sw_flag_read@port stored from wreg
  1757  0024B8  0100               	movlb	0	; () banked
  1758  0024BA  6F96               	movwf	sw_flag_read@port& (0+255),b
  1759                           
  1760                           ;main.c: 115: switch (port) {
  1761  0024BC  D00F               	goto	l4734
  1762  0024BE                     l4716:
  1763                           
  1764                           ;main.c: 117: return (sw0.flags) & bit_and;
  1765  0024BE  5048               	movf	_sw0+2,w,c
  1766  0024C0  0100               	movlb	0	; () banked
  1767  0024C2  1595               	andwf	sw_flag_read@bit_and& (0+255),w,b
  1768                           
  1769                           ; BSR set to: 0
  1770  0024C4  0012               	return	
  1771  0024C6                     l4720:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;main.c: 119: return (sw1.flags) & bit_and;
  1775  0024C6  504C               	movf	_sw1+2,w,c
  1776  0024C8  0100               	movlb	0	; () banked
  1777  0024CA  1595               	andwf	sw_flag_read@bit_and& (0+255),w,b
  1778                           
  1779                           ; BSR set to: 0
  1780  0024CC  0012               	return	
  1781  0024CE                     l4724:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;main.c: 121: return (sw2.flags) & bit_and;
  1785  0024CE  0100               	movlb	0	; () banked
  1786  0024D0  5193               	movf	(_sw2+2)& (0+255),w,b
  1787  0024D2  0100               	movlb	0	; () banked
  1788  0024D4  1595               	andwf	sw_flag_read@bit_and& (0+255),w,b
  1789                           
  1790                           ; BSR set to: 0
  1791  0024D6  0012               	return	
  1792  0024D8                     l4728:
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;main.c: 123: return 0;
  1796  0024D8  0E00               	movlw	0
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;main.c: 124: }
  1800                           
  1801                           ; BSR set to: 0
  1802  0024DA  0012               	return	
  1803  0024DC                     l4734:
  1804  0024DC  0100               	movlb	0	; () banked
  1805  0024DE  5196               	movf	sw_flag_read@port& (0+255),w,b
  1806                           
  1807                           ; Switch size 1, requested type "space"
  1808                           ; Number of cases is 3, Range of values is 0 to 2
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte           10     6 (average)
  1812                           ;	Chosen strategy is simple_byte
  1813  0024E0  0A00               	xorlw	0	; case 0
  1814  0024E2  B4D8               	btfsc	status,2,c
  1815  0024E4  D7EC               	goto	l4716
  1816  0024E6  0A01               	xorlw	1	; case 1
  1817  0024E8  B4D8               	btfsc	status,2,c
  1818  0024EA  D7ED               	goto	l4720
  1819  0024EC  0A03               	xorlw	3	; case 2
  1820  0024EE  B4D8               	btfsc	status,2,c
  1821  0024F0  D7EE               	goto	l4724
  1822  0024F2  D7F2               	goto	l4728
  1823  0024F4                     __end_of_sw_flag_read:
  1824                           	opt stack 0
  1825                           tblptru	equ	0xFF8
  1826                           tblptrh	equ	0xFF7
  1827                           tblptrl	equ	0xFF6
  1828                           tablat	equ	0xFF5
  1829                           prodh	equ	0xFF4
  1830                           prodl	equ	0xFF3
  1831                           intcon	equ	0xFF2
  1832                           intcon2	equ	0xFF1
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           indf2	equ	0xFDF
  1836                           postinc2	equ	0xFDE
  1837                           postdec2	equ	0xFDD
  1838                           fsr2h	equ	0xFDA
  1839                           fsr2l	equ	0xFD9
  1840                           status	equ	0xFD8
  1841                           
  1842 ;; *************** function _sw_flag_clear *****************
  1843 ;; Defined at:
  1844 ;;		line 127 in file "main.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  port            1    wreg     unsigned char 
  1847 ;;  bit_and         1    0[BANK0 ] unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  port            1    1[BANK0 ] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;		None               void
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1859 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;Total ram usage:        2 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    5
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text5
  1874  002372                     __ptext5:
  1875                           	opt stack 0
  1876  002372                     _sw_flag_clear:
  1877                           	opt stack 25
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;incstack = 0
  1881                           ;sw_flag_clear@port stored from wreg
  1882  002372  0100               	movlb	0	; () banked
  1883  002374  6F96               	movwf	sw_flag_clear@port& (0+255),b
  1884                           
  1885                           ;main.c: 128: switch (port) {
  1886  002376  D013               	goto	l4746
  1887  002378                     l4738:
  1888                           
  1889                           ;main.c: 130: sw0.flags &= bit_and;
  1890  002378  0100               	movlb	0	; () banked
  1891  00237A  5195               	movf	sw_flag_clear@bit_and& (0+255),w,b
  1892  00237C  1648               	andwf	_sw0+2,f,c
  1893  00237E  0E00               	movlw	0
  1894  002380  1649               	andwf	_sw0+3,f,c
  1895                           
  1896                           ;main.c: 131: break;
  1897  002382  0012               	return	
  1898  002384                     l4740:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;main.c: 133: sw1.flags &= bit_and;
  1902  002384  0100               	movlb	0	; () banked
  1903  002386  5195               	movf	sw_flag_clear@bit_and& (0+255),w,b
  1904  002388  164C               	andwf	_sw1+2,f,c
  1905  00238A  0E00               	movlw	0
  1906  00238C  164D               	andwf	_sw1+3,f,c
  1907                           
  1908                           ;main.c: 134: break;
  1909  00238E  0012               	return	
  1910  002390                     l4742:
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;main.c: 136: sw2.flags &= bit_and;
  1914  002390  0100               	movlb	0	; () banked
  1915  002392  5195               	movf	sw_flag_clear@bit_and& (0+255),w,b
  1916  002394  0100               	movlb	0	; () banked
  1917  002396  1793               	andwf	(_sw2+2)& (0+255),f,b
  1918  002398  0E00               	movlw	0
  1919  00239A  1794               	andwf	(_sw2+3)& (0+255),f,b
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;main.c: 138: }
  1923                           
  1924                           ;main.c: 137: break;
  1925  00239C  0012               	return	
  1926  00239E                     l4746:
  1927  00239E  0100               	movlb	0	; () banked
  1928  0023A0  5196               	movf	sw_flag_clear@port& (0+255),w,b
  1929                           
  1930                           ; Switch size 1, requested type "space"
  1931                           ; Number of cases is 3, Range of values is 0 to 2
  1932                           ; switch strategies available:
  1933                           ; Name         Instructions Cycles
  1934                           ; simple_byte           10     6 (average)
  1935                           ;	Chosen strategy is simple_byte
  1936  0023A2  0A00               	xorlw	0	; case 0
  1937  0023A4  B4D8               	btfsc	status,2,c
  1938  0023A6  D7E8               	goto	l4738
  1939  0023A8  0A01               	xorlw	1	; case 1
  1940  0023AA  B4D8               	btfsc	status,2,c
  1941  0023AC  D7EB               	goto	l4740
  1942  0023AE  0A03               	xorlw	3	; case 2
  1943  0023B0  A4D8               	btfss	status,2,c
  1944  0023B2  0012               	return	
  1945  0023B4  D7ED               	goto	l4742
  1946  0023B6                     __end_of_sw_flag_clear:
  1947                           	opt stack 0
  1948                           tblptru	equ	0xFF8
  1949                           tblptrh	equ	0xFF7
  1950                           tblptrl	equ	0xFF6
  1951                           tablat	equ	0xFF5
  1952                           prodh	equ	0xFF4
  1953                           prodl	equ	0xFF3
  1954                           intcon	equ	0xFF2
  1955                           intcon2	equ	0xFF1
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           indf2	equ	0xFDF
  1959                           postinc2	equ	0xFDE
  1960                           postdec2	equ	0xFDD
  1961                           fsr2h	equ	0xFDA
  1962                           fsr2l	equ	0xFD9
  1963                           status	equ	0xFD8
  1964                           
  1965 ;; *************** function _ringbuf_init *****************
  1966 ;; Defined at:
  1967 ;;		line 24 in file "../My_header\My_ringbuf.h"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  1970 ;;		 -> tx_buf(8), 
  1971 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  1972 ;;		 -> main@txbuf(200), 
  1973 ;;  bufsize         2    4[BANK0 ] unsigned int 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;		None               void
  1978 ;; Registers used:
  1979 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1985 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1988 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1989 ;;Total ram usage:        6 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    5
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text6
  2000  00214A                     __ptext6:
  2001                           	opt stack 0
  2002  00214A                     _ringbuf_init:
  2003                           	opt stack 25
  2004                           
  2005                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;incstack = 0
  2009  00214A  C095  FFD9         	movff	ringbuf_init@rb,fsr2l
  2010  00214E  C096  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  2011  002152  C097  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  2012  002156  C098  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  2013                           
  2014                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  2015  00215A  0100               	movlb	0	; () banked
  2016  00215C  EE20 F002          	lfsr	2,2
  2017  002160  5195               	movf	ringbuf_init@rb& (0+255),w,b
  2018  002162  26D9               	addwf	fsr2l,f,c
  2019  002164  5196               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2020  002166  22DA               	addwfc	fsr2h,f,c
  2021  002168  C099  FFDE         	movff	ringbuf_init@bufsize,postinc2
  2022  00216C  C09A  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  2026  002170  0100               	movlb	0	; () banked
  2027  002172  EE20 F004          	lfsr	2,4
  2028  002176  5195               	movf	ringbuf_init@rb& (0+255),w,b
  2029  002178  26D9               	addwf	fsr2l,f,c
  2030  00217A  5196               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2031  00217C  22DA               	addwfc	fsr2h,f,c
  2032  00217E  0E00               	movlw	0
  2033  002180  6EDE               	movwf	postinc2,c
  2034  002182  0E00               	movlw	0
  2035  002184  6EDD               	movwf	postdec2,c
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  2039  002186  0100               	movlb	0	; () banked
  2040  002188  EE20 F006          	lfsr	2,6
  2041  00218C  5195               	movf	ringbuf_init@rb& (0+255),w,b
  2042  00218E  26D9               	addwf	fsr2l,f,c
  2043  002190  5196               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2044  002192  22DA               	addwfc	fsr2h,f,c
  2045  002194  0E00               	movlw	0
  2046  002196  6EDE               	movwf	postinc2,c
  2047  002198  0E00               	movlw	0
  2048  00219A  6EDD               	movwf	postdec2,c
  2049                           
  2050                           ; BSR set to: 0
  2051  00219C  0012               	return		;funcret
  2052  00219E                     __end_of_ringbuf_init:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           prodh	equ	0xFF4
  2059                           prodl	equ	0xFF3
  2060                           intcon	equ	0xFF2
  2061                           intcon2	equ	0xFF1
  2062                           postinc0	equ	0xFEE
  2063                           wreg	equ	0xFE8
  2064                           indf2	equ	0xFDF
  2065                           postinc2	equ	0xFDE
  2066                           postdec2	equ	0xFDD
  2067                           fsr2h	equ	0xFDA
  2068                           fsr2l	equ	0xFD9
  2069                           status	equ	0xFD8
  2070                           
  2071 ;; *************** function _display *****************
  2072 ;; Defined at:
  2073 ;;		line 180 in file "main.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;		None               void
  2080 ;; Registers used:
  2081 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    9
  2094 ;; This function calls:
  2095 ;;		_I2C_LCD_Clear
  2096 ;;		_I2C_LCD_Putc
  2097 ;;		_I2C_LCD_Puts
  2098 ;;		_I2C_LCD_SetCursor
  2099 ;;		___lldiv
  2100 ;;		___llmod
  2101 ;;		___lwdiv
  2102 ;;		___lwmod
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text7
  2109  000F82                     __ptext7:
  2110                           	opt stack 0
  2111  000F82                     _display:
  2112                           	opt stack 21
  2113                           
  2114                           ;main.c: 181: I2C_LCD_Clear();
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;incstack = 0
  2118  000F82  EC7F  F013         	call	_I2C_LCD_Clear	;wreg free
  2119                           
  2120                           ;main.c: 182: I2C_LCD_SetCursor(0, 0);
  2121  000F86  0E00               	movlw	0
  2122  000F88  0100               	movlb	0	; () banked
  2123  000F8A  6F9B               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2124  000F8C  0E00               	movlw	0
  2125  000F8E  ECFD  F012         	call	_I2C_LCD_SetCursor
  2126                           
  2127                           ;main.c: 183: switch (print_port) {
  2128  000F92  D057               	goto	l4772
  2129  000F94                     l4752:
  2130                           
  2131                           ;main.c: 185: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Right");
  2132  000F94  503F               	movf	_print_port,w,c
  2133  000F96  0D01               	mullw	1
  2134  000F98  0E2E               	movlw	low _auto_cut_ON
  2135  000F9A  24F3               	addwf	prodl,w,c
  2136  000F9C  6ED9               	movwf	fsr2l,c
  2137  000F9E  0E00               	movlw	high _auto_cut_ON
  2138  000FA0  20F4               	addwfc	prodh,w,c
  2139  000FA2  6EDA               	movwf	fsr2h,c
  2140  000FA4  50DF               	movf	indf2,w,c
  2141  000FA6  B4D8               	btfsc	status,2,c
  2142  000FA8  D009               	goto	l4756
  2143  000FAA  0E61               	movlw	low STR_2
  2144  000FAC  0100               	movlb	0	; () banked
  2145  000FAE  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2146  000FB0  0E0F               	movlw	high STR_2
  2147  000FB2  0100               	movlb	0	; () banked
  2148  000FB4  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2149  000FB6  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2150  000FBA  D04D               	goto	l4774
  2151  000FBC                     l4756:
  2152                           
  2153                           ;main.c: 186: else I2C_LCD_Puts("RIGHT");
  2154  000FBC  0E5B               	movlw	low STR_3
  2155  000FBE  0100               	movlb	0	; () banked
  2156  000FC0  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2157  000FC2  0E0F               	movlw	high STR_3
  2158  000FC4  0100               	movlb	0	; () banked
  2159  000FC6  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2160  000FC8  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2161                           
  2162                           ;main.c: 187: break;
  2163  000FCC  D044               	goto	l4774
  2164  000FCE                     l4758:
  2165                           
  2166                           ;main.c: 189: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Center");
  2167  000FCE  503F               	movf	_print_port,w,c
  2168  000FD0  0D01               	mullw	1
  2169  000FD2  0E2E               	movlw	low _auto_cut_ON
  2170  000FD4  24F3               	addwf	prodl,w,c
  2171  000FD6  6ED9               	movwf	fsr2l,c
  2172  000FD8  0E00               	movlw	high _auto_cut_ON
  2173  000FDA  20F4               	addwfc	prodh,w,c
  2174  000FDC  6EDA               	movwf	fsr2h,c
  2175  000FDE  50DF               	movf	indf2,w,c
  2176  000FE0  B4D8               	btfsc	status,2,c
  2177  000FE2  D009               	goto	l4762
  2178  000FE4  0E54               	movlw	low STR_4
  2179  000FE6  0100               	movlb	0	; () banked
  2180  000FE8  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2181  000FEA  0E0F               	movlw	high STR_4
  2182  000FEC  0100               	movlb	0	; () banked
  2183  000FEE  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2184  000FF0  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2185  000FF4  D030               	goto	l4774
  2186  000FF6                     l4762:
  2187                           
  2188                           ;main.c: 190: else I2C_LCD_Puts("CENTER");
  2189  000FF6  0E46               	movlw	low STR_5
  2190  000FF8  0100               	movlb	0	; () banked
  2191  000FFA  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2192  000FFC  0E0F               	movlw	high STR_5
  2193  000FFE  0100               	movlb	0	; () banked
  2194  001000  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2195  001002  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2196                           
  2197                           ;main.c: 191: break;
  2198  001006  D027               	goto	l4774
  2199  001008                     l4764:
  2200                           
  2201                           ;main.c: 193: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Left");
  2202  001008  503F               	movf	_print_port,w,c
  2203  00100A  0D01               	mullw	1
  2204  00100C  0E2E               	movlw	low _auto_cut_ON
  2205  00100E  24F3               	addwf	prodl,w,c
  2206  001010  6ED9               	movwf	fsr2l,c
  2207  001012  0E00               	movlw	high _auto_cut_ON
  2208  001014  20F4               	addwfc	prodh,w,c
  2209  001016  6EDA               	movwf	fsr2h,c
  2210  001018  50DF               	movf	indf2,w,c
  2211  00101A  B4D8               	btfsc	status,2,c
  2212  00101C  D009               	goto	l4768
  2213  00101E  0E71               	movlw	low STR_6
  2214  001020  0100               	movlb	0	; () banked
  2215  001022  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2216  001024  0E0F               	movlw	high STR_6
  2217  001026  0100               	movlb	0	; () banked
  2218  001028  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2219  00102A  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2220  00102E  D013               	goto	l4774
  2221  001030                     l4768:
  2222                           
  2223                           ;main.c: 194: else I2C_LCD_Puts("LEFT");
  2224  001030  0E67               	movlw	low STR_7
  2225  001032  0100               	movlb	0	; () banked
  2226  001034  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2227  001036  0E0F               	movlw	high STR_7
  2228  001038  0100               	movlb	0	; () banked
  2229  00103A  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2230  00103C  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2231                           
  2232                           ;main.c: 196: }
  2233                           
  2234                           ;main.c: 195: break;
  2235  001040  D00A               	goto	l4774
  2236  001042                     l4772:
  2237  001042  503F               	movf	_print_port,w,c
  2238                           
  2239                           ; Switch size 1, requested type "space"
  2240                           ; Number of cases is 3, Range of values is 0 to 2
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte           10     6 (average)
  2244                           ;	Chosen strategy is simple_byte
  2245  001044  0A00               	xorlw	0	; case 0
  2246  001046  B4D8               	btfsc	status,2,c
  2247  001048  D7A5               	goto	l4752
  2248  00104A  0A01               	xorlw	1	; case 1
  2249  00104C  B4D8               	btfsc	status,2,c
  2250  00104E  D7BF               	goto	l4758
  2251  001050  0A03               	xorlw	3	; case 2
  2252  001052  B4D8               	btfsc	status,2,c
  2253  001054  D7D9               	goto	l4764
  2254  001056                     l4774:
  2255                           
  2256                           ;main.c: 197: I2C_LCD_SetCursor(0, 1);
  2257  001056  0E01               	movlw	1
  2258  001058  0100               	movlb	0	; () banked
  2259  00105A  6F9B               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2260  00105C  0E00               	movlw	0
  2261  00105E  ECFD  F012         	call	_I2C_LCD_SetCursor
  2262                           
  2263                           ;main.c: 198: switch (print_content) {
  2264  001062  D1A1               	goto	l4800
  2265  001064                     l4776:
  2266                           
  2267                           ;main.c: 200: I2C_LCD_Putc((I[print_port] % 10000) / 1000 + '0');
  2268  001064  0E27               	movlw	39
  2269  001066  0100               	movlb	0	; () banked
  2270  001068  6F98               	movwf	(___lwmod@divisor+1)& (0+255),b
  2271  00106A  0E10               	movlw	16
  2272  00106C  6F97               	movwf	___lwmod@divisor& (0+255),b
  2273  00106E  503F               	movf	_print_port,w,c
  2274  001070  0D02               	mullw	2
  2275  001072  0E28               	movlw	low _I
  2276  001074  24F3               	addwf	prodl,w,c
  2277  001076  6ED9               	movwf	fsr2l,c
  2278  001078  0E00               	movlw	high _I
  2279  00107A  20F4               	addwfc	prodh,w,c
  2280  00107C  6EDA               	movwf	fsr2h,c
  2281  00107E  CFDE F095          	movff	postinc2,___lwmod@dividend
  2282  001082  CFDD F096          	movff	postdec2,___lwmod@dividend+1
  2283  001086  EC48  F010         	call	___lwmod	;wreg free
  2284  00108A  C095  F09A         	movff	?___lwmod,___lwdiv@dividend
  2285  00108E  C096  F09B         	movff	?___lwmod+1,___lwdiv@dividend+1
  2286  001092  0E03               	movlw	3
  2287  001094  0100               	movlb	0	; () banked
  2288  001096  6F9D               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2289  001098  0EE8               	movlw	232
  2290  00109A  6F9C               	movwf	___lwdiv@divisor& (0+255),b
  2291  00109C  ECDA  F00F         	call	___lwdiv	;wreg free
  2292  0010A0  0100               	movlb	0	; () banked
  2293  0010A2  519A               	movf	?___lwdiv& (0+255),w,b
  2294  0010A4  0F30               	addlw	48
  2295  0010A6  EC97  F012         	call	_I2C_LCD_Putc
  2296                           
  2297                           ;main.c: 201: I2C_LCD_Putc('.');
  2298  0010AA  0E2E               	movlw	46
  2299  0010AC  EC97  F012         	call	_I2C_LCD_Putc
  2300                           
  2301                           ;main.c: 202: I2C_LCD_Putc((I[print_port] % 1000) / 100 + '0');
  2302  0010B0  0E03               	movlw	3
  2303  0010B2  0100               	movlb	0	; () banked
  2304  0010B4  6F98               	movwf	(___lwmod@divisor+1)& (0+255),b
  2305  0010B6  0EE8               	movlw	232
  2306  0010B8  6F97               	movwf	___lwmod@divisor& (0+255),b
  2307  0010BA  503F               	movf	_print_port,w,c
  2308  0010BC  0D02               	mullw	2
  2309  0010BE  0E28               	movlw	low _I
  2310  0010C0  24F3               	addwf	prodl,w,c
  2311  0010C2  6ED9               	movwf	fsr2l,c
  2312  0010C4  0E00               	movlw	high _I
  2313  0010C6  20F4               	addwfc	prodh,w,c
  2314  0010C8  6EDA               	movwf	fsr2h,c
  2315  0010CA  CFDE F095          	movff	postinc2,___lwmod@dividend
  2316  0010CE  CFDD F096          	movff	postdec2,___lwmod@dividend+1
  2317  0010D2  EC48  F010         	call	___lwmod	;wreg free
  2318  0010D6  C095  F09A         	movff	?___lwmod,___lwdiv@dividend
  2319  0010DA  C096  F09B         	movff	?___lwmod+1,___lwdiv@dividend+1
  2320  0010DE  0E00               	movlw	0
  2321  0010E0  0100               	movlb	0	; () banked
  2322  0010E2  6F9D               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2323  0010E4  0E64               	movlw	100
  2324  0010E6  6F9C               	movwf	___lwdiv@divisor& (0+255),b
  2325  0010E8  ECDA  F00F         	call	___lwdiv	;wreg free
  2326  0010EC  0100               	movlb	0	; () banked
  2327  0010EE  519A               	movf	?___lwdiv& (0+255),w,b
  2328  0010F0  0F30               	addlw	48
  2329  0010F2  EC97  F012         	call	_I2C_LCD_Putc
  2330                           
  2331                           ;main.c: 203: I2C_LCD_Putc((I[print_port] % 100) / 10 + '0');
  2332  0010F6  0E00               	movlw	0
  2333  0010F8  0100               	movlb	0	; () banked
  2334  0010FA  6F98               	movwf	(___lwmod@divisor+1)& (0+255),b
  2335  0010FC  0E64               	movlw	100
  2336  0010FE  6F97               	movwf	___lwmod@divisor& (0+255),b
  2337  001100  503F               	movf	_print_port,w,c
  2338  001102  0D02               	mullw	2
  2339  001104  0E28               	movlw	low _I
  2340  001106  24F3               	addwf	prodl,w,c
  2341  001108  6ED9               	movwf	fsr2l,c
  2342  00110A  0E00               	movlw	high _I
  2343  00110C  20F4               	addwfc	prodh,w,c
  2344  00110E  6EDA               	movwf	fsr2h,c
  2345  001110  CFDE F095          	movff	postinc2,___lwmod@dividend
  2346  001114  CFDD F096          	movff	postdec2,___lwmod@dividend+1
  2347  001118  EC48  F010         	call	___lwmod	;wreg free
  2348  00111C  C095  F09A         	movff	?___lwmod,___lwdiv@dividend
  2349  001120  C096  F09B         	movff	?___lwmod+1,___lwdiv@dividend+1
  2350  001124  0E00               	movlw	0
  2351  001126  0100               	movlb	0	; () banked
  2352  001128  6F9D               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2353  00112A  0E0A               	movlw	10
  2354  00112C  6F9C               	movwf	___lwdiv@divisor& (0+255),b
  2355  00112E  ECDA  F00F         	call	___lwdiv	;wreg free
  2356  001132  0100               	movlb	0	; () banked
  2357  001134  519A               	movf	?___lwdiv& (0+255),w,b
  2358  001136  0F30               	addlw	48
  2359  001138  EC97  F012         	call	_I2C_LCD_Putc
  2360                           
  2361                           ;main.c: 204: I2C_LCD_Putc((I[print_port] % 10) / 1 + '0');
  2362  00113C  503F               	movf	_print_port,w,c
  2363  00113E  0D02               	mullw	2
  2364  001140  0E28               	movlw	low _I
  2365  001142  24F3               	addwf	prodl,w,c
  2366  001144  6ED9               	movwf	fsr2l,c
  2367  001146  0E00               	movlw	high _I
  2368  001148  20F4               	addwfc	prodh,w,c
  2369  00114A  6EDA               	movwf	fsr2h,c
  2370  00114C  CFDE F095          	movff	postinc2,___lwmod@dividend
  2371  001150  CFDD F096          	movff	postdec2,___lwmod@dividend+1
  2372  001154  0E00               	movlw	0
  2373  001156  0100               	movlb	0	; () banked
  2374  001158  6F98               	movwf	(___lwmod@divisor+1)& (0+255),b
  2375  00115A  0E0A               	movlw	10
  2376  00115C  6F97               	movwf	___lwmod@divisor& (0+255),b
  2377  00115E  EC48  F010         	call	___lwmod	;wreg free
  2378  001162  0100               	movlb	0	; () banked
  2379  001164  5195               	movf	?___lwmod& (0+255),w,b
  2380  001166  0F30               	addlw	48
  2381  001168  EC97  F012         	call	_I2C_LCD_Putc
  2382                           
  2383                           ;main.c: 205: I2C_LCD_Putc('A');
  2384  00116C  0E41               	movlw	65
  2385  00116E  EC97  F012         	call	_I2C_LCD_Putc
  2386                           
  2387                           ;main.c: 206: break;
  2388  001172  0012               	return	
  2389  001174                     l4786:
  2390                           
  2391                           ;main.c: 208: I2C_LCD_Putc((S[print_port] % 100000) / 10000 + '0');
  2392  001174  0EA0               	movlw	160
  2393  001176  0100               	movlb	0	; () banked
  2394  001178  6F99               	movwf	___llmod@divisor& (0+255),b
  2395  00117A  0E86               	movlw	134
  2396  00117C  6F9A               	movwf	(___llmod@divisor+1)& (0+255),b
  2397  00117E  0E01               	movlw	1
  2398  001180  6F9B               	movwf	(___llmod@divisor+2)& (0+255),b
  2399  001182  0E00               	movlw	0
  2400  001184  6F9C               	movwf	(___llmod@divisor+3)& (0+255),b
  2401  001186  503F               	movf	_print_port,w,c
  2402  001188  0D04               	mullw	4
  2403  00118A  0E60               	movlw	low _S
  2404  00118C  24F3               	addwf	prodl,w,c
  2405  00118E  6ED9               	movwf	fsr2l,c
  2406  001190  0E00               	movlw	high _S
  2407  001192  20F4               	addwfc	prodh,w,c
  2408  001194  6EDA               	movwf	fsr2h,c
  2409  001196  CFDE F095          	movff	postinc2,___llmod@dividend
  2410  00119A  CFDE F096          	movff	postinc2,___llmod@dividend+1
  2411  00119E  CFDE F097          	movff	postinc2,___llmod@dividend+2
  2412  0011A2  CFDE F098          	movff	postinc2,___llmod@dividend+3
  2413  0011A6  ECC3  F00E         	call	___llmod	;wreg free
  2414  0011AA  C095  F09E         	movff	?___llmod,___lldiv@dividend
  2415  0011AE  C096  F09F         	movff	?___llmod+1,___lldiv@dividend+1
  2416  0011B2  C097  F0A0         	movff	?___llmod+2,___lldiv@dividend+2
  2417  0011B6  C098  F0A1         	movff	?___llmod+3,___lldiv@dividend+3
  2418  0011BA  0E10               	movlw	16
  2419  0011BC  0100               	movlb	0	; () banked
  2420  0011BE  6FA2               	movwf	___lldiv@divisor& (0+255),b
  2421  0011C0  0E27               	movlw	39
  2422  0011C2  6FA3               	movwf	(___lldiv@divisor+1)& (0+255),b
  2423  0011C4  0E00               	movlw	0
  2424  0011C6  6FA4               	movwf	(___lldiv@divisor+2)& (0+255),b
  2425  0011C8  0E00               	movlw	0
  2426  0011CA  6FA5               	movwf	(___lldiv@divisor+3)& (0+255),b
  2427  0011CC  EC56  F00D         	call	___lldiv	;wreg free
  2428  0011D0  0100               	movlb	0	; () banked
  2429  0011D2  519E               	movf	?___lldiv& (0+255),w,b
  2430  0011D4  0F30               	addlw	48
  2431  0011D6  EC97  F012         	call	_I2C_LCD_Putc
  2432                           
  2433                           ;main.c: 209: I2C_LCD_Putc((S[print_port] % 10000) / 1000 + '0');
  2434  0011DA  0E10               	movlw	16
  2435  0011DC  0100               	movlb	0	; () banked
  2436  0011DE  6F99               	movwf	___llmod@divisor& (0+255),b
  2437  0011E0  0E27               	movlw	39
  2438  0011E2  6F9A               	movwf	(___llmod@divisor+1)& (0+255),b
  2439  0011E4  0E00               	movlw	0
  2440  0011E6  6F9B               	movwf	(___llmod@divisor+2)& (0+255),b
  2441  0011E8  0E00               	movlw	0
  2442  0011EA  6F9C               	movwf	(___llmod@divisor+3)& (0+255),b
  2443  0011EC  503F               	movf	_print_port,w,c
  2444  0011EE  0D04               	mullw	4
  2445  0011F0  0E60               	movlw	low _S
  2446  0011F2  24F3               	addwf	prodl,w,c
  2447  0011F4  6ED9               	movwf	fsr2l,c
  2448  0011F6  0E00               	movlw	high _S
  2449  0011F8  20F4               	addwfc	prodh,w,c
  2450  0011FA  6EDA               	movwf	fsr2h,c
  2451  0011FC  CFDE F095          	movff	postinc2,___llmod@dividend
  2452  001200  CFDE F096          	movff	postinc2,___llmod@dividend+1
  2453  001204  CFDE F097          	movff	postinc2,___llmod@dividend+2
  2454  001208  CFDE F098          	movff	postinc2,___llmod@dividend+3
  2455  00120C  ECC3  F00E         	call	___llmod	;wreg free
  2456  001210  C095  F09E         	movff	?___llmod,___lldiv@dividend
  2457  001214  C096  F09F         	movff	?___llmod+1,___lldiv@dividend+1
  2458  001218  C097  F0A0         	movff	?___llmod+2,___lldiv@dividend+2
  2459  00121C  C098  F0A1         	movff	?___llmod+3,___lldiv@dividend+3
  2460  001220  0EE8               	movlw	232
  2461  001222  0100               	movlb	0	; () banked
  2462  001224  6FA2               	movwf	___lldiv@divisor& (0+255),b
  2463  001226  0E03               	movlw	3
  2464  001228  6FA3               	movwf	(___lldiv@divisor+1)& (0+255),b
  2465  00122A  0E00               	movlw	0
  2466  00122C  6FA4               	movwf	(___lldiv@divisor+2)& (0+255),b
  2467  00122E  0E00               	movlw	0
  2468  001230  6FA5               	movwf	(___lldiv@divisor+3)& (0+255),b
  2469  001232  EC56  F00D         	call	___lldiv	;wreg free
  2470  001236  0100               	movlb	0	; () banked
  2471  001238  519E               	movf	?___lldiv& (0+255),w,b
  2472  00123A  0F30               	addlw	48
  2473  00123C  EC97  F012         	call	_I2C_LCD_Putc
  2474                           
  2475                           ;main.c: 210: I2C_LCD_Putc((S[print_port] % 1000) / 100 + '0');
  2476  001240  0EE8               	movlw	232
  2477  001242  0100               	movlb	0	; () banked
  2478  001244  6F99               	movwf	___llmod@divisor& (0+255),b
  2479  001246  0E03               	movlw	3
  2480  001248  6F9A               	movwf	(___llmod@divisor+1)& (0+255),b
  2481  00124A  0E00               	movlw	0
  2482  00124C  6F9B               	movwf	(___llmod@divisor+2)& (0+255),b
  2483  00124E  0E00               	movlw	0
  2484  001250  6F9C               	movwf	(___llmod@divisor+3)& (0+255),b
  2485  001252  503F               	movf	_print_port,w,c
  2486  001254  0D04               	mullw	4
  2487  001256  0E60               	movlw	low _S
  2488  001258  24F3               	addwf	prodl,w,c
  2489  00125A  6ED9               	movwf	fsr2l,c
  2490  00125C  0E00               	movlw	high _S
  2491  00125E  20F4               	addwfc	prodh,w,c
  2492  001260  6EDA               	movwf	fsr2h,c
  2493  001262  CFDE F095          	movff	postinc2,___llmod@dividend
  2494  001266  CFDE F096          	movff	postinc2,___llmod@dividend+1
  2495  00126A  CFDE F097          	movff	postinc2,___llmod@dividend+2
  2496  00126E  CFDE F098          	movff	postinc2,___llmod@dividend+3
  2497  001272  ECC3  F00E         	call	___llmod	;wreg free
  2498  001276  C095  F09E         	movff	?___llmod,___lldiv@dividend
  2499  00127A  C096  F09F         	movff	?___llmod+1,___lldiv@dividend+1
  2500  00127E  C097  F0A0         	movff	?___llmod+2,___lldiv@dividend+2
  2501  001282  C098  F0A1         	movff	?___llmod+3,___lldiv@dividend+3
  2502  001286  0E64               	movlw	100
  2503  001288  0100               	movlb	0	; () banked
  2504  00128A  6FA2               	movwf	___lldiv@divisor& (0+255),b
  2505  00128C  0E00               	movlw	0
  2506  00128E  6FA3               	movwf	(___lldiv@divisor+1)& (0+255),b
  2507  001290  0E00               	movlw	0
  2508  001292  6FA4               	movwf	(___lldiv@divisor+2)& (0+255),b
  2509  001294  0E00               	movlw	0
  2510  001296  6FA5               	movwf	(___lldiv@divisor+3)& (0+255),b
  2511  001298  EC56  F00D         	call	___lldiv	;wreg free
  2512  00129C  0100               	movlb	0	; () banked
  2513  00129E  519E               	movf	?___lldiv& (0+255),w,b
  2514  0012A0  0F30               	addlw	48
  2515  0012A2  EC97  F012         	call	_I2C_LCD_Putc
  2516                           
  2517                           ;main.c: 211: I2C_LCD_Putc((S[print_port] % 100) / 10 + '0');
  2518  0012A6  0E64               	movlw	100
  2519  0012A8  0100               	movlb	0	; () banked
  2520  0012AA  6F99               	movwf	___llmod@divisor& (0+255),b
  2521  0012AC  0E00               	movlw	0
  2522  0012AE  6F9A               	movwf	(___llmod@divisor+1)& (0+255),b
  2523  0012B0  0E00               	movlw	0
  2524  0012B2  6F9B               	movwf	(___llmod@divisor+2)& (0+255),b
  2525  0012B4  0E00               	movlw	0
  2526  0012B6  6F9C               	movwf	(___llmod@divisor+3)& (0+255),b
  2527  0012B8  503F               	movf	_print_port,w,c
  2528  0012BA  0D04               	mullw	4
  2529  0012BC  0E60               	movlw	low _S
  2530  0012BE  24F3               	addwf	prodl,w,c
  2531  0012C0  6ED9               	movwf	fsr2l,c
  2532  0012C2  0E00               	movlw	high _S
  2533  0012C4  20F4               	addwfc	prodh,w,c
  2534  0012C6  6EDA               	movwf	fsr2h,c
  2535  0012C8  CFDE F095          	movff	postinc2,___llmod@dividend
  2536  0012CC  CFDE F096          	movff	postinc2,___llmod@dividend+1
  2537  0012D0  CFDE F097          	movff	postinc2,___llmod@dividend+2
  2538  0012D4  CFDE F098          	movff	postinc2,___llmod@dividend+3
  2539  0012D8  ECC3  F00E         	call	___llmod	;wreg free
  2540  0012DC  C095  F09E         	movff	?___llmod,___lldiv@dividend
  2541  0012E0  C096  F09F         	movff	?___llmod+1,___lldiv@dividend+1
  2542  0012E4  C097  F0A0         	movff	?___llmod+2,___lldiv@dividend+2
  2543  0012E8  C098  F0A1         	movff	?___llmod+3,___lldiv@dividend+3
  2544  0012EC  0E0A               	movlw	10
  2545  0012EE  0100               	movlb	0	; () banked
  2546  0012F0  6FA2               	movwf	___lldiv@divisor& (0+255),b
  2547  0012F2  0E00               	movlw	0
  2548  0012F4  6FA3               	movwf	(___lldiv@divisor+1)& (0+255),b
  2549  0012F6  0E00               	movlw	0
  2550  0012F8  6FA4               	movwf	(___lldiv@divisor+2)& (0+255),b
  2551  0012FA  0E00               	movlw	0
  2552  0012FC  6FA5               	movwf	(___lldiv@divisor+3)& (0+255),b
  2553  0012FE  EC56  F00D         	call	___lldiv	;wreg free
  2554  001302  0100               	movlb	0	; () banked
  2555  001304  519E               	movf	?___lldiv& (0+255),w,b
  2556  001306  0F30               	addlw	48
  2557  001308  EC97  F012         	call	_I2C_LCD_Putc
  2558                           
  2559                           ;main.c: 212: I2C_LCD_Putc((S[print_port] % 10) / 1 + '0');
  2560  00130C  503F               	movf	_print_port,w,c
  2561  00130E  0D04               	mullw	4
  2562  001310  0E60               	movlw	low _S
  2563  001312  24F3               	addwf	prodl,w,c
  2564  001314  6ED9               	movwf	fsr2l,c
  2565  001316  0E00               	movlw	high _S
  2566  001318  20F4               	addwfc	prodh,w,c
  2567  00131A  6EDA               	movwf	fsr2h,c
  2568  00131C  CFDE F095          	movff	postinc2,___llmod@dividend
  2569  001320  CFDE F096          	movff	postinc2,___llmod@dividend+1
  2570  001324  CFDE F097          	movff	postinc2,___llmod@dividend+2
  2571  001328  CFDE F098          	movff	postinc2,___llmod@dividend+3
  2572  00132C  0E0A               	movlw	10
  2573  00132E  0100               	movlb	0	; () banked
  2574  001330  6F99               	movwf	___llmod@divisor& (0+255),b
  2575  001332  0E00               	movlw	0
  2576  001334  6F9A               	movwf	(___llmod@divisor+1)& (0+255),b
  2577  001336  0E00               	movlw	0
  2578  001338  6F9B               	movwf	(___llmod@divisor+2)& (0+255),b
  2579  00133A  0E00               	movlw	0
  2580  00133C  6F9C               	movwf	(___llmod@divisor+3)& (0+255),b
  2581  00133E  ECC3  F00E         	call	___llmod	;wreg free
  2582  001342  0100               	movlb	0	; () banked
  2583  001344  5195               	movf	?___llmod& (0+255),w,b
  2584  001346  0F30               	addlw	48
  2585  001348  EC97  F012         	call	_I2C_LCD_Putc
  2586                           
  2587                           ;main.c: 213: I2C_LCD_Puts("mAh");
  2588  00134C  0E76               	movlw	low STR_8
  2589  00134E  0100               	movlb	0	; () banked
  2590  001350  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2591  001352  0E0F               	movlw	high STR_8
  2592  001354  0100               	movlb	0	; () banked
  2593  001356  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2594  001358  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2595                           
  2596                           ;main.c: 214: break;
  2597  00135C  0012               	return	
  2598  00135E                     l4790:
  2599                           
  2600                           ;main.c: 216: I2C_LCD_Puts("Reset?");
  2601  00135E  0E3F               	movlw	low STR_9
  2602  001360  0100               	movlb	0	; () banked
  2603  001362  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2604  001364  0E0F               	movlw	high STR_9
  2605  001366  0100               	movlb	0	; () banked
  2606  001368  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2607  00136A  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2608                           
  2609                           ;main.c: 217: break;
  2610  00136E  0012               	return	
  2611  001370                     l4792:
  2612                           
  2613                           ;main.c: 219: I2C_LCD_Puts("Reseted");
  2614  001370  0E2F               	movlw	low STR_10
  2615  001372  0100               	movlb	0	; () banked
  2616  001374  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2617  001376  0E0F               	movlw	high STR_10
  2618  001378  0100               	movlb	0	; () banked
  2619  00137A  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2620  00137C  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2621                           
  2622                           ;main.c: 220: break;
  2623  001380  0012               	return	
  2624  001382                     l4794:
  2625                           
  2626                           ;main.c: 222: I2C_LCD_Puts("AlwaysON");
  2627  001382  0E1D               	movlw	low STR_11
  2628  001384  0100               	movlb	0	; () banked
  2629  001386  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2630  001388  0E0F               	movlw	high STR_11
  2631  00138A  0100               	movlb	0	; () banked
  2632  00138C  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2633  00138E  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2634                           
  2635                           ;main.c: 223: break;
  2636  001392  0012               	return	
  2637  001394                     l4796:
  2638                           
  2639                           ;main.c: 225: I2C_LCD_Puts("AutoStop");
  2640  001394  0E26               	movlw	low STR_12
  2641  001396  0100               	movlb	0	; () banked
  2642  001398  6F99               	movwf	I2C_LCD_Puts@s& (0+255),b
  2643  00139A  0E0F               	movlw	high STR_12
  2644  00139C  0100               	movlb	0	; () banked
  2645  00139E  6F9A               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2646  0013A0  EC10  F00F         	call	_I2C_LCD_Puts	;wreg free
  2647                           
  2648                           ;main.c: 227: }
  2649                           
  2650                           ;main.c: 226: break;
  2651  0013A4  0012               	return	
  2652  0013A6                     l4800:
  2653  0013A6  503E               	movf	_print_content,w,c
  2654                           
  2655                           ; Switch size 1, requested type "space"
  2656                           ; Number of cases is 6, Range of values is 0 to 5
  2657                           ; switch strategies available:
  2658                           ; Name         Instructions Cycles
  2659                           ; simple_byte           19    10 (average)
  2660                           ;	Chosen strategy is simple_byte
  2661  0013A8  0A00               	xorlw	0	; case 0
  2662  0013AA  B4D8               	btfsc	status,2,c
  2663  0013AC  D65B               	goto	l4776
  2664  0013AE  0A01               	xorlw	1	; case 1
  2665  0013B0  B4D8               	btfsc	status,2,c
  2666  0013B2  D6E0               	goto	l4786
  2667  0013B4  0A03               	xorlw	3	; case 2
  2668  0013B6  B4D8               	btfsc	status,2,c
  2669  0013B8  D7D2               	goto	l4790
  2670  0013BA  0A01               	xorlw	1	; case 3
  2671  0013BC  B4D8               	btfsc	status,2,c
  2672  0013BE  D7D8               	goto	l4792
  2673  0013C0  0A07               	xorlw	7	; case 4
  2674  0013C2  B4D8               	btfsc	status,2,c
  2675  0013C4  D7DE               	goto	l4794
  2676  0013C6  0A01               	xorlw	1	; case 5
  2677  0013C8  A4D8               	btfss	status,2,c
  2678  0013CA  0012               	return	
  2679  0013CC  D7E3               	goto	l4796
  2680  0013CE                     __end_of_display:
  2681                           	opt stack 0
  2682                           tblptru	equ	0xFF8
  2683                           tblptrh	equ	0xFF7
  2684                           tblptrl	equ	0xFF6
  2685                           tablat	equ	0xFF5
  2686                           prodh	equ	0xFF4
  2687                           prodl	equ	0xFF3
  2688                           intcon	equ	0xFF2
  2689                           intcon2	equ	0xFF1
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           indf2	equ	0xFDF
  2693                           postinc2	equ	0xFDE
  2694                           postdec2	equ	0xFDD
  2695                           fsr2h	equ	0xFDA
  2696                           fsr2l	equ	0xFD9
  2697                           status	equ	0xFD8
  2698                           
  2699 ;; *************** function ___lwmod *****************
  2700 ;; Defined at:
  2701 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  dividend        2    0[BANK0 ] unsigned int 
  2704 ;;  divisor         2    2[BANK0 ] unsigned int 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  counter         1    4[BANK0 ] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  2    0[BANK0 ] unsigned int 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2716 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;Total ram usage:        5 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    5
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_display
  2727 ;;		_ringbuf_put_num
  2728 ;;		_my_utoa
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text8
  2733  002090                     __ptext8:
  2734                           	opt stack 0
  2735  002090                     ___lwmod:
  2736                           	opt stack 24
  2737                           
  2738                           ;incstack = 0
  2739  002090  0100               	movlb	0	; () banked
  2740  002092  5197               	movf	___lwmod@divisor& (0+255),w,b
  2741  002094  0100               	movlb	0	; () banked
  2742  002096  1198               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  2743  002098  B4D8               	btfsc	status,2,c
  2744  00209A  D026               	goto	l1109
  2745                           
  2746                           ; BSR set to: 0
  2747  00209C  0E01               	movlw	1
  2748  00209E  0100               	movlb	0	; () banked
  2749  0020A0  6F99               	movwf	___lwmod@counter& (0+255),b
  2750  0020A2  D006               	goto	l4476
  2751  0020A4                     l4474:
  2752                           
  2753                           ; BSR set to: 0
  2754  0020A4  0100               	movlb	0	; () banked
  2755  0020A6  90D8               	bcf	status,0,c
  2756  0020A8  3797               	rlcf	___lwmod@divisor& (0+255),f,b
  2757  0020AA  3798               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2758  0020AC  0100               	movlb	0	; () banked
  2759  0020AE  2B99               	incf	___lwmod@counter& (0+255),f,b
  2760  0020B0                     l4476:
  2761                           
  2762                           ; BSR set to: 0
  2763  0020B0  0100               	movlb	0	; () banked
  2764  0020B2  AF98               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2765  0020B4  D7F7               	goto	l4474
  2766  0020B6                     l4478:
  2767                           
  2768                           ; BSR set to: 0
  2769  0020B6  0100               	movlb	0	; () banked
  2770  0020B8  5197               	movf	___lwmod@divisor& (0+255),w,b
  2771  0020BA  0100               	movlb	0	; () banked
  2772  0020BC  5D95               	subwf	___lwmod@dividend& (0+255),w,b
  2773  0020BE  0100               	movlb	0	; () banked
  2774  0020C0  5198               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2775  0020C2  0100               	movlb	0	; () banked
  2776  0020C4  5996               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2777  0020C6  A0D8               	btfss	status,0,c
  2778  0020C8  D008               	goto	l4482
  2779                           
  2780                           ; BSR set to: 0
  2781  0020CA  0100               	movlb	0	; () banked
  2782  0020CC  5197               	movf	___lwmod@divisor& (0+255),w,b
  2783  0020CE  0100               	movlb	0	; () banked
  2784  0020D0  5F95               	subwf	___lwmod@dividend& (0+255),f,b
  2785  0020D2  0100               	movlb	0	; () banked
  2786  0020D4  5198               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2787  0020D6  0100               	movlb	0	; () banked
  2788  0020D8  5B96               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2789  0020DA                     l4482:
  2790                           
  2791                           ; BSR set to: 0
  2792  0020DA  0100               	movlb	0	; () banked
  2793  0020DC  90D8               	bcf	status,0,c
  2794  0020DE  3398               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2795  0020E0  3397               	rrcf	___lwmod@divisor& (0+255),f,b
  2796                           
  2797                           ; BSR set to: 0
  2798  0020E2  0100               	movlb	0	; () banked
  2799  0020E4  2F99               	decfsz	___lwmod@counter& (0+255),f,b
  2800  0020E6  D7E7               	goto	l4478
  2801  0020E8                     l1109:
  2802                           
  2803                           ; BSR set to: 0
  2804  0020E8  C095  F095         	movff	___lwmod@dividend,?___lwmod
  2805  0020EC  C096  F096         	movff	___lwmod@dividend+1,?___lwmod+1
  2806                           
  2807                           ; BSR set to: 0
  2808  0020F0  0012               	return		;funcret
  2809  0020F2                     __end_of___lwmod:
  2810                           	opt stack 0
  2811                           tblptru	equ	0xFF8
  2812                           tblptrh	equ	0xFF7
  2813                           tblptrl	equ	0xFF6
  2814                           tablat	equ	0xFF5
  2815                           prodh	equ	0xFF4
  2816                           prodl	equ	0xFF3
  2817                           intcon	equ	0xFF2
  2818                           intcon2	equ	0xFF1
  2819                           postinc0	equ	0xFEE
  2820                           wreg	equ	0xFE8
  2821                           indf2	equ	0xFDF
  2822                           postinc2	equ	0xFDE
  2823                           postdec2	equ	0xFDD
  2824                           fsr2h	equ	0xFDA
  2825                           fsr2l	equ	0xFD9
  2826                           status	equ	0xFD8
  2827                           
  2828 ;; *************** function ___lwdiv *****************
  2829 ;; Defined at:
  2830 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  dividend        2    5[BANK0 ] unsigned int 
  2833 ;;  divisor         2    7[BANK0 ] unsigned int 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  quotient        2   10[BANK0 ] unsigned int 
  2836 ;;  counter         1    9[BANK0 ] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2    5[BANK0 ] unsigned int 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2847 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2849 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2850 ;;Total ram usage:        7 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    5
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_display
  2857 ;;		_ringbuf_put_num
  2858 ;;		_my_utoa
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text9
  2863  001FB4                     __ptext9:
  2864                           	opt stack 0
  2865  001FB4                     ___lwdiv:
  2866                           	opt stack 24
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;incstack = 0
  2870  001FB4  0E00               	movlw	0
  2871  001FB6  0100               	movlb	0	; () banked
  2872  001FB8  6FA0               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2873  001FBA  0E00               	movlw	0
  2874  001FBC  6F9F               	movwf	___lwdiv@quotient& (0+255),b
  2875                           
  2876                           ; BSR set to: 0
  2877  001FBE  0100               	movlb	0	; () banked
  2878  001FC0  519C               	movf	___lwdiv@divisor& (0+255),w,b
  2879  001FC2  0100               	movlb	0	; () banked
  2880  001FC4  119D               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2881  001FC6  B4D8               	btfsc	status,2,c
  2882  001FC8  D02C               	goto	l1099
  2883                           
  2884                           ; BSR set to: 0
  2885  001FCA  0E01               	movlw	1
  2886  001FCC  0100               	movlb	0	; () banked
  2887  001FCE  6F9E               	movwf	___lwdiv@counter& (0+255),b
  2888  001FD0  D006               	goto	l4456
  2889  001FD2                     l4454:
  2890                           
  2891                           ; BSR set to: 0
  2892  001FD2  0100               	movlb	0	; () banked
  2893  001FD4  90D8               	bcf	status,0,c
  2894  001FD6  379C               	rlcf	___lwdiv@divisor& (0+255),f,b
  2895  001FD8  379D               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2896  001FDA  0100               	movlb	0	; () banked
  2897  001FDC  2B9E               	incf	___lwdiv@counter& (0+255),f,b
  2898  001FDE                     l4456:
  2899                           
  2900                           ; BSR set to: 0
  2901  001FDE  0100               	movlb	0	; () banked
  2902  001FE0  AF9D               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2903  001FE2  D7F7               	goto	l4454
  2904  001FE4                     l4458:
  2905                           
  2906                           ; BSR set to: 0
  2907  001FE4  0100               	movlb	0	; () banked
  2908  001FE6  90D8               	bcf	status,0,c
  2909  001FE8  379F               	rlcf	___lwdiv@quotient& (0+255),f,b
  2910  001FEA  37A0               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2911                           
  2912                           ; BSR set to: 0
  2913  001FEC  0100               	movlb	0	; () banked
  2914  001FEE  519C               	movf	___lwdiv@divisor& (0+255),w,b
  2915  001FF0  0100               	movlb	0	; () banked
  2916  001FF2  5D9A               	subwf	___lwdiv@dividend& (0+255),w,b
  2917  001FF4  0100               	movlb	0	; () banked
  2918  001FF6  519D               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2919  001FF8  0100               	movlb	0	; () banked
  2920  001FFA  599B               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2921  001FFC  A0D8               	btfss	status,0,c
  2922  001FFE  D00A               	goto	l4466
  2923                           
  2924                           ; BSR set to: 0
  2925  002000  0100               	movlb	0	; () banked
  2926  002002  519C               	movf	___lwdiv@divisor& (0+255),w,b
  2927  002004  0100               	movlb	0	; () banked
  2928  002006  5F9A               	subwf	___lwdiv@dividend& (0+255),f,b
  2929  002008  0100               	movlb	0	; () banked
  2930  00200A  519D               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2931  00200C  0100               	movlb	0	; () banked
  2932  00200E  5B9B               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2933                           
  2934                           ; BSR set to: 0
  2935  002010  0100               	movlb	0	; () banked
  2936  002012  819F               	bsf	___lwdiv@quotient& (0+255),0,b
  2937  002014                     l4466:
  2938                           
  2939                           ; BSR set to: 0
  2940  002014  0100               	movlb	0	; () banked
  2941  002016  90D8               	bcf	status,0,c
  2942  002018  339D               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2943  00201A  339C               	rrcf	___lwdiv@divisor& (0+255),f,b
  2944                           
  2945                           ; BSR set to: 0
  2946  00201C  0100               	movlb	0	; () banked
  2947  00201E  2F9E               	decfsz	___lwdiv@counter& (0+255),f,b
  2948  002020  D7E1               	goto	l4458
  2949  002022                     l1099:
  2950                           
  2951                           ; BSR set to: 0
  2952  002022  C09F  F09A         	movff	___lwdiv@quotient,?___lwdiv
  2953  002026  C0A0  F09B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2954                           
  2955                           ; BSR set to: 0
  2956  00202A  0012               	return		;funcret
  2957  00202C                     __end_of___lwdiv:
  2958                           	opt stack 0
  2959                           tblptru	equ	0xFF8
  2960                           tblptrh	equ	0xFF7
  2961                           tblptrl	equ	0xFF6
  2962                           tablat	equ	0xFF5
  2963                           prodh	equ	0xFF4
  2964                           prodl	equ	0xFF3
  2965                           intcon	equ	0xFF2
  2966                           intcon2	equ	0xFF1
  2967                           postinc0	equ	0xFEE
  2968                           wreg	equ	0xFE8
  2969                           indf2	equ	0xFDF
  2970                           postinc2	equ	0xFDE
  2971                           postdec2	equ	0xFDD
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function ___llmod *****************
  2977 ;; Defined at:
  2978 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  dividend        4    0[BANK0 ] unsigned long 
  2981 ;;  divisor         4    4[BANK0 ] unsigned long 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  counter         1    8[BANK0 ] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  4    0[BANK0 ] unsigned long 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2993 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;Total ram usage:        9 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    5
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_display
  3004 ;;		_my_utoa32
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text10
  3009  001D86                     __ptext10:
  3010                           	opt stack 0
  3011  001D86                     ___llmod:
  3012                           	opt stack 24
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;incstack = 0
  3016  001D86  0100               	movlb	0	; () banked
  3017  001D88  5199               	movf	___llmod@divisor& (0+255),w,b
  3018  001D8A  0100               	movlb	0	; () banked
  3019  001D8C  119A               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  3020  001D8E  0100               	movlb	0	; () banked
  3021  001D90  119B               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  3022  001D92  0100               	movlb	0	; () banked
  3023  001D94  119C               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  3024  001D96  B4D8               	btfsc	status,2,c
  3025  001D98  D03A               	goto	l1056
  3026                           
  3027                           ; BSR set to: 0
  3028  001D9A  0E01               	movlw	1
  3029  001D9C  0100               	movlb	0	; () banked
  3030  001D9E  6F9D               	movwf	___llmod@counter& (0+255),b
  3031  001DA0  D008               	goto	l4438
  3032  001DA2                     l4436:
  3033                           
  3034                           ; BSR set to: 0
  3035  001DA2  0100               	movlb	0	; () banked
  3036  001DA4  90D8               	bcf	status,0,c
  3037  001DA6  3799               	rlcf	___llmod@divisor& (0+255),f,b
  3038  001DA8  379A               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  3039  001DAA  379B               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  3040  001DAC  379C               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  3041  001DAE  0100               	movlb	0	; () banked
  3042  001DB0  2B9D               	incf	___llmod@counter& (0+255),f,b
  3043  001DB2                     l4438:
  3044                           
  3045                           ; BSR set to: 0
  3046  001DB2  0100               	movlb	0	; () banked
  3047  001DB4  AF9C               	btfss	(___llmod@divisor+3)& (0+255),7,b
  3048  001DB6  D7F5               	goto	l4436
  3049  001DB8                     l4440:
  3050                           
  3051                           ; BSR set to: 0
  3052  001DB8  0100               	movlb	0	; () banked
  3053  001DBA  5199               	movf	___llmod@divisor& (0+255),w,b
  3054  001DBC  0100               	movlb	0	; () banked
  3055  001DBE  5D95               	subwf	___llmod@dividend& (0+255),w,b
  3056  001DC0  0100               	movlb	0	; () banked
  3057  001DC2  519A               	movf	(___llmod@divisor+1)& (0+255),w,b
  3058  001DC4  0100               	movlb	0	; () banked
  3059  001DC6  5996               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  3060  001DC8  0100               	movlb	0	; () banked
  3061  001DCA  519B               	movf	(___llmod@divisor+2)& (0+255),w,b
  3062  001DCC  0100               	movlb	0	; () banked
  3063  001DCE  5997               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  3064  001DD0  0100               	movlb	0	; () banked
  3065  001DD2  519C               	movf	(___llmod@divisor+3)& (0+255),w,b
  3066  001DD4  0100               	movlb	0	; () banked
  3067  001DD6  5998               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  3068  001DD8  A0D8               	btfss	status,0,c
  3069  001DDA  D010               	goto	l4444
  3070                           
  3071                           ; BSR set to: 0
  3072  001DDC  0100               	movlb	0	; () banked
  3073  001DDE  5199               	movf	___llmod@divisor& (0+255),w,b
  3074  001DE0  0100               	movlb	0	; () banked
  3075  001DE2  5F95               	subwf	___llmod@dividend& (0+255),f,b
  3076  001DE4  0100               	movlb	0	; () banked
  3077  001DE6  519A               	movf	(___llmod@divisor+1)& (0+255),w,b
  3078  001DE8  0100               	movlb	0	; () banked
  3079  001DEA  5B96               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  3080  001DEC  0100               	movlb	0	; () banked
  3081  001DEE  519B               	movf	(___llmod@divisor+2)& (0+255),w,b
  3082  001DF0  0100               	movlb	0	; () banked
  3083  001DF2  5B97               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  3084  001DF4  0100               	movlb	0	; () banked
  3085  001DF6  519C               	movf	(___llmod@divisor+3)& (0+255),w,b
  3086  001DF8  0100               	movlb	0	; () banked
  3087  001DFA  5B98               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  3088  001DFC                     l4444:
  3089                           
  3090                           ; BSR set to: 0
  3091  001DFC  0100               	movlb	0	; () banked
  3092  001DFE  90D8               	bcf	status,0,c
  3093  001E00  339C               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  3094  001E02  339B               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  3095  001E04  339A               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  3096  001E06  3399               	rrcf	___llmod@divisor& (0+255),f,b
  3097                           
  3098                           ; BSR set to: 0
  3099  001E08  0100               	movlb	0	; () banked
  3100  001E0A  2F9D               	decfsz	___llmod@counter& (0+255),f,b
  3101  001E0C  D7D5               	goto	l4440
  3102  001E0E                     l1056:
  3103                           
  3104                           ; BSR set to: 0
  3105  001E0E  C095  F095         	movff	___llmod@dividend,?___llmod
  3106  001E12  C096  F096         	movff	___llmod@dividend+1,?___llmod+1
  3107  001E16  C097  F097         	movff	___llmod@dividend+2,?___llmod+2
  3108  001E1A  C098  F098         	movff	___llmod@dividend+3,?___llmod+3
  3109                           
  3110                           ; BSR set to: 0
  3111  001E1E  0012               	return		;funcret
  3112  001E20                     __end_of___llmod:
  3113                           	opt stack 0
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           prodh	equ	0xFF4
  3119                           prodl	equ	0xFF3
  3120                           intcon	equ	0xFF2
  3121                           intcon2	equ	0xFF1
  3122                           postinc0	equ	0xFEE
  3123                           wreg	equ	0xFE8
  3124                           indf2	equ	0xFDF
  3125                           postinc2	equ	0xFDE
  3126                           postdec2	equ	0xFDD
  3127                           fsr2h	equ	0xFDA
  3128                           fsr2l	equ	0xFD9
  3129                           status	equ	0xFD8
  3130                           
  3131 ;; *************** function ___lldiv *****************
  3132 ;; Defined at:
  3133 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  dividend        4    9[BANK0 ] unsigned long 
  3136 ;;  divisor         4   13[BANK0 ] unsigned long 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  quotient        4   17[BANK0 ] unsigned long 
  3139 ;;  counter         1   21[BANK0 ] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  4    9[BANK0 ] unsigned long 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3149 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3152 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3153 ;;Total ram usage:       13 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    5
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_display
  3160 ;;		_CTMU_read
  3161 ;;		_get_quot_rem
  3162 ;;		_my_utoa32
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text11
  3167  001AAC                     __ptext11:
  3168                           	opt stack 0
  3169  001AAC                     ___lldiv:
  3170                           	opt stack 24
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;incstack = 0
  3174  001AAC  0E00               	movlw	0
  3175  001AAE  0100               	movlb	0	; () banked
  3176  001AB0  6FA6               	movwf	___lldiv@quotient& (0+255),b
  3177  001AB2  0E00               	movlw	0
  3178  001AB4  6FA7               	movwf	(___lldiv@quotient+1)& (0+255),b
  3179  001AB6  0E00               	movlw	0
  3180  001AB8  6FA8               	movwf	(___lldiv@quotient+2)& (0+255),b
  3181  001ABA  0E00               	movlw	0
  3182  001ABC  6FA9               	movwf	(___lldiv@quotient+3)& (0+255),b
  3183                           
  3184                           ; BSR set to: 0
  3185  001ABE  0100               	movlb	0	; () banked
  3186  001AC0  51A2               	movf	___lldiv@divisor& (0+255),w,b
  3187  001AC2  0100               	movlb	0	; () banked
  3188  001AC4  11A3               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3189  001AC6  0100               	movlb	0	; () banked
  3190  001AC8  11A4               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3191  001ACA  0100               	movlb	0	; () banked
  3192  001ACC  11A5               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3193  001ACE  B4D8               	btfsc	status,2,c
  3194  001AD0  D042               	goto	l1046
  3195                           
  3196                           ; BSR set to: 0
  3197  001AD2  0E01               	movlw	1
  3198  001AD4  0100               	movlb	0	; () banked
  3199  001AD6  6FAA               	movwf	___lldiv@counter& (0+255),b
  3200  001AD8  D008               	goto	l4418
  3201  001ADA                     l4416:
  3202                           
  3203                           ; BSR set to: 0
  3204  001ADA  0100               	movlb	0	; () banked
  3205  001ADC  90D8               	bcf	status,0,c
  3206  001ADE  37A2               	rlcf	___lldiv@divisor& (0+255),f,b
  3207  001AE0  37A3               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3208  001AE2  37A4               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3209  001AE4  37A5               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3210  001AE6  0100               	movlb	0	; () banked
  3211  001AE8  2BAA               	incf	___lldiv@counter& (0+255),f,b
  3212  001AEA                     l4418:
  3213                           
  3214                           ; BSR set to: 0
  3215  001AEA  0100               	movlb	0	; () banked
  3216  001AEC  AFA5               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  3217  001AEE  D7F5               	goto	l4416
  3218  001AF0                     l4420:
  3219                           
  3220                           ; BSR set to: 0
  3221  001AF0  0100               	movlb	0	; () banked
  3222  001AF2  90D8               	bcf	status,0,c
  3223  001AF4  37A6               	rlcf	___lldiv@quotient& (0+255),f,b
  3224  001AF6  37A7               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3225  001AF8  37A8               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3226  001AFA  37A9               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3227                           
  3228                           ; BSR set to: 0
  3229  001AFC  0100               	movlb	0	; () banked
  3230  001AFE  51A2               	movf	___lldiv@divisor& (0+255),w,b
  3231  001B00  0100               	movlb	0	; () banked
  3232  001B02  5D9E               	subwf	___lldiv@dividend& (0+255),w,b
  3233  001B04  0100               	movlb	0	; () banked
  3234  001B06  51A3               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3235  001B08  0100               	movlb	0	; () banked
  3236  001B0A  599F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3237  001B0C  0100               	movlb	0	; () banked
  3238  001B0E  51A4               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3239  001B10  0100               	movlb	0	; () banked
  3240  001B12  59A0               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3241  001B14  0100               	movlb	0	; () banked
  3242  001B16  51A5               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3243  001B18  0100               	movlb	0	; () banked
  3244  001B1A  59A1               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3245  001B1C  A0D8               	btfss	status,0,c
  3246  001B1E  D012               	goto	l4428
  3247                           
  3248                           ; BSR set to: 0
  3249  001B20  0100               	movlb	0	; () banked
  3250  001B22  51A2               	movf	___lldiv@divisor& (0+255),w,b
  3251  001B24  0100               	movlb	0	; () banked
  3252  001B26  5F9E               	subwf	___lldiv@dividend& (0+255),f,b
  3253  001B28  0100               	movlb	0	; () banked
  3254  001B2A  51A3               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3255  001B2C  0100               	movlb	0	; () banked
  3256  001B2E  5B9F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3257  001B30  0100               	movlb	0	; () banked
  3258  001B32  51A4               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3259  001B34  0100               	movlb	0	; () banked
  3260  001B36  5BA0               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3261  001B38  0100               	movlb	0	; () banked
  3262  001B3A  51A5               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3263  001B3C  0100               	movlb	0	; () banked
  3264  001B3E  5BA1               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3265                           
  3266                           ; BSR set to: 0
  3267  001B40  0100               	movlb	0	; () banked
  3268  001B42  81A6               	bsf	___lldiv@quotient& (0+255),0,b
  3269  001B44                     l4428:
  3270                           
  3271                           ; BSR set to: 0
  3272  001B44  0100               	movlb	0	; () banked
  3273  001B46  90D8               	bcf	status,0,c
  3274  001B48  33A5               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3275  001B4A  33A4               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3276  001B4C  33A3               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3277  001B4E  33A2               	rrcf	___lldiv@divisor& (0+255),f,b
  3278                           
  3279                           ; BSR set to: 0
  3280  001B50  0100               	movlb	0	; () banked
  3281  001B52  2FAA               	decfsz	___lldiv@counter& (0+255),f,b
  3282  001B54  D7CD               	goto	l4420
  3283  001B56                     l1046:
  3284                           
  3285                           ; BSR set to: 0
  3286  001B56  C0A6  F09E         	movff	___lldiv@quotient,?___lldiv
  3287  001B5A  C0A7  F09F         	movff	___lldiv@quotient+1,?___lldiv+1
  3288  001B5E  C0A8  F0A0         	movff	___lldiv@quotient+2,?___lldiv+2
  3289  001B62  C0A9  F0A1         	movff	___lldiv@quotient+3,?___lldiv+3
  3290                           
  3291                           ; BSR set to: 0
  3292  001B66  0012               	return		;funcret
  3293  001B68                     __end_of___lldiv:
  3294                           	opt stack 0
  3295                           tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           prodh	equ	0xFF4
  3300                           prodl	equ	0xFF3
  3301                           intcon	equ	0xFF2
  3302                           intcon2	equ	0xFF1
  3303                           postinc0	equ	0xFEE
  3304                           wreg	equ	0xFE8
  3305                           indf2	equ	0xFDF
  3306                           postinc2	equ	0xFDE
  3307                           postdec2	equ	0xFDD
  3308                           fsr2h	equ	0xFDA
  3309                           fsr2l	equ	0xFD9
  3310                           status	equ	0xFD8
  3311                           
  3312 ;; *************** function _I2C_LCD_SetCursor *****************
  3313 ;; Defined at:
  3314 ;;		line 112 in file "../My_header\My_I2C.h"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  col             1    wreg     unsigned char 
  3317 ;;  row             1    6[BANK0 ] unsigned char 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  col             1    9[BANK0 ] unsigned char 
  3320 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
  3321 ;; Return value:  Size  Location     Type
  3322 ;;		None               void
  3323 ;; Registers used:
  3324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3330 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3331 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3333 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3334 ;;Total ram usage:        4 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    8
  3337 ;; This function calls:
  3338 ;;		_I2C_LCD_Command
  3339 ;; This function is called by:
  3340 ;;		_display
  3341 ;;		_main
  3342 ;;		_display_time_0802
  3343 ;;		_display_time_1602
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text12
  3348  0025FA                     __ptext12:
  3349                           	opt stack 0
  3350  0025FA                     _I2C_LCD_SetCursor:
  3351                           	opt stack 21
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;incstack = 0
  3355                           ;I2C_LCD_SetCursor@col stored from wreg
  3356  0025FA  0100               	movlb	0	; () banked
  3357  0025FC  6F9E               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  3358                           
  3359                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
  3360  0025FE  C04E  F09C         	movff	I2C_LCD_SetCursor@F8672,I2C_LCD_SetCursor@row_offsets
  3361  002602  C04F  F09D         	movff	I2C_LCD_SetCursor@F8672+1,I2C_LCD_SetCursor@row_offsets+1
  3362                           
  3363                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  3364  002606  0100               	movlb	0	; () banked
  3365  002608  519B               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  3366  00260A  0D01               	mullw	1
  3367  00260C  0E9C               	movlw	low I2C_LCD_SetCursor@row_offsets
  3368  00260E  24F3               	addwf	prodl,w,c
  3369  002610  6ED9               	movwf	fsr2l,c
  3370  002612  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  3371  002614  20F4               	addwfc	prodh,w,c
  3372  002616  6EDA               	movwf	fsr2h,c
  3373  002618  50DF               	movf	indf2,w,c
  3374  00261A  0100               	movlb	0	; () banked
  3375  00261C  259E               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  3376  00261E  0980               	iorlw	128
  3377  002620  ECB3  F012         	call	_I2C_LCD_Command
  3378  002624  0012               	return		;funcret
  3379  002626                     __end_of_I2C_LCD_SetCursor:
  3380                           	opt stack 0
  3381                           tblptru	equ	0xFF8
  3382                           tblptrh	equ	0xFF7
  3383                           tblptrl	equ	0xFF6
  3384                           tablat	equ	0xFF5
  3385                           prodh	equ	0xFF4
  3386                           prodl	equ	0xFF3
  3387                           intcon	equ	0xFF2
  3388                           intcon2	equ	0xFF1
  3389                           postinc0	equ	0xFEE
  3390                           wreg	equ	0xFE8
  3391                           indf2	equ	0xFDF
  3392                           postinc2	equ	0xFDE
  3393                           postdec2	equ	0xFDD
  3394                           fsr2h	equ	0xFDA
  3395                           fsr2l	equ	0xFD9
  3396                           status	equ	0xFD8
  3397                           
  3398 ;; *************** function _I2C_LCD_Puts *****************
  3399 ;; Defined at:
  3400 ;;		line 131 in file "../My_header\My_I2C.h"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  3403 ;;		 -> STR_16(8), STR_15(7), STR_12(9), STR_11(9), 
  3404 ;;		 -> STR_10(8), STR_9(7), STR_8(4), STR_7(5), 
  3405 ;;		 -> STR_6(5), STR_5(7), STR_4(7), STR_3(6), 
  3406 ;;		 -> STR_2(6), weekday_3char(28), STR_1(3), display_dec@str(10), 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  ans             2    7[BANK0 ] int 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;		None               void
  3411 ;; Registers used:
  3412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3421 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3422 ;;Total ram usage:        5 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    7
  3425 ;; This function calls:
  3426 ;;		_I2C_Send
  3427 ;;		_I2C_Start
  3428 ;;		_I2C_Stop
  3429 ;; This function is called by:
  3430 ;;		_display
  3431 ;;		_main
  3432 ;;		_display_dec
  3433 ;;		_display_time_0802
  3434 ;;		_display_time_1602
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text13
  3439  001E20                     __ptext13:
  3440                           	opt stack 0
  3441  001E20                     _I2C_LCD_Puts:
  3442                           	opt stack 22
  3443                           
  3444                           ;My_header\My_I2C.h: 132: int ans;
  3445                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
  3446                           
  3447                           ;incstack = 0
  3448  001E20  0E00               	movlw	0
  3449  001E22  0100               	movlb	0	; () banked
  3450  001E24  6F97               	movwf	I2C_Start@rw& (0+255),b
  3451  001E26  0E3E               	movlw	62
  3452  001E28  ECCF  F012         	call	_I2C_Start
  3453  001E2C  0100               	movlb	0	; () banked
  3454  001E2E  6F9B               	movwf	??_I2C_LCD_Puts& (0+255),b
  3455  001E30  0100               	movlb	0	; () banked
  3456  001E32  519B               	movf	??_I2C_LCD_Puts& (0+255),w,b
  3457  001E34  0100               	movlb	0	; () banked
  3458  001E36  6F9C               	movwf	I2C_LCD_Puts@ans& (0+255),b
  3459  001E38  6B9D               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;My_header\My_I2C.h: 135: if (ans == 0) {
  3463  001E3A  0100               	movlb	0	; () banked
  3464  001E3C  519C               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  3465  001E3E  0100               	movlb	0	; () banked
  3466  001E40  119D               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  3467  001E42  A4D8               	btfss	status,2,c
  3468  001E44  D031               	goto	l4388
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
  3472  001E46  0E40               	movlw	64
  3473  001E48  EC8C  F013         	call	_I2C_Send
  3474                           
  3475                           ;My_header\My_I2C.h: 137: while (*s) {
  3476  001E4C  D019               	goto	l4386
  3477  001E4E                     l4380:
  3478                           
  3479                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
  3480  001E4E  C099  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  3481  001E52  C09A  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  3482  001E56  0E00               	movlw	low (__smallconst shr (0+16))
  3483  001E58  6EF8               	movwf	tblptru,c
  3484  001E5A  0E0E               	movlw	(high __ramtop+-1)
  3485  001E5C  64F7               	cpfsgt	tblptrh,c
  3486  001E5E  D003               	bra	u4387
  3487  001E60  0008               	tblrd		*
  3488  001E62  50F5               	movf	tablat,w,c
  3489  001E64  D005               	bra	u4380
  3490  001E66                     u4387:
  3491  001E66  CFF6 FFE9          	movff	tblptrl,fsr0l
  3492  001E6A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3493  001E6E  50EF               	movf	indf0,w,c
  3494  001E70                     u4380:
  3495  001E70  EC8C  F013         	call	_I2C_Send
  3496  001E74  0100               	movlb	0	; () banked
  3497  001E76  4B99               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  3498  001E78  2B9A               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
  3502  001E7A  0E68               	movlw	104
  3503  001E7C                     u5247:
  3504  001E7C  2EE8               	decfsz	wreg,f,c
  3505  001E7E  D7FE               	goto	u5247
  3506  001E80                     l4386:
  3507  001E80  C099  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  3508  001E84  C09A  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  3509  001E88  0E00               	movlw	low (__smallconst shr (0+16))
  3510  001E8A  6EF8               	movwf	tblptru,c
  3511  001E8C  0E0E               	movlw	(high __ramtop+-1)
  3512  001E8E  64F7               	cpfsgt	tblptrh,c
  3513  001E90  D003               	bra	u4397
  3514  001E92  0008               	tblrd		*
  3515  001E94  50F5               	movf	tablat,w,c
  3516  001E96  D005               	bra	u4390
  3517  001E98                     u4397:
  3518  001E98  CFF6 FFE9          	movff	tblptrl,fsr0l
  3519  001E9C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3520  001EA0  50EF               	movf	indf0,w,c
  3521  001EA2                     u4390:
  3522  001EA2  0900               	iorlw	0
  3523  001EA4  A4D8               	btfss	status,2,c
  3524  001EA6  D7D3               	goto	l4380
  3525  001EA8                     l4388:
  3526                           
  3527                           ;My_header\My_I2C.h: 140: }
  3528                           ;My_header\My_I2C.h: 141: }
  3529                           ;My_header\My_I2C.h: 142: I2C_Stop();
  3530  001EA8  ECAC  F013         	call	_I2C_Stop	;wreg free
  3531  001EAC  0012               	return		;funcret
  3532  001EAE                     __end_of_I2C_LCD_Puts:
  3533                           	opt stack 0
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           prodh	equ	0xFF4
  3539                           prodl	equ	0xFF3
  3540                           intcon	equ	0xFF2
  3541                           intcon2	equ	0xFF1
  3542                           indf0	equ	0xFEF
  3543                           postinc0	equ	0xFEE
  3544                           fsr0h	equ	0xFEA
  3545                           fsr0l	equ	0xFE9
  3546                           wreg	equ	0xFE8
  3547                           indf2	equ	0xFDF
  3548                           postinc2	equ	0xFDE
  3549                           postdec2	equ	0xFDD
  3550                           fsr2h	equ	0xFDA
  3551                           fsr2l	equ	0xFD9
  3552                           status	equ	0xFD8
  3553                           
  3554 ;; *************** function _I2C_LCD_Putc *****************
  3555 ;; Defined at:
  3556 ;;		line 118 in file "../My_header\My_I2C.h"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  c               1    wreg     unsigned char 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  c               1    4[BANK0 ] unsigned char 
  3561 ;;  ans             1    5[BANK0 ] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;		None               void
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3574 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3575 ;;Total ram usage:        2 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; Hardware stack levels required when called:    7
  3578 ;; This function calls:
  3579 ;;		_I2C_Send
  3580 ;;		_I2C_Start
  3581 ;;		_I2C_Stop
  3582 ;; This function is called by:
  3583 ;;		_display
  3584 ;;		_display_time_0802
  3585 ;;		_display_time_1602
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text14
  3590  00252E                     __ptext14:
  3591                           	opt stack 0
  3592  00252E                     _I2C_LCD_Putc:
  3593                           	opt stack 22
  3594                           
  3595                           ;incstack = 0
  3596                           ;I2C_LCD_Putc@c stored from wreg
  3597  00252E  0100               	movlb	0	; () banked
  3598  002530  6F99               	movwf	I2C_LCD_Putc@c& (0+255),b
  3599                           
  3600                           ;My_header\My_I2C.h: 119: uint8_t ans;
  3601                           ;My_header\My_I2C.h: 121: ans = I2C_Start(0x3E, 0);
  3602  002532  0E00               	movlw	0
  3603  002534  0100               	movlb	0	; () banked
  3604  002536  6F97               	movwf	I2C_Start@rw& (0+255),b
  3605  002538  0E3E               	movlw	62
  3606  00253A  ECCF  F012         	call	_I2C_Start
  3607  00253E  0100               	movlb	0	; () banked
  3608  002540  6F9A               	movwf	I2C_LCD_Putc@ans& (0+255),b
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;My_header\My_I2C.h: 122: if (ans == 0) {
  3612  002542  0100               	movlb	0	; () banked
  3613  002544  519A               	movf	I2C_LCD_Putc@ans& (0+255),w,b
  3614  002546  0100               	movlb	0	; () banked
  3615  002548  A4D8               	btfss	status,2,c
  3616  00254A  D007               	goto	l343
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;My_header\My_I2C.h: 124: I2C_Send(0b11000000);
  3620  00254C  0EC0               	movlw	192
  3621  00254E  EC8C  F013         	call	_I2C_Send
  3622                           
  3623                           ;My_header\My_I2C.h: 125: I2C_Send(c);
  3624  002552  0100               	movlb	0	; () banked
  3625  002554  5199               	movf	I2C_LCD_Putc@c& (0+255),w,b
  3626  002556  EC8C  F013         	call	_I2C_Send
  3627  00255A                     l343:
  3628                           
  3629                           ;My_header\My_I2C.h: 126: }
  3630                           ;My_header\My_I2C.h: 127: I2C_Stop();
  3631  00255A  ECAC  F013         	call	_I2C_Stop	;wreg free
  3632                           
  3633                           ;My_header\My_I2C.h: 128: _delay((unsigned long)((26)*(48000000/4000000.0)));
  3634  00255E  0E68               	movlw	104
  3635  002560                     u5257:
  3636  002560  2EE8               	decfsz	wreg,f,c
  3637  002562  D7FE               	goto	u5257
  3638  002564  0012               	return		;funcret
  3639  002566                     __end_of_I2C_LCD_Putc:
  3640                           	opt stack 0
  3641                           tblptru	equ	0xFF8
  3642                           tblptrh	equ	0xFF7
  3643                           tblptrl	equ	0xFF6
  3644                           tablat	equ	0xFF5
  3645                           prodh	equ	0xFF4
  3646                           prodl	equ	0xFF3
  3647                           intcon	equ	0xFF2
  3648                           intcon2	equ	0xFF1
  3649                           indf0	equ	0xFEF
  3650                           postinc0	equ	0xFEE
  3651                           fsr0h	equ	0xFEA
  3652                           fsr0l	equ	0xFE9
  3653                           wreg	equ	0xFE8
  3654                           indf2	equ	0xFDF
  3655                           postinc2	equ	0xFDE
  3656                           postdec2	equ	0xFDD
  3657                           fsr2h	equ	0xFDA
  3658                           fsr2l	equ	0xFD9
  3659                           status	equ	0xFD8
  3660                           
  3661 ;; *************** function _UART_init *****************
  3662 ;; Defined at:
  3663 ;;		line 192 in file "../My_header\My_header.h"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;		None               void
  3670 ;; Registers used:
  3671 ;;		wreg, status,2
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;Total ram usage:        0 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    5
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text15
  3692  0026A0                     __ptext15:
  3693                           	opt stack 0
  3694  0026A0                     _UART_init:
  3695                           	opt stack 25
  3696                           
  3697                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  3698                           
  3699                           ;incstack = 0
  3700  0026A0  9CAD               	bcf	4013,6,c	;volatile
  3701                           
  3702                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  3703  0026A2  8AAD               	bsf	4013,5,c	;volatile
  3704                           
  3705                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  3706  0026A4  98AD               	bcf	4013,4,c	;volatile
  3707                           
  3708                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  3709  0026A6  94AD               	bcf	4013,2,c	;volatile
  3710                           
  3711                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  3712  0026A8  8EAC               	bsf	4012,7,c	;volatile
  3713                           
  3714                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  3715  0026AA  9CAC               	bcf	4012,6,c	;volatile
  3716                           
  3717                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  3718  0026AC  88AC               	bsf	4012,4,c	;volatile
  3719                           
  3720                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  3721  0026AE  967E               	bcf	3966,3,c	;volatile
  3722                           
  3723                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  3724  0026B0  0E4D               	movlw	77
  3725  0026B2  6EB0               	movwf	4016,c	;volatile
  3726                           
  3727                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  3728  0026B4  0E00               	movlw	0
  3729  0026B6  6E7F               	movwf	3967,c	;volatile
  3730                           
  3731                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  3732  0026B8  9A9F               	bcf	3999,5,c	;volatile
  3733                           
  3734                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  3735  0026BA  8A9D               	bsf	3997,5,c	;volatile
  3736                           
  3737                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  3738  0026BC  8CF2               	bsf	intcon,6,c	;volatile
  3739  0026BE  0012               	return		;funcret
  3740  0026C0                     __end_of_UART_init:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           tblptrh	equ	0xFF7
  3744                           tblptrl	equ	0xFF6
  3745                           tablat	equ	0xFF5
  3746                           prodh	equ	0xFF4
  3747                           prodl	equ	0xFF3
  3748                           intcon	equ	0xFF2
  3749                           intcon2	equ	0xFF1
  3750                           indf0	equ	0xFEF
  3751                           postinc0	equ	0xFEE
  3752                           fsr0h	equ	0xFEA
  3753                           fsr0l	equ	0xFE9
  3754                           wreg	equ	0xFE8
  3755                           indf2	equ	0xFDF
  3756                           postinc2	equ	0xFDE
  3757                           postdec2	equ	0xFDD
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function _OUT *****************
  3763 ;; Defined at:
  3764 ;;		line 74 in file "main.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  b               1    wreg     unsigned char 
  3767 ;;  value           1    0[BANK0 ] unsigned char 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  b               1    1[BANK0 ] unsigned char 
  3770 ;; Return value:  Size  Location     Type
  3771 ;;		None               void
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3779 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;Total ram usage:        2 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    5
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_main
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text16
  3794  00219E                     __ptext16:
  3795                           	opt stack 0
  3796  00219E                     _OUT:
  3797                           	opt stack 25
  3798                           
  3799                           ;incstack = 0
  3800                           ;OUT@b stored from wreg
  3801  00219E  0100               	movlb	0	; () banked
  3802  0021A0  6F96               	movwf	OUT@b& (0+255),b
  3803                           
  3804                           ;main.c: 75: switch (b) {
  3805  0021A2  D01B               	goto	l4706
  3806  0021A4                     l4692:
  3807                           
  3808                           ;main.c: 77: if (value) {
  3809  0021A4  0100               	movlb	0	; () banked
  3810  0021A6  5195               	movf	OUT@value& (0+255),w,b
  3811  0021A8  0100               	movlb	0	; () banked
  3812  0021AA  B4D8               	btfsc	status,2,c
  3813  0021AC  D002               	goto	l584
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;main.c: 78: LATA5 = 0;
  3817  0021AE  9A89               	bcf	3977,5,c	;volatile
  3818                           
  3819                           ;main.c: 79: } else {
  3820  0021B0  0012               	return	
  3821  0021B2                     l584:
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;main.c: 80: LATA5 = 1;
  3825  0021B2  8A89               	bsf	3977,5,c	;volatile
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;main.c: 81: }
  3829                           ;main.c: 82: break;
  3830  0021B4  0012               	return	
  3831  0021B6                     l4696:
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;main.c: 84: if (value) {
  3835  0021B6  0100               	movlb	0	; () banked
  3836  0021B8  5195               	movf	OUT@value& (0+255),w,b
  3837  0021BA  0100               	movlb	0	; () banked
  3838  0021BC  B4D8               	btfsc	status,2,c
  3839  0021BE  D002               	goto	l588
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;main.c: 85: LATA6 = 0;
  3843  0021C0  9C89               	bcf	3977,6,c	;volatile
  3844                           
  3845                           ;main.c: 86: } else {
  3846  0021C2  0012               	return	
  3847  0021C4                     l588:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;main.c: 87: LATA6 = 1;
  3851  0021C4  8C89               	bsf	3977,6,c	;volatile
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;main.c: 88: }
  3855                           ;main.c: 89: break;
  3856  0021C6  0012               	return	
  3857  0021C8                     l4700:
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;main.c: 91: if (value) {
  3861  0021C8  0100               	movlb	0	; () banked
  3862  0021CA  5195               	movf	OUT@value& (0+255),w,b
  3863  0021CC  0100               	movlb	0	; () banked
  3864  0021CE  B4D8               	btfsc	status,2,c
  3865  0021D0  D002               	goto	l591
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;main.c: 92: LATA7 = 0;
  3869  0021D2  9E89               	bcf	3977,7,c	;volatile
  3870                           
  3871                           ;main.c: 93: } else {
  3872  0021D4  0012               	return	
  3873  0021D6                     l591:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;main.c: 94: LATA7 = 1;
  3877  0021D6  8E89               	bsf	3977,7,c	;volatile
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;main.c: 97: }
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;main.c: 95: }
  3884                           ;main.c: 96: break;
  3885  0021D8  0012               	return	
  3886  0021DA                     l4706:
  3887  0021DA  0100               	movlb	0	; () banked
  3888  0021DC  5196               	movf	OUT@b& (0+255),w,b
  3889                           
  3890                           ; Switch size 1, requested type "space"
  3891                           ; Number of cases is 3, Range of values is 0 to 2
  3892                           ; switch strategies available:
  3893                           ; Name         Instructions Cycles
  3894                           ; simple_byte           10     6 (average)
  3895                           ;	Chosen strategy is simple_byte
  3896  0021DE  0A00               	xorlw	0	; case 0
  3897  0021E0  B4D8               	btfsc	status,2,c
  3898  0021E2  D7E0               	goto	l4692
  3899  0021E4  0A01               	xorlw	1	; case 1
  3900  0021E6  B4D8               	btfsc	status,2,c
  3901  0021E8  D7E6               	goto	l4696
  3902  0021EA  0A03               	xorlw	3	; case 2
  3903  0021EC  A4D8               	btfss	status,2,c
  3904  0021EE  0012               	return	
  3905  0021F0  D7EB               	goto	l4700
  3906  0021F2                     __end_of_OUT:
  3907                           	opt stack 0
  3908                           tblptru	equ	0xFF8
  3909                           tblptrh	equ	0xFF7
  3910                           tblptrl	equ	0xFF6
  3911                           tablat	equ	0xFF5
  3912                           prodh	equ	0xFF4
  3913                           prodl	equ	0xFF3
  3914                           intcon	equ	0xFF2
  3915                           intcon2	equ	0xFF1
  3916                           indf0	equ	0xFEF
  3917                           postinc0	equ	0xFEE
  3918                           fsr0h	equ	0xFEA
  3919                           fsr0l	equ	0xFE9
  3920                           wreg	equ	0xFE8
  3921                           indf2	equ	0xFDF
  3922                           postinc2	equ	0xFDE
  3923                           postdec2	equ	0xFDD
  3924                           fsr2h	equ	0xFDA
  3925                           fsr2l	equ	0xFD9
  3926                           status	equ	0xFD8
  3927                           
  3928 ;; *************** function _LED *****************
  3929 ;; Defined at:
  3930 ;;		line 100 in file "main.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  b               1    wreg     unsigned char 
  3933 ;;  value           1    0[BANK0 ] unsigned char 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  b               1    1[BANK0 ] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;		None               void
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3945 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;Total ram usage:        2 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    5
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_main
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text17
  3960  00232A                     __ptext17:
  3961                           	opt stack 0
  3962  00232A                     _LED:
  3963                           	opt stack 25
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;incstack = 0
  3967                           ;LED@b stored from wreg
  3968  00232A  0100               	movlb	0	; () banked
  3969  00232C  6F96               	movwf	LED@b& (0+255),b
  3970                           
  3971                           ;main.c: 101: switch (b) {
  3972  00232E  D015               	goto	l4712
  3973  002330                     l597:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;main.c: 103: LATB7 = value;
  3977  002330  0100               	movlb	0	; () banked
  3978  002332  A195               	btfss	LED@value& (0+255),0,b
  3979  002334  D002               	goto	u4830
  3980  002336  8E8A               	bsf	3978,7,c	;volatile
  3981  002338  0012               	return	
  3982  00233A                     u4830:
  3983  00233A  9E8A               	bcf	3978,7,c	;volatile
  3984                           
  3985                           ;main.c: 104: break;
  3986  00233C  0012               	return	
  3987  00233E                     l599:
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;main.c: 106: LATB6 = value;
  3991  00233E  0100               	movlb	0	; () banked
  3992  002340  A195               	btfss	LED@value& (0+255),0,b
  3993  002342  D002               	goto	u4850
  3994  002344  8C8A               	bsf	3978,6,c	;volatile
  3995  002346  0012               	return	
  3996  002348                     u4850:
  3997  002348  9C8A               	bcf	3978,6,c	;volatile
  3998                           
  3999                           ;main.c: 107: break;
  4000  00234A  0012               	return	
  4001  00234C                     l600:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;main.c: 109: LATC2 = value;
  4005  00234C  0100               	movlb	0	; () banked
  4006  00234E  A195               	btfss	LED@value& (0+255),0,b
  4007  002350  D002               	goto	u4870
  4008  002352  848B               	bsf	3979,2,c	;volatile
  4009  002354  0012               	return	
  4010  002356                     u4870:
  4011  002356  948B               	bcf	3979,2,c	;volatile
  4012                           
  4013                           ;main.c: 111: }
  4014                           
  4015                           ;main.c: 110: break;
  4016  002358  0012               	return	
  4017  00235A                     l4712:
  4018  00235A  0100               	movlb	0	; () banked
  4019  00235C  5196               	movf	LED@b& (0+255),w,b
  4020                           
  4021                           ; Switch size 1, requested type "space"
  4022                           ; Number of cases is 3, Range of values is 0 to 2
  4023                           ; switch strategies available:
  4024                           ; Name         Instructions Cycles
  4025                           ; simple_byte           10     6 (average)
  4026                           ;	Chosen strategy is simple_byte
  4027  00235E  0A00               	xorlw	0	; case 0
  4028  002360  B4D8               	btfsc	status,2,c
  4029  002362  D7E6               	goto	l597
  4030  002364  0A01               	xorlw	1	; case 1
  4031  002366  B4D8               	btfsc	status,2,c
  4032  002368  D7EA               	goto	l599
  4033  00236A  0A03               	xorlw	3	; case 2
  4034  00236C  A4D8               	btfss	status,2,c
  4035  00236E  0012               	return	
  4036  002370  D7ED               	goto	l600
  4037  002372                     __end_of_LED:
  4038                           	opt stack 0
  4039                           tblptru	equ	0xFF8
  4040                           tblptrh	equ	0xFF7
  4041                           tblptrl	equ	0xFF6
  4042                           tablat	equ	0xFF5
  4043                           prodh	equ	0xFF4
  4044                           prodl	equ	0xFF3
  4045                           intcon	equ	0xFF2
  4046                           intcon2	equ	0xFF1
  4047                           indf0	equ	0xFEF
  4048                           postinc0	equ	0xFEE
  4049                           fsr0h	equ	0xFEA
  4050                           fsr0l	equ	0xFE9
  4051                           wreg	equ	0xFE8
  4052                           indf2	equ	0xFDF
  4053                           postinc2	equ	0xFDE
  4054                           postdec2	equ	0xFDD
  4055                           fsr2h	equ	0xFDA
  4056                           fsr2l	equ	0xFD9
  4057                           status	equ	0xFD8
  4058                           
  4059 ;; *************** function _I2C_init *****************
  4060 ;; Defined at:
  4061 ;;		line 25 in file "../My_header\My_I2C.h"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, status,2
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;Total ram usage:        0 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    5
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_main
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text18
  4090  002746                     __ptext18:
  4091                           	opt stack 0
  4092  002746                     _I2C_init:
  4093                           	opt stack 25
  4094                           
  4095                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
  4096                           
  4097                           ;incstack = 0
  4098  002746  0E80               	movlw	128
  4099  002748  6EC7               	movwf	4039,c	;volatile
  4100                           
  4101                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
  4102  00274A  0E28               	movlw	40
  4103  00274C  6EC6               	movwf	4038,c	;volatile
  4104                           
  4105                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
  4106  00274E  0E13               	movlw	19
  4107  002750  6EC8               	movwf	4040,c	;volatile
  4108                           
  4109                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
  4110  002752  969E               	bcf	3998,3,c	;volatile
  4111                           
  4112                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
  4113  002754  96A1               	bcf	4001,3,c	;volatile
  4114  002756  0012               	return		;funcret
  4115  002758                     __end_of_I2C_init:
  4116                           	opt stack 0
  4117                           tblptru	equ	0xFF8
  4118                           tblptrh	equ	0xFF7
  4119                           tblptrl	equ	0xFF6
  4120                           tablat	equ	0xFF5
  4121                           prodh	equ	0xFF4
  4122                           prodl	equ	0xFF3
  4123                           intcon	equ	0xFF2
  4124                           intcon2	equ	0xFF1
  4125                           indf0	equ	0xFEF
  4126                           postinc0	equ	0xFEE
  4127                           fsr0h	equ	0xFEA
  4128                           fsr0l	equ	0xFE9
  4129                           wreg	equ	0xFE8
  4130                           indf2	equ	0xFDF
  4131                           postinc2	equ	0xFDE
  4132                           postdec2	equ	0xFDD
  4133                           fsr2h	equ	0xFDA
  4134                           fsr2l	equ	0xFD9
  4135                           status	equ	0xFD8
  4136                           
  4137 ;; *************** function _I2C_LCD_init *****************
  4138 ;; Defined at:
  4139 ;;		line 164 in file "../My_header\My_I2C.h"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;		None               void
  4146 ;; Registers used:
  4147 ;;		wreg, status,2, status,0, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4157 ;;Total ram usage:        0 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    9
  4160 ;; This function calls:
  4161 ;;		_Delay_ms
  4162 ;;		_I2C_LCD_Clear
  4163 ;;		_I2C_LCD_Command
  4164 ;; This function is called by:
  4165 ;;		_main
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text19
  4170  0020F2                     __ptext19:
  4171                           	opt stack 0
  4172  0020F2                     _I2C_LCD_init:
  4173                           	opt stack 21
  4174                           
  4175                           ;My_header\My_I2C.h: 165: Delay_ms(40);
  4176                           
  4177                           ;incstack = 0
  4178  0020F2  0E00               	movlw	0
  4179  0020F4  0100               	movlb	0	; () banked
  4180  0020F6  6F96               	movwf	(Delay_ms@ms+1)& (0+255),b
  4181  0020F8  0E28               	movlw	40
  4182  0020FA  6F95               	movwf	Delay_ms@ms& (0+255),b
  4183  0020FC  EC13  F013         	call	_Delay_ms	;wreg free
  4184                           
  4185                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
  4186  002100  0E38               	movlw	56
  4187  002102  ECB3  F012         	call	_I2C_LCD_Command
  4188                           
  4189                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
  4190  002106  0E39               	movlw	57
  4191  002108  ECB3  F012         	call	_I2C_LCD_Command
  4192                           
  4193                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
  4194  00210C  0E14               	movlw	20
  4195  00210E  ECB3  F012         	call	_I2C_LCD_Command
  4196                           
  4197                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
  4198  002112  0E70               	movlw	112
  4199  002114  ECB3  F012         	call	_I2C_LCD_Command
  4200                           
  4201                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
  4202  002118  0E56               	movlw	86
  4203  00211A  ECB3  F012         	call	_I2C_LCD_Command
  4204                           
  4205                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
  4206  00211E  0E6C               	movlw	108
  4207  002120  ECB3  F012         	call	_I2C_LCD_Command
  4208                           
  4209                           ;My_header\My_I2C.h: 172: Delay_ms(200);
  4210  002124  0E00               	movlw	0
  4211  002126  0100               	movlb	0	; () banked
  4212  002128  6F96               	movwf	(Delay_ms@ms+1)& (0+255),b
  4213  00212A  0EC8               	movlw	200
  4214  00212C  6F95               	movwf	Delay_ms@ms& (0+255),b
  4215  00212E  EC13  F013         	call	_Delay_ms	;wreg free
  4216                           
  4217                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
  4218  002132  0E38               	movlw	56
  4219  002134  ECB3  F012         	call	_I2C_LCD_Command
  4220                           
  4221                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
  4222  002138  0E0C               	movlw	12
  4223  00213A  ECB3  F012         	call	_I2C_LCD_Command
  4224                           
  4225                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
  4226  00213E  0E06               	movlw	6
  4227  002140  ECB3  F012         	call	_I2C_LCD_Command
  4228                           
  4229                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
  4230  002144  EC7F  F013         	call	_I2C_LCD_Clear	;wreg free
  4231  002148  0012               	return		;funcret
  4232  00214A                     __end_of_I2C_LCD_init:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           prodh	equ	0xFF4
  4239                           prodl	equ	0xFF3
  4240                           intcon	equ	0xFF2
  4241                           intcon2	equ	0xFF1
  4242                           indf0	equ	0xFEF
  4243                           postinc0	equ	0xFEE
  4244                           fsr0h	equ	0xFEA
  4245                           fsr0l	equ	0xFE9
  4246                           wreg	equ	0xFE8
  4247                           indf2	equ	0xFDF
  4248                           postinc2	equ	0xFDE
  4249                           postdec2	equ	0xFDD
  4250                           fsr2h	equ	0xFDA
  4251                           fsr2l	equ	0xFD9
  4252                           status	equ	0xFD8
  4253                           
  4254 ;; *************** function _I2C_LCD_Clear *****************
  4255 ;; Defined at:
  4256 ;;		line 107 in file "../My_header\My_I2C.h"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4272 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;Total ram usage:        1 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    8
  4277 ;; This function calls:
  4278 ;;		_I2C_LCD_Command
  4279 ;; This function is called by:
  4280 ;;		_I2C_LCD_init
  4281 ;;		_display
  4282 ;;		_main
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text20
  4287  0026FE                     __ptext20:
  4288                           	opt stack 0
  4289  0026FE                     _I2C_LCD_Clear:
  4290                           	opt stack 21
  4291                           
  4292                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
  4293                           
  4294                           ;incstack = 0
  4295  0026FE  0E01               	movlw	1
  4296  002700  ECB3  F012         	call	_I2C_LCD_Command
  4297                           
  4298                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  4299  002704  0E12               	movlw	18
  4300  002706  0100               	movlb	0	; () banked
  4301  002708  6F9B               	movwf	??_I2C_LCD_Clear& (0+255),b
  4302  00270A  0E23               	movlw	35
  4303  00270C                     u5267:
  4304  00270C  2EE8               	decfsz	wreg,f,c
  4305  00270E  D7FE               	goto	u5267
  4306  002710  2F9B               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  4307  002712  D7FC               	goto	u5267
  4308  002714  F000               	nop	
  4309  002716  0012               	return		;funcret
  4310  002718                     __end_of_I2C_LCD_Clear:
  4311                           	opt stack 0
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           intcon	equ	0xFF2
  4319                           intcon2	equ	0xFF1
  4320                           indf0	equ	0xFEF
  4321                           postinc0	equ	0xFEE
  4322                           fsr0h	equ	0xFEA
  4323                           fsr0l	equ	0xFE9
  4324                           wreg	equ	0xFE8
  4325                           indf2	equ	0xFDF
  4326                           postinc2	equ	0xFDE
  4327                           postdec2	equ	0xFDD
  4328                           fsr2h	equ	0xFDA
  4329                           fsr2l	equ	0xFD9
  4330                           status	equ	0xFD8
  4331                           
  4332 ;; *************** function _I2C_LCD_Command *****************
  4333 ;; Defined at:
  4334 ;;		line 94 in file "../My_header\My_I2C.h"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  c               1    wreg     unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  c               1    4[BANK0 ] unsigned char 
  4339 ;;  ans             1    5[BANK0 ] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;		None               void
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4352 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4353 ;;Total ram usage:        2 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    7
  4356 ;; This function calls:
  4357 ;;		_I2C_Send
  4358 ;;		_I2C_Start
  4359 ;;		_I2C_Stop
  4360 ;; This function is called by:
  4361 ;;		_I2C_LCD_Clear
  4362 ;;		_I2C_LCD_SetCursor
  4363 ;;		_I2C_LCD_init
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text21
  4368  002566                     __ptext21:
  4369                           	opt stack 0
  4370  002566                     _I2C_LCD_Command:
  4371                           	opt stack 21
  4372                           
  4373                           ;incstack = 0
  4374                           ;I2C_LCD_Command@c stored from wreg
  4375  002566  0100               	movlb	0	; () banked
  4376  002568  6F99               	movwf	I2C_LCD_Command@c& (0+255),b
  4377                           
  4378                           ;My_header\My_I2C.h: 95: uint8_t ans;
  4379                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
  4380  00256A  0E00               	movlw	0
  4381  00256C  0100               	movlb	0	; () banked
  4382  00256E  6F97               	movwf	I2C_Start@rw& (0+255),b
  4383  002570  0E3E               	movlw	62
  4384  002572  ECCF  F012         	call	_I2C_Start
  4385  002576  0100               	movlb	0	; () banked
  4386  002578  6F9A               	movwf	I2C_LCD_Command@ans& (0+255),b
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;My_header\My_I2C.h: 98: if (ans == 0) {
  4390  00257A  0100               	movlb	0	; () banked
  4391  00257C  519A               	movf	I2C_LCD_Command@ans& (0+255),w,b
  4392  00257E  0100               	movlb	0	; () banked
  4393  002580  A4D8               	btfss	status,2,c
  4394  002582  D007               	goto	l331
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
  4398  002584  0E80               	movlw	128
  4399  002586  EC8C  F013         	call	_I2C_Send
  4400                           
  4401                           ;My_header\My_I2C.h: 101: I2C_Send(c);
  4402  00258A  0100               	movlb	0	; () banked
  4403  00258C  5199               	movf	I2C_LCD_Command@c& (0+255),w,b
  4404  00258E  EC8C  F013         	call	_I2C_Send
  4405  002592                     l331:
  4406                           
  4407                           ;My_header\My_I2C.h: 102: }
  4408                           ;My_header\My_I2C.h: 103: I2C_Stop();
  4409  002592  ECAC  F013         	call	_I2C_Stop	;wreg free
  4410                           
  4411                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
  4412  002596  0E68               	movlw	104
  4413  002598                     u5277:
  4414  002598  2EE8               	decfsz	wreg,f,c
  4415  00259A  D7FE               	goto	u5277
  4416  00259C  0012               	return		;funcret
  4417  00259E                     __end_of_I2C_LCD_Command:
  4418                           	opt stack 0
  4419                           tblptru	equ	0xFF8
  4420                           tblptrh	equ	0xFF7
  4421                           tblptrl	equ	0xFF6
  4422                           tablat	equ	0xFF5
  4423                           prodh	equ	0xFF4
  4424                           prodl	equ	0xFF3
  4425                           intcon	equ	0xFF2
  4426                           intcon2	equ	0xFF1
  4427                           indf0	equ	0xFEF
  4428                           postinc0	equ	0xFEE
  4429                           fsr0h	equ	0xFEA
  4430                           fsr0l	equ	0xFE9
  4431                           wreg	equ	0xFE8
  4432                           indf2	equ	0xFDF
  4433                           postinc2	equ	0xFDE
  4434                           postdec2	equ	0xFDD
  4435                           fsr2h	equ	0xFDA
  4436                           fsr2l	equ	0xFD9
  4437                           status	equ	0xFD8
  4438                           
  4439 ;; *************** function _I2C_Stop *****************
  4440 ;; Defined at:
  4441 ;;		line 59 in file "../My_header\My_I2C.h"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;		None               void
  4448 ;; Registers used:
  4449 ;;		wreg, status,2, status,0, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4459 ;;Total ram usage:        0 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    6
  4462 ;; This function calls:
  4463 ;;		_I2C_IdleCheck
  4464 ;; This function is called by:
  4465 ;;		_I2C_LCD_Command
  4466 ;;		_I2C_LCD_Putc
  4467 ;;		_I2C_LCD_Puts
  4468 ;;		_I2C_LCD_CreateChar
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text22
  4473  002758                     __ptext22:
  4474                           	opt stack 0
  4475  002758                     _I2C_Stop:
  4476                           	opt stack 21
  4477                           
  4478                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
  4479                           
  4480                           ;incstack = 0
  4481  002758  0E05               	movlw	5
  4482  00275A  EC70  F013         	call	_I2C_IdleCheck
  4483                           
  4484                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
  4485  00275E  84C5               	bsf	4037,2,c	;volatile
  4486  002760  0012               	return		;funcret
  4487  002762                     __end_of_I2C_Stop:
  4488                           	opt stack 0
  4489                           tblptru	equ	0xFF8
  4490                           tblptrh	equ	0xFF7
  4491                           tblptrl	equ	0xFF6
  4492                           tablat	equ	0xFF5
  4493                           prodh	equ	0xFF4
  4494                           prodl	equ	0xFF3
  4495                           intcon	equ	0xFF2
  4496                           intcon2	equ	0xFF1
  4497                           indf0	equ	0xFEF
  4498                           postinc0	equ	0xFEE
  4499                           fsr0h	equ	0xFEA
  4500                           fsr0l	equ	0xFE9
  4501                           wreg	equ	0xFE8
  4502                           indf2	equ	0xFDF
  4503                           postinc2	equ	0xFDE
  4504                           postdec2	equ	0xFDD
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function _I2C_Start *****************
  4510 ;; Defined at:
  4511 ;;		line 35 in file "../My_header\My_I2C.h"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  adrs            1    wreg     unsigned char 
  4514 ;;  rw              1    2[BANK0 ] unsigned char 
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  adrs            1    3[BANK0 ] unsigned char 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      unsigned char 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4526 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4530 ;;Total ram usage:        2 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    6
  4533 ;; This function calls:
  4534 ;;		_I2C_IdleCheck
  4535 ;; This function is called by:
  4536 ;;		_I2C_LCD_Command
  4537 ;;		_I2C_LCD_Putc
  4538 ;;		_I2C_LCD_Puts
  4539 ;;		_I2C_LCD_CreateChar
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text23
  4544  00259E                     __ptext23:
  4545                           	opt stack 0
  4546  00259E                     _I2C_Start:
  4547                           	opt stack 21
  4548                           
  4549                           ;incstack = 0
  4550                           ;I2C_Start@adrs stored from wreg
  4551  00259E  0100               	movlb	0	; () banked
  4552  0025A0  6F98               	movwf	I2C_Start@adrs& (0+255),b
  4553                           
  4554                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
  4555  0025A2  0E05               	movlw	5
  4556  0025A4  EC70  F013         	call	_I2C_IdleCheck
  4557                           
  4558                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
  4559  0025A8  80C5               	bsf	4037,0,c	;volatile
  4560                           
  4561                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
  4562  0025AA  0E05               	movlw	5
  4563  0025AC  EC70  F013         	call	_I2C_IdleCheck
  4564                           
  4565                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
  4566  0025B0  969E               	bcf	3998,3,c	;volatile
  4567                           
  4568                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  4569  0025B2  0100               	movlb	0	; () banked
  4570  0025B4  5198               	movf	I2C_Start@adrs& (0+255),w,b
  4571  0025B6  2598               	addwf	I2C_Start@adrs& (0+255),w,b
  4572  0025B8  0100               	movlb	0	; () banked
  4573  0025BA  2597               	addwf	I2C_Start@rw& (0+255),w,b
  4574  0025BC  6EC9               	movwf	4041,c	;volatile
  4575  0025BE                     l307:
  4576  0025BE  A69E               	btfss	3998,3,c	;volatile
  4577  0025C0  D7FE               	goto	l307
  4578                           
  4579                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
  4580  0025C2  ACC5               	btfss	4037,6,c	;volatile
  4581  0025C4  D002               	goto	u4290
  4582  0025C6  0E01               	movlw	1
  4583  0025C8  0012               	return	
  4584  0025CA                     u4290:
  4585  0025CA  0E00               	movlw	0
  4586  0025CC  0012               	return	
  4587  0025CE                     __end_of_I2C_Start:
  4588                           	opt stack 0
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           prodh	equ	0xFF4
  4594                           prodl	equ	0xFF3
  4595                           intcon	equ	0xFF2
  4596                           intcon2	equ	0xFF1
  4597                           indf0	equ	0xFEF
  4598                           postinc0	equ	0xFEE
  4599                           fsr0h	equ	0xFEA
  4600                           fsr0l	equ	0xFE9
  4601                           wreg	equ	0xFE8
  4602                           indf2	equ	0xFDF
  4603                           postinc2	equ	0xFDE
  4604                           postdec2	equ	0xFDD
  4605                           fsr2h	equ	0xFDA
  4606                           fsr2l	equ	0xFD9
  4607                           status	equ	0xFD8
  4608                           
  4609 ;; *************** function _I2C_Send *****************
  4610 ;; Defined at:
  4611 ;;		line 65 in file "../My_header\My_I2C.h"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  data            1    wreg     unsigned char 
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;  data            1    2[BANK0 ] unsigned char 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      unsigned char 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0, cstack
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4626 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4628 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4629 ;;Total ram usage:        1 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; Hardware stack levels required when called:    6
  4632 ;; This function calls:
  4633 ;;		_I2C_IdleCheck
  4634 ;; This function is called by:
  4635 ;;		_I2C_LCD_Command
  4636 ;;		_I2C_LCD_Putc
  4637 ;;		_I2C_LCD_Puts
  4638 ;;		_I2C_LCD_CreateChar
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text24
  4643  002718                     __ptext24:
  4644                           	opt stack 0
  4645  002718                     _I2C_Send:
  4646                           	opt stack 21
  4647                           
  4648                           ;incstack = 0
  4649                           ;I2C_Send@data stored from wreg
  4650  002718  0100               	movlb	0	; () banked
  4651  00271A  6F97               	movwf	I2C_Send@data& (0+255),b
  4652                           
  4653                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
  4654  00271C  0E05               	movlw	5
  4655  00271E  EC70  F013         	call	_I2C_IdleCheck
  4656                           
  4657                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
  4658  002722  969E               	bcf	3998,3,c	;volatile
  4659                           
  4660                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
  4661  002724  C097  FFC9         	movff	I2C_Send@data,4041	;volatile
  4662  002728                     l322:
  4663  002728  A69E               	btfss	3998,3,c	;volatile
  4664  00272A  D7FE               	goto	l322
  4665                           
  4666                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
  4667                           ;	Return value of _I2C_Send is never used
  4668  00272C  50C5               	movf	4037,w,c	;volatile
  4669  00272E  0012               	return	
  4670  002730                     __end_of_I2C_Send:
  4671                           	opt stack 0
  4672                           tblptru	equ	0xFF8
  4673                           tblptrh	equ	0xFF7
  4674                           tblptrl	equ	0xFF6
  4675                           tablat	equ	0xFF5
  4676                           prodh	equ	0xFF4
  4677                           prodl	equ	0xFF3
  4678                           intcon	equ	0xFF2
  4679                           intcon2	equ	0xFF1
  4680                           indf0	equ	0xFEF
  4681                           postinc0	equ	0xFEE
  4682                           fsr0h	equ	0xFEA
  4683                           fsr0l	equ	0xFE9
  4684                           wreg	equ	0xFE8
  4685                           indf2	equ	0xFDF
  4686                           postinc2	equ	0xFDE
  4687                           postdec2	equ	0xFDD
  4688                           fsr2h	equ	0xFDA
  4689                           fsr2l	equ	0xFD9
  4690                           status	equ	0xFD8
  4691                           
  4692 ;; *************** function _I2C_IdleCheck *****************
  4693 ;; Defined at:
  4694 ;;		line 21 in file "../My_header\My_I2C.h"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  mask            1    wreg     unsigned char 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  mask            1    1[BANK0 ] unsigned char 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;		None               void
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4711 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4712 ;;Total ram usage:        2 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    5
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_I2C_Start
  4719 ;;		_I2C_Stop
  4720 ;;		_I2C_Send
  4721 ;;		_I2C_rStart
  4722 ;;		_I2C_Receive
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text25
  4727  0026E0                     __ptext25:
  4728                           	opt stack 0
  4729  0026E0                     _I2C_IdleCheck:
  4730                           	opt stack 21
  4731                           
  4732                           ;incstack = 0
  4733                           ;I2C_IdleCheck@mask stored from wreg
  4734  0026E0  0100               	movlb	0	; () banked
  4735  0026E2  6F96               	movwf	I2C_IdleCheck@mask& (0+255),b
  4736  0026E4                     l4260:
  4737  0026E4  50C7               	movf	4039,w,c	;volatile
  4738  0026E6  0100               	movlb	0	; () banked
  4739  0026E8  1596               	andwf	I2C_IdleCheck@mask& (0+255),w,b
  4740  0026EA  0100               	movlb	0	; () banked
  4741  0026EC  6F95               	movwf	??_I2C_IdleCheck& (0+255),b
  4742  0026EE  50C5               	movf	4037,w,c	;volatile
  4743  0026F0  0B1F               	andlw	31
  4744  0026F2  0100               	movlb	0	; () banked
  4745  0026F4  1195               	iorwf	??_I2C_IdleCheck& (0+255),w,b
  4746  0026F6  0900               	iorlw	0
  4747  0026F8  B4D8               	btfsc	status,2,c
  4748  0026FA  0012               	return	
  4749  0026FC  D7F3               	goto	l4260
  4750  0026FE                     __end_of_I2C_IdleCheck:
  4751                           	opt stack 0
  4752                           tblptru	equ	0xFF8
  4753                           tblptrh	equ	0xFF7
  4754                           tblptrl	equ	0xFF6
  4755                           tablat	equ	0xFF5
  4756                           prodh	equ	0xFF4
  4757                           prodl	equ	0xFF3
  4758                           intcon	equ	0xFF2
  4759                           intcon2	equ	0xFF1
  4760                           indf0	equ	0xFEF
  4761                           postinc0	equ	0xFEE
  4762                           fsr0h	equ	0xFEA
  4763                           fsr0l	equ	0xFE9
  4764                           wreg	equ	0xFE8
  4765                           indf2	equ	0xFDF
  4766                           postinc2	equ	0xFDE
  4767                           postdec2	equ	0xFDD
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function _Delay_ms *****************
  4773 ;; Defined at:
  4774 ;;		line 333 in file "../My_header\My_header.h"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  ms              2    0[BANK0 ] unsigned int 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;		None
  4779 ;; Return value:  Size  Location     Type
  4780 ;;		None               void
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4788 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4790 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4791 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4792 ;;Total ram usage:        3 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    5
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_I2C_LCD_init
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text26
  4803  002626                     __ptext26:
  4804                           	opt stack 0
  4805  002626                     _Delay_ms:
  4806                           	opt stack 24
  4807                           
  4808                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;incstack = 0
  4812  002626  D009               	goto	l4356
  4813  002628                     l4354:
  4814  002628  0E10               	movlw	16
  4815  00262A  0100               	movlb	0	; () banked
  4816  00262C  6F97               	movwf	??_Delay_ms& (0+255),b
  4817  00262E  0E94               	movlw	148
  4818  002630                     u5287:
  4819  002630  2EE8               	decfsz	wreg,f,c
  4820  002632  D7FE               	goto	u5287
  4821  002634  2F97               	decfsz	??_Delay_ms& (0+255),f,b
  4822  002636  D7FC               	goto	u5287
  4823  002638  D000               	nop2	
  4824  00263A                     l4356:
  4825  00263A  0100               	movlb	0	; () banked
  4826  00263C  0795               	decf	Delay_ms@ms& (0+255),f,b
  4827  00263E  A0D8               	btfss	status,0,c
  4828  002640  0796               	decf	(Delay_ms@ms+1)& (0+255),f,b
  4829  002642  0100               	movlb	0	; () banked
  4830  002644  2995               	incf	Delay_ms@ms& (0+255),w,b
  4831  002646  E1F0               	bnz	l4354
  4832  002648  0100               	movlb	0	; () banked
  4833  00264A  2996               	incf	(Delay_ms@ms+1)& (0+255),w,b
  4834  00264C  B4D8               	btfsc	status,2,c
  4835  00264E  0012               	return	
  4836  002650  D7EB               	goto	l4354
  4837  002652                     __end_of_Delay_ms:
  4838                           	opt stack 0
  4839                           tblptru	equ	0xFF8
  4840                           tblptrh	equ	0xFF7
  4841                           tblptrl	equ	0xFF6
  4842                           tablat	equ	0xFF5
  4843                           prodh	equ	0xFF4
  4844                           prodl	equ	0xFF3
  4845                           intcon	equ	0xFF2
  4846                           intcon2	equ	0xFF1
  4847                           indf0	equ	0xFEF
  4848                           postinc0	equ	0xFEE
  4849                           fsr0h	equ	0xFEA
  4850                           fsr0l	equ	0xFE9
  4851                           wreg	equ	0xFE8
  4852                           indf2	equ	0xFDF
  4853                           postinc2	equ	0xFDE
  4854                           postdec2	equ	0xFDD
  4855                           fsr2h	equ	0xFDA
  4856                           fsr2l	equ	0xFD9
  4857                           status	equ	0xFD8
  4858                           
  4859 ;; *************** function _ADC_init *****************
  4860 ;; Defined at:
  4861 ;;		line 149 in file "../My_header\My_header.h"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;  p_ref           1    wreg     unsigned char 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  p_ref           1    0[BANK0 ] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;		None               void
  4868 ;; Registers used:
  4869 ;;		wreg, status,2
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;Total ram usage:        1 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    5
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           	psect	text27
  4890  0026C0                     __ptext27:
  4891                           	opt stack 0
  4892  0026C0                     _ADC_init:
  4893                           	opt stack 25
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;incstack = 0
  4897                           ;ADC_init@p_ref stored from wreg
  4898  0026C0  0100               	movlb	0	; () banked
  4899  0026C2  6F95               	movwf	ADC_init@p_ref& (0+255),b
  4900                           
  4901                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  4902  0026C4  9EC2               	bcf	4034,7,c	;volatile
  4903                           
  4904                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  4905  0026C6  0100               	movlb	0	; () banked
  4906  0026C8  B195               	btfsc	ADC_init@p_ref& (0+255),0,b
  4907  0026CA  D002               	bra	u4575
  4908  0026CC  9CC2               	bcf	4034,6,c	;volatile
  4909  0026CE  D001               	bra	u4576
  4910  0026D0                     u4575:
  4911  0026D0  8CC2               	bsf	4034,6,c	;volatile
  4912  0026D2                     u4576:
  4913                           
  4914                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  4915  0026D2  8EC1               	bsf	4033,7,c	;volatile
  4916                           
  4917                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  4918  0026D4  9CC1               	bcf	4033,6,c	;volatile
  4919                           
  4920                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  4921  0026D6  50C1               	movf	4033,w,c	;volatile
  4922  0026D8  0BF8               	andlw	-8
  4923  0026DA  0906               	iorlw	6
  4924  0026DC  6EC1               	movwf	4033,c	;volatile
  4925  0026DE  0012               	return		;funcret
  4926  0026E0                     __end_of_ADC_init:
  4927                           	opt stack 0
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           intcon	equ	0xFF2
  4935                           intcon2	equ	0xFF1
  4936                           indf0	equ	0xFEF
  4937                           postinc0	equ	0xFEE
  4938                           fsr0h	equ	0xFEA
  4939                           fsr0l	equ	0xFE9
  4940                           wreg	equ	0xFE8
  4941                           indf2	equ	0xFDF
  4942                           postinc2	equ	0xFDE
  4943                           postdec2	equ	0xFDD
  4944                           fsr2h	equ	0xFDA
  4945                           fsr2l	equ	0xFD9
  4946                           status	equ	0xFD8
  4947                           
  4948 ;; *************** function _ISR *****************
  4949 ;; Defined at:
  4950 ;;		line 230 in file "main.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  i               1   38[COMRAM] unsigned char 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;		None               void
  4957 ;; Registers used:
  4958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4966 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4967 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4968 ;;Total ram usage:       17 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    4
  4971 ;; This function calls:
  4972 ;;		_Auto_cut
  4973 ;;		_UART_ISR
  4974 ;;		_button_timer_interrupt
  4975 ;;		_lchika
  4976 ;;		_tx_send
  4977 ;;		_tx_sendn
  4978 ;;		_tx_sends
  4979 ;;		i2___lldiv
  4980 ;; This function is called by:
  4981 ;;		Interrupt level 2
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	intcode
  4986  000008                     __pintcode:
  4987                           	opt stack 0
  4988  000008                     _ISR:
  4989                           	opt stack 21
  4990                           
  4991                           ;incstack = 0
  4992  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4993  00000A  CFFA F019          	movff	pclath,??_ISR+2
  4994  00000E  CFFB F01A          	movff	pclatu,??_ISR+3
  4995  000012  CFE9 F01B          	movff	fsr0l,??_ISR+4
  4996  000016  CFEA F01C          	movff	fsr0h,??_ISR+5
  4997  00001A  CFE1 F01D          	movff	fsr1l,??_ISR+6
  4998  00001E  CFE2 F01E          	movff	fsr1h,??_ISR+7
  4999  000022  CFD9 F01F          	movff	fsr2l,??_ISR+8
  5000  000026  CFDA F020          	movff	fsr2h,??_ISR+9
  5001  00002A  CFF3 F021          	movff	prodl,??_ISR+10
  5002  00002E  CFF4 F022          	movff	prodh,??_ISR+11
  5003  000032  CFF6 F023          	movff	tblptrl,??_ISR+12
  5004  000036  CFF7 F024          	movff	tblptrh,??_ISR+13
  5005  00003A  CFF8 F025          	movff	tblptru,??_ISR+14
  5006  00003E  CFF5 F026          	movff	tablat,??_ISR+15
  5007                           
  5008                           ;main.c: 231: UART_ISR();
  5009  000042  EC70  F011         	call	_UART_ISR	;wreg free
  5010                           
  5011                           ;main.c: 232: if (INTCONbits.T0IF) {
  5012  000046  A4F2               	btfss	intcon,2,c	;volatile
  5013  000048  D00F               	goto	i2l4078
  5014                           
  5015                           ;main.c: 233: INTCONbits.T0IF = 0;
  5016  00004A  94F2               	bcf	intcon,2,c	;volatile
  5017                           
  5018                           ;main.c: 234: static uint16_t cnt_t0;
  5019                           ;main.c: 235: if (cnt_t0) {
  5020  00004C  5034               	movf	ISR@cnt_t0,w,c
  5021  00004E  1035               	iorwf	ISR@cnt_t0+1,w,c
  5022  000050  B4D8               	btfsc	status,2,c
  5023  000052  D004               	goto	i2l4074
  5024                           
  5025                           ;main.c: 236: cnt_t0--;
  5026  000054  0634               	decf	ISR@cnt_t0,f,c
  5027  000056  A0D8               	btfss	status,0,c
  5028  000058  0635               	decf	ISR@cnt_t0+1,f,c
  5029                           
  5030                           ;main.c: 237: } else {
  5031  00005A  D006               	goto	i2l4078
  5032  00005C                     i2l4074:
  5033                           
  5034                           ;main.c: 238: cnt_t0 = 120;
  5035  00005C  0E00               	movlw	0
  5036  00005E  6E35               	movwf	ISR@cnt_t0+1,c
  5037  000060  0E78               	movlw	120
  5038  000062  6E34               	movwf	ISR@cnt_t0,c
  5039                           
  5040                           ;main.c: 239: lchika();
  5041  000064  EC68  F00C         	call	_lchika	;wreg free
  5042  000068                     i2l4078:
  5043                           
  5044                           ;main.c: 240: }
  5045                           ;main.c: 241: }
  5046                           ;main.c: 242: if (PIR1bits.TMR1IF) {
  5047  000068  A09E               	btfss	3998,0,c	;volatile
  5048  00006A  D073               	goto	i2l671
  5049                           
  5050                           ;main.c: 243: PIR1bits.TMR1IF = 0;
  5051  00006C  909E               	bcf	3998,0,c	;volatile
  5052                           
  5053                           ;main.c: 244: TMR1H = 0x80;
  5054  00006E  0E80               	movlw	128
  5055  000070  6ECF               	movwf	4047,c	;volatile
  5056                           
  5057                           ;main.c: 245: for (uint8_t i = 0; i < 3; i++) {
  5058  000072  0E00               	movlw	0
  5059  000074  6E27               	movwf	ISR@i,c
  5060  000076                     i2l4084:
  5061  000076  0E02               	movlw	2
  5062  000078  6427               	cpfsgt	ISR@i,c
  5063  00007A  D001               	goto	i2l4088
  5064  00007C  D06A               	goto	i2l671
  5065  00007E                     i2l4088:
  5066                           
  5067                           ;main.c: 246: tx_sends("PORT");
  5068  00007E  0E6C               	movlw	low STR_13
  5069  000080  6E10               	movwf	tx_sends@asciicode,c
  5070  000082  0E0F               	movlw	high STR_13
  5071  000084  6E11               	movwf	tx_sends@asciicode+1,c
  5072  000086  EC1E  F012         	call	_tx_sends	;wreg free
  5073                           
  5074                           ;main.c: 247: tx_send('0' + i + 1);
  5075  00008A  5027               	movf	ISR@i,w,c
  5076  00008C  0F31               	addlw	49
  5077  00008E  EC98  F013         	call	_tx_send
  5078                           
  5079                           ;main.c: 248: tx_send('=');
  5080  000092  0E3D               	movlw	61
  5081  000094  EC98  F013         	call	_tx_send
  5082                           
  5083                           ;main.c: 249: tx_sendn(I[i], 6);
  5084  000098  5027               	movf	ISR@i,w,c
  5085  00009A  0D02               	mullw	2
  5086  00009C  0E28               	movlw	low _I
  5087  00009E  24F3               	addwf	prodl,w,c
  5088  0000A0  6ED9               	movwf	fsr2l,c
  5089  0000A2  0E00               	movlw	high _I
  5090  0000A4  20F4               	addwfc	prodh,w,c
  5091  0000A6  6EDA               	movwf	fsr2h,c
  5092  0000A8  CFDE F011          	movff	postinc2,tx_sendn@value
  5093  0000AC  CFDD F012          	movff	postdec2,tx_sendn@value+1
  5094  0000B0  0E06               	movlw	6
  5095  0000B2  6E13               	movwf	tx_sendn@digits,c
  5096  0000B4  EC16  F010         	call	_tx_sendn	;wreg free
  5097                           
  5098                           ;main.c: 250: tx_sends("\n\n");
  5099  0000B8  0E7A               	movlw	low STR_14
  5100  0000BA  6E10               	movwf	tx_sends@asciicode,c
  5101  0000BC  0E0F               	movlw	high STR_14
  5102  0000BE  6E11               	movwf	tx_sends@asciicode+1,c
  5103  0000C0  EC1E  F012         	call	_tx_sends	;wreg free
  5104                           
  5105                           ;main.c: 252: ss[i] += I[i];
  5106  0000C4  5027               	movf	ISR@i,w,c
  5107  0000C6  0D02               	mullw	2
  5108  0000C8  0E28               	movlw	low _I
  5109  0000CA  24F3               	addwf	prodl,w,c
  5110  0000CC  6ED9               	movwf	fsr2l,c
  5111  0000CE  0E00               	movlw	high _I
  5112  0000D0  20F4               	addwfc	prodh,w,c
  5113  0000D2  6EDA               	movwf	fsr2h,c
  5114  0000D4  CFDE F017          	movff	postinc2,??_ISR
  5115  0000D8  CFDD F018          	movff	postdec2,??_ISR+1
  5116  0000DC  5027               	movf	ISR@i,w,c
  5117  0000DE  0D04               	mullw	4
  5118  0000E0  0E6C               	movlw	low _ss
  5119  0000E2  24F3               	addwf	prodl,w,c
  5120  0000E4  6ED9               	movwf	fsr2l,c
  5121  0000E6  0E00               	movlw	high _ss
  5122  0000E8  20F4               	addwfc	prodh,w,c
  5123  0000EA  6EDA               	movwf	fsr2h,c
  5124  0000EC  5017               	movf	??_ISR,w,c
  5125  0000EE  26DE               	addwf	postinc2,f,c
  5126  0000F0  5018               	movf	??_ISR+1,w,c
  5127  0000F2  22DE               	addwfc	postinc2,f,c
  5128  0000F4  0E00               	movlw	0
  5129  0000F6  22DE               	addwfc	postinc2,f,c
  5130  0000F8  22DE               	addwfc	postinc2,f,c
  5131                           
  5132                           ;main.c: 253: S[i] = ss[i] / 3600;
  5133  0000FA  5027               	movf	ISR@i,w,c
  5134  0000FC  0D04               	mullw	4
  5135  0000FE  0E6C               	movlw	low _ss
  5136  000100  24F3               	addwf	prodl,w,c
  5137  000102  6ED9               	movwf	fsr2l,c
  5138  000104  0E00               	movlw	high _ss
  5139  000106  20F4               	addwfc	prodh,w,c
  5140  000108  6EDA               	movwf	fsr2h,c
  5141  00010A  CFDE F001          	movff	postinc2,i2___lldiv@dividend
  5142  00010E  CFDE F002          	movff	postinc2,i2___lldiv@dividend+1
  5143  000112  CFDE F003          	movff	postinc2,i2___lldiv@dividend+2
  5144  000116  CFDE F004          	movff	postinc2,i2___lldiv@dividend+3
  5145  00011A  0E10               	movlw	16
  5146  00011C  6E05               	movwf	i2___lldiv@divisor,c
  5147  00011E  0E0E               	movlw	14
  5148  000120  6E06               	movwf	i2___lldiv@divisor+1,c
  5149  000122  0E00               	movlw	0
  5150  000124  6E07               	movwf	i2___lldiv@divisor+2,c
  5151  000126  0E00               	movlw	0
  5152  000128  6E08               	movwf	i2___lldiv@divisor+3,c
  5153  00012A  EC99  F00F         	call	i2___lldiv	;wreg free
  5154  00012E  5027               	movf	ISR@i,w,c
  5155  000130  0D04               	mullw	4
  5156  000132  0E60               	movlw	low _S
  5157  000134  24F3               	addwf	prodl,w,c
  5158  000136  6ED9               	movwf	fsr2l,c
  5159  000138  0E00               	movlw	high _S
  5160  00013A  20F4               	addwfc	prodh,w,c
  5161  00013C  6EDA               	movwf	fsr2h,c
  5162  00013E  C001  FFDE         	movff	?i2___lldiv,postinc2
  5163  000142  C002  FFDE         	movff	?i2___lldiv+1,postinc2
  5164  000146  C003  FFDE         	movff	?i2___lldiv+2,postinc2
  5165  00014A  C004  FFDE         	movff	?i2___lldiv+3,postinc2
  5166  00014E  2A27               	incf	ISR@i,f,c
  5167  000150  D792               	goto	i2l4084
  5168  000152                     i2l671:
  5169                           
  5170                           ;main.c: 254: }
  5171                           ;main.c: 255: }
  5172                           ;main.c: 256: if (PIR2bits.TMR3IF) {
  5173  000152  A2A1               	btfss	4001,1,c	;volatile
  5174  000154  D036               	goto	i2l675
  5175                           
  5176                           ;main.c: 257: PIR2bits.TMR3IF = 0;
  5177  000156  92A1               	bcf	4001,1,c	;volatile
  5178                           
  5179                           ;main.c: 258: button_timer_interrupt(&sw, !PORTAbits.RA3);
  5180  000158  0ED8               	movlw	low _sw
  5181  00015A  6E01               	movwf	button_timer_interrupt@bt,c
  5182  00015C  0E01               	movlw	high _sw
  5183  00015E  6E02               	movwf	button_timer_interrupt@bt+1,c
  5184  000160  B680               	btfsc	3968,3,c	;volatile
  5185  000162  D002               	goto	i2u400_40
  5186  000164  0E01               	movlw	1
  5187  000166  D001               	goto	i2u401_40
  5188  000168                     i2u400_40:
  5189  000168  0E00               	movlw	0
  5190  00016A                     i2u401_40:
  5191  00016A  6E03               	movwf	button_timer_interrupt@sw_value,c
  5192  00016C  ECE7  F009         	call	_button_timer_interrupt	;wreg free
  5193                           
  5194                           ;main.c: 259: button_timer_interrupt(&sw0, !PORTAbits.RA0);
  5195  000170  0E46               	movlw	low _sw0
  5196  000172  6E01               	movwf	button_timer_interrupt@bt,c
  5197  000174  0E00               	movlw	high _sw0
  5198  000176  6E02               	movwf	button_timer_interrupt@bt+1,c
  5199  000178  B080               	btfsc	3968,0,c	;volatile
  5200  00017A  D002               	goto	i2u402_40
  5201  00017C  0E01               	movlw	1
  5202  00017E  D001               	goto	i2u403_40
  5203  000180                     i2u402_40:
  5204  000180  0E00               	movlw	0
  5205  000182                     i2u403_40:
  5206  000182  6E03               	movwf	button_timer_interrupt@sw_value,c
  5207  000184  ECE7  F009         	call	_button_timer_interrupt	;wreg free
  5208                           
  5209                           ;main.c: 260: button_timer_interrupt(&sw1, !PORTAbits.RA1);
  5210  000188  0E4A               	movlw	low _sw1
  5211  00018A  6E01               	movwf	button_timer_interrupt@bt,c
  5212  00018C  0E00               	movlw	high _sw1
  5213  00018E  6E02               	movwf	button_timer_interrupt@bt+1,c
  5214  000190  B280               	btfsc	3968,1,c	;volatile
  5215  000192  D002               	goto	i2u404_40
  5216  000194  0E01               	movlw	1
  5217  000196  D001               	goto	i2u405_40
  5218  000198                     i2u404_40:
  5219  000198  0E00               	movlw	0
  5220  00019A                     i2u405_40:
  5221  00019A  6E03               	movwf	button_timer_interrupt@sw_value,c
  5222  00019C  ECE7  F009         	call	_button_timer_interrupt	;wreg free
  5223                           
  5224                           ;main.c: 261: button_timer_interrupt(&sw2, !PORTAbits.RA2);
  5225  0001A0  0E91               	movlw	low _sw2
  5226  0001A2  6E01               	movwf	button_timer_interrupt@bt,c
  5227  0001A4  0E00               	movlw	high _sw2
  5228  0001A6  6E02               	movwf	button_timer_interrupt@bt+1,c
  5229  0001A8  B480               	btfsc	3968,2,c	;volatile
  5230  0001AA  D002               	goto	i2u406_40
  5231  0001AC  0E01               	movlw	1
  5232  0001AE  D001               	goto	i2u407_40
  5233  0001B0                     i2u406_40:
  5234  0001B0  0E00               	movlw	0
  5235  0001B2                     i2u407_40:
  5236  0001B2  6E03               	movwf	button_timer_interrupt@sw_value,c
  5237  0001B4  ECE7  F009         	call	_button_timer_interrupt	;wreg free
  5238                           
  5239                           ;main.c: 262: Auto_cut();
  5240  0001B8  ECE7  F00C         	call	_Auto_cut	;wreg free
  5241                           
  5242                           ;main.c: 263: display_flag = 1;
  5243  0001BC  0E01               	movlw	1
  5244  0001BE  0101               	movlb	1	; () banked
  5245  0001C0  6FCF               	movwf	_display_flag& (0+255),b
  5246  0001C2                     i2l675:
  5247  0001C2  C026  FFF5         	movff	??_ISR+15,tablat
  5248  0001C6  C025  FFF8         	movff	??_ISR+14,tblptru
  5249  0001CA  C024  FFF7         	movff	??_ISR+13,tblptrh
  5250  0001CE  C023  FFF6         	movff	??_ISR+12,tblptrl
  5251  0001D2  C022  FFF4         	movff	??_ISR+11,prodh
  5252  0001D6  C021  FFF3         	movff	??_ISR+10,prodl
  5253  0001DA  C020  FFDA         	movff	??_ISR+9,fsr2h
  5254  0001DE  C01F  FFD9         	movff	??_ISR+8,fsr2l
  5255  0001E2  C01E  FFE2         	movff	??_ISR+7,fsr1h
  5256  0001E6  C01D  FFE1         	movff	??_ISR+6,fsr1l
  5257  0001EA  C01C  FFEA         	movff	??_ISR+5,fsr0h
  5258  0001EE  C01B  FFE9         	movff	??_ISR+4,fsr0l
  5259  0001F2  C01A  FFFB         	movff	??_ISR+3,pclatu
  5260  0001F6  C019  FFFA         	movff	??_ISR+2,pclath
  5261  0001FA  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5262  0001FC  0011               	retfie		f
  5263  0001FE                     __end_of_ISR:
  5264                           	opt stack 0
  5265                           pclatu	equ	0xFFB
  5266                           pclath	equ	0xFFA
  5267                           tblptru	equ	0xFF8
  5268                           tblptrh	equ	0xFF7
  5269                           tblptrl	equ	0xFF6
  5270                           tablat	equ	0xFF5
  5271                           prodh	equ	0xFF4
  5272                           prodl	equ	0xFF3
  5273                           intcon	equ	0xFF2
  5274                           intcon2	equ	0xFF1
  5275                           indf0	equ	0xFEF
  5276                           postinc0	equ	0xFEE
  5277                           fsr0h	equ	0xFEA
  5278                           fsr0l	equ	0xFE9
  5279                           wreg	equ	0xFE8
  5280                           fsr1h	equ	0xFE2
  5281                           fsr1l	equ	0xFE1
  5282                           indf2	equ	0xFDF
  5283                           postinc2	equ	0xFDE
  5284                           postdec2	equ	0xFDD
  5285                           fsr2h	equ	0xFDA
  5286                           fsr2l	equ	0xFD9
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function i2___lldiv *****************
  5290 ;; Defined at:
  5291 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  dividend        4    0[COMRAM] unsigned long 
  5294 ;;  divisor         4    4[COMRAM] unsigned long 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  __lldiv         4    8[COMRAM] unsigned long 
  5297 ;;  __lldiv         1   12[COMRAM] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  4    0[COMRAM] unsigned long 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5307 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5311 ;;Total ram usage:       13 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_ISR
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text29
  5321  001F32                     __ptext29:
  5322                           	opt stack 0
  5323  001F32                     i2___lldiv:
  5324                           	opt stack 24
  5325                           
  5326                           ;incstack = 0
  5327  001F32  0E00               	movlw	0
  5328  001F34  6E09               	movwf	i2___lldiv@quotient,c
  5329  001F36  0E00               	movlw	0
  5330  001F38  6E0A               	movwf	i2___lldiv@quotient+1,c
  5331  001F3A  0E00               	movlw	0
  5332  001F3C  6E0B               	movwf	i2___lldiv@quotient+2,c
  5333  001F3E  0E00               	movlw	0
  5334  001F40  6E0C               	movwf	i2___lldiv@quotient+3,c
  5335  001F42  5005               	movf	i2___lldiv@divisor,w,c
  5336  001F44  1006               	iorwf	i2___lldiv@divisor+1,w,c
  5337  001F46  1007               	iorwf	i2___lldiv@divisor+2,w,c
  5338  001F48  1008               	iorwf	i2___lldiv@divisor+3,w,c
  5339  001F4A  B4D8               	btfsc	status,2,c
  5340  001F4C  D02A               	goto	i2l1046
  5341  001F4E  0E01               	movlw	1
  5342  001F50  6E0D               	movwf	i2___lldiv@counter,c
  5343  001F52  D006               	goto	i2l3786
  5344  001F54                     i2l3784:
  5345  001F54  90D8               	bcf	status,0,c
  5346  001F56  3605               	rlcf	i2___lldiv@divisor,f,c
  5347  001F58  3606               	rlcf	i2___lldiv@divisor+1,f,c
  5348  001F5A  3607               	rlcf	i2___lldiv@divisor+2,f,c
  5349  001F5C  3608               	rlcf	i2___lldiv@divisor+3,f,c
  5350  001F5E  2A0D               	incf	i2___lldiv@counter,f,c
  5351  001F60                     i2l3786:
  5352  001F60  AE08               	btfss	i2___lldiv@divisor+3,7,c
  5353  001F62  D7F8               	goto	i2l3784
  5354  001F64                     i2l3788:
  5355  001F64  90D8               	bcf	status,0,c
  5356  001F66  3609               	rlcf	i2___lldiv@quotient,f,c
  5357  001F68  360A               	rlcf	i2___lldiv@quotient+1,f,c
  5358  001F6A  360B               	rlcf	i2___lldiv@quotient+2,f,c
  5359  001F6C  360C               	rlcf	i2___lldiv@quotient+3,f,c
  5360  001F6E  5005               	movf	i2___lldiv@divisor,w,c
  5361  001F70  5C01               	subwf	i2___lldiv@dividend,w,c
  5362  001F72  5006               	movf	i2___lldiv@divisor+1,w,c
  5363  001F74  5802               	subwfb	i2___lldiv@dividend+1,w,c
  5364  001F76  5007               	movf	i2___lldiv@divisor+2,w,c
  5365  001F78  5803               	subwfb	i2___lldiv@dividend+2,w,c
  5366  001F7A  5008               	movf	i2___lldiv@divisor+3,w,c
  5367  001F7C  5804               	subwfb	i2___lldiv@dividend+3,w,c
  5368  001F7E  A0D8               	btfss	status,0,c
  5369  001F80  D009               	goto	i2l3796
  5370  001F82  5005               	movf	i2___lldiv@divisor,w,c
  5371  001F84  5E01               	subwf	i2___lldiv@dividend,f,c
  5372  001F86  5006               	movf	i2___lldiv@divisor+1,w,c
  5373  001F88  5A02               	subwfb	i2___lldiv@dividend+1,f,c
  5374  001F8A  5007               	movf	i2___lldiv@divisor+2,w,c
  5375  001F8C  5A03               	subwfb	i2___lldiv@dividend+2,f,c
  5376  001F8E  5008               	movf	i2___lldiv@divisor+3,w,c
  5377  001F90  5A04               	subwfb	i2___lldiv@dividend+3,f,c
  5378  001F92  8009               	bsf	i2___lldiv@quotient,0,c
  5379  001F94                     i2l3796:
  5380  001F94  90D8               	bcf	status,0,c
  5381  001F96  3208               	rrcf	i2___lldiv@divisor+3,f,c
  5382  001F98  3207               	rrcf	i2___lldiv@divisor+2,f,c
  5383  001F9A  3206               	rrcf	i2___lldiv@divisor+1,f,c
  5384  001F9C  3205               	rrcf	i2___lldiv@divisor,f,c
  5385  001F9E  2E0D               	decfsz	i2___lldiv@counter,f,c
  5386  001FA0  D7E1               	goto	i2l3788
  5387  001FA2                     i2l1046:
  5388  001FA2  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
  5389  001FA6  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
  5390  001FAA  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
  5391  001FAE  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
  5392  001FB2  0012               	return		;funcret
  5393  001FB4                     __end_ofi2___lldiv:
  5394                           	opt stack 0
  5395                           pclatu	equ	0xFFB
  5396                           pclath	equ	0xFFA
  5397                           tblptru	equ	0xFF8
  5398                           tblptrh	equ	0xFF7
  5399                           tblptrl	equ	0xFF6
  5400                           tablat	equ	0xFF5
  5401                           prodh	equ	0xFF4
  5402                           prodl	equ	0xFF3
  5403                           intcon	equ	0xFF2
  5404                           intcon2	equ	0xFF1
  5405                           indf0	equ	0xFEF
  5406                           postinc0	equ	0xFEE
  5407                           fsr0h	equ	0xFEA
  5408                           fsr0l	equ	0xFE9
  5409                           wreg	equ	0xFE8
  5410                           fsr1h	equ	0xFE2
  5411                           fsr1l	equ	0xFE1
  5412                           indf2	equ	0xFDF
  5413                           postinc2	equ	0xFDE
  5414                           postdec2	equ	0xFDD
  5415                           fsr2h	equ	0xFDA
  5416                           fsr2l	equ	0xFD9
  5417                           status	equ	0xFD8
  5418                           
  5419 ;; *************** function _tx_sends *****************
  5420 ;; Defined at:
  5421 ;;		line 227 in file "../My_header\My_header.h"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  asciicode       2   15[COMRAM] PTR const unsigned char 
  5424 ;;		 -> STR_14(3), STR_13(5), 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;		None               void
  5429 ;; Registers used:
  5430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5440 ;;Total ram usage:        2 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    2
  5443 ;; This function calls:
  5444 ;;		_ringbuf_put
  5445 ;; This function is called by:
  5446 ;;		_ISR
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text30
  5451  00243C                     __ptext30:
  5452                           	opt stack 0
  5453  00243C                     _tx_sends:
  5454                           	opt stack 22
  5455                           
  5456                           ;My_header\My_header.h: 228: while (*asciicode) {
  5457                           
  5458                           ;incstack = 0
  5459  00243C  D011               	goto	i2l3384
  5460  00243E                     i2l3380:
  5461                           
  5462                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  5463  00243E  0ED0               	movlw	low _tx_buf
  5464  002440  6E09               	movwf	ringbuf_put@rb,c
  5465  002442  0E01               	movlw	high _tx_buf
  5466  002444  6E0A               	movwf	ringbuf_put@rb+1,c
  5467  002446  C010  FFF6         	movff	tx_sends@asciicode,tblptrl
  5468  00244A  C011  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  5469  00244E                     	if	0	;tblptru may be non-zero
  5470  00244E                     	endif
  5471  00244E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5472  00244E  0E00               	movlw	low (__mediumconst shr (0+16))
  5473  002450  6EF8               	movwf	tblptru,c
  5474  002452                     	endif
  5475  002452  0008               	tblrd		*
  5476  002454  CFF5 F00B          	movff	tablat,ringbuf_put@asciicode
  5477  002458  EC12  F00E         	call	_ringbuf_put	;wreg free
  5478  00245C  4A10               	infsnz	tx_sends@asciicode,f,c
  5479  00245E  2A11               	incf	tx_sends@asciicode+1,f,c
  5480  002460                     i2l3384:
  5481  002460  C010  FFF6         	movff	tx_sends@asciicode,tblptrl
  5482  002464  C011  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  5483  002468                     	if	0	;tblptru may be non-zero
  5484  002468                     	endif
  5485  002468                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5486  002468  0E00               	movlw	low (__mediumconst shr (0+16))
  5487  00246A  6EF8               	movwf	tblptru,c
  5488  00246C                     	endif
  5489  00246C  0008               	tblrd		*
  5490  00246E  50F5               	movf	tablat,w,c
  5491  002470  0900               	iorlw	0
  5492  002472  A4D8               	btfss	status,2,c
  5493  002474  D7E4               	goto	i2l3380
  5494                           
  5495                           ;My_header\My_header.h: 230: }
  5496                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  5497  002476  889D               	bsf	3997,4,c	;volatile
  5498  002478  0012               	return		;funcret
  5499  00247A                     __end_of_tx_sends:
  5500                           	opt stack 0
  5501                           pclatu	equ	0xFFB
  5502                           pclath	equ	0xFFA
  5503                           tblptru	equ	0xFF8
  5504                           tblptrh	equ	0xFF7
  5505                           tblptrl	equ	0xFF6
  5506                           tablat	equ	0xFF5
  5507                           prodh	equ	0xFF4
  5508                           prodl	equ	0xFF3
  5509                           intcon	equ	0xFF2
  5510                           intcon2	equ	0xFF1
  5511                           indf0	equ	0xFEF
  5512                           postinc0	equ	0xFEE
  5513                           fsr0h	equ	0xFEA
  5514                           fsr0l	equ	0xFE9
  5515                           wreg	equ	0xFE8
  5516                           fsr1h	equ	0xFE2
  5517                           fsr1l	equ	0xFE1
  5518                           indf2	equ	0xFDF
  5519                           postinc2	equ	0xFDE
  5520                           postdec2	equ	0xFDD
  5521                           fsr2h	equ	0xFDA
  5522                           fsr2l	equ	0xFD9
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function _tx_sendn *****************
  5526 ;; Defined at:
  5527 ;;		line 272 in file "../My_header\My_header.h"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  value           2   16[COMRAM] const unsigned int 
  5530 ;;  digits          1   18[COMRAM] unsigned char 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;  i               1   19[COMRAM] unsigned char 
  5533 ;;  temp            2   20[COMRAM] unsigned int 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;		None               void
  5536 ;; Registers used:
  5537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5543 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5544 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5546 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5547 ;;Total ram usage:        6 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    3
  5550 ;; This function calls:
  5551 ;;		_tx_send
  5552 ;;		i2___lwdiv
  5553 ;;		i2___lwmod
  5554 ;; This function is called by:
  5555 ;;		_ISR
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text31
  5560  00202C                     __ptext31:
  5561                           	opt stack 0
  5562  00202C                     _tx_sendn:
  5563                           	opt stack 21
  5564                           
  5565                           ;My_header\My_header.h: 273: while (digits--) {
  5566                           
  5567                           ;incstack = 0
  5568  00202C  D02C               	goto	i2l3400
  5569  00202E                     i2l222:
  5570                           
  5571                           ;My_header\My_header.h: 274: uint16_t temp = value;
  5572  00202E  C011  F015         	movff	tx_sendn@value,tx_sendn@temp
  5573  002032  C012  F016         	movff	tx_sendn@value+1,tx_sendn@temp+1
  5574                           
  5575                           ;My_header\My_header.h: 275: for (uint8_t i = 0; i < digits; i++) {
  5576  002036  0E00               	movlw	0
  5577  002038  6E14               	movwf	tx_sendn@i,c
  5578  00203A  D00F               	goto	i2l3394
  5579  00203C                     i2l3390:
  5580                           
  5581                           ;My_header\My_header.h: 276: temp /= 10;
  5582  00203C  C015  F001         	movff	tx_sendn@temp,i2___lwdiv@dividend
  5583  002040  C016  F002         	movff	tx_sendn@temp+1,i2___lwdiv@dividend+1
  5584  002044  0E00               	movlw	0
  5585  002046  6E04               	movwf	i2___lwdiv@divisor+1,c
  5586  002048  0E0A               	movlw	10
  5587  00204A  6E03               	movwf	i2___lwdiv@divisor,c
  5588  00204C  ECF9  F010         	call	i2___lwdiv	;wreg free
  5589  002050  C001  F015         	movff	?i2___lwdiv,tx_sendn@temp
  5590  002054  C002  F016         	movff	?i2___lwdiv+1,tx_sendn@temp+1
  5591  002058  2A14               	incf	tx_sendn@i,f,c
  5592  00205A                     i2l3394:
  5593  00205A  5013               	movf	tx_sendn@digits,w,c
  5594  00205C  5C14               	subwf	tx_sendn@i,w,c
  5595  00205E  A0D8               	btfss	status,0,c
  5596  002060  D7ED               	goto	i2l3390
  5597                           
  5598                           ;My_header\My_header.h: 277: }
  5599                           ;My_header\My_header.h: 278: temp %= 10;
  5600  002062  C015  F001         	movff	tx_sendn@temp,i2___lwmod@dividend
  5601  002066  C016  F002         	movff	tx_sendn@temp+1,i2___lwmod@dividend+1
  5602  00206A  0E00               	movlw	0
  5603  00206C  6E04               	movwf	i2___lwmod@divisor+1,c
  5604  00206E  0E0A               	movlw	10
  5605  002070  6E03               	movwf	i2___lwmod@divisor,c
  5606  002072  ECFD  F011         	call	i2___lwmod	;wreg free
  5607  002076  C001  F015         	movff	?i2___lwmod,tx_sendn@temp
  5608  00207A  C002  F016         	movff	?i2___lwmod+1,tx_sendn@temp+1
  5609                           
  5610                           ;My_header\My_header.h: 279: tx_send('0' + temp);
  5611  00207E  5015               	movf	tx_sendn@temp,w,c
  5612  002080  0F30               	addlw	48
  5613  002082  EC98  F013         	call	_tx_send
  5614  002086                     i2l3400:
  5615  002086  0613               	decf	tx_sendn@digits,f,c
  5616  002088  2813               	incf	tx_sendn@digits,w,c
  5617  00208A  B4D8               	btfsc	status,2,c
  5618  00208C  0012               	return	
  5619  00208E  D7CF               	goto	i2l222
  5620  002090                     __end_of_tx_sendn:
  5621                           	opt stack 0
  5622                           pclatu	equ	0xFFB
  5623                           pclath	equ	0xFFA
  5624                           tblptru	equ	0xFF8
  5625                           tblptrh	equ	0xFF7
  5626                           tblptrl	equ	0xFF6
  5627                           tablat	equ	0xFF5
  5628                           prodh	equ	0xFF4
  5629                           prodl	equ	0xFF3
  5630                           intcon	equ	0xFF2
  5631                           intcon2	equ	0xFF1
  5632                           indf0	equ	0xFEF
  5633                           postinc0	equ	0xFEE
  5634                           fsr0h	equ	0xFEA
  5635                           fsr0l	equ	0xFE9
  5636                           wreg	equ	0xFE8
  5637                           fsr1h	equ	0xFE2
  5638                           fsr1l	equ	0xFE1
  5639                           indf2	equ	0xFDF
  5640                           postinc2	equ	0xFDE
  5641                           postdec2	equ	0xFDD
  5642                           fsr2h	equ	0xFDA
  5643                           fsr2l	equ	0xFD9
  5644                           status	equ	0xFD8
  5645                           
  5646 ;; *************** function i2___lwmod *****************
  5647 ;; Defined at:
  5648 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  dividend        2    0[COMRAM] unsigned int 
  5651 ;;  divisor         2    2[COMRAM] unsigned int 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  __lwmod         1    4[COMRAM] unsigned char 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  2    0[COMRAM] unsigned int 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5666 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5667 ;;Total ram usage:        5 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_tx_sendn
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text32
  5677  0023FA                     __ptext32:
  5678                           	opt stack 0
  5679  0023FA                     i2___lwmod:
  5680                           	opt stack 23
  5681                           
  5682                           ;incstack = 0
  5683  0023FA  5003               	movf	i2___lwmod@divisor,w,c
  5684  0023FC  1004               	iorwf	i2___lwmod@divisor+1,w,c
  5685  0023FE  B4D8               	btfsc	status,2,c
  5686  002400  D018               	goto	i2l1109
  5687  002402  0E01               	movlw	1
  5688  002404  6E05               	movwf	i2___lwmod@counter,c
  5689  002406  D004               	goto	i2l3272
  5690  002408                     i2l3270:
  5691  002408  90D8               	bcf	status,0,c
  5692  00240A  3603               	rlcf	i2___lwmod@divisor,f,c
  5693  00240C  3604               	rlcf	i2___lwmod@divisor+1,f,c
  5694  00240E  2A05               	incf	i2___lwmod@counter,f,c
  5695  002410                     i2l3272:
  5696  002410  AE04               	btfss	i2___lwmod@divisor+1,7,c
  5697  002412  D7FA               	goto	i2l3270
  5698  002414                     i2l3274:
  5699  002414  5003               	movf	i2___lwmod@divisor,w,c
  5700  002416  5C01               	subwf	i2___lwmod@dividend,w,c
  5701  002418  5004               	movf	i2___lwmod@divisor+1,w,c
  5702  00241A  5802               	subwfb	i2___lwmod@dividend+1,w,c
  5703  00241C  A0D8               	btfss	status,0,c
  5704  00241E  D004               	goto	i2l3278
  5705  002420  5003               	movf	i2___lwmod@divisor,w,c
  5706  002422  5E01               	subwf	i2___lwmod@dividend,f,c
  5707  002424  5004               	movf	i2___lwmod@divisor+1,w,c
  5708  002426  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  5709  002428                     i2l3278:
  5710  002428  90D8               	bcf	status,0,c
  5711  00242A  3204               	rrcf	i2___lwmod@divisor+1,f,c
  5712  00242C  3203               	rrcf	i2___lwmod@divisor,f,c
  5713  00242E  2E05               	decfsz	i2___lwmod@counter,f,c
  5714  002430  D7F1               	goto	i2l3274
  5715  002432                     i2l1109:
  5716  002432  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  5717  002436  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5718  00243A  0012               	return		;funcret
  5719  00243C                     __end_ofi2___lwmod:
  5720                           	opt stack 0
  5721                           pclatu	equ	0xFFB
  5722                           pclath	equ	0xFFA
  5723                           tblptru	equ	0xFF8
  5724                           tblptrh	equ	0xFF7
  5725                           tblptrl	equ	0xFF6
  5726                           tablat	equ	0xFF5
  5727                           prodh	equ	0xFF4
  5728                           prodl	equ	0xFF3
  5729                           intcon	equ	0xFF2
  5730                           intcon2	equ	0xFF1
  5731                           indf0	equ	0xFEF
  5732                           postinc0	equ	0xFEE
  5733                           fsr0h	equ	0xFEA
  5734                           fsr0l	equ	0xFE9
  5735                           wreg	equ	0xFE8
  5736                           fsr1h	equ	0xFE2
  5737                           fsr1l	equ	0xFE1
  5738                           indf2	equ	0xFDF
  5739                           postinc2	equ	0xFDE
  5740                           postdec2	equ	0xFDD
  5741                           fsr2h	equ	0xFDA
  5742                           fsr2l	equ	0xFD9
  5743                           status	equ	0xFD8
  5744                           
  5745 ;; *************** function _tx_send *****************
  5746 ;; Defined at:
  5747 ;;		line 222 in file "../My_header\My_header.h"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  asciicode       1    wreg     const unsigned char 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  asciicode       1   15[COMRAM] const unsigned char 
  5752 ;; Return value:  Size  Location     Type
  5753 ;;		None               void
  5754 ;; Registers used:
  5755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5765 ;;Total ram usage:        1 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:    2
  5768 ;; This function calls:
  5769 ;;		_ringbuf_put
  5770 ;; This function is called by:
  5771 ;;		_tx_sendn
  5772 ;;		_ISR
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text33
  5777  002730                     __ptext33:
  5778                           	opt stack 0
  5779  002730                     _tx_send:
  5780                           	opt stack 21
  5781                           
  5782                           ;incstack = 0
  5783                           ;tx_send@asciicode stored from wreg
  5784  002730  6E10               	movwf	tx_send@asciicode,c
  5785                           
  5786                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  5787  002732  0ED0               	movlw	low _tx_buf
  5788  002734  6E09               	movwf	ringbuf_put@rb,c
  5789  002736  0E01               	movlw	high _tx_buf
  5790  002738  6E0A               	movwf	ringbuf_put@rb+1,c
  5791  00273A  C010  F00B         	movff	tx_send@asciicode,ringbuf_put@asciicode
  5792  00273E  EC12  F00E         	call	_ringbuf_put	;wreg free
  5793                           
  5794                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  5795  002742  889D               	bsf	3997,4,c	;volatile
  5796  002744  0012               	return		;funcret
  5797  002746                     __end_of_tx_send:
  5798                           	opt stack 0
  5799                           pclatu	equ	0xFFB
  5800                           pclath	equ	0xFFA
  5801                           tblptru	equ	0xFF8
  5802                           tblptrh	equ	0xFF7
  5803                           tblptrl	equ	0xFF6
  5804                           tablat	equ	0xFF5
  5805                           prodh	equ	0xFF4
  5806                           prodl	equ	0xFF3
  5807                           intcon	equ	0xFF2
  5808                           intcon2	equ	0xFF1
  5809                           indf0	equ	0xFEF
  5810                           postinc0	equ	0xFEE
  5811                           fsr0h	equ	0xFEA
  5812                           fsr0l	equ	0xFE9
  5813                           wreg	equ	0xFE8
  5814                           fsr1h	equ	0xFE2
  5815                           fsr1l	equ	0xFE1
  5816                           indf2	equ	0xFDF
  5817                           postinc2	equ	0xFDE
  5818                           postdec2	equ	0xFDD
  5819                           fsr2h	equ	0xFDA
  5820                           fsr2l	equ	0xFD9
  5821                           status	equ	0xFD8
  5822                           
  5823 ;; *************** function _lchika *****************
  5824 ;; Defined at:
  5825 ;;		line 141 in file "main.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;		None
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  i               1   11[COMRAM] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;		None               void
  5832 ;; Registers used:
  5833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5843 ;;Total ram usage:        4 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    1
  5846 ;; This function calls:
  5847 ;;		___awdiv
  5848 ;;		i2_LED
  5849 ;;		i2___lwdiv
  5850 ;; This function is called by:
  5851 ;;		_ISR
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text34
  5856  0018D0                     __ptext34:
  5857                           	opt stack 0
  5858  0018D0                     _lchika:
  5859                           	opt stack 23
  5860                           
  5861                           ;main.c: 142: uint8_t i;
  5862                           ;main.c: 143: static uint8_t cnt[3];
  5863                           ;main.c: 144: static uint8_t cntf[3];
  5864                           ;main.c: 145: for (i = 0; i < 3; i++) {
  5865                           
  5866                           ;incstack = 0
  5867  0018D0  0E00               	movlw	0
  5868  0018D2  6E0C               	movwf	lchika@i,c
  5869  0018D4                     i2l3666:
  5870  0018D4  0E02               	movlw	2
  5871  0018D6  640C               	cpfsgt	lchika@i,c
  5872  0018D8  D001               	goto	i2l3670
  5873  0018DA  0012               	return	
  5874  0018DC                     i2l3670:
  5875                           
  5876                           ;main.c: 146: cnt[i]++;
  5877  0018DC  500C               	movf	lchika@i,w,c
  5878  0018DE  0D01               	mullw	1
  5879  0018E0  0E31               	movlw	low lchika@cnt
  5880  0018E2  24F3               	addwf	prodl,w,c
  5881  0018E4  6ED9               	movwf	fsr2l,c
  5882  0018E6  0E00               	movlw	high lchika@cnt
  5883  0018E8  20F4               	addwfc	prodh,w,c
  5884  0018EA  6EDA               	movwf	fsr2h,c
  5885  0018EC  2ADF               	incf	indf2,f,c
  5886                           
  5887                           ;main.c: 147: if (cnt[i] % 2 == 1) {
  5888  0018EE  500C               	movf	lchika@i,w,c
  5889  0018F0  0D01               	mullw	1
  5890  0018F2  0E31               	movlw	low lchika@cnt
  5891  0018F4  24F3               	addwf	prodl,w,c
  5892  0018F6  6ED9               	movwf	fsr2l,c
  5893  0018F8  0E00               	movlw	high lchika@cnt
  5894  0018FA  20F4               	addwfc	prodh,w,c
  5895  0018FC  6EDA               	movwf	fsr2h,c
  5896  0018FE  A0DF               	btfss	indf2,0,c
  5897  001900  D006               	goto	i2l3674
  5898                           
  5899                           ;main.c: 148: LED(i, 0);
  5900  001902  0E00               	movlw	0
  5901  001904  6E01               	movwf	i2LED@value,c
  5902  001906  500C               	movf	lchika@i,w,c
  5903  001908  EC3D  F012         	call	i2_LED
  5904                           
  5905                           ;main.c: 149: } else {
  5906  00190C  D05E               	goto	i2l3688
  5907  00190E                     i2l3674:
  5908                           
  5909                           ;main.c: 150: if (cnt[i] / 2 <= I[i] / 100) {
  5910  00190E  500C               	movf	lchika@i,w,c
  5911  001910  0D02               	mullw	2
  5912  001912  0E28               	movlw	low _I
  5913  001914  24F3               	addwf	prodl,w,c
  5914  001916  6ED9               	movwf	fsr2l,c
  5915  001918  0E00               	movlw	high _I
  5916  00191A  20F4               	addwfc	prodh,w,c
  5917  00191C  6EDA               	movwf	fsr2h,c
  5918  00191E  CFDE F001          	movff	postinc2,i2___lwdiv@dividend
  5919  001922  CFDD F002          	movff	postdec2,i2___lwdiv@dividend+1
  5920  001926  0E00               	movlw	0
  5921  001928  6E04               	movwf	i2___lwdiv@divisor+1,c
  5922  00192A  0E64               	movlw	100
  5923  00192C  6E03               	movwf	i2___lwdiv@divisor,c
  5924  00192E  ECF9  F010         	call	i2___lwdiv	;wreg free
  5925  001932  C001  F009         	movff	?i2___lwdiv,??_lchika
  5926  001936  C002  F00A         	movff	?i2___lwdiv+1,??_lchika+1
  5927  00193A  500C               	movf	lchika@i,w,c
  5928  00193C  0D01               	mullw	1
  5929  00193E  0E31               	movlw	low lchika@cnt
  5930  001940  24F3               	addwf	prodl,w,c
  5931  001942  6ED9               	movwf	fsr2l,c
  5932  001944  0E00               	movlw	high lchika@cnt
  5933  001946  20F4               	addwfc	prodh,w,c
  5934  001948  6EDA               	movwf	fsr2h,c
  5935  00194A  50DF               	movf	indf2,w,c
  5936  00194C  6E0B               	movwf	(??_lchika+2)& (0+255),c
  5937  00194E  500B               	movf	??_lchika+2,w,c
  5938  001950  6E01               	movwf	___awdiv@dividend,c
  5939  001952  6A02               	clrf	___awdiv@dividend+1,c
  5940  001954  0E00               	movlw	0
  5941  001956  6E04               	movwf	___awdiv@divisor+1,c
  5942  001958  0E02               	movlw	2
  5943  00195A  6E03               	movwf	___awdiv@divisor,c
  5944  00195C  EC57  F00F         	call	___awdiv	;wreg free
  5945  001960  5001               	movf	?___awdiv,w,c
  5946  001962  5C09               	subwf	??_lchika,w,c
  5947  001964  5002               	movf	?___awdiv+1,w,c
  5948  001966  580A               	subwfb	??_lchika+1,w,c
  5949  001968  A0D8               	btfss	status,0,c
  5950  00196A  D00C               	goto	i2l3680
  5951                           
  5952                           ;main.c: 151: LED(i, 1);
  5953  00196C  0E01               	movlw	1
  5954  00196E  6E01               	movwf	i2LED@value,c
  5955  001970  500C               	movf	lchika@i,w,c
  5956  001972  EC3D  F012         	call	i2_LED
  5957                           
  5958                           ;main.c: 152: cntf[i] = 0;
  5959  001976  500C               	movf	lchika@i,w,c
  5960  001978  0D01               	mullw	1
  5961  00197A  0E7F               	movlw	low lchika@cntf
  5962  00197C  24F3               	addwf	prodl,w,c
  5963  00197E  6ED9               	movwf	fsr2l,c
  5964  001980  0E00               	movlw	high lchika@cntf
  5965  001982  D01F               	goto	L3
  5966  001984                     i2l3680:
  5967                           
  5968                           ;main.c: 154: cntf[i]++;
  5969  001984  500C               	movf	lchika@i,w,c
  5970  001986  0D01               	mullw	1
  5971  001988  0E7F               	movlw	low lchika@cntf
  5972  00198A  24F3               	addwf	prodl,w,c
  5973  00198C  6ED9               	movwf	fsr2l,c
  5974  00198E  0E00               	movlw	high lchika@cntf
  5975  001990  20F4               	addwfc	prodh,w,c
  5976  001992  6EDA               	movwf	fsr2h,c
  5977  001994  2ADF               	incf	indf2,f,c
  5978                           
  5979                           ;main.c: 155: LED(i, 0);
  5980  001996  0E00               	movlw	0
  5981  001998  6E01               	movwf	i2LED@value,c
  5982  00199A  500C               	movf	lchika@i,w,c
  5983  00199C  EC3D  F012         	call	i2_LED
  5984                           
  5985                           ;main.c: 156: if (cntf[i] >= 2) {
  5986  0019A0  500C               	movf	lchika@i,w,c
  5987  0019A2  0D01               	mullw	1
  5988  0019A4  0E7F               	movlw	low lchika@cntf
  5989  0019A6  24F3               	addwf	prodl,w,c
  5990  0019A8  6ED9               	movwf	fsr2l,c
  5991  0019AA  0E00               	movlw	high lchika@cntf
  5992  0019AC  20F4               	addwfc	prodh,w,c
  5993  0019AE  6EDA               	movwf	fsr2h,c
  5994  0019B0  0E01               	movlw	1
  5995  0019B2  64DF               	cpfsgt	indf2,c
  5996  0019B4  D00A               	goto	i2l3688
  5997                           
  5998                           ;main.c: 157: cnt[i] = 0;
  5999  0019B6  500C               	movf	lchika@i,w,c
  6000  0019B8  0D01               	mullw	1
  6001  0019BA  0E31               	movlw	low lchika@cnt
  6002  0019BC  24F3               	addwf	prodl,w,c
  6003  0019BE  6ED9               	movwf	fsr2l,c
  6004  0019C0  0E00               	movlw	high lchika@cnt
  6005  0019C2                     L3:
  6006  0019C2  20F4               	addwfc	prodh,w,c
  6007  0019C4  6EDA               	movwf	fsr2h,c
  6008  0019C6  0E00               	movlw	0
  6009  0019C8  6EDF               	movwf	indf2,c
  6010  0019CA                     i2l3688:
  6011  0019CA  2A0C               	incf	lchika@i,f,c
  6012  0019CC  D783               	goto	i2l3666
  6013  0019CE                     __end_of_lchika:
  6014                           	opt stack 0
  6015                           pclatu	equ	0xFFB
  6016                           pclath	equ	0xFFA
  6017                           tblptru	equ	0xFF8
  6018                           tblptrh	equ	0xFF7
  6019                           tblptrl	equ	0xFF6
  6020                           tablat	equ	0xFF5
  6021                           prodh	equ	0xFF4
  6022                           prodl	equ	0xFF3
  6023                           intcon	equ	0xFF2
  6024                           intcon2	equ	0xFF1
  6025                           indf0	equ	0xFEF
  6026                           postinc0	equ	0xFEE
  6027                           fsr0h	equ	0xFEA
  6028                           fsr0l	equ	0xFE9
  6029                           wreg	equ	0xFE8
  6030                           fsr1h	equ	0xFE2
  6031                           fsr1l	equ	0xFE1
  6032                           indf2	equ	0xFDF
  6033                           postinc2	equ	0xFDE
  6034                           postdec2	equ	0xFDD
  6035                           fsr2h	equ	0xFDA
  6036                           fsr2l	equ	0xFD9
  6037                           status	equ	0xFD8
  6038                           
  6039 ;; *************** function i2___lwdiv *****************
  6040 ;; Defined at:
  6041 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  dividend        2    0[COMRAM] unsigned int 
  6044 ;;  divisor         2    2[COMRAM] unsigned int 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  6047 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  2    0[COMRAM] unsigned int 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2, status,0
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6058 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6060 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6061 ;;Total ram usage:        7 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_tx_sendn
  6067 ;;		_lchika
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text35
  6072  0021F2                     __ptext35:
  6073                           	opt stack 0
  6074  0021F2                     i2___lwdiv:
  6075                           	opt stack 23
  6076                           
  6077                           ;incstack = 0
  6078  0021F2  0E00               	movlw	0
  6079  0021F4  6E06               	movwf	i2___lwdiv@quotient+1,c
  6080  0021F6  0E00               	movlw	0
  6081  0021F8  6E05               	movwf	i2___lwdiv@quotient,c
  6082  0021FA  5003               	movf	i2___lwdiv@divisor,w,c
  6083  0021FC  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  6084  0021FE  B4D8               	btfsc	status,2,c
  6085  002200  D01C               	goto	i2l1099
  6086  002202  0E01               	movlw	1
  6087  002204  6E07               	movwf	i2___lwdiv@counter,c
  6088  002206  D004               	goto	i2l3252
  6089  002208                     i2l3250:
  6090  002208  90D8               	bcf	status,0,c
  6091  00220A  3603               	rlcf	i2___lwdiv@divisor,f,c
  6092  00220C  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  6093  00220E  2A07               	incf	i2___lwdiv@counter,f,c
  6094  002210                     i2l3252:
  6095  002210  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  6096  002212  D7FA               	goto	i2l3250
  6097  002214                     i2l3254:
  6098  002214  90D8               	bcf	status,0,c
  6099  002216  3605               	rlcf	i2___lwdiv@quotient,f,c
  6100  002218  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  6101  00221A  5003               	movf	i2___lwdiv@divisor,w,c
  6102  00221C  5C01               	subwf	i2___lwdiv@dividend,w,c
  6103  00221E  5004               	movf	i2___lwdiv@divisor+1,w,c
  6104  002220  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  6105  002222  A0D8               	btfss	status,0,c
  6106  002224  D005               	goto	i2l3262
  6107  002226  5003               	movf	i2___lwdiv@divisor,w,c
  6108  002228  5E01               	subwf	i2___lwdiv@dividend,f,c
  6109  00222A  5004               	movf	i2___lwdiv@divisor+1,w,c
  6110  00222C  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  6111  00222E  8005               	bsf	i2___lwdiv@quotient,0,c
  6112  002230                     i2l3262:
  6113  002230  90D8               	bcf	status,0,c
  6114  002232  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  6115  002234  3203               	rrcf	i2___lwdiv@divisor,f,c
  6116  002236  2E07               	decfsz	i2___lwdiv@counter,f,c
  6117  002238  D7ED               	goto	i2l3254
  6118  00223A                     i2l1099:
  6119  00223A  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  6120  00223E  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  6121  002242  0012               	return		;funcret
  6122  002244                     __end_ofi2___lwdiv:
  6123                           	opt stack 0
  6124                           pclatu	equ	0xFFB
  6125                           pclath	equ	0xFFA
  6126                           tblptru	equ	0xFF8
  6127                           tblptrh	equ	0xFF7
  6128                           tblptrl	equ	0xFF6
  6129                           tablat	equ	0xFF5
  6130                           prodh	equ	0xFF4
  6131                           prodl	equ	0xFF3
  6132                           intcon	equ	0xFF2
  6133                           intcon2	equ	0xFF1
  6134                           indf0	equ	0xFEF
  6135                           postinc0	equ	0xFEE
  6136                           fsr0h	equ	0xFEA
  6137                           fsr0l	equ	0xFE9
  6138                           wreg	equ	0xFE8
  6139                           fsr1h	equ	0xFE2
  6140                           fsr1l	equ	0xFE1
  6141                           indf2	equ	0xFDF
  6142                           postinc2	equ	0xFDE
  6143                           postdec2	equ	0xFDD
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function i2_LED *****************
  6149 ;; Defined at:
  6150 ;;		line 100 in file "main.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  b               1    wreg     unsigned char 
  6153 ;;  value           1    0[COMRAM] unsigned char 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  b               1    1[COMRAM] unsigned char 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;		None               void
  6158 ;; Registers used:
  6159 ;;		wreg, status,2, status,0
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6165 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6169 ;;Total ram usage:        2 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_lchika
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text36
  6179  00247A                     __ptext36:
  6180                           	opt stack 0
  6181  00247A                     i2_LED:
  6182                           	opt stack 23
  6183                           
  6184                           ;incstack = 0
  6185                           ;i2LED@b stored from wreg
  6186  00247A  6E02               	movwf	i2LED@b,c
  6187                           
  6188                           ;main.c: 101: switch (b) {
  6189  00247C  D012               	goto	i2l3242
  6190  00247E                     i2l597:
  6191                           
  6192                           ;main.c: 103: LATB7 = value;
  6193  00247E  A001               	btfss	i2LED@value,0,c
  6194  002480  D002               	goto	i2u270_40
  6195  002482  8E8A               	bsf	3978,7,c	;volatile
  6196  002484  0012               	return	
  6197  002486                     i2u270_40:
  6198  002486  9E8A               	bcf	3978,7,c	;volatile
  6199                           
  6200                           ;main.c: 104: break;
  6201  002488  0012               	return	
  6202  00248A                     i2l599:
  6203                           
  6204                           ;main.c: 106: LATB6 = value;
  6205  00248A  A001               	btfss	i2LED@value,0,c
  6206  00248C  D002               	goto	i2u272_40
  6207  00248E  8C8A               	bsf	3978,6,c	;volatile
  6208  002490  0012               	return	
  6209  002492                     i2u272_40:
  6210  002492  9C8A               	bcf	3978,6,c	;volatile
  6211                           
  6212                           ;main.c: 107: break;
  6213  002494  0012               	return	
  6214  002496                     i2l600:
  6215                           
  6216                           ;main.c: 109: LATC2 = value;
  6217  002496  A001               	btfss	i2LED@value,0,c
  6218  002498  D002               	goto	i2u274_40
  6219  00249A  848B               	bsf	3979,2,c	;volatile
  6220  00249C  0012               	return	
  6221  00249E                     i2u274_40:
  6222  00249E  948B               	bcf	3979,2,c	;volatile
  6223                           
  6224                           ;main.c: 111: }
  6225                           
  6226                           ;main.c: 110: break;
  6227  0024A0  0012               	return	
  6228  0024A2                     i2l3242:
  6229  0024A2  5002               	movf	i2LED@b,w,c
  6230                           
  6231                           ; Switch size 1, requested type "space"
  6232                           ; Number of cases is 3, Range of values is 0 to 2
  6233                           ; switch strategies available:
  6234                           ; Name         Instructions Cycles
  6235                           ; simple_byte           10     6 (average)
  6236                           ;	Chosen strategy is simple_byte
  6237  0024A4  0A00               	xorlw	0	; case 0
  6238  0024A6  B4D8               	btfsc	status,2,c
  6239  0024A8  D7EA               	goto	i2l597
  6240  0024AA  0A01               	xorlw	1	; case 1
  6241  0024AC  B4D8               	btfsc	status,2,c
  6242  0024AE  D7ED               	goto	i2l599
  6243  0024B0  0A03               	xorlw	3	; case 2
  6244  0024B2  A4D8               	btfss	status,2,c
  6245  0024B4  0012               	return	
  6246  0024B6  D7EF               	goto	i2l600
  6247  0024B8                     __end_ofi2_LED:
  6248                           	opt stack 0
  6249                           pclatu	equ	0xFFB
  6250                           pclath	equ	0xFFA
  6251                           tblptru	equ	0xFF8
  6252                           tblptrh	equ	0xFF7
  6253                           tblptrl	equ	0xFF6
  6254                           tablat	equ	0xFF5
  6255                           prodh	equ	0xFF4
  6256                           prodl	equ	0xFF3
  6257                           intcon	equ	0xFF2
  6258                           intcon2	equ	0xFF1
  6259                           indf0	equ	0xFEF
  6260                           postinc0	equ	0xFEE
  6261                           fsr0h	equ	0xFEA
  6262                           fsr0l	equ	0xFE9
  6263                           wreg	equ	0xFE8
  6264                           fsr1h	equ	0xFE2
  6265                           fsr1l	equ	0xFE1
  6266                           indf2	equ	0xFDF
  6267                           postinc2	equ	0xFDE
  6268                           postdec2	equ	0xFDD
  6269                           fsr2h	equ	0xFDA
  6270                           fsr2l	equ	0xFD9
  6271                           status	equ	0xFD8
  6272                           
  6273 ;; *************** function ___awdiv *****************
  6274 ;; Defined at:
  6275 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  dividend        2    0[COMRAM] int 
  6278 ;;  divisor         2    2[COMRAM] int 
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  quotient        2    6[COMRAM] int 
  6281 ;;  sign            1    5[COMRAM] unsigned char 
  6282 ;;  counter         1    4[COMRAM] unsigned char 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  2    0[COMRAM] int 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6296 ;;Total ram usage:        8 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; This function calls:
  6299 ;;		Nothing
  6300 ;; This function is called by:
  6301 ;;		_lchika
  6302 ;;		_d_to_x
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text37
  6307  001EAE                     __ptext37:
  6308                           	opt stack 0
  6309  001EAE                     ___awdiv:
  6310                           	opt stack 23
  6311                           
  6312                           ;incstack = 0
  6313  001EAE  0E00               	movlw	0
  6314  001EB0  6E06               	movwf	___awdiv@sign,c
  6315  001EB2  AE04               	btfss	___awdiv@divisor+1,7,c
  6316  001EB4  D006               	goto	i2l3108
  6317  001EB6  6C03               	negf	___awdiv@divisor,c
  6318  001EB8  1E04               	comf	___awdiv@divisor+1,f,c
  6319  001EBA  B0D8               	btfsc	status,0,c
  6320  001EBC  2A04               	incf	___awdiv@divisor+1,f,c
  6321  001EBE  0E01               	movlw	1
  6322  001EC0  6E06               	movwf	___awdiv@sign,c
  6323  001EC2                     i2l3108:
  6324  001EC2  AE02               	btfss	___awdiv@dividend+1,7,c
  6325  001EC4  D006               	goto	i2l3114
  6326  001EC6  6C01               	negf	___awdiv@dividend,c
  6327  001EC8  1E02               	comf	___awdiv@dividend+1,f,c
  6328  001ECA  B0D8               	btfsc	status,0,c
  6329  001ECC  2A02               	incf	___awdiv@dividend+1,f,c
  6330  001ECE  0E01               	movlw	1
  6331  001ED0  1A06               	xorwf	___awdiv@sign,f,c
  6332  001ED2                     i2l3114:
  6333  001ED2  0E00               	movlw	0
  6334  001ED4  6E08               	movwf	___awdiv@quotient+1,c
  6335  001ED6  0E00               	movlw	0
  6336  001ED8  6E07               	movwf	___awdiv@quotient,c
  6337  001EDA  5003               	movf	___awdiv@divisor,w,c
  6338  001EDC  1004               	iorwf	___awdiv@divisor+1,w,c
  6339  001EDE  B4D8               	btfsc	status,2,c
  6340  001EE0  D01C               	goto	i2l3136
  6341  001EE2  0E01               	movlw	1
  6342  001EE4  6E05               	movwf	___awdiv@counter,c
  6343  001EE6  D004               	goto	i2l3122
  6344  001EE8                     i2l3120:
  6345  001EE8  90D8               	bcf	status,0,c
  6346  001EEA  3603               	rlcf	___awdiv@divisor,f,c
  6347  001EEC  3604               	rlcf	___awdiv@divisor+1,f,c
  6348  001EEE  2A05               	incf	___awdiv@counter,f,c
  6349  001EF0                     i2l3122:
  6350  001EF0  AE04               	btfss	___awdiv@divisor+1,7,c
  6351  001EF2  D7FA               	goto	i2l3120
  6352  001EF4                     i2l3124:
  6353  001EF4  90D8               	bcf	status,0,c
  6354  001EF6  3607               	rlcf	___awdiv@quotient,f,c
  6355  001EF8  3608               	rlcf	___awdiv@quotient+1,f,c
  6356  001EFA  5003               	movf	___awdiv@divisor,w,c
  6357  001EFC  5C01               	subwf	___awdiv@dividend,w,c
  6358  001EFE  5004               	movf	___awdiv@divisor+1,w,c
  6359  001F00  5802               	subwfb	___awdiv@dividend+1,w,c
  6360  001F02  A0D8               	btfss	status,0,c
  6361  001F04  D005               	goto	i2l3132
  6362  001F06  5003               	movf	___awdiv@divisor,w,c
  6363  001F08  5E01               	subwf	___awdiv@dividend,f,c
  6364  001F0A  5004               	movf	___awdiv@divisor+1,w,c
  6365  001F0C  5A02               	subwfb	___awdiv@dividend+1,f,c
  6366  001F0E  8007               	bsf	___awdiv@quotient,0,c
  6367  001F10                     i2l3132:
  6368  001F10  90D8               	bcf	status,0,c
  6369  001F12  3204               	rrcf	___awdiv@divisor+1,f,c
  6370  001F14  3203               	rrcf	___awdiv@divisor,f,c
  6371  001F16  2E05               	decfsz	___awdiv@counter,f,c
  6372  001F18  D7ED               	goto	i2l3124
  6373  001F1A                     i2l3136:
  6374  001F1A  5006               	movf	___awdiv@sign,w,c
  6375  001F1C  B4D8               	btfsc	status,2,c
  6376  001F1E  D004               	goto	i2l3140
  6377  001F20  6C07               	negf	___awdiv@quotient,c
  6378  001F22  1E08               	comf	___awdiv@quotient+1,f,c
  6379  001F24  B0D8               	btfsc	status,0,c
  6380  001F26  2A08               	incf	___awdiv@quotient+1,f,c
  6381  001F28                     i2l3140:
  6382  001F28  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6383  001F2C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6384  001F30  0012               	return	
  6385  001F32                     __end_of___awdiv:
  6386                           	opt stack 0
  6387                           pclatu	equ	0xFFB
  6388                           pclath	equ	0xFFA
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           prodh	equ	0xFF4
  6394                           prodl	equ	0xFF3
  6395                           intcon	equ	0xFF2
  6396                           intcon2	equ	0xFF1
  6397                           indf0	equ	0xFEF
  6398                           postinc0	equ	0xFEE
  6399                           fsr0h	equ	0xFEA
  6400                           fsr0l	equ	0xFE9
  6401                           wreg	equ	0xFE8
  6402                           fsr1h	equ	0xFE2
  6403                           fsr1l	equ	0xFE1
  6404                           indf2	equ	0xFDF
  6405                           postinc2	equ	0xFDE
  6406                           postdec2	equ	0xFDD
  6407                           fsr2h	equ	0xFDA
  6408                           fsr2l	equ	0xFD9
  6409                           status	equ	0xFD8
  6410                           
  6411 ;; *************** function _button_timer_interrupt *****************
  6412 ;; Defined at:
  6413 ;;		line 51 in file "../My_header\My_button.h"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;  bt              2    0[COMRAM] PTR struct button
  6416 ;;		 -> sw(4), sw2(4), sw1(4), sw0(4), 
  6417 ;;  sw_value        1    2[COMRAM] unsigned char 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;		None               void
  6422 ;; Registers used:
  6423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6429 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6432 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6433 ;;Total ram usage:        5 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		_ISR
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text38
  6443  0013CE                     __ptext38:
  6444                           	opt stack 0
  6445  0013CE                     _button_timer_interrupt:
  6446                           	opt stack 24
  6447                           
  6448                           ;My_header\My_button.h: 52: if (sw_value) {
  6449                           
  6450                           ;incstack = 0
  6451  0013CE  5003               	movf	button_timer_interrupt@sw_value,w,c
  6452  0013D0  B4D8               	btfsc	status,2,c
  6453  0013D2  D098               	goto	i2l3424
  6454                           
  6455                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
  6456  0013D4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6457  0013D8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6458  0013DC  0E84               	movlw	132
  6459  0013DE  18DE               	xorwf	postinc2,w,c
  6460  0013E0  E10B               	bnz	i2l270
  6461  0013E2  0E03               	movlw	3
  6462  0013E4  18DE               	xorwf	postinc2,w,c
  6463  0013E6  A4D8               	btfss	status,2,c
  6464  0013E8  D007               	goto	i2l270
  6465  0013EA  EE20 F003          	lfsr	2,3
  6466  0013EE  5001               	movf	button_timer_interrupt@bt,w,c
  6467  0013F0  26D9               	addwf	fsr2l,f,c
  6468  0013F2  5002               	movf	button_timer_interrupt@bt+1,w,c
  6469  0013F4  22DA               	addwfc	fsr2h,f,c
  6470  0013F6  8EDF               	bsf	indf2,7,c
  6471  0013F8                     i2l270:
  6472                           
  6473                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
  6474  0013F8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6475  0013FC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6476  001400  0EBC               	movlw	188
  6477  001402  18DE               	xorwf	postinc2,w,c
  6478  001404  E10B               	bnz	i2l271
  6479  001406  0E02               	movlw	2
  6480  001408  18DE               	xorwf	postinc2,w,c
  6481  00140A  A4D8               	btfss	status,2,c
  6482  00140C  D007               	goto	i2l271
  6483  00140E  EE20 F003          	lfsr	2,3
  6484  001412  5001               	movf	button_timer_interrupt@bt,w,c
  6485  001414  26D9               	addwf	fsr2l,f,c
  6486  001416  5002               	movf	button_timer_interrupt@bt+1,w,c
  6487  001418  22DA               	addwfc	fsr2h,f,c
  6488  00141A  8CDF               	bsf	indf2,6,c
  6489  00141C                     i2l271:
  6490                           
  6491                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
  6492  00141C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6493  001420  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6494  001424  0EF4               	movlw	244
  6495  001426  18DE               	xorwf	postinc2,w,c
  6496  001428  E10A               	bnz	i2l272
  6497  00142A  04DE               	decf	postinc2,w,c
  6498  00142C  A4D8               	btfss	status,2,c
  6499  00142E  D007               	goto	i2l272
  6500  001430  EE20 F003          	lfsr	2,3
  6501  001434  5001               	movf	button_timer_interrupt@bt,w,c
  6502  001436  26D9               	addwf	fsr2l,f,c
  6503  001438  5002               	movf	button_timer_interrupt@bt+1,w,c
  6504  00143A  22DA               	addwfc	fsr2h,f,c
  6505  00143C  8ADF               	bsf	indf2,5,c
  6506  00143E                     i2l272:
  6507                           
  6508                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
  6509  00143E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6510  001442  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6511  001446  0E2C               	movlw	44
  6512  001448  18DE               	xorwf	postinc2,w,c
  6513  00144A  E10A               	bnz	i2l273
  6514  00144C  04DE               	decf	postinc2,w,c
  6515  00144E  A4D8               	btfss	status,2,c
  6516  001450  D007               	goto	i2l273
  6517  001452  EE20 F003          	lfsr	2,3
  6518  001456  5001               	movf	button_timer_interrupt@bt,w,c
  6519  001458  26D9               	addwf	fsr2l,f,c
  6520  00145A  5002               	movf	button_timer_interrupt@bt+1,w,c
  6521  00145C  22DA               	addwfc	fsr2h,f,c
  6522  00145E  88DF               	bsf	indf2,4,c
  6523  001460                     i2l273:
  6524                           
  6525                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  6526  001460  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6527  001464  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6528  001468  0E96               	movlw	150
  6529  00146A  18DE               	xorwf	postinc2,w,c
  6530  00146C  10DE               	iorwf	postinc2,w,c
  6531  00146E  A4D8               	btfss	status,2,c
  6532  001470  D007               	goto	i2l274
  6533  001472  EE20 F003          	lfsr	2,3
  6534  001476  5001               	movf	button_timer_interrupt@bt,w,c
  6535  001478  26D9               	addwf	fsr2l,f,c
  6536  00147A  5002               	movf	button_timer_interrupt@bt+1,w,c
  6537  00147C  22DA               	addwfc	fsr2h,f,c
  6538  00147E  86DF               	bsf	indf2,3,c
  6539  001480                     i2l274:
  6540                           
  6541                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
  6542  001480  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6543  001484  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6544  001488  0E3C               	movlw	60
  6545  00148A  18DE               	xorwf	postinc2,w,c
  6546  00148C  10DE               	iorwf	postinc2,w,c
  6547  00148E  A4D8               	btfss	status,2,c
  6548  001490  D007               	goto	i2l275
  6549  001492  EE20 F003          	lfsr	2,3
  6550  001496  5001               	movf	button_timer_interrupt@bt,w,c
  6551  001498  26D9               	addwf	fsr2l,f,c
  6552  00149A  5002               	movf	button_timer_interrupt@bt+1,w,c
  6553  00149C  22DA               	addwfc	fsr2h,f,c
  6554  00149E  84DF               	bsf	indf2,2,c
  6555  0014A0                     i2l275:
  6556                           
  6557                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
  6558  0014A0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6559  0014A4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6560  0014A8  0E10               	movlw	16
  6561  0014AA  18DE               	xorwf	postinc2,w,c
  6562  0014AC  10DE               	iorwf	postinc2,w,c
  6563  0014AE  A4D8               	btfss	status,2,c
  6564  0014B0  D007               	goto	i2l276
  6565  0014B2  EE20 F003          	lfsr	2,3
  6566  0014B6  5001               	movf	button_timer_interrupt@bt,w,c
  6567  0014B8  26D9               	addwf	fsr2l,f,c
  6568  0014BA  5002               	movf	button_timer_interrupt@bt+1,w,c
  6569  0014BC  22DA               	addwfc	fsr2h,f,c
  6570  0014BE  82DF               	bsf	indf2,1,c
  6571  0014C0                     i2l276:
  6572                           
  6573                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  6574  0014C0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6575  0014C4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6576  0014C8  0E02               	movlw	2
  6577  0014CA  18DE               	xorwf	postinc2,w,c
  6578  0014CC  10DE               	iorwf	postinc2,w,c
  6579  0014CE  A4D8               	btfss	status,2,c
  6580  0014D0  D007               	goto	i2l277
  6581  0014D2  EE20 F003          	lfsr	2,3
  6582  0014D6  5001               	movf	button_timer_interrupt@bt,w,c
  6583  0014D8  26D9               	addwf	fsr2l,f,c
  6584  0014DA  5002               	movf	button_timer_interrupt@bt+1,w,c
  6585  0014DC  22DA               	addwfc	fsr2h,f,c
  6586  0014DE  80DF               	bsf	indf2,0,c
  6587  0014E0                     i2l277:
  6588                           
  6589                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
  6590  0014E0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6591  0014E4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6592  0014E8  0E85               	movlw	133
  6593  0014EA  5CDE               	subwf	postinc2,w,c
  6594  0014EC  0E03               	movlw	3
  6595  0014EE  58DE               	subwfb	postinc2,w,c
  6596  0014F0  B0D8               	btfsc	status,0,c
  6597  0014F2  0012               	return	
  6598  0014F4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6599  0014F8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6600  0014FC  2ADE               	incf	postinc2,f,c
  6601  0014FE  0E00               	movlw	0
  6602  001500  22DD               	addwfc	postdec2,f,c
  6603                           
  6604                           ;My_header\My_button.h: 62: } else {
  6605  001502  0012               	return	
  6606  001504                     i2l3424:
  6607                           
  6608                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
  6609  001504  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6610  001508  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6611  00150C  0E84               	movlw	132
  6612  00150E  5CDE               	subwf	postinc2,w,c
  6613  001510  0E03               	movlw	3
  6614  001512  58DE               	subwfb	postinc2,w,c
  6615  001514  A0D8               	btfss	status,0,c
  6616  001516  D008               	goto	i2l3428
  6617  001518  EE20 F002          	lfsr	2,2
  6618  00151C  5001               	movf	button_timer_interrupt@bt,w,c
  6619  00151E  26D9               	addwf	fsr2l,f,c
  6620  001520  5002               	movf	button_timer_interrupt@bt+1,w,c
  6621  001522  22DA               	addwfc	fsr2h,f,c
  6622  001524  8EDF               	bsf	indf2,7,c
  6623  001526  D081               	goto	i2l3456
  6624  001528                     i2l3428:
  6625                           
  6626                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
  6627  001528  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6628  00152C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6629  001530  0EBC               	movlw	188
  6630  001532  5CDE               	subwf	postinc2,w,c
  6631  001534  0E02               	movlw	2
  6632  001536  58DE               	subwfb	postinc2,w,c
  6633  001538  A0D8               	btfss	status,0,c
  6634  00153A  D008               	goto	i2l3432
  6635  00153C  EE20 F002          	lfsr	2,2
  6636  001540  5001               	movf	button_timer_interrupt@bt,w,c
  6637  001542  26D9               	addwf	fsr2l,f,c
  6638  001544  5002               	movf	button_timer_interrupt@bt+1,w,c
  6639  001546  22DA               	addwfc	fsr2h,f,c
  6640  001548  8CDF               	bsf	indf2,6,c
  6641  00154A  D06F               	goto	i2l3456
  6642  00154C                     i2l3432:
  6643                           
  6644                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
  6645  00154C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6646  001550  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6647  001554  0EF4               	movlw	244
  6648  001556  5CDE               	subwf	postinc2,w,c
  6649  001558  0E01               	movlw	1
  6650  00155A  58DE               	subwfb	postinc2,w,c
  6651  00155C  A0D8               	btfss	status,0,c
  6652  00155E  D008               	goto	i2l3436
  6653  001560  EE20 F002          	lfsr	2,2
  6654  001564  5001               	movf	button_timer_interrupt@bt,w,c
  6655  001566  26D9               	addwf	fsr2l,f,c
  6656  001568  5002               	movf	button_timer_interrupt@bt+1,w,c
  6657  00156A  22DA               	addwfc	fsr2h,f,c
  6658  00156C  8ADF               	bsf	indf2,5,c
  6659  00156E  D05D               	goto	i2l3456
  6660  001570                     i2l3436:
  6661                           
  6662                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
  6663  001570  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6664  001574  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6665  001578  0E2C               	movlw	44
  6666  00157A  5CDE               	subwf	postinc2,w,c
  6667  00157C  0E01               	movlw	1
  6668  00157E  58DE               	subwfb	postinc2,w,c
  6669  001580  A0D8               	btfss	status,0,c
  6670  001582  D008               	goto	i2l3440
  6671  001584  EE20 F002          	lfsr	2,2
  6672  001588  5001               	movf	button_timer_interrupt@bt,w,c
  6673  00158A  26D9               	addwf	fsr2l,f,c
  6674  00158C  5002               	movf	button_timer_interrupt@bt+1,w,c
  6675  00158E  22DA               	addwfc	fsr2h,f,c
  6676  001590  88DF               	bsf	indf2,4,c
  6677  001592  D04B               	goto	i2l3456
  6678  001594                     i2l3440:
  6679                           
  6680                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  6681  001594  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6682  001598  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6683  00159C  0E01               	movlw	1
  6684  00159E  50DB               	movf	plusw2,w,c
  6685  0015A0  E104               	bnz	i2u307_40
  6686  0015A2  0E96               	movlw	150
  6687  0015A4  5CDE               	subwf	postinc2,w,c
  6688  0015A6  A0D8               	btfss	status,0,c
  6689  0015A8  D008               	goto	i2l3444
  6690  0015AA                     i2u307_40:
  6691  0015AA  EE20 F002          	lfsr	2,2
  6692  0015AE  5001               	movf	button_timer_interrupt@bt,w,c
  6693  0015B0  26D9               	addwf	fsr2l,f,c
  6694  0015B2  5002               	movf	button_timer_interrupt@bt+1,w,c
  6695  0015B4  22DA               	addwfc	fsr2h,f,c
  6696  0015B6  86DF               	bsf	indf2,3,c
  6697  0015B8  D038               	goto	i2l3456
  6698  0015BA                     i2l3444:
  6699                           
  6700                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
  6701  0015BA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6702  0015BE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6703  0015C2  0E01               	movlw	1
  6704  0015C4  50DB               	movf	plusw2,w,c
  6705  0015C6  E104               	bnz	i2u308_40
  6706  0015C8  0E3C               	movlw	60
  6707  0015CA  5CDE               	subwf	postinc2,w,c
  6708  0015CC  A0D8               	btfss	status,0,c
  6709  0015CE  D008               	goto	i2l3448
  6710  0015D0                     i2u308_40:
  6711  0015D0  EE20 F002          	lfsr	2,2
  6712  0015D4  5001               	movf	button_timer_interrupt@bt,w,c
  6713  0015D6  26D9               	addwf	fsr2l,f,c
  6714  0015D8  5002               	movf	button_timer_interrupt@bt+1,w,c
  6715  0015DA  22DA               	addwfc	fsr2h,f,c
  6716  0015DC  84DF               	bsf	indf2,2,c
  6717  0015DE  D025               	goto	i2l3456
  6718  0015E0                     i2l3448:
  6719                           
  6720                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
  6721  0015E0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6722  0015E4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6723  0015E8  0E01               	movlw	1
  6724  0015EA  50DB               	movf	plusw2,w,c
  6725  0015EC  E104               	bnz	i2u309_40
  6726  0015EE  0E10               	movlw	16
  6727  0015F0  5CDE               	subwf	postinc2,w,c
  6728  0015F2  A0D8               	btfss	status,0,c
  6729  0015F4  D008               	goto	i2l3452
  6730  0015F6                     i2u309_40:
  6731  0015F6  EE20 F002          	lfsr	2,2
  6732  0015FA  5001               	movf	button_timer_interrupt@bt,w,c
  6733  0015FC  26D9               	addwf	fsr2l,f,c
  6734  0015FE  5002               	movf	button_timer_interrupt@bt+1,w,c
  6735  001600  22DA               	addwfc	fsr2h,f,c
  6736  001602  82DF               	bsf	indf2,1,c
  6737  001604  D012               	goto	i2l3456
  6738  001606                     i2l3452:
  6739                           
  6740                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  6741  001606  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6742  00160A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6743  00160E  0E01               	movlw	1
  6744  001610  50DB               	movf	plusw2,w,c
  6745  001612  E104               	bnz	i2u310_40
  6746  001614  0E02               	movlw	2
  6747  001616  5CDE               	subwf	postinc2,w,c
  6748  001618  A0D8               	btfss	status,0,c
  6749  00161A  D007               	goto	i2l3456
  6750  00161C                     i2u310_40:
  6751  00161C  EE20 F002          	lfsr	2,2
  6752  001620  5001               	movf	button_timer_interrupt@bt,w,c
  6753  001622  26D9               	addwf	fsr2l,f,c
  6754  001624  5002               	movf	button_timer_interrupt@bt+1,w,c
  6755  001626  22DA               	addwfc	fsr2h,f,c
  6756  001628  80DF               	bsf	indf2,0,c
  6757  00162A                     i2l3456:
  6758                           
  6759                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
  6760  00162A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  6761  00162E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  6762  001632  0E00               	movlw	0
  6763  001634  6EDE               	movwf	postinc2,c
  6764  001636  0E00               	movlw	0
  6765  001638  6EDD               	movwf	postdec2,c
  6766                           
  6767                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
  6768  00163A  EE20 F002          	lfsr	2,2
  6769  00163E  5001               	movf	button_timer_interrupt@bt,w,c
  6770  001640  26D9               	addwf	fsr2l,f,c
  6771  001642  5002               	movf	button_timer_interrupt@bt+1,w,c
  6772  001644  22DA               	addwfc	fsr2h,f,c
  6773  001646  0EFF               	movlw	255
  6774  001648  16DE               	andwf	postinc2,f,c
  6775  00164A  0E00               	movlw	0
  6776  00164C  16DD               	andwf	postdec2,f,c
  6777  00164E  0012               	return	
  6778  001650                     __end_of_button_timer_interrupt:
  6779                           	opt stack 0
  6780                           pclatu	equ	0xFFB
  6781                           pclath	equ	0xFFA
  6782                           tblptru	equ	0xFF8
  6783                           tblptrh	equ	0xFF7
  6784                           tblptrl	equ	0xFF6
  6785                           tablat	equ	0xFF5
  6786                           prodh	equ	0xFF4
  6787                           prodl	equ	0xFF3
  6788                           intcon	equ	0xFF2
  6789                           intcon2	equ	0xFF1
  6790                           indf0	equ	0xFEF
  6791                           postinc0	equ	0xFEE
  6792                           fsr0h	equ	0xFEA
  6793                           fsr0l	equ	0xFE9
  6794                           wreg	equ	0xFE8
  6795                           fsr1h	equ	0xFE2
  6796                           fsr1l	equ	0xFE1
  6797                           indf2	equ	0xFDF
  6798                           postinc2	equ	0xFDE
  6799                           postdec2	equ	0xFDD
  6800                           plusw2	equ	0xFDB
  6801                           fsr2h	equ	0xFDA
  6802                           fsr2l	equ	0xFD9
  6803                           status	equ	0xFD8
  6804                           
  6805 ;; *************** function _UART_ISR *****************
  6806 ;; Defined at:
  6807 ;;		line 208 in file "../My_header\My_header.h"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;		None
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  ascii           1   15[COMRAM] unsigned char 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;		None               void
  6814 ;; Registers used:
  6815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;Total ram usage:        1 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    2
  6828 ;; This function calls:
  6829 ;;		_ringbuf_num
  6830 ;;		_ringbuf_pop
  6831 ;;		_ringbuf_put
  6832 ;; This function is called by:
  6833 ;;		_ISR
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text39
  6838  0022E0                     __ptext39:
  6839                           	opt stack 0
  6840  0022E0                     _UART_ISR:
  6841                           	opt stack 22
  6842                           
  6843                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
  6844                           
  6845                           ;incstack = 0
  6846  0022E0  B89D               	btfsc	3997,4,c	;volatile
  6847  0022E2  A89E               	btfss	3998,4,c	;volatile
  6848  0022E4  D013               	goto	i2l205
  6849                           
  6850                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
  6851  0022E6  0ED0               	movlw	low _tx_buf
  6852  0022E8  6E01               	movwf	ringbuf_num@rb,c
  6853  0022EA  0E01               	movlw	high _tx_buf
  6854  0022EC  6E02               	movwf	ringbuf_num@rb+1,c
  6855  0022EE  ECB4  F00D         	call	_ringbuf_num	;wreg free
  6856  0022F2  5001               	movf	?_ringbuf_num,w,c
  6857  0022F4  1002               	iorwf	?_ringbuf_num+1,w,c
  6858  0022F6  B4D8               	btfsc	status,2,c
  6859  0022F8  D008               	goto	i2l206
  6860                           
  6861                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
  6862  0022FA  0ED0               	movlw	low _tx_buf
  6863  0022FC  6E09               	movwf	ringbuf_pop@rb,c
  6864  0022FE  0E01               	movlw	high _tx_buf
  6865  002300  6E0A               	movwf	ringbuf_pop@rb+1,c
  6866  002302  EC6D  F00E         	call	_ringbuf_pop	;wreg free
  6867  002306  6EAE               	movwf	4014,c	;volatile
  6868                           
  6869                           ;My_header\My_header.h: 212: } else {
  6870  002308  D001               	goto	i2l205
  6871  00230A                     i2l206:
  6872                           
  6873                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
  6874  00230A  989D               	bcf	3997,4,c	;volatile
  6875  00230C                     i2l205:
  6876                           
  6877                           ;My_header\My_header.h: 214: }
  6878                           ;My_header\My_header.h: 215: }
  6879                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
  6880  00230C  AA9E               	btfss	3998,5,c	;volatile
  6881  00230E  0012               	return	
  6882  002310  AA9D               	btfss	3997,5,c	;volatile
  6883  002312  0012               	return	
  6884                           
  6885                           ;My_header\My_header.h: 217: char ascii = RCREG1;
  6886  002314  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
  6887                           
  6888                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
  6889  002318  0E82               	movlw	low _rx_buf
  6890  00231A  6E09               	movwf	ringbuf_put@rb,c
  6891  00231C  0E00               	movlw	high _rx_buf
  6892  00231E  6E0A               	movwf	ringbuf_put@rb+1,c
  6893  002320  C010  F00B         	movff	UART_ISR@ascii,ringbuf_put@asciicode
  6894  002324  EC12  F00E         	call	_ringbuf_put	;wreg free
  6895  002328  0012               	return	
  6896  00232A                     __end_of_UART_ISR:
  6897                           	opt stack 0
  6898                           pclatu	equ	0xFFB
  6899                           pclath	equ	0xFFA
  6900                           tblptru	equ	0xFF8
  6901                           tblptrh	equ	0xFF7
  6902                           tblptrl	equ	0xFF6
  6903                           tablat	equ	0xFF5
  6904                           prodh	equ	0xFF4
  6905                           prodl	equ	0xFF3
  6906                           intcon	equ	0xFF2
  6907                           intcon2	equ	0xFF1
  6908                           indf0	equ	0xFEF
  6909                           postinc0	equ	0xFEE
  6910                           fsr0h	equ	0xFEA
  6911                           fsr0l	equ	0xFE9
  6912                           wreg	equ	0xFE8
  6913                           fsr1h	equ	0xFE2
  6914                           fsr1l	equ	0xFE1
  6915                           indf2	equ	0xFDF
  6916                           postinc2	equ	0xFDE
  6917                           postdec2	equ	0xFDD
  6918                           plusw2	equ	0xFDB
  6919                           fsr2h	equ	0xFDA
  6920                           fsr2l	equ	0xFD9
  6921                           status	equ	0xFD8
  6922                           
  6923 ;; *************** function _ringbuf_put *****************
  6924 ;; Defined at:
  6925 ;;		line 39 in file "../My_header\My_ringbuf.h"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  6928 ;;		 -> rx_buf(8), tx_buf(8), 
  6929 ;;  asciicode       1   10[COMRAM] unsigned char 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;		None               void
  6934 ;; Registers used:
  6935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6941 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6944 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6945 ;;Total ram usage:        7 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    1
  6948 ;; This function calls:
  6949 ;;		_ringbuf_num
  6950 ;; This function is called by:
  6951 ;;		_UART_ISR
  6952 ;;		_tx_send
  6953 ;;		_tx_sends
  6954 ;;		_ringbuf_put_num
  6955 ;;		_ringbuf_put_str
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text40
  6960  001C24                     __ptext40:
  6961                           	opt stack 0
  6962  001C24                     _ringbuf_put:
  6963                           	opt stack 22
  6964                           
  6965                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  6966                           
  6967                           ;incstack = 0
  6968  001C24  C009  F001         	movff	ringbuf_put@rb,ringbuf_num@rb
  6969  001C28  C00A  F002         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  6970  001C2C  ECB4  F00D         	call	_ringbuf_num	;wreg free
  6971  001C30  EE20 F002          	lfsr	2,2
  6972  001C34  5009               	movf	ringbuf_put@rb,w,c
  6973  001C36  26D9               	addwf	fsr2l,f,c
  6974  001C38  500A               	movf	ringbuf_put@rb+1,w,c
  6975  001C3A  22DA               	addwfc	fsr2h,f,c
  6976  001C3C  50DE               	movf	postinc2,w,c
  6977  001C3E  5C01               	subwf	?_ringbuf_num,w,c
  6978  001C40  50DE               	movf	postinc2,w,c
  6979  001C42  5802               	subwfb	?_ringbuf_num+1,w,c
  6980  001C44  B0D8               	btfsc	status,0,c
  6981  001C46  0012               	return	
  6982                           
  6983                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  6984  001C48  EE20 F004          	lfsr	2,4
  6985  001C4C  5009               	movf	ringbuf_put@rb,w,c
  6986  001C4E  26D9               	addwf	fsr2l,f,c
  6987  001C50  500A               	movf	ringbuf_put@rb+1,w,c
  6988  001C52  22DA               	addwfc	fsr2h,f,c
  6989  001C54  CFDE F00C          	movff	postinc2,??_ringbuf_put
  6990  001C58  CFDD F00D          	movff	postdec2,??_ringbuf_put+1
  6991  001C5C  C009  FFD9         	movff	ringbuf_put@rb,fsr2l
  6992  001C60  C00A  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  6993  001C64  CFDE F00E          	movff	postinc2,??_ringbuf_put+2
  6994  001C68  CFDD F00F          	movff	postdec2,??_ringbuf_put+3
  6995  001C6C  500C               	movf	??_ringbuf_put,w,c
  6996  001C6E  240E               	addwf	??_ringbuf_put+2,w,c
  6997  001C70  6ED9               	movwf	fsr2l,c
  6998  001C72  500D               	movf	??_ringbuf_put+1,w,c
  6999  001C74  200F               	addwfc	??_ringbuf_put+3,w,c
  7000  001C76  6EDA               	movwf	fsr2h,c
  7001  001C78  C00B  FFDF         	movff	ringbuf_put@asciicode,indf2
  7002                           
  7003                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  7004  001C7C  EE20 F002          	lfsr	2,2
  7005  001C80  5009               	movf	ringbuf_put@rb,w,c
  7006  001C82  26D9               	addwf	fsr2l,f,c
  7007  001C84  500A               	movf	ringbuf_put@rb+1,w,c
  7008  001C86  22DA               	addwfc	fsr2h,f,c
  7009  001C88  EE10 F004          	lfsr	1,4
  7010  001C8C  5009               	movf	ringbuf_put@rb,w,c
  7011  001C8E  26E1               	addwf	fsr1l,f,c
  7012  001C90  500A               	movf	ringbuf_put@rb+1,w,c
  7013  001C92  22E2               	addwfc	fsr1h,f,c
  7014  001C94  CFE6 F00E          	movff	postinc1,??_ringbuf_put+2
  7015  001C98  CFE5 F00F          	movff	postdec1,??_ringbuf_put+3
  7016  001C9C  0E01               	movlw	1
  7017  001C9E  260E               	addwf	??_ringbuf_put+2,f,c
  7018  001CA0  0E00               	movlw	0
  7019  001CA2  220F               	addwfc	??_ringbuf_put+3,f,c
  7020  001CA4  50DE               	movf	postinc2,w,c
  7021  001CA6  5C0E               	subwf	??_ringbuf_put+2,w,c
  7022  001CA8  50DE               	movf	postinc2,w,c
  7023  001CAA  580F               	subwfb	??_ringbuf_put+3,w,c
  7024  001CAC  B0D8               	btfsc	status,0,c
  7025  001CAE  D00A               	goto	i2l2860
  7026  001CB0  EE20 F004          	lfsr	2,4
  7027  001CB4  5009               	movf	ringbuf_put@rb,w,c
  7028  001CB6  26D9               	addwf	fsr2l,f,c
  7029  001CB8  500A               	movf	ringbuf_put@rb+1,w,c
  7030  001CBA  22DA               	addwfc	fsr2h,f,c
  7031  001CBC  2ADE               	incf	postinc2,f,c
  7032  001CBE  0E00               	movlw	0
  7033  001CC0  22DD               	addwfc	postdec2,f,c
  7034  001CC2  0012               	return	
  7035  001CC4                     i2l2860:
  7036                           
  7037                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  7038  001CC4  EE20 F004          	lfsr	2,4
  7039  001CC8  5009               	movf	ringbuf_put@rb,w,c
  7040  001CCA  26D9               	addwf	fsr2l,f,c
  7041  001CCC  500A               	movf	ringbuf_put@rb+1,w,c
  7042  001CCE  22DA               	addwfc	fsr2h,f,c
  7043  001CD0  0E00               	movlw	0
  7044  001CD2  6EDE               	movwf	postinc2,c
  7045  001CD4  0E00               	movlw	0
  7046  001CD6  6EDD               	movwf	postdec2,c
  7047  001CD8  0012               	return	
  7048  001CDA                     __end_of_ringbuf_put:
  7049                           	opt stack 0
  7050                           pclatu	equ	0xFFB
  7051                           pclath	equ	0xFFA
  7052                           tblptru	equ	0xFF8
  7053                           tblptrh	equ	0xFF7
  7054                           tblptrl	equ	0xFF6
  7055                           tablat	equ	0xFF5
  7056                           prodh	equ	0xFF4
  7057                           prodl	equ	0xFF3
  7058                           intcon	equ	0xFF2
  7059                           intcon2	equ	0xFF1
  7060                           indf0	equ	0xFEF
  7061                           postinc0	equ	0xFEE
  7062                           fsr0h	equ	0xFEA
  7063                           fsr0l	equ	0xFE9
  7064                           wreg	equ	0xFE8
  7065                           postinc1	equ	0xFE6
  7066                           postdec1	equ	0xFE5
  7067                           fsr1h	equ	0xFE2
  7068                           fsr1l	equ	0xFE1
  7069                           indf2	equ	0xFDF
  7070                           postinc2	equ	0xFDE
  7071                           postdec2	equ	0xFDD
  7072                           plusw2	equ	0xFDB
  7073                           fsr2h	equ	0xFDA
  7074                           fsr2l	equ	0xFD9
  7075                           status	equ	0xFD8
  7076                           
  7077 ;; *************** function _ringbuf_pop *****************
  7078 ;; Defined at:
  7079 ;;		line 64 in file "../My_header\My_ringbuf.h"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  7082 ;;		 -> tx_buf(8), 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  ret             1   14[COMRAM] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      unsigned char 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7096 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7097 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7098 ;;Total ram usage:        7 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    1
  7101 ;; This function calls:
  7102 ;;		_ringbuf_num
  7103 ;; This function is called by:
  7104 ;;		_UART_ISR
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text41
  7109  001CDA                     __ptext41:
  7110                           	opt stack 0
  7111  001CDA                     _ringbuf_pop:
  7112                           	opt stack 22
  7113                           
  7114                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  7115                           
  7116                           ;incstack = 0
  7117  001CDA  C009  F001         	movff	ringbuf_pop@rb,ringbuf_num@rb
  7118  001CDE  C00A  F002         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  7119  001CE2  ECB4  F00D         	call	_ringbuf_num	;wreg free
  7120  001CE6  5001               	movf	?_ringbuf_num,w,c
  7121  001CE8  1002               	iorwf	?_ringbuf_num+1,w,c
  7122  001CEA  B4D8               	btfsc	status,2,c
  7123  001CEC  D04A               	goto	i2l2990
  7124                           
  7125                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  7126  001CEE  EE20 F006          	lfsr	2,6
  7127  001CF2  5009               	movf	ringbuf_pop@rb,w,c
  7128  001CF4  26D9               	addwf	fsr2l,f,c
  7129  001CF6  500A               	movf	ringbuf_pop@rb+1,w,c
  7130  001CF8  22DA               	addwfc	fsr2h,f,c
  7131  001CFA  CFDE F00B          	movff	postinc2,??_ringbuf_pop
  7132  001CFE  CFDD F00C          	movff	postdec2,??_ringbuf_pop+1
  7133  001D02  C009  FFD9         	movff	ringbuf_pop@rb,fsr2l
  7134  001D06  C00A  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  7135  001D0A  CFDE F00D          	movff	postinc2,??_ringbuf_pop+2
  7136  001D0E  CFDD F00E          	movff	postdec2,??_ringbuf_pop+3
  7137  001D12  500B               	movf	??_ringbuf_pop,w,c
  7138  001D14  240D               	addwf	??_ringbuf_pop+2,w,c
  7139  001D16  6ED9               	movwf	fsr2l,c
  7140  001D18  500C               	movf	??_ringbuf_pop+1,w,c
  7141  001D1A  200E               	addwfc	??_ringbuf_pop+3,w,c
  7142  001D1C  6EDA               	movwf	fsr2h,c
  7143  001D1E  50DF               	movf	indf2,w,c
  7144  001D20  6E0F               	movwf	ringbuf_pop@ret,c
  7145                           
  7146                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  7147  001D22  EE20 F002          	lfsr	2,2
  7148  001D26  5009               	movf	ringbuf_pop@rb,w,c
  7149  001D28  26D9               	addwf	fsr2l,f,c
  7150  001D2A  500A               	movf	ringbuf_pop@rb+1,w,c
  7151  001D2C  22DA               	addwfc	fsr2h,f,c
  7152  001D2E  EE10 F006          	lfsr	1,6
  7153  001D32  5009               	movf	ringbuf_pop@rb,w,c
  7154  001D34  26E1               	addwf	fsr1l,f,c
  7155  001D36  500A               	movf	ringbuf_pop@rb+1,w,c
  7156  001D38  22E2               	addwfc	fsr1h,f,c
  7157  001D3A  CFE6 F00D          	movff	postinc1,??_ringbuf_pop+2
  7158  001D3E  CFE5 F00E          	movff	postdec1,??_ringbuf_pop+3
  7159  001D42  0E01               	movlw	1
  7160  001D44  260D               	addwf	??_ringbuf_pop+2,f,c
  7161  001D46  0E00               	movlw	0
  7162  001D48  220E               	addwfc	??_ringbuf_pop+3,f,c
  7163  001D4A  50DE               	movf	postinc2,w,c
  7164  001D4C  5C0D               	subwf	??_ringbuf_pop+2,w,c
  7165  001D4E  50DE               	movf	postinc2,w,c
  7166  001D50  580E               	subwfb	??_ringbuf_pop+3,w,c
  7167  001D52  B0D8               	btfsc	status,0,c
  7168  001D54  D00A               	goto	i2l2982
  7169                           
  7170                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  7171  001D56  EE20 F006          	lfsr	2,6
  7172  001D5A  5009               	movf	ringbuf_pop@rb,w,c
  7173  001D5C  26D9               	addwf	fsr2l,f,c
  7174  001D5E  500A               	movf	ringbuf_pop@rb+1,w,c
  7175  001D60  22DA               	addwfc	fsr2h,f,c
  7176  001D62  2ADE               	incf	postinc2,f,c
  7177  001D64  0E00               	movlw	0
  7178  001D66  22DD               	addwfc	postdec2,f,c
  7179                           
  7180                           ;My_header\My_ringbuf.h: 69: } else {
  7181  001D68  D00A               	goto	i2l2984
  7182  001D6A                     i2l2982:
  7183                           
  7184                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  7185  001D6A  EE20 F006          	lfsr	2,6
  7186  001D6E  5009               	movf	ringbuf_pop@rb,w,c
  7187  001D70  26D9               	addwf	fsr2l,f,c
  7188  001D72  500A               	movf	ringbuf_pop@rb+1,w,c
  7189  001D74  22DA               	addwfc	fsr2h,f,c
  7190  001D76  0E00               	movlw	0
  7191  001D78  6EDE               	movwf	postinc2,c
  7192  001D7A  0E00               	movlw	0
  7193  001D7C  6EDD               	movwf	postdec2,c
  7194  001D7E                     i2l2984:
  7195                           
  7196                           ;My_header\My_ringbuf.h: 71: }
  7197                           ;My_header\My_ringbuf.h: 72: return ret;
  7198  001D7E  500F               	movf	ringbuf_pop@ret,w,c
  7199                           
  7200                           ;My_header\My_ringbuf.h: 73: } else {
  7201  001D80  0012               	return	
  7202  001D82                     i2l2990:
  7203                           
  7204                           ;My_header\My_ringbuf.h: 74: return 0;
  7205  001D82  0E00               	movlw	0
  7206  001D84  0012               	return	
  7207  001D86                     __end_of_ringbuf_pop:
  7208                           	opt stack 0
  7209                           pclatu	equ	0xFFB
  7210                           pclath	equ	0xFFA
  7211                           tblptru	equ	0xFF8
  7212                           tblptrh	equ	0xFF7
  7213                           tblptrl	equ	0xFF6
  7214                           tablat	equ	0xFF5
  7215                           prodh	equ	0xFF4
  7216                           prodl	equ	0xFF3
  7217                           intcon	equ	0xFF2
  7218                           intcon2	equ	0xFF1
  7219                           indf0	equ	0xFEF
  7220                           postinc0	equ	0xFEE
  7221                           fsr0h	equ	0xFEA
  7222                           fsr0l	equ	0xFE9
  7223                           wreg	equ	0xFE8
  7224                           postinc1	equ	0xFE6
  7225                           postdec1	equ	0xFE5
  7226                           fsr1h	equ	0xFE2
  7227                           fsr1l	equ	0xFE1
  7228                           indf2	equ	0xFDF
  7229                           postinc2	equ	0xFDE
  7230                           postdec2	equ	0xFDD
  7231                           plusw2	equ	0xFDB
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8
  7235                           
  7236 ;; *************** function _ringbuf_num *****************
  7237 ;; Defined at:
  7238 ;;		line 31 in file "../My_header\My_ringbuf.h"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  7241 ;;		 -> rx_buf(8), tx_buf(8), 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  2    0[COMRAM] unsigned int 
  7246 ;; Registers used:
  7247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7255 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7256 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7257 ;;Total ram usage:        8 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; This function calls:
  7260 ;;		Nothing
  7261 ;; This function is called by:
  7262 ;;		_ringbuf_put
  7263 ;;		_ringbuf_pop
  7264 ;;		_UART_ISR
  7265 ;;		_ringbuf_backspace
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           	psect	text42
  7270  001B68                     __ptext42:
  7271                           	opt stack 0
  7272  001B68                     _ringbuf_num:
  7273                           	opt stack 22
  7274                           
  7275                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  7276                           
  7277                           ;incstack = 0
  7278  001B68  EE20 F006          	lfsr	2,6
  7279  001B6C  5001               	movf	ringbuf_num@rb,w,c
  7280  001B6E  26D9               	addwf	fsr2l,f,c
  7281  001B70  5002               	movf	ringbuf_num@rb+1,w,c
  7282  001B72  22DA               	addwfc	fsr2h,f,c
  7283  001B74  EE10 F004          	lfsr	1,4
  7284  001B78  5001               	movf	ringbuf_num@rb,w,c
  7285  001B7A  26E1               	addwf	fsr1l,f,c
  7286  001B7C  5002               	movf	ringbuf_num@rb+1,w,c
  7287  001B7E  22E2               	addwfc	fsr1h,f,c
  7288  001B80  50DE               	movf	postinc2,w,c
  7289  001B82  5CE6               	subwf	postinc1,w,c
  7290  001B84  50DE               	movf	postinc2,w,c
  7291  001B86  58E6               	subwfb	postinc1,w,c
  7292  001B88  A0D8               	btfss	status,0,c
  7293  001B8A  D01F               	goto	i2l2812
  7294                           
  7295                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  7296  001B8C  EE20 F004          	lfsr	2,4
  7297  001B90  5001               	movf	ringbuf_num@rb,w,c
  7298  001B92  26D9               	addwf	fsr2l,f,c
  7299  001B94  5002               	movf	ringbuf_num@rb+1,w,c
  7300  001B96  22DA               	addwfc	fsr2h,f,c
  7301  001B98  CFDE F003          	movff	postinc2,??_ringbuf_num
  7302  001B9C  CFDD F004          	movff	postdec2,??_ringbuf_num+1
  7303  001BA0  EE20 F006          	lfsr	2,6
  7304  001BA4  5001               	movf	ringbuf_num@rb,w,c
  7305  001BA6  26D9               	addwf	fsr2l,f,c
  7306  001BA8  5002               	movf	ringbuf_num@rb+1,w,c
  7307  001BAA  22DA               	addwfc	fsr2h,f,c
  7308  001BAC  CFDE F005          	movff	postinc2,??_ringbuf_num+2
  7309  001BB0  CFDD F006          	movff	postdec2,??_ringbuf_num+3
  7310  001BB4  1E05               	comf	??_ringbuf_num+2,f,c
  7311  001BB6  1E06               	comf	??_ringbuf_num+3,f,c
  7312  001BB8  4A05               	infsnz	??_ringbuf_num+2,f,c
  7313  001BBA  2A06               	incf	??_ringbuf_num+3,f,c
  7314  001BBC  5003               	movf	??_ringbuf_num,w,c
  7315  001BBE  2405               	addwf	??_ringbuf_num+2,w,c
  7316  001BC0  6E01               	movwf	?_ringbuf_num,c
  7317  001BC2  5004               	movf	??_ringbuf_num+1,w,c
  7318  001BC4  2006               	addwfc	??_ringbuf_num+3,w,c
  7319  001BC6  6E02               	movwf	?_ringbuf_num+1,c
  7320                           
  7321                           ;My_header\My_ringbuf.h: 34: } else {
  7322  001BC8  0012               	return	
  7323  001BCA                     i2l2812:
  7324                           
  7325                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  7326  001BCA  EE20 F004          	lfsr	2,4
  7327  001BCE  5001               	movf	ringbuf_num@rb,w,c
  7328  001BD0  26D9               	addwf	fsr2l,f,c
  7329  001BD2  5002               	movf	ringbuf_num@rb+1,w,c
  7330  001BD4  22DA               	addwfc	fsr2h,f,c
  7331  001BD6  CFDE F003          	movff	postinc2,??_ringbuf_num
  7332  001BDA  CFDD F004          	movff	postdec2,??_ringbuf_num+1
  7333  001BDE  EE20 F002          	lfsr	2,2
  7334  001BE2  5001               	movf	ringbuf_num@rb,w,c
  7335  001BE4  26D9               	addwf	fsr2l,f,c
  7336  001BE6  5002               	movf	ringbuf_num@rb+1,w,c
  7337  001BE8  22DA               	addwfc	fsr2h,f,c
  7338  001BEA  CFDE F005          	movff	postinc2,??_ringbuf_num+2
  7339  001BEE  CFDD F006          	movff	postdec2,??_ringbuf_num+3
  7340  001BF2  EE20 F006          	lfsr	2,6
  7341  001BF6  5001               	movf	ringbuf_num@rb,w,c
  7342  001BF8  26D9               	addwf	fsr2l,f,c
  7343  001BFA  5002               	movf	ringbuf_num@rb+1,w,c
  7344  001BFC  22DA               	addwfc	fsr2h,f,c
  7345  001BFE  CFDE F007          	movff	postinc2,??_ringbuf_num+4
  7346  001C02  CFDD F008          	movff	postdec2,??_ringbuf_num+5
  7347  001C06  1E07               	comf	??_ringbuf_num+4,f,c
  7348  001C08  1E08               	comf	??_ringbuf_num+5,f,c
  7349  001C0A  4A07               	infsnz	??_ringbuf_num+4,f,c
  7350  001C0C  2A08               	incf	??_ringbuf_num+5,f,c
  7351  001C0E  5005               	movf	??_ringbuf_num+2,w,c
  7352  001C10  2607               	addwf	??_ringbuf_num+4,f,c
  7353  001C12  5006               	movf	??_ringbuf_num+3,w,c
  7354  001C14  2208               	addwfc	??_ringbuf_num+5,f,c
  7355  001C16  5003               	movf	??_ringbuf_num,w,c
  7356  001C18  2407               	addwf	??_ringbuf_num+4,w,c
  7357  001C1A  6E01               	movwf	?_ringbuf_num,c
  7358  001C1C  5004               	movf	??_ringbuf_num+1,w,c
  7359  001C1E  2008               	addwfc	??_ringbuf_num+5,w,c
  7360  001C20  6E02               	movwf	?_ringbuf_num+1,c
  7361  001C22  0012               	return	
  7362  001C24                     __end_of_ringbuf_num:
  7363                           	opt stack 0
  7364                           pclatu	equ	0xFFB
  7365                           pclath	equ	0xFFA
  7366                           tblptru	equ	0xFF8
  7367                           tblptrh	equ	0xFF7
  7368                           tblptrl	equ	0xFF6
  7369                           tablat	equ	0xFF5
  7370                           prodh	equ	0xFF4
  7371                           prodl	equ	0xFF3
  7372                           intcon	equ	0xFF2
  7373                           intcon2	equ	0xFF1
  7374                           indf0	equ	0xFEF
  7375                           postinc0	equ	0xFEE
  7376                           fsr0h	equ	0xFEA
  7377                           fsr0l	equ	0xFE9
  7378                           wreg	equ	0xFE8
  7379                           postinc1	equ	0xFE6
  7380                           postdec1	equ	0xFE5
  7381                           fsr1h	equ	0xFE2
  7382                           fsr1l	equ	0xFE1
  7383                           indf2	equ	0xFDF
  7384                           postinc2	equ	0xFDE
  7385                           postdec2	equ	0xFDD
  7386                           plusw2	equ	0xFDB
  7387                           fsr2h	equ	0xFDA
  7388                           fsr2l	equ	0xFD9
  7389                           status	equ	0xFD8
  7390                           
  7391 ;; *************** function _Auto_cut *****************
  7392 ;; Defined at:
  7393 ;;		line 164 in file "main.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;		None
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;  i               1   12[COMRAM] unsigned char 
  7398 ;; Return value:  Size  Location     Type
  7399 ;;		None               void
  7400 ;; Registers used:
  7401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7410 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7411 ;;Total ram usage:        3 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:    1
  7414 ;; This function calls:
  7415 ;;		_ADC
  7416 ;;		___wmul
  7417 ;;		i2_OUT
  7418 ;; This function is called by:
  7419 ;;		_ISR
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text43
  7424  0019CE                     __ptext43:
  7425                           	opt stack 0
  7426  0019CE                     _Auto_cut:
  7427                           	opt stack 23
  7428                           
  7429                           ;main.c: 165: for (uint8_t i = 0; i < 3; i++) {
  7430                           
  7431                           ;incstack = 0
  7432  0019CE  0E00               	movlw	0
  7433  0019D0  6E0D               	movwf	Auto_cut@i,c
  7434  0019D2                     i2l3694:
  7435  0019D2  0E02               	movlw	2
  7436  0019D4  640D               	cpfsgt	Auto_cut@i,c
  7437  0019D6  D001               	goto	i2l3698
  7438  0019D8  0012               	return	
  7439  0019DA                     i2l3698:
  7440                           
  7441                           ;main.c: 166: I[i] = 13 * ADC(i + 8) / 16;
  7442  0019DA  500D               	movf	Auto_cut@i,w,c
  7443  0019DC  0F08               	addlw	8
  7444  0019DE  EC29  F013         	call	_ADC
  7445  0019E2  C001  F005         	movff	?_ADC,___wmul@multiplier
  7446  0019E6  C002  F006         	movff	?_ADC+1,___wmul@multiplier+1
  7447  0019EA  0E00               	movlw	0
  7448  0019EC  6E08               	movwf	___wmul@multiplicand+1,c
  7449  0019EE  0E0D               	movlw	13
  7450  0019F0  6E07               	movwf	___wmul@multiplicand,c
  7451  0019F2  EC3D  F013         	call	___wmul	;wreg free
  7452  0019F6  0E04               	movlw	4
  7453  0019F8  6E0B               	movwf	??_Auto_cut& (0+255),c
  7454  0019FA                     i2u355_45:
  7455  0019FA  90D8               	bcf	status,0,c
  7456  0019FC  3206               	rrcf	?___wmul+1,f,c
  7457  0019FE  3205               	rrcf	?___wmul,f,c
  7458  001A00  2E0B               	decfsz	??_Auto_cut& (0+255),f,c
  7459  001A02  D7FB               	goto	i2u355_45
  7460  001A04  500D               	movf	Auto_cut@i,w,c
  7461  001A06  0D02               	mullw	2
  7462  001A08  0E28               	movlw	low _I
  7463  001A0A  24F3               	addwf	prodl,w,c
  7464  001A0C  6ED9               	movwf	fsr2l,c
  7465  001A0E  0E00               	movlw	high _I
  7466  001A10  20F4               	addwfc	prodh,w,c
  7467  001A12  6EDA               	movwf	fsr2h,c
  7468  001A14  C005  FFDE         	movff	?___wmul,postinc2
  7469  001A18  C006  FFDD         	movff	?___wmul+1,postdec2
  7470                           
  7471                           ;main.c: 167: if (auto_cut_ON[i]) {
  7472  001A1C  500D               	movf	Auto_cut@i,w,c
  7473  001A1E  0D01               	mullw	1
  7474  001A20  0E2E               	movlw	low _auto_cut_ON
  7475  001A22  24F3               	addwf	prodl,w,c
  7476  001A24  6ED9               	movwf	fsr2l,c
  7477  001A26  0E00               	movlw	high _auto_cut_ON
  7478  001A28  20F4               	addwfc	prodh,w,c
  7479  001A2A  6EDA               	movwf	fsr2h,c
  7480  001A2C  50DF               	movf	indf2,w,c
  7481  001A2E  B4D8               	btfsc	status,2,c
  7482  001A30  D03B               	goto	i2l3710
  7483                           
  7484                           ;main.c: 168: if (I[i] < 100) {
  7485  001A32  500D               	movf	Auto_cut@i,w,c
  7486  001A34  0D02               	mullw	2
  7487  001A36  0E28               	movlw	low _I
  7488  001A38  24F3               	addwf	prodl,w,c
  7489  001A3A  6ED9               	movwf	fsr2l,c
  7490  001A3C  0E00               	movlw	high _I
  7491  001A3E  20F4               	addwfc	prodh,w,c
  7492  001A40  6EDA               	movwf	fsr2h,c
  7493  001A42  0E01               	movlw	1
  7494  001A44  50DB               	movf	plusw2,w,c
  7495  001A46  E124               	bnz	i2l3708
  7496  001A48  0E64               	movlw	100
  7497  001A4A  5CDE               	subwf	postinc2,w,c
  7498  001A4C  B0D8               	btfsc	status,0,c
  7499  001A4E  D020               	goto	i2l3708
  7500                           
  7501                           ;main.c: 169: cut_cnt[i]++;
  7502  001A50  500D               	movf	Auto_cut@i,w,c
  7503  001A52  0D02               	mullw	2
  7504  001A54  0EC9               	movlw	low _cut_cnt
  7505  001A56  24F3               	addwf	prodl,w,c
  7506  001A58  6ED9               	movwf	fsr2l,c
  7507  001A5A  0E01               	movlw	high _cut_cnt
  7508  001A5C  20F4               	addwfc	prodh,w,c
  7509  001A5E  6EDA               	movwf	fsr2h,c
  7510  001A60  2ADE               	incf	postinc2,f,c
  7511  001A62  0E00               	movlw	0
  7512  001A64  22DD               	addwfc	postdec2,f,c
  7513                           
  7514                           ;main.c: 170: if (cut_cnt[i] >= 46 * 5) {
  7515  001A66  500D               	movf	Auto_cut@i,w,c
  7516  001A68  0D02               	mullw	2
  7517  001A6A  0EC9               	movlw	low _cut_cnt
  7518  001A6C  24F3               	addwf	prodl,w,c
  7519  001A6E  6ED9               	movwf	fsr2l,c
  7520  001A70  0E01               	movlw	high _cut_cnt
  7521  001A72  20F4               	addwfc	prodh,w,c
  7522  001A74  6EDA               	movwf	fsr2h,c
  7523  001A76  0E01               	movlw	1
  7524  001A78  50DB               	movf	plusw2,w,c
  7525  001A7A  E104               	bnz	i2u358_40
  7526  001A7C  0EE6               	movlw	230
  7527  001A7E  5CDE               	subwf	postinc2,w,c
  7528  001A80  A0D8               	btfss	status,0,c
  7529  001A82  D012               	goto	i2l3710
  7530  001A84                     i2u358_40:
  7531                           
  7532                           ;main.c: 171: OUT(i, 0);
  7533  001A84  0E00               	movlw	0
  7534  001A86  6E01               	movwf	i2OUT@value,c
  7535  001A88  500D               	movf	Auto_cut@i,w,c
  7536  001A8A  ECDB  F011         	call	i2_OUT
  7537                           
  7538                           ;main.c: 172: }
  7539                           ;main.c: 173: } else {
  7540  001A8E  D00C               	goto	i2l3710
  7541  001A90                     i2l3708:
  7542                           
  7543                           ;main.c: 174: cut_cnt[i] = 0;
  7544  001A90  500D               	movf	Auto_cut@i,w,c
  7545  001A92  0D02               	mullw	2
  7546  001A94  0EC9               	movlw	low _cut_cnt
  7547  001A96  24F3               	addwf	prodl,w,c
  7548  001A98  6ED9               	movwf	fsr2l,c
  7549  001A9A  0E01               	movlw	high _cut_cnt
  7550  001A9C  20F4               	addwfc	prodh,w,c
  7551  001A9E  6EDA               	movwf	fsr2h,c
  7552  001AA0  0E00               	movlw	0
  7553  001AA2  6EDE               	movwf	postinc2,c
  7554  001AA4  0E00               	movlw	0
  7555  001AA6  6EDD               	movwf	postdec2,c
  7556  001AA8                     i2l3710:
  7557  001AA8  2A0D               	incf	Auto_cut@i,f,c
  7558  001AAA  D793               	goto	i2l3694
  7559  001AAC                     __end_of_Auto_cut:
  7560                           	opt stack 0
  7561                           pclatu	equ	0xFFB
  7562                           pclath	equ	0xFFA
  7563                           tblptru	equ	0xFF8
  7564                           tblptrh	equ	0xFF7
  7565                           tblptrl	equ	0xFF6
  7566                           tablat	equ	0xFF5
  7567                           prodh	equ	0xFF4
  7568                           prodl	equ	0xFF3
  7569                           intcon	equ	0xFF2
  7570                           intcon2	equ	0xFF1
  7571                           indf0	equ	0xFEF
  7572                           postinc0	equ	0xFEE
  7573                           fsr0h	equ	0xFEA
  7574                           fsr0l	equ	0xFE9
  7575                           wreg	equ	0xFE8
  7576                           postinc1	equ	0xFE6
  7577                           postdec1	equ	0xFE5
  7578                           fsr1h	equ	0xFE2
  7579                           fsr1l	equ	0xFE1
  7580                           indf2	equ	0xFDF
  7581                           postinc2	equ	0xFDE
  7582                           postdec2	equ	0xFDD
  7583                           plusw2	equ	0xFDB
  7584                           fsr2h	equ	0xFDA
  7585                           fsr2l	equ	0xFD9
  7586                           status	equ	0xFD8
  7587                           
  7588 ;; *************** function i2_OUT *****************
  7589 ;; Defined at:
  7590 ;;		line 74 in file "main.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  b               1    wreg     unsigned char 
  7593 ;;  value           1    0[COMRAM] unsigned char 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;  b               1    1[COMRAM] unsigned char 
  7596 ;; Return value:  Size  Location     Type
  7597 ;;		None               void
  7598 ;; Registers used:
  7599 ;;		wreg, status,2, status,0
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7605 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7609 ;;Total ram usage:        2 bytes
  7610 ;; Hardware stack levels used:    1
  7611 ;; This function calls:
  7612 ;;		Nothing
  7613 ;; This function is called by:
  7614 ;;		_Auto_cut
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           	psect	text44
  7619  0023B6                     __ptext44:
  7620                           	opt stack 0
  7621  0023B6                     i2_OUT:
  7622                           	opt stack 23
  7623                           
  7624                           ;incstack = 0
  7625                           ;i2OUT@b stored from wreg
  7626  0023B6  6E02               	movwf	i2OUT@b,c
  7627                           
  7628                           ;main.c: 75: switch (b) {
  7629  0023B8  D015               	goto	i2l3236
  7630  0023BA                     i2l3222:
  7631                           
  7632                           ;main.c: 77: if (value) {
  7633  0023BA  5001               	movf	i2OUT@value,w,c
  7634  0023BC  B4D8               	btfsc	status,2,c
  7635  0023BE  D002               	goto	i2l584
  7636                           
  7637                           ;main.c: 78: LATA5 = 0;
  7638  0023C0  9A89               	bcf	3977,5,c	;volatile
  7639                           
  7640                           ;main.c: 79: } else {
  7641  0023C2  0012               	return	
  7642  0023C4                     i2l584:
  7643                           
  7644                           ;main.c: 80: LATA5 = 1;
  7645  0023C4  8A89               	bsf	3977,5,c	;volatile
  7646                           
  7647                           ;main.c: 81: }
  7648                           ;main.c: 82: break;
  7649  0023C6  0012               	return	
  7650  0023C8                     i2l3226:
  7651                           
  7652                           ;main.c: 84: if (value) {
  7653  0023C8  5001               	movf	i2OUT@value,w,c
  7654  0023CA  B4D8               	btfsc	status,2,c
  7655  0023CC  D002               	goto	i2l588
  7656                           
  7657                           ;main.c: 85: LATA6 = 0;
  7658  0023CE  9C89               	bcf	3977,6,c	;volatile
  7659                           
  7660                           ;main.c: 86: } else {
  7661  0023D0  0012               	return	
  7662  0023D2                     i2l588:
  7663                           
  7664                           ;main.c: 87: LATA6 = 1;
  7665  0023D2  8C89               	bsf	3977,6,c	;volatile
  7666                           
  7667                           ;main.c: 88: }
  7668                           ;main.c: 89: break;
  7669  0023D4  0012               	return	
  7670  0023D6                     i2l3230:
  7671                           
  7672                           ;main.c: 91: if (value) {
  7673  0023D6  5001               	movf	i2OUT@value,w,c
  7674  0023D8  B4D8               	btfsc	status,2,c
  7675  0023DA  D002               	goto	i2l591
  7676                           
  7677                           ;main.c: 92: LATA7 = 0;
  7678  0023DC  9E89               	bcf	3977,7,c	;volatile
  7679                           
  7680                           ;main.c: 93: } else {
  7681  0023DE  0012               	return	
  7682  0023E0                     i2l591:
  7683                           
  7684                           ;main.c: 94: LATA7 = 1;
  7685  0023E0  8E89               	bsf	3977,7,c	;volatile
  7686                           
  7687                           ;main.c: 97: }
  7688                           
  7689                           ;main.c: 95: }
  7690                           ;main.c: 96: break;
  7691  0023E2  0012               	return	
  7692  0023E4                     i2l3236:
  7693  0023E4  5002               	movf	i2OUT@b,w,c
  7694                           
  7695                           ; Switch size 1, requested type "space"
  7696                           ; Number of cases is 3, Range of values is 0 to 2
  7697                           ; switch strategies available:
  7698                           ; Name         Instructions Cycles
  7699                           ; simple_byte           10     6 (average)
  7700                           ;	Chosen strategy is simple_byte
  7701  0023E6  0A00               	xorlw	0	; case 0
  7702  0023E8  B4D8               	btfsc	status,2,c
  7703  0023EA  D7E7               	goto	i2l3222
  7704  0023EC  0A01               	xorlw	1	; case 1
  7705  0023EE  B4D8               	btfsc	status,2,c
  7706  0023F0  D7EB               	goto	i2l3226
  7707  0023F2  0A03               	xorlw	3	; case 2
  7708  0023F4  A4D8               	btfss	status,2,c
  7709  0023F6  0012               	return	
  7710  0023F8  D7EE               	goto	i2l3230
  7711  0023FA                     __end_ofi2_OUT:
  7712                           	opt stack 0
  7713                           pclatu	equ	0xFFB
  7714                           pclath	equ	0xFFA
  7715                           tblptru	equ	0xFF8
  7716                           tblptrh	equ	0xFF7
  7717                           tblptrl	equ	0xFF6
  7718                           tablat	equ	0xFF5
  7719                           prodh	equ	0xFF4
  7720                           prodl	equ	0xFF3
  7721                           intcon	equ	0xFF2
  7722                           intcon2	equ	0xFF1
  7723                           indf0	equ	0xFEF
  7724                           postinc0	equ	0xFEE
  7725                           fsr0h	equ	0xFEA
  7726                           fsr0l	equ	0xFE9
  7727                           wreg	equ	0xFE8
  7728                           postinc1	equ	0xFE6
  7729                           postdec1	equ	0xFE5
  7730                           fsr1h	equ	0xFE2
  7731                           fsr1l	equ	0xFE1
  7732                           indf2	equ	0xFDF
  7733                           postinc2	equ	0xFDE
  7734                           postdec2	equ	0xFDD
  7735                           plusw2	equ	0xFDB
  7736                           fsr2h	equ	0xFDA
  7737                           fsr2l	equ	0xFD9
  7738                           status	equ	0xFD8
  7739                           
  7740 ;; *************** function ___wmul *****************
  7741 ;; Defined at:
  7742 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  multiplier      2    4[COMRAM] unsigned int 
  7745 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;  product         2    8[COMRAM] unsigned int 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  2    4[COMRAM] unsigned int 
  7750 ;; Registers used:
  7751 ;;		wreg, status,2, status,0, prodl, prodh
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7760 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7761 ;;Total ram usage:        6 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_Auto_cut
  7767 ;;		_my_atoi
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text45
  7772  00267A                     __ptext45:
  7773                           	opt stack 0
  7774  00267A                     ___wmul:
  7775                           	opt stack 23
  7776                           
  7777                           ;incstack = 0
  7778  00267A  5005               	movf	___wmul@multiplier,w,c
  7779  00267C  0207               	mulwf	___wmul@multiplicand,c
  7780  00267E  CFF3 F009          	movff	prodl,___wmul@product
  7781  002682  CFF4 F00A          	movff	prodh,___wmul@product+1
  7782  002686  5005               	movf	___wmul@multiplier,w,c
  7783  002688  0208               	mulwf	___wmul@multiplicand+1,c
  7784  00268A  50F3               	movf	prodl,w,c
  7785  00268C  260A               	addwf	___wmul@product+1,f,c
  7786  00268E  5006               	movf	___wmul@multiplier+1,w,c
  7787  002690  0207               	mulwf	___wmul@multiplicand,c
  7788  002692  50F3               	movf	prodl,w,c
  7789  002694  260A               	addwf	___wmul@product+1,f,c
  7790  002696  C009  F005         	movff	___wmul@product,?___wmul
  7791  00269A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7792  00269E  0012               	return	
  7793  0026A0                     __end_of___wmul:
  7794                           	opt stack 0
  7795                           pclatu	equ	0xFFB
  7796                           pclath	equ	0xFFA
  7797                           tblptru	equ	0xFF8
  7798                           tblptrh	equ	0xFF7
  7799                           tblptrl	equ	0xFF6
  7800                           tablat	equ	0xFF5
  7801                           prodh	equ	0xFF4
  7802                           prodl	equ	0xFF3
  7803                           intcon	equ	0xFF2
  7804                           intcon2	equ	0xFF1
  7805                           indf0	equ	0xFEF
  7806                           postinc0	equ	0xFEE
  7807                           fsr0h	equ	0xFEA
  7808                           fsr0l	equ	0xFE9
  7809                           wreg	equ	0xFE8
  7810                           postinc1	equ	0xFE6
  7811                           postdec1	equ	0xFE5
  7812                           fsr1h	equ	0xFE2
  7813                           fsr1l	equ	0xFE1
  7814                           indf2	equ	0xFDF
  7815                           postinc2	equ	0xFDE
  7816                           postdec2	equ	0xFDD
  7817                           plusw2	equ	0xFDB
  7818                           fsr2h	equ	0xFDA
  7819                           fsr2l	equ	0xFD9
  7820                           status	equ	0xFD8
  7821                           
  7822 ;; *************** function _ADC *****************
  7823 ;; Defined at:
  7824 ;;		line 172 in file "../My_header\My_header.h"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  ch              1    wreg     unsigned char 
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;  ch              1    3[COMRAM] unsigned char 
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  2    0[COMRAM] unsigned int 
  7831 ;; Registers used:
  7832 ;;		wreg, status,2, status,0
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7841 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7842 ;;Total ram usage:        4 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; This function calls:
  7845 ;;		Nothing
  7846 ;; This function is called by:
  7847 ;;		_Auto_cut
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           	psect	text46
  7852  002652                     __ptext46:
  7853                           	opt stack 0
  7854  002652                     _ADC:
  7855                           	opt stack 23
  7856                           
  7857                           ;incstack = 0
  7858                           ;ADC@ch stored from wreg
  7859  002652  6E04               	movwf	ADC@ch,c
  7860                           
  7861                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
  7862  002654  C004  F003         	movff	ADC@ch,??_ADC
  7863  002658  4603               	rlncf	??_ADC,f,c
  7864  00265A  4603               	rlncf	??_ADC,f,c
  7865  00265C  50C2               	movf	4034,w,c	;volatile
  7866  00265E  1803               	xorwf	??_ADC,w,c
  7867  002660  0BC3               	andlw	-61
  7868  002662  1803               	xorwf	??_ADC,w,c
  7869  002664  6EC2               	movwf	4034,c	;volatile
  7870                           
  7871                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
  7872  002666  80C2               	bsf	4034,0,c	;volatile
  7873                           
  7874                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
  7875  002668  9C9E               	bcf	3998,6,c	;volatile
  7876                           
  7877                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
  7878  00266A  82C2               	bsf	4034,1,c	;volatile
  7879  00266C                     i2l147:
  7880  00266C  AC9E               	btfss	3998,6,c	;volatile
  7881  00266E  D7FE               	goto	i2l147
  7882                           
  7883                           ;My_header\My_header.h: 179: return ADRES;
  7884  002670  CFC3 F001          	movff	4035,?_ADC	;volatile
  7885  002674  CFC4 F002          	movff	4036,?_ADC+1	;volatile
  7886  002678  0012               	return		;funcret
  7887  00267A                     __end_of_ADC:
  7888                           	opt stack 0
  7889                           pclatu	equ	0xFFB
  7890                           pclath	equ	0xFFA
  7891                           tblptru	equ	0xFF8
  7892                           tblptrh	equ	0xFF7
  7893                           tblptrl	equ	0xFF6
  7894                           tablat	equ	0xFF5
  7895                           prodh	equ	0xFF4
  7896                           prodl	equ	0xFF3
  7897                           intcon	equ	0xFF2
  7898                           intcon2	equ	0xFF1
  7899                           indf0	equ	0xFEF
  7900                           postinc0	equ	0xFEE
  7901                           fsr0h	equ	0xFEA
  7902                           fsr0l	equ	0xFE9
  7903                           wreg	equ	0xFE8
  7904                           postinc1	equ	0xFE6
  7905                           postdec1	equ	0xFE5
  7906                           fsr1h	equ	0xFE2
  7907                           fsr1l	equ	0xFE1
  7908                           indf2	equ	0xFDF
  7909                           postinc2	equ	0xFDE
  7910                           postdec2	equ	0xFDD
  7911                           plusw2	equ	0xFDB
  7912                           fsr2h	equ	0xFDA
  7913                           fsr2l	equ	0xFD9
  7914                           status	equ	0xFD8
  7915                           pclatu	equ	0xFFB
  7916                           pclath	equ	0xFFA
  7917                           tblptru	equ	0xFF8
  7918                           tblptrh	equ	0xFF7
  7919                           tblptrl	equ	0xFF6
  7920                           tablat	equ	0xFF5
  7921                           prodh	equ	0xFF4
  7922                           prodl	equ	0xFF3
  7923                           intcon	equ	0xFF2
  7924                           intcon2	equ	0xFF1
  7925                           indf0	equ	0xFEF
  7926                           postinc0	equ	0xFEE
  7927                           fsr0h	equ	0xFEA
  7928                           fsr0l	equ	0xFE9
  7929                           wreg	equ	0xFE8
  7930                           postinc1	equ	0xFE6
  7931                           postdec1	equ	0xFE5
  7932                           fsr1h	equ	0xFE2
  7933                           fsr1l	equ	0xFE1
  7934                           indf2	equ	0xFDF
  7935                           postinc2	equ	0xFDE
  7936                           postdec2	equ	0xFDD
  7937                           plusw2	equ	0xFDB
  7938                           fsr2h	equ	0xFDA
  7939                           fsr2l	equ	0xFD9
  7940                           status	equ	0xFD8
  7941                           
  7942                           	psect	rparam
  7943  0000                     pclatu	equ	0xFFB
  7944                           pclath	equ	0xFFA
  7945                           tblptru	equ	0xFF8
  7946                           tblptrh	equ	0xFF7
  7947                           tblptrl	equ	0xFF6
  7948                           tablat	equ	0xFF5
  7949                           prodh	equ	0xFF4
  7950                           prodl	equ	0xFF3
  7951                           intcon	equ	0xFF2
  7952                           intcon2	equ	0xFF1
  7953                           indf0	equ	0xFEF
  7954                           postinc0	equ	0xFEE
  7955                           fsr0h	equ	0xFEA
  7956                           fsr0l	equ	0xFE9
  7957                           wreg	equ	0xFE8
  7958                           postinc1	equ	0xFE6
  7959                           postdec1	equ	0xFE5
  7960                           fsr1h	equ	0xFE2
  7961                           fsr1l	equ	0xFE1
  7962                           indf2	equ	0xFDF
  7963                           postinc2	equ	0xFDE
  7964                           postdec2	equ	0xFDD
  7965                           plusw2	equ	0xFDB
  7966                           fsr2h	equ	0xFDA
  7967                           fsr2l	equ	0xFD9
  7968                           status	equ	0xFD8
  7969                           
  7970                           	psect	temp
  7971  000051                     btemp:
  7972                           	opt stack 0
  7973  000051                     	ds	1
  7974  0000                     int$flags	set	btemp
  7975                           pclatu	equ	0xFFB
  7976                           pclath	equ	0xFFA
  7977                           tblptru	equ	0xFF8
  7978                           tblptrh	equ	0xFF7
  7979                           tblptrl	equ	0xFF6
  7980                           tablat	equ	0xFF5
  7981                           prodh	equ	0xFF4
  7982                           prodl	equ	0xFF3
  7983                           intcon	equ	0xFF2
  7984                           intcon2	equ	0xFF1
  7985                           indf0	equ	0xFEF
  7986                           postinc0	equ	0xFEE
  7987                           fsr0h	equ	0xFEA
  7988                           fsr0l	equ	0xFE9
  7989                           wreg	equ	0xFE8
  7990                           postinc1	equ	0xFE6
  7991                           postdec1	equ	0xFE5
  7992                           fsr1h	equ	0xFE2
  7993                           fsr1l	equ	0xFE1
  7994                           indf2	equ	0xFDF
  7995                           postinc2	equ	0xFDE
  7996                           postdec2	equ	0xFDD
  7997                           plusw2	equ	0xFDB
  7998                           fsr2h	equ	0xFDA
  7999                           fsr2l	equ	0xFD9
  8000                           status	equ	0xFD8


Data Sizes:
    Strings     99
    Constant    28
    Data        3
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      80
    BANK0           160     22      75
    BANK1           256    201     220
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_16(CODE[8]), STR_15(CODE[7]), STR_12(CODE[9]), STR_11(CODE[9]), 
		 -> STR_10(CODE[8]), STR_9(CODE[7]), STR_8(CODE[4]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), weekday_3char(CODE[28]), STR_1(CODE[3]), display_dec@str(COMRAM[10]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw(BANK1[4]), sw2(BANK0[4]), sw1(COMRAM[4]), sw0(COMRAM[4]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_14(CODE[3]), STR_13(CODE[5]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK1[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_tx_sendn
    _tx_sends->_ringbuf_put
    _tx_sendn->_tx_send
    _tx_send->_ringbuf_put
    _lchika->___awdiv
    _UART_ISR->_ringbuf_pop
    _UART_ISR->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _Auto_cut->___wmul
    ___wmul->_ADC

Critical Paths under _main in BANK0

    _display->___lldiv
    ___lwdiv->___lwmod
    ___lldiv->___llmod
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _I2C_LCD_Putc->_I2C_Start
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               201   201      0   21937
                                              0 BANK1    201   201      0
                           _ADC_init
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                       _I2C_LCD_init
                           _I2C_init
                                _LED
                                _OUT
                          _UART_init
                            _display
                       _ringbuf_init
                      _sw_flag_clear
                       _sw_flag_read
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (1) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _sw_flag_read                                         2     1      1     644
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _sw_flag_clear                                        2     1      1     540
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         6     0      6     498
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _display                                              0     0      0   11891
                      _I2C_LCD_Clear
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1618
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1557
                                              5 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1480
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1835
                                              9 BANK0     13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    1598
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Puts                                         5     3      2    2469
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Putc                                         2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OUT                                                  2     1      1     401
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _LED                                                  2     1      1     539
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_init                                         0     0      0    1573
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Clear                                        1     1      0     667
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             3     1      2     239
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 17    17      0   12949
                                             22 COMRAM    17    17      0
                           _Auto_cut
                           _UART_ISR
             _button_timer_interrupt
                             _lchika
                            _tx_send
                           _tx_sendn
                           _tx_sends
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (7) i2___lldiv                                           13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (7) _tx_sends                                             2     0      2    1821
                                             15 COMRAM     2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) _tx_sendn                                             6     3      3    2434
                                             16 COMRAM     6     3      3
                            _tx_send
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (8) i2___lwmod                                            5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (8) _tx_send                                              1     1      0    1620
                                             15 COMRAM     1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) _lchika                                               4     4      0    1376
                                              8 COMRAM     4     4      0
                            ___awdiv
                              i2_LED
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (8) i2_LED                                                2     1      1     166
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     656
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _button_timer_interrupt                               5     2      3    1526
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (7) _UART_ISR                                             1     1      0    2907
                                             15 COMRAM     1     1      0
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (8) _ringbuf_put                                          7     4      3    1598
                                              8 COMRAM     7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (8) _ringbuf_pop                                          7     5      2     776
                                              8 COMRAM     7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (9) _ringbuf_num                                          8     6      2     510
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (7) _Auto_cut                                             3     3      0     873
                                             10 COMRAM     3     3      0
                                _ADC
                             ___wmul
                              i2_OUT
 ---------------------------------------------------------------------------------
 (8) i2_OUT                                                2     1      1     114
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     515
                                              4 COMRAM     6     2      4
                                _ADC (ARG)
 ---------------------------------------------------------------------------------
 (8) _ADC                                                  4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_init
     _Delay_ms
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_init
   _LED
   _OUT
   _UART_init
   _display
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Putc
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     ___lldiv
       ___llmod (ARG)
     ___llmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _ringbuf_init
   _sw_flag_clear
   _sw_flag_read
   _timer0_init
   _timer1_init
   _timer3_init

 _ISR (ROOT)
   _Auto_cut
     _ADC
     ___wmul
       _ADC (ARG)
     i2_OUT
   _UART_ISR
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _button_timer_interrupt
   _lchika
     ___awdiv
     i2_LED
     i2___lwdiv
   _tx_send
     _ringbuf_put
       _ringbuf_num
   _tx_sendn
     _tx_send
       _ringbuf_put
         _ringbuf_num
     i2___lwdiv
     i2___lwmod
   _tx_sends
     _ringbuf_put
       _ringbuf_num
   i2___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     C9      DC       8       85.9%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      4B       5       46.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      50       1       85.1%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     177       6        0.0%
DATA                 0      0     177       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 20:55:15 2015

                              _I 0028                                _S 0060  
             __size_of_I2C_Start 0030                               _d1 007C  
                   ___awdiv@sign 0006                               _ms 0078  
                             _ss 006C                               _sw 01D8  
            ___wmul@multiplicand 0007               i2___lwdiv@dividend 0001  
                   _sw_flag_read 24B8                     __CFG_CP0$OFF 000000  
                            l130 226E                              l125 250C  
                            l322 2728                              l307 25BE  
                            l331 2592                              l343 255A  
                            _ADC 2652                              l600 234C  
                            l591 21D6                              l584 21B2  
                            l680 1762                              l690 18BC  
                            l682 18A4                              l588 21C4  
                            l684 17E4                              l597 2330  
                            l599 233E                              _LED 232A  
                            _ISR 0008                              _OUT 219E  
                            _sw0 0046                              _sw1 004A  
                            _sw2 0091                    _sw_flag_clear 2372  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     _I2C_LCD_Putc 252E  
                   _I2C_LCD_Puts 1E20                             ?_ADC 0001  
            sw_flag_read@bit_and 0095                             LED@b 0096  
                           ?_LED 0095                ??_I2C_LCD_Command 0099  
                           ?_ISR 0001                             ?_OUT 0095  
                   _I2C_LCD_init 20F2                             ISR@i 0027  
                           l1109 20E8                             l1046 1B56  
                           l1056 1E0E                             l1099 2022  
                           l5110 189E                             l5120 18B8  
                           l5106 1884                             l4260 26E4  
                           l4420 1AF0                             l5070 176A  
                           l5054 1706                             l4416 1ADA  
                           l4440 1DB8                             l5080 17BE  
                           l4354 2628                             l4418 1AEA  
                           l4506 2270                             l5090 180A  
                           l5074 1774                             l5058 1710  
                           OUT@b 0096                             l4356 263A  
                           l4700 21C8                             l4380 1E4E  
                           l4428 1B44                             l4444 1DFC  
                           l4436 1DA2                             l4438 1DB2  
                           l4454 1FD2                             l4712 235A  
                           l4456 1FDE                             l4800 13A6  
                           l4720 24C6                             l5096 1830  
                           l4706 21DA                             l4386 1E80  
                           l4466 2014                             l4458 1FE4  
                           l4482 20DA                             l4474 20A4  
                           l4388 1EA8                             l4476 20B0  
                           l4740 2384                             l4724 24CE  
                           l4716 24BE                             l4478 20B6  
                           l4742 2390                             l4734 24DC  
                           l4494 2524                             l4752 0F94  
                           l4728 24D8                             l4762 0FF6  
                           l4738 2378                             l4746 239E  
                           l4692 21A4                             l4764 1008  
                           l4756 0FBC                             l4772 1042  
                           l4790 135E                             l4758 0FCE  
                           l4774 1056                             l4696 21B6  
                           l4792 1370                             l4776 1064  
                           l4768 1030               __CFG_WPFP$PAGE_127 000000  
                           l4794 1382                             l4786 1174  
                           l4796 1394                             STR_1 0F7D  
                           STR_2 0F61                             STR_3 0F5B  
                           STR_4 0F54                             STR_5 0F46  
                           STR_6 0F71                             STR_7 0F67  
                           STR_8 0F76                             STR_9 0F3F  
                           u4290 25CA                             u4380 1E70  
                           u4390 1EA2                             u5247 1E7C  
                           u5257 2560                             u5267 270C  
                           u4387 1E66                             u5277 2598  
                           u4397 1E98                             u4830 233A  
                           u4575 26D0                             u5287 2630  
                           u4576 26D2                             u4850 2348  
                           u4870 2356                             _main 1650  
       button_timer_interrupt@bt 0001                             fsr0h 000FEA  
                           fsr1h 000FE2               i2___lwdiv@quotient 0005  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2h 000FDA                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
               __end_of_I2C_Send 2730                             btemp 0051  
         __CFG_DSWDTOSC$T1OSCREF 000000                 __end_of_I2C_Stop 2762  
                           pclat 000FFA                 __end_of_I2C_init 2758  
                           prodh 000FF4                             prodl 000FF3  
                           start 01FE                 __end_of_ADC_init 26E0  
                  __CFG_IESO$OFF 000000                     ___param_bank 000010  
                  _I2C_LCD_Clear 26FE                            ??_ADC 0003  
                          ADC@ch 0004                    ADC_init@p_ref 0095  
                          ??_LED 0096                            ??_ISR 0017  
         __size_of_I2C_IdleCheck 001E                            ??_OUT 0096  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                          ?_main 0001                  __end_of___awdiv 1F32  
                          _ADRES 000FC3                            STR_10 0F2F  
                          STR_11 0F1D                            STR_12 0F26  
                          STR_13 0F6C                            STR_14 0F7A  
                          STR_15 0F4D                            STR_16 0F37  
                __end_of___lldiv 1B68                  ___awdiv@divisor 0003  
                __end_of___llmod 1E20                            _LATB2 007C52  
                          _LATA5 007C4D                            _LATC2 007C5A  
                          _LATA6 007C4E                            _LATA7 007C4F  
                          _LATB6 007C56                            _LATB7 007C57  
                __end_of___lwdiv 202C                   ?_sw_flag_clear 0095  
                __end_of___lwmod 20F2                            i2l205 230C  
                          i2l206 230A                            i2l222 202E  
                          i2l147 266C                    __CFG_WDTEN$ON 000000  
                          i2l270 13F8                            i2l271 141C  
                          i2l272 143E                            i2l600 2496  
                          i2l273 1460                            i2l274 1480  
                          i2l275 14A0                            i2l276 14C0  
                          i2l277 14E0                            i2l591 23E0  
                          i2l671 0152                            i2l584 23C4  
                          i2l675 01C2                            i2l588 23D2  
                          i2l597 247E                            i2l599 248A  
                ___awdiv@counter 0005                            i2_LED 247A  
                          i2_OUT 23B6                            _TMR1H 000FCF  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                   __CFG_FCMEN$OFF 000000  
               __end_of_UART_ISR 232A                  __end_of_display 13CE  
             __size_of_UART_init 0020                            _colon 003B  
                          main@i 01C8                __end_of_I2C_Start 25CE  
                          tablat 000FF5                            plusw2 000FDB  
                          status 000FD8                  __end_of_tx_send 2746  
               __end_of_Delay_ms 2652               __size_ofi2___lldiv 0082  
             __size_ofi2___lwdiv 0052               __size_ofi2___lwmod 0042  
                 ?_I2C_LCD_Clear 0001                  __initialization 2294  
              i2___lldiv@divisor 0005                     __end_of_main 18D0  
              i2___lldiv@counter 000D                 __end_of_Auto_cut 1AAC  
            ringbuf_init@bufsize 0099                           ??_main 00AB  
                  __activetblptr 000003                           ?i2_LED 0001  
                         ?i2_OUT 0001                           _BCL1IF 007D0B  
                  _I2C_IdleCheck 26E0                 ___llmod@dividend 0095  
              _I2C_LCD_SetCursor 25FA                           _EECON2 000FA7  
                         _ANCON0 000F48                           _ANCON1 000F49  
               ___awdiv@dividend 0001                           i2LED@b 0002  
             I2C_LCD_Command@ans 009A                           i2l1109 2432  
                         i2l1046 1FA2                           i2l3120 1EE8  
                         i2l3122 1EF0                           i2l3114 1ED2  
                         i2l1099 223A                           i2l3140 1F28  
                         i2l3132 1F10                           i2l3124 1EF4  
                         i2l3108 1EC2                           i2l3230 23D6  
                         i2l3222 23BA                           i2l3136 1F1A  
                         i2l3400 2086                           i2l3226 23C8  
                         i2l3242 24A2                           i2l3250 2208  
                         i2l3236 23E4                           i2l3252 2210  
                         i2l3262 2230                           i2l3254 2214  
                         i2l3270 2408                           i2l3440 1594  
                         i2l3432 154C                           i2l3424 1504  
                         i2l3272 2410                           i2l3274 2414  
                         i2l4074 005C                           i2l2812 1BCA  
                         i2l3452 1606                           i2l3444 15BA  
                         i2l3436 1570                           i2l3428 1528  
                         i2l3380 243E                           i2l4084 0076  
                         i2l3710 1AA8                           i2l3278 2428  
                         i2l3390 203C                           i2l4078 0068  
                         i2l3448 15E0                           i2l3456 162A  
                         i2l3384 2460                           i2l4088 007E  
                         i2l3394 205A                           i2OUT@b 0002  
                         i2l3708 1A90                           i2l2860 1CC4  
                         i2l3670 18DC                           i2l3680 1984  
                         i2l3674 190E                           i2l3666 18D4  
                         i2l3694 19D2                           i2l2982 1D6A  
                         i2l2990 1D82                           i2l2984 1D7E  
                         i2l3688 19CA                           i2l3784 1F54  
                         i2l3698 19DA                           i2l3786 1F60  
                         i2l3796 1F94                           i2l3788 1F64  
             ?_I2C_LCD_SetCursor 009B                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                 __CFG_WDTPS$256 000000                           _SSP1IF 007CF3  
                 __CFG_WPCFG$OFF 000000                sw_flag_clear@port 0096  
                         _TXREG1 000FAE                   __CFG_WPDIS$OFF 000000  
            ??_I2C_LCD_SetCursor 009C                   __CFG_XINST$OFF 000000  
                   ?_ringbuf_pop 0009                     ?_ringbuf_num 0001  
                   ?_ringbuf_put 0009                           ___wmul 267A  
              __end_of_UART_init 26C0                        ??___awdiv 0005  
                      ??___lldiv 00A6                     ?_timer0_init 0001  
                      ??___llmod 009D                     ?_timer1_init 0095  
                      ??___lwdiv 009E                        ??___lwmod 0099  
                   ?_timer3_init 0001                           _lchika 18D0  
                         clear_0 229A                           clear_1 22A6  
                         clear_2 22B2                  __CFG_CLKOEC$OFF 000000  
               ___awdiv@quotient 0007                  ??_sw_flag_clear 0096  
                         _rx_buf 0082                           _tx_buf 01D0  
                      ??_display 00AB                     __pdataCOMRAM 004E  
                      ?_I2C_Send 0001                        ?_I2C_Stop 0001  
              __end_ofi2___lldiv 1FB4                __end_ofi2___lwdiv 2244  
                   __mediumconst 0000                __end_ofi2___lwmod 243C  
                      ?_I2C_init 0001        __end_of_I2C_LCD_SetCursor 2626  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_ADC_init 0001  
                 ?_I2C_IdleCheck 0001                        ??_tx_send 0010  
               __end_of_tx_sendn 2090                 __end_of_tx_sends 247A  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 22D6                    ___rparam_used 000001  
                ??_I2C_LCD_Clear 009B                    __end_ofi2_LED 24B8  
                  __end_ofi2_OUT 23FA             __CFG_WPEND$PAGE_WPFP 000000  
             i2___lwmod@dividend 0001                   __pcstackCOMRAM 0001  
             i2___lldiv@dividend 0001                        ?_UART_ISR 0001  
                __CFG_DSWDTPS$G2 000000                  _I2C_LCD_Command 2566  
                        ??i2_LED 0002                          ??i2_OUT 0002  
               I2C_LCD_Command@c 0099                       ??_I2C_Send 0097  
                     ??_I2C_Stop 0097                       ??_I2C_init 0095  
                      ?_Delay_ms 0095                       ??_ADC_init 0095  
             i2___lldiv@quotient 0009                       __pbssBANK0 0060  
                     __pbssBANK1 01C9                        ?_Auto_cut 0001  
                      ISR@cnt_t0 0034            __end_of_weekday_3char 0F1D  
                     ??_UART_ISR 0010                          ?___wmul 0005  
                        ?_lchika 0001             I2C_LCD_SetCursor@col 009E  
           I2C_LCD_SetCursor@row 009B                     I2C_Send@data 0097  
             __CFG_OSC$INTOSCPLL 000000                  ??_I2C_IdleCheck 0095  
                     ??_Delay_ms 0097       __size_of_I2C_LCD_SetCursor 002C  
         I2C_LCD_SetCursor@F8672 004E                     tx_sendn@temp 0015  
                        _SPBRGH1 000F7F                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A             timer1_init@prescaler 0097  
                     ??_Auto_cut 000B                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                        _I2C_Start 259E  
                        __Hparam 0000                          __Lparam 0000  
        __end_of_I2C_LCD_Command 259E                    ?_ringbuf_init 0095  
                        ___awdiv 1EAE                          ___lldiv 1AAC  
                __size_of___wmul 0026                          ___llmod 1D86  
                        ___lwdiv 1FB4                          ___lwmod 2090  
                   __psmallconst 0F00             __size_of_ringbuf_pop 00AC  
           __size_of_ringbuf_num 00BC             __size_of_ringbuf_put 00B6  
                __CFG_STVREN$OFF 000000                  __size_of_lchika 00FE  
    epoch_to_caltime@month_cache 0050                          __pcinit 2294  
                      ?_tx_sendn 0011                        ?_tx_sends 0010  
                        __ramtop 0F00             __size_of_timer0_init 003A  
                        _halfsec 003D             __size_of_timer1_init 0050  
                        __ptext0 1650                          __ptext1 25CE  
                        __ptext2 2244                          __ptext3 24F4  
                        __ptext4 24B8                          __ptext5 2372  
                        __ptext6 214A                          __ptext7 0F82  
                        __ptext8 2090                          __ptext9 1FB4  
                  I2C_LCD_Putc@c 0099             __size_of_timer3_init 002C  
                  I2C_LCD_Puts@s 0099                          _display 0F82  
                      _T0CONbits 000FD5                     __size_of_ADC 0028  
                   __size_of_LED 0048                 _time_change_flag 0040  
                   __size_of_ISR 01F6                        _T1CONbits 000FCD  
                   __size_of_OUT 0054                          _cut_cnt 01C9  
                      _T3CONbits 000F79                        _T5CONbits 000F22  
                        _tx_send 2730                          lchika@i 000C  
           end_of_initialization 22D6                     _CTMUCONHbits 000FB3  
                   _CTMUCONLbits 000FB2                       ?_I2C_Start 0097  
                ___lldiv@divisor 00A2             timer3_init@prescaler 0096  
                ___lldiv@counter 00AA                   tx_sendn@digits 0013  
                 ??_ringbuf_init 009B                          postdec1 000FE5  
                        postdec2 000FDD             sw_flag_clear@bit_and 0095  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_tx_sendn 0014  
                     ??_tx_sends 0012                        _PORTAbits 000F80  
                      _UART_init 26A0                 __CFG_DSBOREN$OFF 000000  
                   _display_flag 01CF        epoch_to_caltime@day_cache 0036  
                     _print_port 003F                 __CFG_CPUDIV$OSC1 000000  
              __size_of_I2C_Send 0018                __size_of_I2C_Stop 000A  
              __size_of_I2C_init 0012                i2___lwdiv@divisor 0003  
                      i2___lldiv 1F32                __size_of_ADC_init 0020  
                      i2___lwdiv 21F2                        i2___lwmod 23FA  
              i2___lwdiv@counter 0007                        Auto_cut@i 000D  
__size_of_button_timer_interrupt 0282          timer1_init@clock_select 0095  
               __CFG_IOL1WAY$OFF 000000              __CFG_MSSP7B_EN$MSK7 000000  
               ?_I2C_LCD_Command 0001                   ringbuf_init@rb 0095  
                     lchika@cntf 007F                   ringbuf_pop@ret 000F  
                 __end_of___wmul 26A0                    ?_sw_flag_read 0095  
                  __pidataCOMRAM 2762                __size_of_UART_ISR 004A  
                 __end_of_lchika 19CE                       ?_UART_init 0001  
               __CFG_DSWDTEN$OFF 000000            __end_of_sw_flag_clear 23B6  
            start_initialization 2294                      __end_of_ADC 267A  
                    __end_of_LED 2372                      __end_of_ISR 01FE  
                    __end_of_OUT 21F2                    ?_I2C_LCD_Putc 0001  
                  ?_I2C_LCD_Puts 0099                    ?_I2C_LCD_init 0001  
                  UART_ISR@ascii 0010                __size_of_Delay_ms 002C  
                     ?i2___lldiv 0001                       ?i2___lwdiv 0001  
                     ?i2___lwmod 0001                  ___llmod@divisor 0099  
              __size_of_Auto_cut 00DE                      ??_I2C_Start 0098  
                ___llmod@counter 009D            __end_of_I2C_LCD_Clear 2718  
                       ??___wmul 0009                   ??_sw_flag_read 0096  
              __CFG_ADCSEL$BIT12 000000                         ??_lchika 0009  
         _button_timer_interrupt 13CE                      __pbssCOMRAM 0028  
                       LED@value 0095                    __pcstackBANK0 0095  
                  __pcstackBANK1 0100                   ??_I2C_LCD_Putc 0099  
               sw_flag_read@port 0096                   ??_I2C_LCD_Puts 009B  
                 ??_I2C_LCD_init 009C                i2___lwmod@divisor 0003  
              i2___lwmod@counter 0005                      _caltime_now 008A  
           __end_of_ringbuf_init 219E                 tx_send@asciicode 0010  
                millis_timer@cnt 0038                 ___lwdiv@dividend 009A  
                      _edit_flag 003C                        __pintcode 0008  
                       ?___awdiv 0001                         ?___lldiv 009E  
                       ?___llmod 0095                         ?___lwdiv 009A  
                       ?___lwmod 0095                  I2C_LCD_Putc@ans 009A  
                I2C_LCD_Puts@ans 009C                      ??_UART_init 0095  
                       ?_display 0001                      __smallconst 0F00  
              __size_of_tx_sendn 0064                __size_of_tx_sends 003E  
                 __size_ofi2_LED 003E                        _epoch_now 0042  
                 __size_ofi2_OUT 0044                      I2C_Start@rw 0097  
                       _I2C_Send 2718                         OUT@value 0095  
                       _I2C_Stop 2758             __CFG_RTCOSC$T1OSCREF 000000  
                       _I2C_init 2746                         _ADC_init 26C0  
          __end_of_I2C_IdleCheck 26FE                      _PADCFG1bits 000F3C  
               ___lwdiv@quotient 009F                         ?_tx_send 0001  
                    ??i2___lldiv 0009                      ??i2___lwdiv 0005  
                    ??i2___lwmod 0005                         _CTMUCONH 000FB3  
                       _CTMUCONL 000FB2                         _CTMUICON 000FB1  
       ringbuf_init@internal_buf 0097                   ___wmul@product 0009  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
                       i2u310_40 161C                         i2u400_40 0168  
                       i2u401_40 016A                         i2u402_40 0180  
                       i2u307_40 15AA                         i2u403_40 0182  
                       i2u308_40 15D0                         i2u404_40 0198  
                       i2u309_40 15F6                         i2u405_40 019A  
                       i2u270_40 2486                         i2u406_40 01B0  
                       i2u407_40 01B2                         i2u272_40 2492  
                       _PIR1bits 000F9E                         i2u274_40 249E  
                       _PIR2bits 000FA1                         i2u355_45 19FA  
                       i2u358_40 1A84                         _PIR5bits 000F98  
     epoch_to_caltime@year_cache 0041                    ??_ringbuf_pop 000B  
                  ??_ringbuf_num 0003                    ??_ringbuf_put 000C  
                  tx_sendn@value 0011                         _UART_ISR 22E0  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                  ??_timer0_init 0095                    ??_timer1_init 0096  
                  ??_timer3_init 0095                         _SSP1STAT 000FC7  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
              ___wmul@multiplier 0005                 __CFG_SOSCSEL$LOW 000000  
 button_timer_interrupt@sw_value 0003                         _Delay_ms 2626  
                      main@txbuf 0100                        lchika@cnt 0031  
                  ringbuf_pop@rb 0009                    ringbuf_num@rb 0001  
                  I2C_Start@adrs 0098                    ringbuf_put@rb 0009  
                    _INTCON2bits 000FF1             __end_of_sw_flag_read 24F4  
                       _Auto_cut 19CE                      _auto_cut_ON 002E  
                       __Hrparam 0000                         __Lrparam 0000  
           __end_of_I2C_LCD_Putc 2566             __end_of_I2C_LCD_Puts 1EAE  
                  _weekday_3char 0F01             __end_of_I2C_LCD_init 214A  
               __size_of___awdiv 0084                I2C_IdleCheck@mask 0096  
               __size_of___lldiv 00BC                 __size_of___llmod 009A  
               __size_of___lwdiv 0078                 __size_of___lwmod 0062  
              tx_sends@asciicode 0010              __end_of_ringbuf_pop 1D86  
            __end_of_ringbuf_num 1C24              __end_of_ringbuf_put 1CDA  
            __end_of_timer0_init 252E            __size_of_ringbuf_init 0054  
            __end_of_timer1_init 2294                 __size_of_display 044C  
            __end_of_timer3_init 25FA                       i2LED@value 0001  
                ___lwdiv@divisor 009C                  ___lwdiv@counter 009E  
           timer0_init@prescaler 0096                         __ptext10 1D86  
                       __ptext11 1AAC                         __ptext20 26FE  
                       __ptext12 25FA                         __ptext21 2566  
                       __ptext13 1E20                         __ptext30 243C  
                       __ptext22 2758                         __ptext14 252E  
                       __ptext31 202C                         __ptext23 259E  
                       __ptext15 26A0                         __ptext40 1C24  
                       __ptext32 23FA                         __ptext24 2718  
                       __ptext16 219E                         __ptext41 1CDA  
                       __ptext33 2730                         __ptext25 26E0  
                       __ptext17 232A                         __ptext42 1B68  
                       __ptext34 18D0                         __ptext26 2626  
                       __ptext18 2746                         __ptext43 19CE  
                       __ptext35 21F2                         __ptext27 26C0  
                       __ptext19 20F2                         __ptext44 23B6  
                       __ptext36 247A                         __ptext45 267A  
                       __ptext37 1EAE                         __ptext29 1F32  
                       __ptext46 2652                         __ptext38 13CE  
                       __ptext39 22E0                     _SSP1CON2bits 000FC5  
          RTCC_loop@prev_halfsec 003A                 __size_of_tx_send 0016  
                  __size_of_main 0280          ?_button_timer_interrupt 0001  
                       int$flags 0051                     _ringbuf_init 214A  
                       _tx_sendn 202C                         _tx_sends 243C  
       __size_of_I2C_LCD_Command 0038                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 000B  
                     i2OUT@value 0001     I2C_LCD_SetCursor@row_offsets 009C  
                     Delay_ms@ms 0095                         intlevel2 0000  
               ___lwmod@dividend 0095                 ___lldiv@dividend 009E  
                      tx_sendn@i 0014                       _RCSTA1bits 000FAC  
         __size_of_sw_flag_clear 0044                    _print_content 003E  
                     _OSCCONbits 000FD3   __end_of_button_timer_interrupt 1650  
                    _ringbuf_pop 1CDA                      _ringbuf_num 1B68  
                    _ringbuf_put 1C24                      _timer0_init 24F4  
                    _timer1_init 2244                      _timer3_init 25CE  
                     _RTCCFGbits 000F3F                 ___lldiv@quotient 00A6  
                ___lwmod@divisor 0097                  ___lwmod@counter 0099  
          __size_of_sw_flag_read 003C           __size_of_I2C_LCD_Clear 001A  
          __size_of_I2C_LCD_Putc 0038            __size_of_I2C_LCD_Puts 008E  
          __size_of_I2C_LCD_init 0058  
