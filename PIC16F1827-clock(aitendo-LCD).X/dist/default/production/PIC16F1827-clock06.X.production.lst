

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jan 02 12:23:14 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001E                     	;# 
    46  001F                     	;# 
    47  008C                     	;# 
    48  008D                     	;# 
    49  0091                     	;# 
    50  0092                     	;# 
    51  0093                     	;# 
    52  0094                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0097                     	;# 
    56  0098                     	;# 
    57  0099                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009B                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  010C                     	;# 
    65  010D                     	;# 
    66  0111                     	;# 
    67  0112                     	;# 
    68  0113                     	;# 
    69  0114                     	;# 
    70  0115                     	;# 
    71  0116                     	;# 
    72  0117                     	;# 
    73  0118                     	;# 
    74  0119                     	;# 
    75  011A                     	;# 
    76  011B                     	;# 
    77  011D                     	;# 
    78  011E                     	;# 
    79  018C                     	;# 
    80  018D                     	;# 
    81  0191                     	;# 
    82  0191                     	;# 
    83  0192                     	;# 
    84  0193                     	;# 
    85  0193                     	;# 
    86  0193                     	;# 
    87  0194                     	;# 
    88  0195                     	;# 
    89  0196                     	;# 
    90  0199                     	;# 
    91  019A                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019C                     	;# 
    97  019C                     	;# 
    98  019D                     	;# 
    99  019E                     	;# 
   100  019F                     	;# 
   101  020C                     	;# 
   102  020D                     	;# 
   103  0211                     	;# 
   104  0211                     	;# 
   105  0212                     	;# 
   106  0212                     	;# 
   107  0213                     	;# 
   108  0213                     	;# 
   109  0214                     	;# 
   110  0214                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0215                     	;# 
   114  0216                     	;# 
   115  0216                     	;# 
   116  0217                     	;# 
   117  0217                     	;# 
   118  0219                     	;# 
   119  021A                     	;# 
   120  021B                     	;# 
   121  021C                     	;# 
   122  021D                     	;# 
   123  021E                     	;# 
   124  021F                     	;# 
   125  0291                     	;# 
   126  0291                     	;# 
   127  0292                     	;# 
   128  0293                     	;# 
   129  0294                     	;# 
   130  0295                     	;# 
   131  0295                     	;# 
   132  0296                     	;# 
   133  0298                     	;# 
   134  0298                     	;# 
   135  0299                     	;# 
   136  029A                     	;# 
   137  029B                     	;# 
   138  029C                     	;# 
   139  029C                     	;# 
   140  029D                     	;# 
   141  029E                     	;# 
   142  029E                     	;# 
   143  0311                     	;# 
   144  0311                     	;# 
   145  0312                     	;# 
   146  0313                     	;# 
   147  0318                     	;# 
   148  0318                     	;# 
   149  0319                     	;# 
   150  031A                     	;# 
   151  0394                     	;# 
   152  0395                     	;# 
   153  0396                     	;# 
   154  039A                     	;# 
   155  039C                     	;# 
   156  039D                     	;# 
   157  039E                     	;# 
   158  039F                     	;# 
   159  0415                     	;# 
   160  0416                     	;# 
   161  0417                     	;# 
   162  041C                     	;# 
   163  041D                     	;# 
   164  041E                     	;# 
   165  0FE4                     	;# 
   166  0FE5                     	;# 
   167  0FE6                     	;# 
   168  0FE7                     	;# 
   169  0FE8                     	;# 
   170  0FE9                     	;# 
   171  0FEA                     	;# 
   172  0FEB                     	;# 
   173  0FED                     	;# 
   174  0FEE                     	;# 
   175  0FEF                     	;# 
   176                           
   177                           	psect	idataBANK0
   178  022D                     __pidataBANK0:	
   179                           
   180                           ;initializer for _p
   181  022D  3403               	retlw	3
   182  022E  349F               	retlw	159
   183  022F  3425               	retlw	37
   184  0230  340D               	retlw	13
   185  0231  3499               	retlw	153
   186  0232  3449               	retlw	73
   187  0233  3441               	retlw	65
   188  0234  341B               	retlw	27
   189  0235  3401               	retlw	1
   190  0236  3409               	retlw	9
   191                           
   192                           ;initializer for _q
   193  0237  3402               	retlw	2
   194  0238  349E               	retlw	158
   195  0239  3424               	retlw	36
   196  023A  340C               	retlw	12
   197  023B  3498               	retlw	152
   198  023C  3448               	retlw	72
   199  023D  3440               	retlw	64
   200  023E  341A               	retlw	26
   201  023F  3400               	retlw	0
   202  0240  3408               	retlw	8
   203                           
   204                           ;initializer for _r
   205  0241  34FF               	retlw	255
   206  0242  349F               	retlw	159
   207  0243  3425               	retlw	37
   208  0244  340D               	retlw	13
   209  0245  3499               	retlw	153
   210  0246  3449               	retlw	73
   211  0247  3441               	retlw	65
   212  0248  341B               	retlw	27
   213  0249  3401               	retlw	1
   214  024A  3409               	retlw	9
   215  000B                     _INTCONbits	set	11
   216  0011                     _PIR1bits	set	17
   217  000C                     _PORTA	set	12
   218  000D                     _PORTB	set	13
   219  0018                     _T1CON	set	24
   220  0017                     _TMR1H	set	23
   221  0016                     _TMR1L	set	22
   222  0065                     _RA5	set	101
   223  0095                     _OPTION_REG	set	149
   224  0099                     _OSCCON	set	153
   225  0091                     _PIE1bits	set	145
   226  008C                     _TRISA	set	140
   227  008D                     _TRISB	set	141
   228  018C                     _ANSELA	set	396
   229  018D                     _ANSELB	set	397
   230                           
   231                           ; #config settings
   232  0000                     
   233                           	psect	cinit
   234  0114                     start_initialization:	
   235  0114                     __initialization:	
   236                           
   237                           ; Clear objects allocated to COMMON
   238  0114  01FC               	clrf	__pbssCOMMON& (0+127)
   239  0115  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   240                           
   241                           ; Clear objects allocated to BANK0
   242  0116  01C8               	clrf	__pbssBANK0& (0+127)
   243  0117  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   244  0118  01CA               	clrf	(__pbssBANK0+2)& (0+127)
   245  0119  01CB               	clrf	(__pbssBANK0+3)& (0+127)
   246  011A  01CC               	clrf	(__pbssBANK0+4)& (0+127)
   247  011B  01CD               	clrf	(__pbssBANK0+5)& (0+127)
   248  011C  01CE               	clrf	(__pbssBANK0+6)& (0+127)
   249                           
   250                           ; Initialize objects allocated to BANK0
   251  011D  302D               	movlw	low __pidataBANK0
   252  011E  0084               	movwf	4
   253  011F  3082               	movlw	(high __pidataBANK0)| (0+128)
   254  0120  0085               	movwf	5
   255  0121  3020               	movlw	low __pdataBANK0
   256  0122  0086               	movwf	6
   257  0123  3000               	movlw	high __pdataBANK0
   258  0124  0087               	movwf	7
   259  0125  301E               	movlw	30
   260  0126  3182  224B         	fcall	init_ram
   261  0128                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  0128                     __end_of__initialization:	
   265  0128  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   266  0129  0020               	movlb	0
   267  012A  3181  29C7         	ljmp	_main	;jump to C main() function
   268                           
   269                           	psect	bssCOMMON
   270  007C                     __pbssCOMMON:	
   271  007C                     _fu:	
   272  007C                     	ds	1
   273  007D                     _ji:	
   274  007D                     	ds	1
   275                           
   276                           	psect	bssBANK0
   277  0048                     __pbssBANK0:	
   278  0048                     _cnt1m:	
   279  0048                     	ds	2
   280  004A                     _cnt_sw:	
   281  004A                     	ds	1
   282  004B                     _colon:	
   283  004B                     	ds	1
   284  004C                     _i:	
   285  004C                     	ds	1
   286  004D                     _j:	
   287  004D                     	ds	1
   288  004E                     _long_hold_flag:	
   289  004E                     	ds	1
   290                           
   291                           	psect	dataBANK0
   292  0020                     __pdataBANK0:	
   293  0020                     _p:	
   294  0020                     	ds	10
   295  002A                     _q:	
   296  002A                     	ds	10
   297  0034                     _r:	
   298  0034                     	ds	10
   299                           
   300                           	psect	inittext
   301  024B                     init_ram:	
   302  024B  00FE               	movwf	126
   303  024C                     initloop:	
   304  024C  0012               	moviw fsr0++
   305  024D  001E               	movwi fsr1++
   306  024E  0BFE               	decfsz	126,f
   307  024F  2A4C               	goto	initloop
   308  0250  3400               	retlw	0
   309                           
   310                           	psect	cstackCOMMON
   311  0070                     __pcstackCOMMON:	
   312  0070                     ?_isr:	
   313  0070                     ?_main:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?___awmod:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?___lwmod:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0070                     ___awmod@divisor:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0070                     ___lwmod@divisor:	
   326                           ; 2 bytes @ 0x0
   327                           
   328                           
   329                           ; 2 bytes @ 0x0
   330  0070                     	ds	2
   331  0072                     ___awmod@dividend:	
   332  0072                     ___lwmod@dividend:	
   333                           ; 2 bytes @ 0x2
   334                           
   335                           
   336                           ; 2 bytes @ 0x2
   337  0072                     	ds	2
   338  0074                     ??___awmod:	
   339  0074                     ??___lwmod:	
   340                           ; 0 bytes @ 0x4
   341                           
   342                           
   343                           ; 0 bytes @ 0x4
   344  0074                     	ds	1
   345  0075                     ___awmod@counter:	
   346  0075                     ___lwmod@counter:	
   347                           ; 1 bytes @ 0x5
   348                           
   349                           
   350                           ; 1 bytes @ 0x5
   351  0075                     	ds	1
   352  0076                     ___awmod@sign:	
   353                           
   354                           ; 1 bytes @ 0x6
   355  0076                     	ds	1
   356  0077                     ?___awdiv:	
   357  0077                     ___awdiv@divisor:	
   358                           ; 2 bytes @ 0x7
   359                           
   360                           
   361                           ; 2 bytes @ 0x7
   362  0077                     	ds	2
   363  0079                     ___awdiv@dividend:	
   364                           
   365                           ; 2 bytes @ 0x9
   366  0079                     	ds	2
   367  007B                     ??___awdiv:	
   368                           
   369                           ; 0 bytes @ 0xB
   370  007B                     	ds	1
   371                           
   372                           	psect	cstackBANK0
   373  003E                     __pcstackBANK0:	
   374  003E                     ___awdiv@counter:	
   375                           
   376                           ; 1 bytes @ 0x0
   377  003E                     	ds	1
   378  003F                     ___awdiv@sign:	
   379                           
   380                           ; 1 bytes @ 0x1
   381  003F                     	ds	1
   382  0040                     ___awdiv@quotient:	
   383                           
   384                           ; 2 bytes @ 0x2
   385  0040                     	ds	2
   386  0042                     ??_isr:	
   387                           
   388                           ; 0 bytes @ 0x4
   389  0042                     	ds	5
   390  0047                     ??_main:	
   391                           
   392                           ; 0 bytes @ 0x9
   393  0047                     	ds	1
   394                           
   395                           	psect	maintext
   396  01C7                     __pmaintext:	
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 109 in file "PIC16F1827-clock06.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;		None               void
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0
   411 ;; Tracked objects:
   412 ;;		On entry : 17F/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   416 ;;      Params:         0       0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0
   418 ;;      Temps:          0       1       0       0       0       0
   419 ;;      Totals:         0       1       0       0       0       0
   420 ;;Total ram usage:        1 bytes
   421 ;; Hardware stack levels required when called:    2
   422 ;; This function calls:
   423 ;;		Nothing
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           
   430                           ;psect for function _main
   431  01C7                     _main:	
   432                           
   433                           ;PIC16F1827-clock06.c: 110: OSCCON = 0x00;
   434                           
   435                           ;incstack = 0
   436                           ; Regs used in _main: [wreg+status,2+status,0]
   437  01C7  0021               	movlb	1	; select bank1
   438  01C8  0199               	clrf	25	;volatile
   439                           
   440                           ;PIC16F1827-clock06.c: 111: ANSELA = 0x00;
   441  01C9  0023               	movlb	3	; select bank3
   442  01CA  018C               	clrf	12	;volatile
   443                           
   444                           ;PIC16F1827-clock06.c: 112: ANSELB = 0x00;
   445  01CB  018D               	clrf	13	;volatile
   446                           
   447                           ;PIC16F1827-clock06.c: 113: TRISA = 0x00;
   448  01CC  0021               	movlb	1	; select bank1
   449  01CD  018C               	clrf	12	;volatile
   450                           
   451                           ;PIC16F1827-clock06.c: 114: TRISB = 0x00;
   452  01CE  018D               	clrf	13	;volatile
   453                           
   454                           ;PIC16F1827-clock06.c: 116: OPTION_REG = 0b10010011;
   455  01CF  3093               	movlw	147
   456  01D0  0095               	movwf	21	;volatile
   457                           
   458                           ;PIC16F1827-clock06.c: 117: INTCONbits.TMR0IE = 1;
   459  01D1  168B               	bsf	11,5	;volatile
   460                           
   461                           ;PIC16F1827-clock06.c: 119: T1CON = 0x01;
   462  01D2  3001               	movlw	1
   463  01D3  0020               	movlb	0	; select bank0
   464  01D4  0098               	movwf	24	;volatile
   465                           
   466                           ;PIC16F1827-clock06.c: 120: TMR1H = 0x00;
   467  01D5  0197               	clrf	23	;volatile
   468                           
   469                           ;PIC16F1827-clock06.c: 121: TMR1L = 0x00;
   470  01D6  0196               	clrf	22	;volatile
   471                           
   472                           ;PIC16F1827-clock06.c: 122: PIE1bits.TMR1IE = 1;
   473  01D7  0021               	movlb	1	; select bank1
   474  01D8  1411               	bsf	17,0	;volatile
   475                           
   476                           ;PIC16F1827-clock06.c: 123: INTCONbits.PEIE = 1;
   477  01D9  170B               	bsf	11,6	;volatile
   478                           
   479                           ;PIC16F1827-clock06.c: 124: INTCONbits.GIE = 1;
   480  01DA  178B               	bsf	11,7	;volatile
   481  01DB                     l940:	
   482                           ;PIC16F1827-clock06.c: 125: while (1) {
   483                           
   484                           
   485                           ;PIC16F1827-clock06.c: 126: if (long_hold_flag) {
   486  01DB  0020               	movlb	0	; select bank0
   487  01DC  084E               	movf	_long_hold_flag,w
   488  01DD  1903               	btfsc	3,2
   489  01DE  29EA               	goto	l950
   490                           
   491                           ;PIC16F1827-clock06.c: 127: long_hold_flag = 0;
   492  01DF  01CE               	clrf	_long_hold_flag
   493                           
   494                           ;PIC16F1827-clock06.c: 128: if (ji == 23) {
   495  01E0  087D               	movf	_ji,w
   496  01E1  3A17               	xorlw	23
   497  01E2  1D03               	skipz
   498  01E3  29E6               	goto	l948
   499                           
   500                           ;PIC16F1827-clock06.c: 129: ji = 0;
   501  01E4  01FD               	clrf	_ji
   502                           
   503                           ;PIC16F1827-clock06.c: 130: } else {
   504  01E5  29EA               	goto	l950
   505  01E6                     l948:	
   506                           
   507                           ;PIC16F1827-clock06.c: 131: ji++;
   508  01E6  3001               	movlw	1
   509  01E7  00C7               	movwf	??_main
   510  01E8  0847               	movf	??_main,w
   511  01E9  07FD               	addwf	_ji,f
   512  01EA                     l950:	
   513                           
   514                           ;PIC16F1827-clock06.c: 132: }
   515                           ;PIC16F1827-clock06.c: 133: }
   516                           ;PIC16F1827-clock06.c: 134: if (cnt_sw > 3 && cnt_sw < 75 && RA5 == 1) {
   517  01EA  3004               	movlw	4
   518  01EB  024A               	subwf	_cnt_sw,w
   519  01EC  1C03               	skipc
   520  01ED  29DB               	goto	l940
   521  01EE  304B               	movlw	75
   522  01EF  024A               	subwf	_cnt_sw,w
   523  01F0  1C03               	btfss	3,0
   524  01F1  1E8C               	btfss	12,5	;volatile
   525  01F2  29DB               	goto	l940
   526                           
   527                           ;PIC16F1827-clock06.c: 135: cnt_sw = 0;
   528  01F3  01CA               	clrf	_cnt_sw
   529                           
   530                           ;PIC16F1827-clock06.c: 136: if (fu == 59) {
   531  01F4  087C               	movf	_fu,w
   532  01F5  3A3B               	xorlw	59
   533  01F6  1D03               	skipz
   534  01F7  29FA               	goto	l962
   535                           
   536                           ;PIC16F1827-clock06.c: 137: fu = 0;
   537  01F8  01FC               	clrf	_fu
   538                           
   539                           ;PIC16F1827-clock06.c: 138: } else {
   540  01F9  29DB               	goto	l940
   541  01FA                     l962:	
   542                           
   543                           ;PIC16F1827-clock06.c: 139: fu++;
   544  01FA  3001               	movlw	1
   545  01FB  00C7               	movwf	??_main
   546  01FC  0847               	movf	??_main,w
   547  01FD  07FC               	addwf	_fu,f
   548  01FE  29DB               	goto	l940
   549  01FF                     __end_of_main:	
   550                           
   551                           	psect	intentry
   552  0004                     __pintentry:	
   553 ;; *************** function _isr *****************
   554 ;; Defined at:
   555 ;;		line 42 in file "PIC16F1827-clock06.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;		None               void
   562 ;; Registers used:
   563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   569 ;;      Params:         0       0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0       0
   571 ;;      Temps:          0       5       0       0       0       0
   572 ;;      Totals:         0       5       0       0       0       0
   573 ;;Total ram usage:        5 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:    1
   576 ;; This function calls:
   577 ;;		___awdiv
   578 ;;		___awmod
   579 ;;		___lwmod
   580 ;; This function is called by:
   581 ;;		Interrupt level 1
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585  0004                     _isr:	
   586                           
   587                           ;incstack = 0
   588                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   589  0004  147E               	bsf	126,0	;set compiler interrupt flag
   590  0005  3180               	pagesel	$
   591  0006  0020               	movlb	0	; select bank0
   592  0007  087F               	movf	127,w
   593  0008  00C6               	movwf	??_isr+4
   594                           
   595                           ;PIC16F1827-clock06.c: 43: if (PIR1bits.TMR1IF == 1) {
   596  0009  1C11               	btfss	17,0	;volatile
   597  000A  2874               	goto	i1l896
   598                           
   599                           ;PIC16F1827-clock06.c: 44: PIR1bits.TMR1IF = 0;
   600  000B  1011               	bcf	17,0	;volatile
   601                           
   602                           ;PIC16F1827-clock06.c: 46: if ((cnt1m % 75) < 38) {
   603  000C  304B               	movlw	75
   604  000D  00F0               	movwf	___lwmod@divisor
   605  000E  3000               	movlw	0
   606  000F  00F1               	movwf	___lwmod@divisor+1
   607  0010  0849               	movf	_cnt1m+1,w
   608  0011  01F3               	clrf	___lwmod@dividend+1
   609  0012  07F3               	addwf	___lwmod@dividend+1,f
   610  0013  0848               	movf	_cnt1m,w
   611  0014  01F2               	clrf	___lwmod@dividend
   612  0015  07F2               	addwf	___lwmod@dividend,f
   613  0016  3181  21FF  3180   	fcall	___lwmod
   614  0019  3000               	movlw	0
   615  001A  0271               	subwf	?___lwmod+1,w
   616  001B  3026               	movlw	38
   617  001C  1903               	skipnz
   618  001D  0270               	subwf	?___lwmod,w
   619  001E  1803               	skipnc
   620  001F  2825               	goto	i1l866
   621                           
   622                           ;PIC16F1827-clock06.c: 47: colon = 0x3F;
   623  0020  303F               	movlw	63
   624  0021  0020               	movlb	0	; select bank0
   625  0022  00C2               	movwf	??_isr
   626  0023  0842               	movf	??_isr,w
   627  0024  00CB               	movwf	_colon
   628  0025                     i1l866:	
   629                           
   630                           ;PIC16F1827-clock06.c: 48: }
   631                           ;PIC16F1827-clock06.c: 49: if ((cnt1m % 75) > 39) {
   632  0025  304B               	movlw	75
   633  0026  00F0               	movwf	___lwmod@divisor
   634  0027  3000               	movlw	0
   635  0028  00F1               	movwf	___lwmod@divisor+1
   636  0029  0020               	movlb	0	; select bank0
   637  002A  0849               	movf	_cnt1m+1,w
   638  002B  01F3               	clrf	___lwmod@dividend+1
   639  002C  07F3               	addwf	___lwmod@dividend+1,f
   640  002D  0848               	movf	_cnt1m,w
   641  002E  01F2               	clrf	___lwmod@dividend
   642  002F  07F2               	addwf	___lwmod@dividend,f
   643  0030  3181  21FF  3180   	fcall	___lwmod
   644  0033  3000               	movlw	0
   645  0034  0271               	subwf	?___lwmod+1,w
   646  0035  3028               	movlw	40
   647  0036  1903               	skipnz
   648  0037  0270               	subwf	?___lwmod,w
   649  0038  1C03               	skipc
   650  0039  283F               	goto	i1l57
   651                           
   652                           ;PIC16F1827-clock06.c: 50: colon = 0xFF;
   653  003A  30FF               	movlw	255
   654  003B  0020               	movlb	0	; select bank0
   655  003C  00C2               	movwf	??_isr
   656  003D  0842               	movf	??_isr,w
   657  003E  00CB               	movwf	_colon
   658  003F                     i1l57:	
   659                           
   660                           ;PIC16F1827-clock06.c: 51: }
   661                           ;PIC16F1827-clock06.c: 52: cnt1m++;
   662  003F  3001               	movlw	1
   663  0040  0020               	movlb	0	; select bank0
   664  0041  07C8               	addwf	_cnt1m,f
   665  0042  3000               	movlw	0
   666  0043  3DC9               	addwfc	_cnt1m+1,f
   667                           
   668                           ;PIC16F1827-clock06.c: 53: if (cnt1m == 4500) {
   669  0044  3011               	movlw	17
   670  0045  0649               	xorwf	_cnt1m+1,w
   671  0046  1D03               	skipz
   672  0047  284A               	goto	u70_25
   673  0048  3094               	movlw	148
   674  0049  0648               	xorwf	_cnt1m,w
   675  004A                     u70_25:	
   676  004A  1D03               	skipz
   677  004B  2862               	goto	i1l884
   678                           
   679                           ;PIC16F1827-clock06.c: 54: cnt1m = 0;
   680  004C  01C8               	clrf	_cnt1m
   681  004D  01C9               	clrf	_cnt1m+1
   682                           
   683                           ;PIC16F1827-clock06.c: 56: if (fu == 59) {
   684  004E  087C               	movf	_fu,w
   685  004F  3A3B               	xorlw	59
   686  0050  1D03               	skipz
   687  0051  285E               	goto	i1l882
   688                           
   689                           ;PIC16F1827-clock06.c: 57: fu = 0;
   690  0052  01FC               	clrf	_fu
   691                           
   692                           ;PIC16F1827-clock06.c: 58: if (ji == 23) {
   693  0053  087D               	movf	_ji,w
   694  0054  3A17               	xorlw	23
   695  0055  1D03               	skipz
   696  0056  2859               	goto	i1l880
   697                           
   698                           ;PIC16F1827-clock06.c: 59: ji = 0;
   699  0057  01FD               	clrf	_ji
   700                           
   701                           ;PIC16F1827-clock06.c: 60: } else {
   702  0058  2862               	goto	i1l884
   703  0059                     i1l880:	
   704                           
   705                           ;PIC16F1827-clock06.c: 61: ji++;
   706  0059  3001               	movlw	1
   707  005A  00C2               	movwf	??_isr
   708  005B  0842               	movf	??_isr,w
   709  005C  07FD               	addwf	_ji,f
   710                           
   711                           ;PIC16F1827-clock06.c: 62: }
   712                           ;PIC16F1827-clock06.c: 63: } else {
   713  005D  2862               	goto	i1l884
   714  005E                     i1l882:	
   715                           
   716                           ;PIC16F1827-clock06.c: 64: fu++;
   717  005E  3001               	movlw	1
   718  005F  00C2               	movwf	??_isr
   719  0060  0842               	movf	??_isr,w
   720  0061  07FC               	addwf	_fu,f
   721  0062                     i1l884:	
   722                           
   723                           ;PIC16F1827-clock06.c: 65: }
   724                           ;PIC16F1827-clock06.c: 66: }
   725                           ;PIC16F1827-clock06.c: 67: if (RA5 == 0) {
   726  0062  1A8C               	btfsc	12,5	;volatile
   727  0063  2873               	goto	i1l894
   728                           
   729                           ;PIC16F1827-clock06.c: 68: if (cnt_sw < 75 + 1) cnt_sw++;
   730  0064  304C               	movlw	76
   731  0065  024A               	subwf	_cnt_sw,w
   732  0066  1803               	skipnc
   733  0067  286C               	goto	i1l890
   734  0068  3001               	movlw	1
   735  0069  00C2               	movwf	??_isr
   736  006A  0842               	movf	??_isr,w
   737  006B  07CA               	addwf	_cnt_sw,f
   738  006C                     i1l890:	
   739                           
   740                           ;PIC16F1827-clock06.c: 70: if (cnt_sw == 75)long_hold_flag = 1;
   741  006C  084A               	movf	_cnt_sw,w
   742  006D  3A4B               	xorlw	75
   743  006E  1D03               	skipz
   744  006F  2874               	goto	i1l896
   745  0070  01CE               	clrf	_long_hold_flag
   746  0071  0ACE               	incf	_long_hold_flag,f
   747                           
   748                           ;PIC16F1827-clock06.c: 71: } else cnt_sw = 0;
   749  0072  2874               	goto	i1l896
   750  0073                     i1l894:	
   751  0073  01CA               	clrf	_cnt_sw
   752  0074                     i1l896:	
   753                           
   754                           ;PIC16F1827-clock06.c: 72: }
   755                           ;PIC16F1827-clock06.c: 74: if (INTCONbits.TMR0IF == 1) {
   756  0074  1D0B               	btfss	11,2	;volatile
   757  0075  290E               	goto	i1l75
   758                           
   759                           ;PIC16F1827-clock06.c: 75: INTCONbits.TMR0IF = 0;
   760  0076  110B               	bcf	11,2	;volatile
   761                           
   762                           ;PIC16F1827-clock06.c: 77: i++;
   763  0077  3001               	movlw	1
   764  0078  00C2               	movwf	??_isr
   765  0079  0842               	movf	??_isr,w
   766  007A  07CC               	addwf	_i,f
   767                           
   768                           ;PIC16F1827-clock06.c: 78: switch (i) {
   769  007B  28FD               	goto	i1l924
   770  007C                     i1l902:	
   771                           ;PIC16F1827-clock06.c: 79: case 1:
   772                           
   773                           
   774                           ;PIC16F1827-clock06.c: 80: PORTB = 0xFF;
   775  007C  30FF               	movlw	255
   776  007D  008D               	movwf	13	;volatile
   777                           
   778                           ;PIC16F1827-clock06.c: 81: PORTA = 0x01;
   779  007E  3001               	movlw	1
   780  007F  008C               	movwf	12	;volatile
   781                           
   782                           ;PIC16F1827-clock06.c: 82: PORTB = p[fu % 10];
   783  0080  300A               	movlw	10
   784  0081  00F0               	movwf	___awmod@divisor
   785  0082  3000               	movlw	0
   786  0083  00F1               	movwf	___awmod@divisor+1
   787  0084  087C               	movf	_fu,w
   788  0085  28B9               	goto	L4
   789  0086                     i1l906:	
   790                           ;PIC16F1827-clock06.c: 84: case 2:
   791                           
   792                           ;PIC16F1827-clock06.c: 83: break;
   793                           
   794                           
   795                           ;PIC16F1827-clock06.c: 85: PORTB = 0xFF;
   796  0086  30FF               	movlw	255
   797  0087  008D               	movwf	13	;volatile
   798                           
   799                           ;PIC16F1827-clock06.c: 86: PORTA = 0x02;
   800  0088  3002               	movlw	2
   801  0089  008C               	movwf	12	;volatile
   802                           
   803                           ;PIC16F1827-clock06.c: 87: PORTB = p[(fu - (fu % 10)) / 10];
   804  008A  300A               	movlw	10
   805  008B  00F7               	movwf	___awdiv@divisor
   806  008C  3000               	movlw	0
   807  008D  00F8               	movwf	___awdiv@divisor+1
   808  008E  300A               	movlw	10
   809  008F  00F0               	movwf	___awmod@divisor
   810  0090  3000               	movlw	0
   811  0091  00F1               	movwf	___awmod@divisor+1
   812  0092  087C               	movf	_fu,w
   813  0093  00C2               	movwf	??_isr
   814  0094  01C3               	clrf	??_isr+1
   815  0095  0842               	movf	??_isr,w
   816  0096  00F2               	movwf	___awmod@dividend
   817  0097  0843               	movf	??_isr+1,w
   818  0098  00F3               	movwf	___awmod@dividend+1
   819  0099  3181  2180  3180   	fcall	___awmod
   820  009C  0970               	comf	?___awmod,w
   821  009D  0020               	movlb	0	; select bank0
   822  009E  00C4               	movwf	??_isr+2
   823  009F  0971               	comf	?___awmod+1,w
   824  00A0  00C5               	movwf	??_isr+3
   825  00A1  0AC4               	incf	??_isr+2,f
   826  00A2  1903               	skipnz
   827  00A3  0AC5               	incf	??_isr+3,f
   828  00A4  087C               	movf	_fu,w
   829  00A5  0744               	addwf	??_isr+2,w
   830  00A6  00F9               	movwf	___awdiv@dividend
   831  00A7  0845               	movf	??_isr+3,w
   832  00A8  1803               	skipnc
   833  00A9  0A45               	incf	??_isr+3,w
   834  00AA  00FA               	movwf	___awdiv@dividend+1
   835  00AB  3181  212C  3180   	fcall	___awdiv
   836  00AE  0877               	movf	?___awdiv,w
   837  00AF  28C3               	goto	L2
   838  00B0                     i1l910:	
   839                           ;PIC16F1827-clock06.c: 89: case 3:
   840                           
   841                           ;PIC16F1827-clock06.c: 88: break;
   842                           
   843                           
   844                           ;PIC16F1827-clock06.c: 90: PORTB = 0xFF;
   845  00B0  30FF               	movlw	255
   846  00B1  008D               	movwf	13	;volatile
   847                           
   848                           ;PIC16F1827-clock06.c: 91: PORTA = 0x04;
   849  00B2  3004               	movlw	4
   850  00B3  008C               	movwf	12	;volatile
   851                           
   852                           ;PIC16F1827-clock06.c: 92: PORTB = p[ji % 10];
   853  00B4  300A               	movlw	10
   854  00B5  00F0               	movwf	___awmod@divisor
   855  00B6  3000               	movlw	0
   856  00B7  00F1               	movwf	___awmod@divisor+1
   857  00B8  087D               	movf	_ji,w
   858  00B9                     L4:	
   859  00B9  00C2               	movwf	??_isr
   860  00BA  01C3               	clrf	??_isr+1
   861  00BB  0842               	movf	??_isr,w
   862  00BC  00F2               	movwf	___awmod@dividend
   863  00BD  0843               	movf	??_isr+1,w
   864  00BE  00F3               	movwf	___awmod@dividend+1
   865  00BF  3181  2180  3180   	fcall	___awmod
   866  00C2  0870               	movf	?___awmod,w
   867  00C3                     L2:	
   868  00C3  3E20               	addlw	_p& (0+255)
   869  00C4  28EF               	goto	L3
   870  00C5                     i1l914:	
   871                           ;PIC16F1827-clock06.c: 94: case 4:
   872                           
   873                           ;PIC16F1827-clock06.c: 93: break;
   874                           
   875                           
   876                           ;PIC16F1827-clock06.c: 95: PORTB = 0xFF;
   877  00C5  30FF               	movlw	255
   878  00C6  008D               	movwf	13	;volatile
   879                           
   880                           ;PIC16F1827-clock06.c: 96: PORTA = 0x08;
   881  00C7  3008               	movlw	8
   882  00C8  008C               	movwf	12	;volatile
   883                           
   884                           ;PIC16F1827-clock06.c: 97: PORTB = r[(ji - (ji % 10)) / 10];
   885  00C9  300A               	movlw	10
   886  00CA  00F7               	movwf	___awdiv@divisor
   887  00CB  3000               	movlw	0
   888  00CC  00F8               	movwf	___awdiv@divisor+1
   889  00CD  300A               	movlw	10
   890  00CE  00F0               	movwf	___awmod@divisor
   891  00CF  3000               	movlw	0
   892  00D0  00F1               	movwf	___awmod@divisor+1
   893  00D1  087D               	movf	_ji,w
   894  00D2  00C2               	movwf	??_isr
   895  00D3  01C3               	clrf	??_isr+1
   896  00D4  0842               	movf	??_isr,w
   897  00D5  00F2               	movwf	___awmod@dividend
   898  00D6  0843               	movf	??_isr+1,w
   899  00D7  00F3               	movwf	___awmod@dividend+1
   900  00D8  3181  2180  3180   	fcall	___awmod
   901  00DB  0970               	comf	?___awmod,w
   902  00DC  0020               	movlb	0	; select bank0
   903  00DD  00C4               	movwf	??_isr+2
   904  00DE  0971               	comf	?___awmod+1,w
   905  00DF  00C5               	movwf	??_isr+3
   906  00E0  0AC4               	incf	??_isr+2,f
   907  00E1  1903               	skipnz
   908  00E2  0AC5               	incf	??_isr+3,f
   909  00E3  087D               	movf	_ji,w
   910  00E4  0744               	addwf	??_isr+2,w
   911  00E5  00F9               	movwf	___awdiv@dividend
   912  00E6  0845               	movf	??_isr+3,w
   913  00E7  1803               	skipnc
   914  00E8  0A45               	incf	??_isr+3,w
   915  00E9  00FA               	movwf	___awdiv@dividend+1
   916  00EA  3181  212C  3180   	fcall	___awdiv
   917  00ED  0877               	movf	?___awdiv,w
   918  00EE  3E34               	addlw	_r& (0+255)
   919  00EF                     L3:	
   920  00EF  0086               	movwf	6
   921  00F0  0187               	clrf	7
   922  00F1  0801               	movf	1,w
   923  00F2  0020               	movlb	0	; select bank0
   924  00F3  008D               	movwf	13	;volatile
   925                           
   926                           ;PIC16F1827-clock06.c: 98: break;
   927  00F4  290E               	goto	i1l75
   928  00F5                     i1l918:	
   929                           ;PIC16F1827-clock06.c: 99: case 5:
   930                           
   931                           
   932                           ;PIC16F1827-clock06.c: 100: PORTB = 0xFF;
   933  00F5  30FF               	movlw	255
   934  00F6  008D               	movwf	13	;volatile
   935                           
   936                           ;PIC16F1827-clock06.c: 101: PORTA = 0x10;
   937  00F7  3010               	movlw	16
   938  00F8  008C               	movwf	12	;volatile
   939                           
   940                           ;PIC16F1827-clock06.c: 102: PORTB = colon;
   941  00F9  084B               	movf	_colon,w
   942  00FA  008D               	movwf	13	;volatile
   943                           
   944                           ;PIC16F1827-clock06.c: 103: i = 0;
   945  00FB  01CC               	clrf	_i
   946                           
   947                           ;PIC16F1827-clock06.c: 105: }
   948                           
   949                           ;PIC16F1827-clock06.c: 104: break;
   950  00FC  290E               	goto	i1l75
   951  00FD                     i1l924:	
   952  00FD  084C               	movf	_i,w
   953                           
   954                           ; Switch size 1, requested type "space"
   955                           ; Number of cases is 5, Range of values is 1 to 5
   956                           ; switch strategies available:
   957                           ; Name         Instructions Cycles
   958                           ; simple_byte           16     9 (average)
   959                           ; direct_byte           19     9 (fixed)
   960                           ; jumptable            263     9 (fixed)
   961                           ;	Chosen strategy is simple_byte
   962  00FE  3A01               	xorlw	1	; case 1
   963  00FF  1903               	skipnz
   964  0100  287C               	goto	i1l902
   965  0101  3A03               	xorlw	3	; case 2
   966  0102  1903               	skipnz
   967  0103  2886               	goto	i1l906
   968  0104  3A01               	xorlw	1	; case 3
   969  0105  1903               	skipnz
   970  0106  28B0               	goto	i1l910
   971  0107  3A07               	xorlw	7	; case 4
   972  0108  1903               	skipnz
   973  0109  28C5               	goto	i1l914
   974  010A  3A01               	xorlw	1	; case 5
   975  010B  1903               	skipnz
   976  010C  28F5               	goto	i1l918
   977  010D  290E               	goto	i1l75
   978  010E                     i1l75:	
   979  010E  0846               	movf	??_isr+4,w
   980  010F  00FF               	movwf	127
   981  0110  107E               	bcf	126,0	;clear compiler interrupt flag
   982  0111  0009               	retfie
   983  0112                     __end_of_isr:	
   984                           
   985                           	psect	text2
   986  01FF                     __ptext2:	
   987 ;; *************** function ___lwmod *****************
   988 ;; Defined at:
   989 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  divisor         2    0[COMMON] unsigned int 
   992 ;;  dividend        2    2[COMMON] unsigned int 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  counter         1    5[COMMON] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  2    0[COMMON] unsigned int 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1004 ;;      Params:         4       0       0       0       0       0
  1005 ;;      Locals:         1       0       0       0       0       0
  1006 ;;      Temps:          1       0       0       0       0       0
  1007 ;;      Totals:         6       0       0       0       0       0
  1008 ;;Total ram usage:        6 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_isr
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function ___lwmod
  1019  01FF                     ___lwmod:	
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1023  01FF  0871               	movf	___lwmod@divisor+1,w
  1024  0200  0470               	iorwf	___lwmod@divisor,w
  1025  0201  1903               	skipnz
  1026  0202  2A26               	goto	i1l854
  1027  0203  01F5               	clrf	___lwmod@counter
  1028  0204  0AF5               	incf	___lwmod@counter,f
  1029  0205                     i1l844:	
  1030  0205  1BF1               	btfsc	___lwmod@divisor+1,7
  1031  0206  2A11               	goto	i1l846
  1032  0207  3001               	movlw	1
  1033  0208                     u62_25:	
  1034  0208  35F0               	lslf	___lwmod@divisor,f
  1035  0209  0DF1               	rlf	___lwmod@divisor+1,f
  1036  020A  0B89               	decfsz	9,f
  1037  020B  2A08               	goto	u62_25
  1038  020C  3001               	movlw	1
  1039  020D  00F4               	movwf	??___lwmod
  1040  020E  0874               	movf	??___lwmod,w
  1041  020F  07F5               	addwf	___lwmod@counter,f
  1042  0210  2A05               	goto	i1l844
  1043  0211                     i1l846:	
  1044  0211  0871               	movf	___lwmod@divisor+1,w
  1045  0212  0273               	subwf	___lwmod@dividend+1,w
  1046  0213  1D03               	skipz
  1047  0214  2A17               	goto	u64_25
  1048  0215  0870               	movf	___lwmod@divisor,w
  1049  0216  0272               	subwf	___lwmod@dividend,w
  1050  0217                     u64_25:	
  1051  0217  1C03               	skipc
  1052  0218  2A1D               	goto	i1l850
  1053  0219  0870               	movf	___lwmod@divisor,w
  1054  021A  02F2               	subwf	___lwmod@dividend,f
  1055  021B  0871               	movf	___lwmod@divisor+1,w
  1056  021C  3BF3               	subwfb	___lwmod@dividend+1,f
  1057  021D                     i1l850:	
  1058  021D  3001               	movlw	1
  1059  021E                     u65_25:	
  1060  021E  36F1               	lsrf	___lwmod@divisor+1,f
  1061  021F  0CF0               	rrf	___lwmod@divisor,f
  1062  0220  0B89               	decfsz	9,f
  1063  0221  2A1E               	goto	u65_25
  1064  0222  3001               	movlw	1
  1065  0223  02F5               	subwf	___lwmod@counter,f
  1066  0224  1D03               	btfss	3,2
  1067  0225  2A11               	goto	i1l846
  1068  0226                     i1l854:	
  1069  0226  0873               	movf	___lwmod@dividend+1,w
  1070  0227  01F1               	clrf	?___lwmod+1
  1071  0228  07F1               	addwf	?___lwmod+1,f
  1072  0229  0872               	movf	___lwmod@dividend,w
  1073  022A  01F0               	clrf	?___lwmod
  1074  022B  07F0               	addwf	?___lwmod,f
  1075  022C  0008               	return
  1076  022D                     __end_of___lwmod:	
  1077                           
  1078                           	psect	text3
  1079  0180                     __ptext3:	
  1080 ;; *************** function ___awmod *****************
  1081 ;; Defined at:
  1082 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  divisor         2    0[COMMON] int 
  1085 ;;  dividend        2    2[COMMON] int 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  sign            1    6[COMMON] unsigned char 
  1088 ;;  counter         1    5[COMMON] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  2    0[COMMON] int 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1098 ;;      Params:         4       0       0       0       0       0
  1099 ;;      Locals:         2       0       0       0       0       0
  1100 ;;      Temps:          1       0       0       0       0       0
  1101 ;;      Totals:         7       0       0       0       0       0
  1102 ;;Total ram usage:        7 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_isr
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function ___awmod
  1113  0180                     ___awmod:	
  1114                           
  1115                           ;incstack = 0
  1116                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1117  0180  01F6               	clrf	___awmod@sign
  1118  0181  1FF3               	btfss	___awmod@dividend+1,7
  1119  0182  298A               	goto	i1l806
  1120  0183  09F2               	comf	___awmod@dividend,f
  1121  0184  09F3               	comf	___awmod@dividend+1,f
  1122  0185  0AF2               	incf	___awmod@dividend,f
  1123  0186  1903               	skipnz
  1124  0187  0AF3               	incf	___awmod@dividend+1,f
  1125  0188  01F6               	clrf	___awmod@sign
  1126  0189  0AF6               	incf	___awmod@sign,f
  1127  018A                     i1l806:	
  1128  018A  1FF1               	btfss	___awmod@divisor+1,7
  1129  018B  2991               	goto	i1l810
  1130  018C  09F0               	comf	___awmod@divisor,f
  1131  018D  09F1               	comf	___awmod@divisor+1,f
  1132  018E  0AF0               	incf	___awmod@divisor,f
  1133  018F  1903               	skipnz
  1134  0190  0AF1               	incf	___awmod@divisor+1,f
  1135  0191                     i1l810:	
  1136  0191  0871               	movf	___awmod@divisor+1,w
  1137  0192  0470               	iorwf	___awmod@divisor,w
  1138  0193  1903               	skipnz
  1139  0194  29B8               	goto	i1l828
  1140  0195  01F5               	clrf	___awmod@counter
  1141  0196  0AF5               	incf	___awmod@counter,f
  1142  0197                     i1l818:	
  1143  0197  1BF1               	btfsc	___awmod@divisor+1,7
  1144  0198  29A3               	goto	i1l820
  1145  0199  3001               	movlw	1
  1146  019A                     u55_25:	
  1147  019A  35F0               	lslf	___awmod@divisor,f
  1148  019B  0DF1               	rlf	___awmod@divisor+1,f
  1149  019C  0B89               	decfsz	9,f
  1150  019D  299A               	goto	u55_25
  1151  019E  3001               	movlw	1
  1152  019F  00F4               	movwf	??___awmod
  1153  01A0  0874               	movf	??___awmod,w
  1154  01A1  07F5               	addwf	___awmod@counter,f
  1155  01A2  2997               	goto	i1l818
  1156  01A3                     i1l820:	
  1157  01A3  0871               	movf	___awmod@divisor+1,w
  1158  01A4  0273               	subwf	___awmod@dividend+1,w
  1159  01A5  1D03               	skipz
  1160  01A6  29A9               	goto	u57_25
  1161  01A7  0870               	movf	___awmod@divisor,w
  1162  01A8  0272               	subwf	___awmod@dividend,w
  1163  01A9                     u57_25:	
  1164  01A9  1C03               	skipc
  1165  01AA  29AF               	goto	i1l824
  1166  01AB  0870               	movf	___awmod@divisor,w
  1167  01AC  02F2               	subwf	___awmod@dividend,f
  1168  01AD  0871               	movf	___awmod@divisor+1,w
  1169  01AE  3BF3               	subwfb	___awmod@dividend+1,f
  1170  01AF                     i1l824:	
  1171  01AF  3001               	movlw	1
  1172  01B0                     u58_25:	
  1173  01B0  36F1               	lsrf	___awmod@divisor+1,f
  1174  01B1  0CF0               	rrf	___awmod@divisor,f
  1175  01B2  0B89               	decfsz	9,f
  1176  01B3  29B0               	goto	u58_25
  1177  01B4  3001               	movlw	1
  1178  01B5  02F5               	subwf	___awmod@counter,f
  1179  01B6  1D03               	btfss	3,2
  1180  01B7  29A3               	goto	i1l820
  1181  01B8                     i1l828:	
  1182  01B8  0876               	movf	___awmod@sign,w
  1183  01B9  1903               	btfsc	3,2
  1184  01BA  29C0               	goto	i1l832
  1185  01BB  09F2               	comf	___awmod@dividend,f
  1186  01BC  09F3               	comf	___awmod@dividend+1,f
  1187  01BD  0AF2               	incf	___awmod@dividend,f
  1188  01BE  1903               	skipnz
  1189  01BF  0AF3               	incf	___awmod@dividend+1,f
  1190  01C0                     i1l832:	
  1191  01C0  0873               	movf	___awmod@dividend+1,w
  1192  01C1  01F1               	clrf	?___awmod+1
  1193  01C2  07F1               	addwf	?___awmod+1,f
  1194  01C3  0872               	movf	___awmod@dividend,w
  1195  01C4  01F0               	clrf	?___awmod
  1196  01C5  07F0               	addwf	?___awmod,f
  1197  01C6  0008               	return
  1198  01C7                     __end_of___awmod:	
  1199                           
  1200                           	psect	text4
  1201  012C                     __ptext4:	
  1202 ;; *************** function ___awdiv *****************
  1203 ;; Defined at:
  1204 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  divisor         2    7[COMMON] int 
  1207 ;;  dividend        2    9[COMMON] int 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  quotient        2    2[BANK0 ] int 
  1210 ;;  sign            1    1[BANK0 ] unsigned char 
  1211 ;;  counter         1    0[BANK0 ] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  2    7[COMMON] int 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1221 ;;      Params:         4       0       0       0       0       0
  1222 ;;      Locals:         0       4       0       0       0       0
  1223 ;;      Temps:          1       0       0       0       0       0
  1224 ;;      Totals:         5       4       0       0       0       0
  1225 ;;Total ram usage:        9 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_isr
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function ___awdiv
  1236  012C                     ___awdiv:	
  1237                           
  1238                           ;incstack = 0
  1239                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1240  012C  0020               	movlb	0	; select bank0
  1241  012D  01BF               	clrf	___awdiv@sign
  1242  012E  1FF8               	btfss	___awdiv@divisor+1,7
  1243  012F  2937               	goto	i1l762
  1244  0130  09F7               	comf	___awdiv@divisor,f
  1245  0131  09F8               	comf	___awdiv@divisor+1,f
  1246  0132  0AF7               	incf	___awdiv@divisor,f
  1247  0133  1903               	skipnz
  1248  0134  0AF8               	incf	___awdiv@divisor+1,f
  1249  0135  01BF               	clrf	___awdiv@sign
  1250  0136  0ABF               	incf	___awdiv@sign,f
  1251  0137                     i1l762:	
  1252  0137  1FFA               	btfss	___awdiv@dividend+1,7
  1253  0138  2942               	goto	i1l768
  1254  0139  09F9               	comf	___awdiv@dividend,f
  1255  013A  09FA               	comf	___awdiv@dividend+1,f
  1256  013B  0AF9               	incf	___awdiv@dividend,f
  1257  013C  1903               	skipnz
  1258  013D  0AFA               	incf	___awdiv@dividend+1,f
  1259  013E  3001               	movlw	1
  1260  013F  00FB               	movwf	??___awdiv
  1261  0140  087B               	movf	??___awdiv,w
  1262  0141  06BF               	xorwf	___awdiv@sign,f
  1263  0142                     i1l768:	
  1264  0142  01C0               	clrf	___awdiv@quotient
  1265  0143  01C1               	clrf	___awdiv@quotient+1
  1266  0144  0878               	movf	___awdiv@divisor+1,w
  1267  0145  0477               	iorwf	___awdiv@divisor,w
  1268  0146  1903               	skipnz
  1269  0147  2971               	goto	i1l790
  1270  0148  01BE               	clrf	___awdiv@counter
  1271  0149  0ABE               	incf	___awdiv@counter,f
  1272  014A                     i1l778:	
  1273  014A  1BF8               	btfsc	___awdiv@divisor+1,7
  1274  014B  2956               	goto	i1l780
  1275  014C  3001               	movlw	1
  1276  014D                     u45_25:	
  1277  014D  35F7               	lslf	___awdiv@divisor,f
  1278  014E  0DF8               	rlf	___awdiv@divisor+1,f
  1279  014F  0B89               	decfsz	9,f
  1280  0150  294D               	goto	u45_25
  1281  0151  3001               	movlw	1
  1282  0152  00FB               	movwf	??___awdiv
  1283  0153  087B               	movf	??___awdiv,w
  1284  0154  07BE               	addwf	___awdiv@counter,f
  1285  0155  294A               	goto	i1l778
  1286  0156                     i1l780:	
  1287  0156  3001               	movlw	1
  1288  0157                     u47_25:	
  1289  0157  35C0               	lslf	___awdiv@quotient,f
  1290  0158  0DC1               	rlf	___awdiv@quotient+1,f
  1291  0159  0B89               	decfsz	9,f
  1292  015A  2957               	goto	u47_25
  1293  015B  0878               	movf	___awdiv@divisor+1,w
  1294  015C  027A               	subwf	___awdiv@dividend+1,w
  1295  015D  1D03               	skipz
  1296  015E  2961               	goto	u48_25
  1297  015F  0877               	movf	___awdiv@divisor,w
  1298  0160  0279               	subwf	___awdiv@dividend,w
  1299  0161                     u48_25:	
  1300  0161  1C03               	skipc
  1301  0162  2968               	goto	i1l786
  1302  0163  0877               	movf	___awdiv@divisor,w
  1303  0164  02F9               	subwf	___awdiv@dividend,f
  1304  0165  0878               	movf	___awdiv@divisor+1,w
  1305  0166  3BFA               	subwfb	___awdiv@dividend+1,f
  1306  0167  1440               	bsf	___awdiv@quotient,0
  1307  0168                     i1l786:	
  1308  0168  3001               	movlw	1
  1309  0169                     u49_25:	
  1310  0169  36F8               	lsrf	___awdiv@divisor+1,f
  1311  016A  0CF7               	rrf	___awdiv@divisor,f
  1312  016B  0B89               	decfsz	9,f
  1313  016C  2969               	goto	u49_25
  1314  016D  3001               	movlw	1
  1315  016E  02BE               	subwf	___awdiv@counter,f
  1316  016F  1D03               	btfss	3,2
  1317  0170  2956               	goto	i1l780
  1318  0171                     i1l790:	
  1319  0171  083F               	movf	___awdiv@sign,w
  1320  0172  1903               	btfsc	3,2
  1321  0173  2979               	goto	i1l794
  1322  0174  09C0               	comf	___awdiv@quotient,f
  1323  0175  09C1               	comf	___awdiv@quotient+1,f
  1324  0176  0AC0               	incf	___awdiv@quotient,f
  1325  0177  1903               	skipnz
  1326  0178  0AC1               	incf	___awdiv@quotient+1,f
  1327  0179                     i1l794:	
  1328  0179  0841               	movf	___awdiv@quotient+1,w
  1329  017A  01F8               	clrf	?___awdiv+1
  1330  017B  07F8               	addwf	?___awdiv+1,f
  1331  017C  0840               	movf	___awdiv@quotient,w
  1332  017D  01F7               	clrf	?___awdiv
  1333  017E  07F7               	addwf	?___awdiv,f
  1334  017F  0008               	return
  1335  0180                     __end_of___awdiv:	
  1336  007E                     btemp	set	126	;btemp
  1337  007E                     pic14e$flags	set	126
  1338  007E                     wtemp	set	126
  1339  007E                     wtemp0	set	126
  1340  0080                     wtemp1	set	128
  1341  0082                     wtemp2	set	130
  1342  0084                     wtemp3	set	132
  1343  0086                     wtemp4	set	134
  1344  0088                     wtemp5	set	136
  1345  007F                     wtemp6	set	127
  1346  007E                     ttemp	set	126
  1347  007E                     ttemp0	set	126
  1348  0081                     ttemp1	set	129
  1349  0084                     ttemp2	set	132
  1350  0087                     ttemp3	set	135
  1351  007F                     ttemp4	set	127
  1352  007E                     ltemp	set	126
  1353  007E                     ltemp0	set	126
  1354  0082                     ltemp1	set	130
  1355  0086                     ltemp2	set	134
  1356  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     10      47
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  5     5      0    1603
                                              4 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     371
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     720
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      2F       6       58.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      3D      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jan 02 12:23:14 2015

                      _i 004C                        _j 004D                        _p 0020  
                      _q 002A                        _r 0034              __CFG_CP$OFF 0000  
           ___awdiv@sign 003F                       _ji 007D                       _fu 007C  
                    l940 01DB                      l950 01EA                      l962 01FA  
                    l948 01E6                      _RA5 0065             __CFG_CPD$OFF 0000  
                    _isr 0004             ___awmod@sign 0076             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_FOSC$HS 0000           _long_hold_flag 004E  
           __CFG_LVP$OFF 0000                     ?_isr 0070                     i1l57 003F  
                   i1l75 010E             __CFG_WRT$OFF 0000                     _main 01C7  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   ltemp 007E                     start 0112                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000                    ??_isr 0042  
                  ?_main 0070          __end_of___awdiv 0180            __CFG_WDTE$OFF 0000  
        __end_of___awmod 01C7          ___awdiv@divisor 0077                    _T1CON 0018  
        __end_of___lwmod 022D                    i1l810 0191                    i1l820 01A3  
                  i1l806 018A                    i1l910 00B0                    i1l902 007C  
                  i1l832 01C0                    i1l824 01AF                    i1l762 0137  
                  i1l818 0197                    i1l850 021D                    i1l914 00C5  
                  i1l906 0086                    i1l780 0156                    i1l828 01B8  
                  i1l844 0205                    i1l924 00FD                    i1l790 0171  
                  i1l846 0211                    i1l854 0226                    i1l918 00F5  
                  i1l768 0142                    i1l880 0059                    i1l794 0179  
                  i1l786 0168                    i1l778 014A                    i1l890 006C  
                  i1l882 005E                    i1l866 0025                    i1l884 0062  
                  i1l894 0073                    i1l896 0074          ___awdiv@counter 003E  
                  _TMR1H 0017                    _TMR1L 0016                    _PORTA 000C  
                  _PORTB 000D                    u45_25 014D                    u62_25 0208  
                  u70_25 004A                    u47_25 0157                    u55_25 019A  
                  u48_25 0161                    u64_25 0217                    _TRISA 008C  
                  _TRISB 008D                    u49_25 0169                    u57_25 01A9  
                  u65_25 021E                    u58_25 01B0           __CFG_FCMEN$OFF 0000  
                  _cnt1m 0048                    _colon 004B           __CFG_BOREN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F           __CFG_MCLRE$OFF 0000  
        __initialization 0114             __end_of_main 01FF                   ??_main 0047  
         __CFG_PLLEN$OFF 0000         ___awdiv@dividend 0079                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099           __CFG_PWRTE$OFF 0000  
              ??___awdiv 007B                ??___awmod 0074                ??___lwmod 0074  
                 _cnt_sw 004A         ___awdiv@quotient 0040          ___awmod@divisor 0070  
        ___awmod@counter 0075  __end_of__initialization 0128           __pcstackCOMMON 0070  
           __pidataBANK0 022D               __pbssBANK0 0048               __pmaintext 01C7  
             __pintentry 0004                  ___awdiv 012C                  ___awmod 0180  
                ___lwmod 01FF          __CFG_STVREN$OFF 0000                  __ptext2 01FF  
                __ptext3 0180                  __ptext4 012C             __size_of_isr 010E  
       ___awmod@dividend 0072     end_of_initialization 0128                  init_ram 024B  
                initloop 024C      start_initialization 0114              __end_of_isr 0112  
            __pdataBANK0 0020              __pbssCOMMON 007C                ___latbits 0001  
          __pcstackBANK0 003E                 ?___awdiv 0077                 ?___awmod 0070  
               ?___lwmod 0070                 _PIE1bits 0091                 _PIR1bits 0011  
       __size_of___awdiv 0054         __size_of___awmod 0047         __size_of___lwmod 002E  
          __size_of_main 0038               _INTCONbits 000B              pic14e$flags 007E  
               intlevel1 0000         ___lwmod@dividend 0072        __CFG_CLKOUTEN$OFF 0000  
             _OPTION_REG 0095          ___lwmod@divisor 0070          ___lwmod@counter 0075  
